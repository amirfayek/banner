"OWNER","VIEW_NAME","COMMENTS","TEXT"
"BANINST1","TTVXSUM","View summarizing Tax Reporting amounts for the students","(SELECT TTVXDET_PIDM,
          TTVXDET_TAX_YEAR,
          TTVXDET_REPT_CODE,
          TTVXDET_TERM_CODE,
          TTVXDET_DCAT_CODE,
          DECODE(TTVXDET_DCAT_SUM_IND, 'Y',NULL,TTVXDET_DETAIL_CODE),
          DECODE(TTVXDET_DCAT_SUM_IND, 'Y',NULL,
            DECODE(TTVXDET_DETC_SUM_IND, 'Y',NULL,TTVXDET_TRAN_NUMBER)),
          TO_DATE(DECODE(TTVXDET_DCAT_SUM_IND, 'Y',NULL,
            DECODE(TTVXDET_DETC_SUM_IND, 'Y',NULL,
            TO_CHAR(TTVXDET_TAX_DATE,'DD-MON-YYYY'))),'DD-MON-YYYY'),
          DECODE(TTVXDET_DCAT_SUM_IND, 'Y',NULL,
            DECODE(TTVXDET_DETC_SUM_IND, 'Y',NULL,
                TTVXDET_TAX_DATE_SRCE)),
          DECODE(TTVXDET_DCAT_SUM_IND, 'Y',TTVXDET_DCAT_DESC,
             DECODE(TTVXDET_DETC_SUM_IND, 'Y',
                    TTVXDET_DETC_DESC,TTVXDET_ACCD_DESC)),
          TTVXDET_TAX_REPT_YEAR,
          TTVXDET_TAX_REPT_BOX,
          TTVXDET_REPT_BOX_DESC,
          TTVXDET_FUTURE_IND,
          SUM(TTVXDET_AMOUNT),
          SUM(TTVXDET_TAX_AMOUNT)
    FROM TTVXDET
GROUP BY TTVXDET_PIDM,
         TTVXDET_TAX_YEAR,
         TTVXDET_REPT_CODE,
  	   TTVXDET_TERM_CODE,
         TTVXDET_DCAT_CODE,
         DECODE(TTVXDET_DCAT_SUM_IND, 'Y',NULL,TTVXDET_DETAIL_CODE),
         DECODE(TTVXDET_DCAT_SUM_IND, 'Y',NULL,
            DECODE(TTVXDET_DETC_SUM_IND, 'Y',NULL,TTVXDET_TRAN_NUMBER)),
         TO_DATE(DECODE(TTVXDET_DCAT_SUM_IND, 'Y',NULL,
            DECODE(TTVXDET_DETC_SUM_IND, 'Y',NULL,
            TO_CHAR(TTVXDET_TAX_DATE,'DD-MON-YYYY'))),'DD-MON-YYYY'),
         DECODE(TTVXDET_DCAT_SUM_IND, 'Y',NULL,
            DECODE(TTVXDET_DETC_SUM_IND, 'Y',NULL,
                TTVXDET_TAX_DATE_SRCE)),
         DECODE(TTVXDET_DCAT_SUM_IND, 'Y',TTVXDET_DCAT_DESC,
            DECODE(TTVXDET_DETC_SUM_IND, 'Y',
                   TTVXDET_DETC_DESC,TTVXDET_ACCD_DESC)),
         TTVXDET_TAX_REPT_YEAR,
         TTVXDET_TAX_REPT_BOX,
         TTVXDET_REPT_BOX_DESC,
         TTVXDET_FUTURE_IND
HAVING SUM(TTVXDET_TAX_AMOUNT) != 0)
 "
"BANINST1","TTVXRPT","View of TRA Tax information Reported for a student","(SELECT TBRACCD_PIDM,
        TBRACCD_TRAN_NUMBER,
        TBRACCD_DETAIL_CODE,
        NVL(TBRACCD_DESC,TBBDETC_DESC),
        TBBDETC_DCAT_CODE,
        TTVDCAT_DESC,
        TBRACCD_TERM_CODE,
        STVTERM_DESC,
        STVTERM_START_DATE,
        TBRACCD_TAX_REPT_YEAR,
        TBRACCD_TAX_REPT_BOX,
        NVL(TBRACCD_TAX_FUTURE_IND,'N'),
        DECODE(ABS(TBRACCD_AMOUNT),
               ABS(TBRACCD_TAX_AMOUNT),'N','Y'),
        'Y',
        TBRACCD_EFFECTIVE_DATE,
        TBRACCD_ENTRY_DATE,
        TRUNC(GREATEST(TBRACCD_EFFECTIVE_DATE,TBRACCD_ENTRY_DATE)),
        DECODE(SIGN(TBRACCD_ENTRY_DATE - TRUNC(TBRACCD_EFFECTIVE_DATE)),
                1,'Entry',
                0,'Entry','Effective'),
        TBRACCD_AMOUNT,
        TBRACCD_TAX_AMOUNT
   FROM STVTERM,
        TTVDCAT,
        TBBDETC,
        TBRACCD
  WHERE TBBDETC_DETAIL_CODE = TBRACCD_DETAIL_CODE
    AND TTVDCAT_CODE = TBBDETC_DCAT_CODE
    AND STVTERM_CODE = TBRACCD_TERM_CODE
  UNION
 SELECT TBRACCD_PIDM,
        TO_NUMBER(null),
        TBRACCD_DETAIL_CODE,
        TBBDETC_DESC,
        TBBDETC_DCAT_CODE,
        TTVDCAT_DESC,
        TBRACCD_TERM_CODE,
        STVTERM_DESC,
        STVTERM_START_DATE,
        TBRACCD_TAX_REPT_YEAR,
        TBRACCD_TAX_REPT_BOX,
        NVL(TBRACCD_TAX_FUTURE_IND,'N'),
        DECODE(ABS(TBRACCD_AMOUNT),
               ABS(TBRACCD_TAX_AMOUNT),'N','Y'),
        'N',
        TO_DATE(null),
        TO_DATE(null),
        TO_DATE(null),
        null,
        sum(TBRACCD_AMOUNT),
        sum(TBRACCD_TAX_AMOUNT)
   FROM STVTERM,
        TTVDCAT,
        TBBDETC,
        TBRACCD
  WHERE TBBDETC_DETAIL_CODE = TBRACCD_DETAIL_CODE
    AND TTVDCAT_CODE = TBBDETC_DCAT_CODE
    AND STVTERM_CODE = TBRACCD_TERM_CODE
GROUP BY TBRACCD_PIDM,
        TBRACCD_DETAIL_CODE,
        TBBDETC_DESC,
        TBBDETC_DCAT_CODE,
        TTVDCAT_DESC,
        TBRACCD_TERM_CODE,
        STVTERM_DESC,
        STVTERM_START_DATE,
        TBRACCD_TAX_REPT_YEAR,
        TBRACCD_TAX_REPT_BOX,
        NVL(TBRACCD_TAX_FUTURE_IND,'N'),
        DECODE(ABS(TBRACCD_AMOUNT),
               ABS(TBRACCD_TAX_AMOUNT),'N','Y'))
 "
"BANINST1","TTVXDET","View extracting Tax Reporting detail for the students","(SELECT /*+ ORDERED */
        TBRACCD_PIDM,
        TBRACCD_TRAN_NUMBER,
        TBRACCD_EFFECTIVE_DATE,
        TBRACCD_DESC,
        TBRACCD_TERM_CODE,
        TTRTXCD_TAX_YEAR,
        TTRTXCD_REPT_CODE,
        TTRTXCD_DCAT_SUM_IND,
        TTRTXCD_DETC_SUM_IND,
        TBBDETC_DETAIL_CODE,
        TBBDETC_DESC,
        TTVDCAT_CODE,
        TTVDCAT_DESC,
        TBRACCD_TAX_REPT_YEAR,
        TBRACCD_TAX_REPT_BOX,
        DECODE(SIGN(NVL(TBRACCD_TAX_REPT_YEAR,2006)-2006),
               -1,DECODE(TBRACCD_TAX_REPT_BOX,
                        'CB','Box 2',
                        'AC','Box 3',
                        'SG','Box 4',
                        'AS','Box 5',null),
                  DECODE(TBRACCD_TAX_REPT_BOX,
                        'CB','Box 2',
                        'AC','Box 4',
                        'SG','Box 5',
                        'AS','Box 6',null)),
        DECODE(TBRACCD_TAX_REPT_BOX,
               NULL,TTRTAXT_FUTURE_IND,
               NVL(TBRACCD_TAX_FUTURE_IND,'N')),
        DECODE(TTRTAXR_CHRG_TYPE_IND,
            'A',DECODE(TBBDETC_TYPE_IND,'C',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
            'N',DECODE(TBBDETC_TYPE_IND,'P',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
            (DECODE(TBBDETC_TYPE_IND,'C',
            (TBRACCD_AMOUNT - TBRACCD_BALANCE),0))),
        DECODE(TBRACCD_TAX_REPT_BOX,
               NULL,TTKFUNC.F_TAX_AMOUNT(TTRTAXR_TAX_YEAR, TTRTAXR_REPT_CODE,
                       TBRACCD_DETAIL_CODE, TBRACCD_TERM_CODE,
                       DECODE(TTRTAXR_CHRG_TYPE_IND,
                        'A',DECODE(TBBDETC_TYPE_IND,'C',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
                        'N',DECODE(TBBDETC_TYPE_IND,'P',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
                        (DECODE(TBBDETC_TYPE_IND,'C',
                        (TBRACCD_AMOUNT - TBRACCD_BALANCE),0)))),
               TBRACCD_TAX_AMOUNT),
        TRUNC(GREATEST(TBRACCD_EFFECTIVE_DATE,TBRACCD_ENTRY_DATE)),
        DECODE(SIGN(TBRACCD_ENTRY_DATE - TRUNC(TBRACCD_EFFECTIVE_DATE)),
                1,'Entry',
                0,'Entry','Effective')
   FROM TBRACCD,
        TBBDETC,
        TTRTXCD,
        TTVDCAT,
        TTRTAXR,
        TTRTAXT
  WHERE TBBDETC_DETAIL_CODE = TBRACCD_DETAIL_CODE
    AND TTVDCAT_CODE = TBBDETC_DCAT_CODE
    AND TTRTXCD_DETC_CODE = TBRACCD_DETAIL_CODE
    AND TTRTAXR_TAX_YEAR = TTRTXCD_TAX_YEAR
    AND TTRTAXR_REPT_CODE = TTRTXCD_REPT_CODE
    AND TTRTAXT_REPT_CODE = TTRTXCD_REPT_CODE
    AND TTRTAXT_TAX_YEAR = TTRTXCD_TAX_YEAR
    AND TTRTAXT_TERM_CODE = TBRACCD_TERM_CODE
    AND ((trunc(GREATEST(TBRACCD_EFFECTIVE_DATE,TBRACCD_ENTRY_DATE)) BETWEEN
                trunc(TTRTAXR_START_DATE)
                  AND trunc(TTRTAXR_END_DATE))
          OR (TTRTAXR_START_DATE IS NULL
              AND TTRTAXR_END_DATE IS NULL))
 UNION ALL
 SELECT /*+ ORDERED */
        TBRACCD_PIDM,
        TBRACCD_TRAN_NUMBER,
        TBRACCD_EFFECTIVE_DATE,
        TBRACCD_DESC,
        TBRACCD_TERM_CODE,
        TTRTXCD_TAX_YEAR,
        TTRTXCD_REPT_CODE,
        TTRTXCD_DCAT_SUM_IND,
        TTRTXCD_DETC_SUM_IND,
        TBBDETC_DETAIL_CODE,
        TBBDETC_DESC,
        TTVDCAT_CODE,
        TTVDCAT_DESC,
        TBRACCD_TAX_REPT_YEAR,
        TBRACCD_TAX_REPT_BOX,
        DECODE(SIGN(NVL(TBRACCD_TAX_REPT_YEAR,2006)-2006),
               -1,DECODE(TBRACCD_TAX_REPT_BOX,
                        'CB','Box 2',
                        'AC','Box 3',
                        'SG','Box 4',
                        'AS','Box 5',null),
                  DECODE(TBRACCD_TAX_REPT_BOX,
                        'CB','Box 2',
                        'AC','Box 4',
                        'SG','Box 5',
                        'AS','Box 6',null)),
        DECODE(TBRACCD_TAX_REPT_BOX,
               NULL,TTRTAXT_FUTURE_IND,
               NVL(TBRACCD_TAX_FUTURE_IND,'N')),
        DECODE(TTRTAXR_CHRG_TYPE_IND,
            'A',DECODE(TBBDETC_TYPE_IND,'C',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
            'N',DECODE(TBBDETC_TYPE_IND,'P',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
            (DECODE(TBBDETC_TYPE_IND,'C',
            (TBRACCD_AMOUNT - TBRACCD_BALANCE),0))),
        DECODE(TBRACCD_TAX_REPT_BOX,
               NULL,TTKFUNC.F_TAX_AMOUNT(TTRTAXR_TAX_YEAR, TTRTAXR_REPT_CODE,
                       TBRACCD_DETAIL_CODE, TBRACCD_TERM_CODE,
                       DECODE(TTRTAXR_CHRG_TYPE_IND,
                        'A',DECODE(TBBDETC_TYPE_IND,'C',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
                        'N',DECODE(TBBDETC_TYPE_IND,'P',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
                        (DECODE(TBBDETC_TYPE_IND,'C',
                        (TBRACCD_AMOUNT - TBRACCD_BALANCE),0)))),
               TBRACCD_TAX_AMOUNT),
        TRUNC(GREATEST(TBRACCD_EFFECTIVE_DATE,TBRACCD_ENTRY_DATE)),
        DECODE(SIGN(TBRACCD_ENTRY_DATE - TRUNC(TBRACCD_EFFECTIVE_DATE)),
                1,'Entry',
                0,'Entry','Effective')
   FROM TBRACCD,
        TBBDETC,
        TTRTXCD,
        TTVDCAT,
        TTRTAXR,
        TTRTAXT
  WHERE TBBDETC_DETAIL_CODE = TBRACCD_DETAIL_CODE
    AND TTVDCAT_CODE = TBBDETC_DCAT_CODE
    AND TTRTXCD_DCAT_CODE = TBBDETC_DCAT_CODE
    AND NOT EXISTS
          (SELECT 'X'
             FROM TTRTXEX
            WHERE TTRTXEX_TAX_YEAR =  TTRTXCD_TAX_YEAR
              AND TTRTXEX_REPT_CODE = TTRTXCD_REPT_CODE
              AND TTRTXEX_DCAT_CODE = TTRTXCD_DCAT_CODE
              AND TTRTXEX_DETC_CODE = TBBDETC_DETAIL_CODE)
    AND TTRTAXR_TAX_YEAR = TTRTXCD_TAX_YEAR
    AND TTRTAXR_REPT_CODE = TTRTXCD_REPT_CODE
    AND TTRTAXT_REPT_CODE = TTRTXCD_REPT_CODE
    AND TTRTAXT_TAX_YEAR = TTRTXCD_TAX_YEAR
    AND TTRTAXT_TERM_CODE = TBRACCD_TERM_CODE
    AND ((trunc(GREATEST(TBRACCD_EFFECTIVE_DATE,TBRACCD_ENTRY_DATE)) BETWEEN
                trunc(TTRTAXR_START_DATE)
                  AND trunc(TTRTAXR_END_DATE))
          OR (TTRTAXR_START_DATE IS NULL
              AND TTRTAXR_END_DATE IS NULL))
 UNION ALL
 SELECT /*+ ORDERED */
        TBRACCD_PIDM,
        TBRACCD_TRAN_NUMBER,
        TBRACCD_EFFECTIVE_DATE,
        TBRACCD_DESC,
        TBRACCD_TERM_CODE,
        TTRTXCD_TAX_YEAR,
        TTRTXCD_REPT_CODE,
        TTRTXCD_DCAT_SUM_IND,
        TTRTXCD_DETC_SUM_IND,
        TBBDETC_DETAIL_CODE,
        TBBDETC_DESC,
        TTVDCAT_CODE,
        TTVDCAT_DESC,
        TBRACCD_TAX_REPT_YEAR,
        TBRACCD_TAX_REPT_BOX,
        DECODE(SIGN(NVL(TBRACCD_TAX_REPT_YEAR,2006)-2006),
               -1,DECODE(TBRACCD_TAX_REPT_BOX,
                        'CB','Box 2',
                        'AC','Box 3',
                        'SG','Box 4',
                        'AS','Box 5',null),
                  DECODE(TBRACCD_TAX_REPT_BOX,
                        'CB','Box 2',
                        'AC','Box 4',
                        'SG','Box 5',
                        'AS','Box 6',null)),
        DECODE(TBRACCD_TAX_REPT_BOX,
               NULL,NULL,
               NVL(TBRACCD_TAX_FUTURE_IND,'N')),
        DECODE(TTRTAXR_CHRG_TYPE_IND,
            'A',DECODE(TBBDETC_TYPE_IND,'C',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
            'N',DECODE(TBBDETC_TYPE_IND,'P',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
            (DECODE(TBBDETC_TYPE_IND,'C',
            (TBRACCD_AMOUNT - TBRACCD_BALANCE),0))),
        DECODE(TBRACCD_TAX_REPT_BOX,
               NULL,TTKFUNC.F_TAX_AMOUNT(TTRTAXR_TAX_YEAR, TTRTAXR_REPT_CODE,
                       TBRACCD_DETAIL_CODE, TBRACCD_TERM_CODE,
                       DECODE(TTRTAXR_CHRG_TYPE_IND,
                        'A',DECODE(TBBDETC_TYPE_IND,'C',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
                        'N',DECODE(TBBDETC_TYPE_IND,'P',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
                        (DECODE(TBBDETC_TYPE_IND,'C',
                        (TBRACCD_AMOUNT - TBRACCD_BALANCE),0)))),
               TBRACCD_TAX_AMOUNT),
        TRUNC(GREATEST(TBRACCD_EFFECTIVE_DATE,TBRACCD_ENTRY_DATE)),
        DECODE(SIGN(TBRACCD_ENTRY_DATE - TRUNC(TBRACCD_EFFECTIVE_DATE)),
                1,'Entry',
                0,'Entry','Effective')
   FROM TBRACCD,
        TBBDETC,
        TTRTXCD,
        TTVDCAT,
        TTRTAXR
  WHERE TBBDETC_DETAIL_CODE = TBRACCD_DETAIL_CODE
    AND TTVDCAT_CODE = TBBDETC_DCAT_CODE
    AND TTRTXCD_DETC_CODE = TBRACCD_DETAIL_CODE
    AND TTRTAXR_TAX_YEAR = TTRTXCD_TAX_YEAR
    AND TTRTAXR_REPT_CODE = TTRTXCD_REPT_CODE
    AND ((trunc(GREATEST(TBRACCD_EFFECTIVE_DATE,TBRACCD_ENTRY_DATE)) BETWEEN
                trunc(TTRTAXR_START_DATE)
                  AND trunc(TTRTAXR_END_DATE))
          OR (TTRTAXR_START_DATE IS NULL
              AND TTRTAXR_END_DATE IS NULL))
    AND NOT EXISTS
       (SELECT 'X'
          FROM TTRTAXT
         WHERE TTRTAXT_TAX_YEAR = TTRTXCD_TAX_YEAR
           AND TTRTAXT_REPT_CODE = TTRTXCD_REPT_CODE)
 UNION ALL
 SELECT /*+ ORDERED */
        TBRACCD_PIDM,
        TBRACCD_TRAN_NUMBER,
        TBRACCD_EFFECTIVE_DATE,
        TBRACCD_DESC,
        TBRACCD_TERM_CODE,
        TTRTXCD_TAX_YEAR,
        TTRTXCD_REPT_CODE,
        TTRTXCD_DCAT_SUM_IND,
        TTRTXCD_DETC_SUM_IND,
        TBBDETC_DETAIL_CODE,
        TBBDETC_DESC,
        TTVDCAT_CODE,
        TTVDCAT_DESC,
        TBRACCD_TAX_REPT_YEAR,
        TBRACCD_TAX_REPT_BOX,
        DECODE(SIGN(NVL(TBRACCD_TAX_REPT_YEAR,2006)-2006),
               -1,DECODE(TBRACCD_TAX_REPT_BOX,
                        'CB','Box 2',
                        'AC','Box 3',
                        'SG','Box 4',
                        'AS','Box 5',null),
                  DECODE(TBRACCD_TAX_REPT_BOX,
                        'CB','Box 2',
                        'AC','Box 4',
                        'SG','Box 5',
                        'AS','Box 6',null)),
        DECODE(TBRACCD_TAX_REPT_BOX,
               NULL,NULL,
               NVL(TBRACCD_TAX_FUTURE_IND,'N')),
        DECODE(TTRTAXR_CHRG_TYPE_IND,
            'A',DECODE(TBBDETC_TYPE_IND,'C',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
            'N',DECODE(TBBDETC_TYPE_IND,'P',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
            (DECODE(TBBDETC_TYPE_IND,'C',
            (TBRACCD_AMOUNT - TBRACCD_BALANCE),0))),
        DECODE(TBRACCD_TAX_REPT_BOX,
               NULL,TTKFUNC.F_TAX_AMOUNT(TTRTAXR_TAX_YEAR, TTRTAXR_REPT_CODE,
                       TBRACCD_DETAIL_CODE, TBRACCD_TERM_CODE,
                       DECODE(TTRTAXR_CHRG_TYPE_IND,
                        'A',DECODE(TBBDETC_TYPE_IND,'C',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
                        'N',DECODE(TBBDETC_TYPE_IND,'P',TBRACCD_AMOUNT,TBRACCD_AMOUNT*-1),
                        (DECODE(TBBDETC_TYPE_IND,'C',
                        (TBRACCD_AMOUNT - TBRACCD_BALANCE),0)))),
               TBRACCD_TAX_AMOUNT),
        TRUNC(GREATEST(TBRACCD_EFFECTIVE_DATE,TBRACCD_ENTRY_DATE)),
        DECODE(SIGN(TBRACCD_ENTRY_DATE - TRUNC(TBRACCD_EFFECTIVE_DATE)),
                1,'Entry',
                0,'Entry','Effective')
   FROM TBRACCD,
        TBBDETC,
        TTRTXCD,
        TTVDCAT,
        TTRTAXR
  WHERE TBBDETC_DETAIL_CODE = TBRACCD_DETAIL_CODE
    AND TTVDCAT_CODE = TBBDETC_DCAT_CODE
    AND TTRTXCD_DCAT_CODE = TBBDETC_DCAT_CODE
    AND NOT EXISTS
          (SELECT 'X'
             FROM TTRTXEX
            WHERE TTRTXEX_TAX_YEAR =  TTRTXCD_TAX_YEAR
              AND TTRTXEX_REPT_CODE = TTRTXCD_REPT_CODE
              AND TTRTXEX_DCAT_CODE = TTRTXCD_DCAT_CODE
              AND TTRTXEX_DETC_CODE = TBBDETC_DETAIL_CODE)
    AND TTRTAXR_TAX_YEAR = TTRTXCD_TAX_YEAR
    AND TTRTAXR_REPT_CODE = TTRTXCD_REPT_CODE
    AND ((trunc(GREATEST(TBRACCD_EFFECTIVE_DATE,TBRACCD_ENTRY_DATE)) BETWEEN
                trunc(TTRTAXR_START_DATE)
                  AND trunc(TTRTAXR_END_DATE))
          OR (TTRTAXR_START_DATE IS NULL
              AND TTRTAXR_END_DATE IS NULL))
    AND NOT EXISTS
         (SELECT 'X'
            FROM TTRTAXT
           WHERE TTRTAXT_TAX_YEAR = TTRTXCD_TAX_YEAR
             AND TTRTAXT_REPT_CODE = TTRTXCD_REPT_CODE))"
"BANINST1","TRVAPPL","Research accounting application of payment history view.","SELECT TRRAPPL_GRNT_CODE,
         TRRAPPL_PAY_TRAN_NUMBER,
         TRRAPPL_CHG_TRAN_NUMBER,
         TRRAPPL_AMOUNT,
         TRRAPPL_DIRECT_PAY_IND,
         TRRAPPL_REAPPL_IND,
         TRRAPPL_ACCT_FEED_IND,
         TRUNC(X.TRRACCD_TRANS_DATE),
         TRUNC(Y.TRRACCD_TRANS_DATE),
         X.TRRACCD_DETAIL_CODE,
         Y.TRRACCD_DETAIL_CODE,
         X.TRRACCD_DESC,
         Y.TRRACCD_DESC,
         Y.TRRACCD_BILL_INV_SEQ_NO,
         Y.TRRACCD_BILL_INV_ADJ_NO,
         X.TRRACCD_PAID_INV_SEQ_NO,
         X.TRRACCD_PAID_INV_ADJ_NO,
         TRUNC(X.TRRACCD_EFFECTIVE_DATE),
         TRUNC(Y.TRRACCD_EFFECTIVE_DATE),
         TRUNC(TRRAPPL_ACTIVITY_DATE),
         NVL(ROWIDTOCHAR(TRRAPPL.ROWID),'0'),
         TRRAPPL_FEED_DATE,
         TRRAPPL_FEED_DOC_CODE,
         TRRAPPL_USER_ID
 FROM TRRACCD X, TRRACCD Y, TRRAPPL
 WHERE TRRAPPL_GRNT_CODE=X.TRRACCD_GRNT_CODE
 AND TRRAPPL_PAY_TRAN_NUMBER = X.TRRACCD_TRAN_NUMBER
 AND TRRAPPL_GRNT_CODE = Y.TRRACCD_GRNT_CODE
 AND TRRAPPL_CHG_TRAN_NUMBER = Y.TRRACCD_TRAN_NUMBER"
"BANINST1","TRVACCD","Research accounting  billing information  view.","SELECT TRRACCD_GRNT_CODE,
        TRRACCD_FUND_CODE,
        NVL(SUM(TRRACCD_AMOUNT),0),
        NVL(SUM(TRRACCD_BALANCE),0),
        TRRACCD_BILL_DATE,
        TRRACCD_BILL_INV_SEQ_NO,
        TRRACCD_BILL_INV_ADJ_NO
   FROM TRRACCD X
  WHERE TRRACCD_BILL_DATE IS NOT NULL
    AND TRRACCD_BILL_INV_SEQ_NO IS NOT NULL
    AND TRRACCD_BILL_INV_ADJ_NO IS NOT NULL
  GROUP BY TRRACCD_GRNT_CODE, TRRACCD_FUND_CODE,
           TRRACCD_BILL_DATE,
           TRRACCD_BILL_INV_SEQ_NO, TRRACCD_BILL_INV_ADJ_NO
 "
"BANINST1","TOVTER2","","select
 tbraccd_term_code,
 tbbdetc_dcat_code,
 tbraccd_detail_code
from
 tbbdetc,
 tbraccd
where
 tbraccd_detail_code = tbbdetc_detail_code
group by tbraccd_term_code, tbbdetc_dcat_code, tbraccd_detail_code
 "
"BANINST1","TOVTER1","","select
 tovter2_term_code_key,
 tovter2_dcat_code_key,
 tovter2_detail_code_key,
 tbbdetc_type_ind,
 f_sum_amount_term(tovter2_term_code_key, tovter2_detail_code_key),
 f_sum_balance_term(tovter2_term_code_key, tovter2_detail_code_key)
from
 tbbdetc,
 tovter2
where
     tbbdetc_detail_code = tovter2_detail_code_key
 "
"BANINST1","TOVINS2","","select
 tbristl_pidm,
 tbristl_ref_number,
 tbristl_term_code,
 spriden_id,
 spbpers_ssn,
 spriden_surname_prefix,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 spbpers_name_prefix,
 spbpers_name_suffix,
 tbristl_installment_plan,
 tbristl_desc,
 tbristl_number_of_payments,
 tbristl_pay_period,
 tbristl_first_install_date,
 tbristl_plan_amount,
 tbristl_int_rate,
 tbristl_serv_charge,
 tbbacct_deli_code,
 f_returned_check_counter(tbristl_pidm, tbristl_term_code),
 e.sprhold_hldd_code,
 e.sprhold_from_date,
 e.sprhold_to_date,
 e.sprhold_amount_owed,
 e.sprhold_reason,
 f.sprhold_hldd_code,
 f.sprhold_from_date,
 f.sprhold_to_date,
 f.sprhold_amount_owed,
 f.sprhold_reason,
 g.sprhold_hldd_code,
 g.sprhold_from_date,
 g.sprhold_to_date,
 g.sprhold_amount_owed,
 g.sprhold_reason,
 h.sprhold_hldd_code,
 h.sprhold_from_date,
 h.sprhold_to_date,
 h.sprhold_amount_owed,
 h.sprhold_reason,
 i.sprhold_hldd_code,
 i.sprhold_from_date,
 i.sprhold_to_date,
 i.sprhold_amount_owed,
 i.sprhold_reason,
 substr(f_ar_check_for_more('HOLDS', tbristl_pidm, null, null, 'HOLDS'),1,1)
from
 sprhold e,
 sprhold f,
 sprhold g,
 sprhold h,
 sprhold i,
 spbpers,
 spriden,
 tbbacct,
 tbristl
where
    spriden_pidm = tbristl_pidm
and spriden_change_ind is null
and spbpers_pidm(+) = tbristl_pidm
and tbbacct_pidm(+) = tbristl_pidm
and e.rowid(+) = f_get_sprhold_rowid(tbristl_pidm,'ARHOLD',1)
and f.rowid(+) = f_get_sprhold_rowid(tbristl_pidm,'ARHOLD',2)
and g.rowid(+) = f_get_sprhold_rowid(tbristl_pidm,'ARHOLD',3)
and h.rowid(+) = f_get_sprhold_rowid(tbristl_pidm,'ARHOLD',4)
and i.rowid(+) = f_get_sprhold_rowid(tbristl_pidm,'ARHOLD',5)"
"BANINST1","TOVINS1","","select
 tovins2_pidm_key,
 tovins2_ref_number_key,
 tovins2_term_code_key,
 tovins2_id,
 tovins2_ssn,
 tovins2_surname_prefix,
 tovins2_last_name,
 tovins2_first_name,
 tovins2_mi,
 tovins2_name_prefix,
 tovins2_name_suffix,
 tovins2_installment_plan,
 tovins2_installment_plan_desc,
 tovins2_number_of_payments,
 tovins2_pay_period,
 tovins2_first_installment_date,
 tovins2_plan_amount,
 tovins2_int_rate,
 tovins2_serv_charge,
 tovins2_deli_code,
 tovins2_nsf_counter,
 tovins2_hold_code1,
 tovins2_hold_from_date1,
 tovins2_hold_to_date1,
 tovins2_hold_amount_owed1,
 tovins2_hold_reason1,
 tovins2_hold_code2,
 tovins2_hold_from_date2,
 tovins2_hold_to_date2,
 tovins2_hold_amount_owed2,
 tovins2_hold_reason2,
 tovins2_hold_code3,
 tovins2_hold_from_date3,
 tovins2_hold_to_date3,
 tovins2_hold_amount_owed3,
 tovins2_hold_reason3,
 tovins2_hold_code4,
 tovins2_hold_from_date4,
 tovins2_hold_to_date4,
 tovins2_hold_amount_owed4,
 tovins2_hold_reason4,
 tovins2_hold_code5,
 tovins2_hold_from_date5,
 tovins2_hold_to_date5,
 tovins2_hold_amount_owed5,
 tovins2_hold_reason5,
 tovins2_additional_holds
from
 tovins2"
"BANINST1","TOVDEP1","","select
 tbrdepo_pidm,
 tbrdepo_detail_code_deposit,
 tbrdepo_desc,
 tbrdepo_term_code,
 tbrdepo_tran_number,
 nvl(tbracct_percent,100),
 spriden_id,
 spbpers_ssn,
 spriden_surname_prefix,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 spbpers_name_prefix,
 spbpers_name_suffix,
 tbracct_a_fund_code,
 tbracct_a_acct_code,
 tbracct_a_coas_code,
 tbbdetc_dcat_code,
 tbrdepo_detail_code_payment,
 nvl((nvl(tbracct_percent,100)/100) *
    (tbrdepo_amount - f_accd_amount(tbrdepo_pidm, tbrdepo_tran_number)),0),
 tbrdepo_auto_release_ind,
 tbrdepo_acct_feed_ind,
 tbrdepo_user,
 tbrdepo_entry_date,
 tbrdepo_receipt_number,
 tbrdepo_min_amount,
 tbrdepo_expiration_date,
 tbrdepo_release_date,
 tbrdepo_effective_date,
 tbrdepo_activity_date,
 tbrdepo_session_number,
 tbrdepo_cshr_end_date,
 tbrdepo_curr_code,
 tbrdepo_trans_date,
 tbrdepo_foreign_amount,
 tbrdepo_feed_date,
 tbrdepo_feed_doc_code
from
 spbpers,
 tbbdetc,
 tbracct,
 spriden,
 tbrdepo,tbbeact
where
     spriden_change_ind is null
 and spbpers_pidm(+) = tbrdepo_pidm
 and spriden_pidm = tbrdepo_pidm
 and tbbdetc_detail_code = tbrdepo_detail_code_deposit
 and tbracct_detail_code(+) = tbrdepo_detail_code_deposit
 and tbbdetc_detail_code = tbbeact_detail_code
 and tbbeact_eff_date = tbracct_detc_eff_date
 and tbbeact_eff_date <= sysdate
 and tbbeact_nchg_date > sysdate
 and (tbbeact_term_date > sysdate
     or tbbeact_term_date is null)"
"BANINST1","TOVDATA","Web for Executives Accounts Receivable Cleansing View","SELECT 'ACCTSRECV',
              'CATEGORY CODE',
              'B',
              '',
              ttvdcat_code,
              '',
              ttvdcat_desc,
              substr(ttvdcat_desc,1,15)
         FROM ttvdcat
UNION
       SELECT 'ACCTSRECV',
              'DETAIL CODE',
              'B',
              '',
              tbbdetc_detail_code,
              '',
              tbbdetc_desc,
              substr(tbbdetc_desc,1,15)
         FROM tbbdetc
UNION
       SELECT 'ACCTSRECV',
              'FEED INDICATOR',
              'B',
              '',
              'F',
              '',
              'Fed to Finance',
              'Fed to Finance'
         FROM dual
UNION
       SELECT 'ACCTSRECV',
              'FEED INDICATOR',
              'B',
              '',
              'Y',
              '',
              'Not Fed to Finance',
              'Not Fed to Fin'
         FROM dual
 "
"BANINST1","TOVBAL1","","select
 tbraccd_detail_code,
 tbbdetc_dcat_code
from
 tbraccd,
 tbbdetc
where
 tbraccd_detail_code = tbbdetc_detail_code
group by tbraccd_detail_code, tbbdetc_dcat_code
 "
"BANINST1","TOVAPP1","","select
 tbrappl_pidm,
 p.tbraccd_term_code,
 tbrappl_chg_tran_number,
 tbrappl_pay_tran_number,
 tbracct_percent,
 spriden_id,
 spbpers_ssn,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 spbpers_name_prefix,
 spbpers_name_suffix,
 tbrappl_amount*(tbracct_percent/100),
 tbbdetc_dcat_code,
 tbbdetc_type_ind,
 p.tbraccd_detail_code,
 c.tbraccd_detail_code,
 c.tbraccd_term_code,
 tbrappl_direct_pay_ind,
 tbrappl_reappl_ind,
 tbrappl_acct_feed_ind,
 tbrappl_activity_date,
 trunc(p.tbraccd_trans_date),
 trunc(c.tbraccd_trans_date),
 tbrappl_feed_date,
 tbrappl_feed_doc_code,
 tbracct_account_b,
 tbracct_b_coas_code,
 tbracct_b_fund_code,
 tbracct_b_acct_code,
 p.tbraccd_acct_feed_ind,
 c.tbraccd_acct_feed_ind,
 tbrappl_acct_feed_ind
from
 spbpers,
 spriden,
 tbbdetc,
 tbracct,
 tbraccd p,
 tbraccd c,
 tbrappl, tbbeact
where
     spriden_pidm = tbrappl_pidm
 and spriden_change_ind is null
 and spbpers_pidm(+) = tbrappl_pidm
 and p.tbraccd_pidm = tbrappl_pidm
 and p.tbraccd_tran_number = tbrappl_pay_tran_number
 and p.tbraccd_detail_code = tbracct_detail_code(+)
 and tbracct_detail_code = tbbdetc_detail_code
 and c.tbraccd_pidm = tbrappl_pidm
 and c.tbraccd_tran_number = tbrappl_chg_tran_number
 and tbbdetc_detail_code = tbbeact_detail_code
 and tbbeact_eff_date = tbracct_detc_eff_date
 and tbbeact_eff_date <= sysdate
 and tbbeact_nchg_date > sysdate
 and (tbbeact_term_date > sysdate
     or tbbeact_term_date is null)
 "
"BANINST1","TOVAPC1","","select
 tbrappl_pidm,
 p.tbraccd_term_code,
 tbrappl_chg_tran_number,
 tbrappl_pay_tran_number,
 tbracct_percent,
 spriden_id,
 spbpers_ssn,
 spriden_surname_prefix,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 spbpers_name_prefix,
 spbpers_name_suffix,
 tbrappl_amount*(tbracct_percent/100),
 tbbdetc_dcat_code,
 tbbdetc_type_ind,
 p.tbraccd_detail_code,
 c.tbraccd_detail_code,
 c.tbraccd_term_code,
 tbrappl_direct_pay_ind,
 tbrappl_reappl_ind,
 tbrappl_acct_feed_ind,
 tbrappl_activity_date,
 trunc(p.tbraccd_trans_date),
 trunc(c.tbraccd_trans_date),
 tbrappl_feed_date,
 tbrappl_feed_doc_code,
 tbracct_account_a,
 tbracct_a_coas_code,
 tbracct_a_fund_code,
 tbracct_a_acct_code,
 p.tbraccd_acct_feed_ind,
 c.tbraccd_acct_feed_ind,
 tbrappl_acct_feed_ind
from
 spbpers,
 spriden,
 tbbdetc,
 tbracct,
 tbraccd p,
 tbraccd c,
 tbrappl, tbbeact
where
     spriden_pidm = tbrappl_pidm
 and spriden_change_ind is null
 and spbpers_pidm(+) = tbrappl_pidm
 and p.tbraccd_pidm = tbrappl_pidm
 and p.tbraccd_tran_number = tbrappl_pay_tran_number
 and tbracct_detail_code = tbbdetc_detail_code
 and c.tbraccd_pidm = tbrappl_pidm
 and c.tbraccd_tran_number = tbrappl_chg_tran_number
 and c.tbraccd_detail_code = tbracct_detail_code(+)
 and tbbdetc_detail_code = tbbeact_detail_code
 and tbbeact_eff_date = tbracct_detc_eff_date
 and tbbeact_eff_date <= sysdate
 and tbbeact_nchg_date > sysdate
 and (tbbeact_term_date > sysdate
     or tbbeact_term_date is null)"
"BANINST1","TBVTPCN","BANNER Reporting view to retrieve Third Party data and associated students with their courses","select x.spriden_pidm, x.spriden_last_name, x.spriden_id, stvterm_code,
       stvterm_desc, tbbcont_contract_number, tbbcont_desc, y.spriden_pidm,
       y.spriden_surname_prefix,y.spriden_last_name, y.spriden_first_name, y.spriden_id,
       ssbsect_subj_code, ssbsect_crse_numb,
       nvl(ssbsect_crse_title, v.scbcrse_title),
       ssbsect_crn, ssbsect_seq_numb, sfrstcr_credit_hr, sfrstcr_bill_hr,
       stvrsts_code, stvrsts_desc, tbbcstu_auth_number, tbbcstu_auth_ind
  from spriden x, spriden y, tbbcstu,
       stvterm, stvrsts, ssbsect,
       scbcrse v, sfrstcr, tbbcont
 where x.spriden_pidm = tbbcont_pidm
   and x.spriden_change_ind is null
   and tbbcont_pidm = tbbcstu_contract_pidm
   and tbbcont_contract_number = tbbcstu_contract_number
   and tbbcont_term_code = tbbcstu_term_code
   and tbbcont_term_code = stvterm_code
   and tbbcstu_stu_pidm = y.spriden_pidm
   and y.spriden_change_ind is null
   and y.spriden_entity_ind = 'P'
   and y.spriden_pidm = sfrstcr_pidm
   and stvterm_code = sfrstcr_term_code
   and sfrstcr_rsts_code = stvrsts_code
   and sfrstcr_crn = ssbsect_crn
   and sfrstcr_term_code = ssbsect_term_code
   and ssbsect_subj_code = v.scbcrse_subj_code
   and ssbsect_crse_numb = v.scbcrse_crse_numb
   and v.scbcrse_eff_term = (select max(u.scbcrse_eff_term)
                               from scbcrse u
                            where u.scbcrse_subj_code = v.scbcrse_subj_code
                              and u.scbcrse_crse_numb = v.scbcrse_crse_numb
                              and u.scbcrse_eff_term <= stvterm_code)
group by stvterm_code, stvterm_desc,
         tbbcont_contract_number, tbbcont_desc,
         x.spriden_last_name,
         x.spriden_id,
         x.spriden_pidm,
         y.spriden_surname_prefix,
         y.spriden_last_name,
         y.spriden_first_name, y.spriden_pidm, y.spriden_id, ssbsect_subj_code,
         ssbsect_crse_numb, ssbsect_seq_numb, ssbsect_crn,
         nvl(ssbsect_crse_title, v.scbcrse_title),
         sfrstcr_credit_hr, sfrstcr_bill_hr, stvrsts_code, stvrsts_desc,
         tbbcstu_auth_number, tbbcstu_auth_ind"
"BANINST1","TBVSESS","Active Session View","(SELECT TBVACTV.TBVACTV_USER, MIN(TBVACTV.TBVACTV_ENTRY_DATE),
        TO_CHAR(MIN(TBVACTV.TBVACTV_ENTRY_DATE),'HH24:MI:SS'),
	MAX(TBVACTV.TBVACTV_ENTRY_DATE),
        TO_CHAR(MAX(TBVACTV.TBVACTV_ENTRY_DATE),'HH24:MI:SS')
FROM TBVACTV
GROUP BY TBVACTV.TBVACTV_USER)
 "
"BANINST1","TBVRFND","","SELECT TBBACCT_PIDM,
         SPRIDEN_ID,
         F_FORMAT_NAME(TBBACCT_PIDM, 'LFMI')
  FROM   SPRIDEN, TBBACCT
  WHERE  SPRIDEN_PIDM = TBBACCT_PIDM
     AND SPRIDEN_CHANGE_IND IS NULL
     AND NVL(TBBACCT_REFUND_IND,'N') = 'Y' "
"BANINST1","TBVRCPT","Receipt Detail View","(SELECT TBRACCD.TBRACCD_PIDM, TBRACCD.TBRACCD_TRAN_NUMBER,
	TBRACCD.TBRACCD_TERM_CODE, TBRACCD.TBRACCD_DETAIL_CODE,
 	TBRACCD.TBRACCD_USER, TBRACCD.TBRACCD_ENTRY_DATE,
	TO_CHAR(TBRACCD.TBRACCD_ENTRY_DATE, 'HH24:MI:SS'),
	TBRACCD.TBRACCD_AMOUNT, TBRACCD.TBRACCD_DESC,
	TBRACCD.TBRACCD_RECEIPT_NUMBER, NVL(ROWIDTOCHAR(TBRACCD.ROWID),'0')
FROM    TBRACCD, TBRCCRC
WHERE   TBRACCD.TBRACCD_RECEIPT_NUMBER = TBRCCRC_RECEIPT_NUMBER
AND     TO_CHAR(USERENV('SESSIONID')) = TBRCCRC_SESSIONID
UNION
SELECT  TBRDEPO.TBRDEPO_PIDM, TBRDEPO.TBRDEPO_TRAN_NUMBER,
	TBRDEPO.TBRDEPO_TERM_CODE, TBRDEPO.TBRDEPO_DETAIL_CODE_PAYMENT,
	TBRDEPO.TBRDEPO_USER, TBRDEPO.TBRDEPO_ENTRY_DATE,
	TO_CHAR(TBRDEPO.TBRDEPO_ENTRY_DATE, 'HH24:MI:SS'),
	TBRDEPO.TBRDEPO_AMOUNT, TBRDEPO.TBRDEPO_DESC,
	TBRDEPO.TBRDEPO_RECEIPT_NUMBER, NVL(ROWIDTOCHAR(TBRDEPO.ROWID),'0')
FROM    TBRDEPO, TBRCCRC
WHERE   TBRDEPO.TBRDEPO_RECEIPT_NUMBER = TBRCCRC_RECEIPT_NUMBER
AND     TO_CHAR(USERENV('SESSIONID')) = TBRCCRC_SESSIONID)
 "
"BANINST1","TBVRCP2","Receipt Detail View","SELECT TBRACCD_RECEIPT_NUMBER,TBRACCD_TRAN_NUMBER, TBRACCD_TERM_CODE,
          TBRACCD_DETAIL_CODE, TBRACCD_DESC, 1, TBRACCD_AMOUNT
     FROM TBRACCD
    WHERE TBRACCD_RECEIPT_NUMBER IS NOT NULL
    UNION
   SELECT TBRDEPO_RECEIPT_NUMBER,TBRDEPO_TRAN_NUMBER, TBRDEPO_TERM_CODE,
          TBRDEPO_DETAIL_CODE_DEPOSIT, TBRDEPO_DESC, 2, TBRDEPO_AMOUNT
     FROM TBRDEPO
    WHERE TBRDEPO_RECEIPT_NUMBER IS NOT NULL
    UNION
   SELECT TBRMISD_RECEIPT_NUMBER, TBRMISD_TRAN_NUMBER, '',
          TBRMISD_PAY_DETAIL_CODE, TBRMISD_DESC, 3, TBRMISD_AMOUNT
     FROM TBRMISD
    WHERE TBRMISD_RECEIPT_NUMBER IS NOT NULL
      AND TBRMISD_PAY_DETAIL_CODE IS NOT NULL
    UNION
   SELECT TBRMISD_RECEIPT_NUMBER, TBRMISD_TRAN_NUMBER, '',
          TBRMISD_CHARGE_DETAIL_CODE, TBRMISD_DESC, 4, TBRMISD_AMOUNT
     FROM TBRMISD
    WHERE TBRMISD_RECEIPT_NUMBER IS NOT NULL
      AND TBRMISD_CHARGE_DETAIL_CODE IS NOT NULL
 "
"BANINST1","TBVRCP1","Receipt Detail View","SELECT TBRACCD_RECEIPT_NUMBER,TBRACCD_PIDM, 'T', 1, trunc(TBRACCD_EFFECTIVE_DATE),
          TBRACCD_USER, TBRACCD_SESSION_NUMBER, TBRACCD_FEED_DOC_CODE,
          trunc(TBRACCD_FEED_DATE), TBRACCD_ACCT_FEED_IND
     FROM TBRACCD
    WHERE TBRACCD_RECEIPT_NUMBER IS NOT NULL
    UNION
   SELECT TBRDEPO_RECEIPT_NUMBER,TBRDEPO_PIDM, 'D', 2, trunc(TBRDEPO_EFFECTIVE_DATE),
          TBRDEPO_USER, TBRDEPO_SESSION_NUMBER, TBRDEPO_FEED_DOC_CODE,
          trunc(TBRDEPO_FEED_DATE), TBRDEPO_ACCT_FEED_IND
     FROM TBRDEPO
    WHERE TBRDEPO_RECEIPT_NUMBER IS NOT NULL
    UNION
   SELECT TBRMISD_RECEIPT_NUMBER, TBRMISD_PIDM, 'M', 3, trunc(TBRMISD_ACTIVITY_DATE),
          TBRMISD_USER, TBRMISD_SESSION_NUMBER, TBRMISD_FEED_DOC_CODE,
          trunc(TBRMISD_FEED_DATE), TBRMISD_ACCT_FEED_IND
     FROM TBRMISD
    WHERE TBRMISD_RECEIPT_NUMBER IS NOT NULL
 "
"BANINST1","TBVPHST","Reporting view of receivable transactions identified for Payment History in the Detail Code rules.","(SELECT tbraccd_pidm,
         tbraccd_detail_code,
         NVL(tbraccd_desc,tbbdetc_desc),
         tbbdetc_type_ind,
         tbraccd_term_code,
         stvterm_desc,
         DECODE(tbbdetc_type_ind,
               'P',tbraccd_amount,
                   tbraccd_amount*-1),
         NVL(tbraccd_trans_date,tbraccd_effective_date),
         tbraccd_entry_date,
         tbraccd_bill_date
    FROM stvterm,
         tbbdetc,
         tbraccd
   WHERE tbbdetc_detail_code = tbraccd_detail_code
     AND tbbdetc_payhist_ind = 'Y'
     AND stvterm_code(+) = tbraccd_term_code)
 "
"BANINST1","TBVNFFD","BANNER ACCOUNTS RECEIVABLE WITHOUT BANNER FINANCE ACCOUNTING FEED DEBITS VIEW","SELECT GURFEED_ACCOUNT,
		SUM(GURFEED_TRANS_AMT),
		GURFEED_DR_CR_IND
	FROM GURFEED
	WHERE GURFEED_SYSTEM_ID = 'ACTRECV'
	AND GURFEED_REC_TYPE = '2'
	AND GURFEED_DR_CR_IND = 'D'
	GROUP BY GURFEED_ACCOUNT, GURFEED_DR_CR_IND
 "
"BANINST1","TBVNFFC","BANNER ACCOUNTS RECEIVABLE WITHOUT BANNER FINANCE ACCOUNTING FEED CREDITS VIEW","SELECT 	GURFEED_ACCOUNT,
		SUM(GURFEED_TRANS_AMT),
		GURFEED_DR_CR_IND
	FROM GURFEED
	WHERE GURFEED_SYSTEM_ID = 'ACTRECV'
	AND GURFEED_REC_TYPE = '2'
	AND GURFEED_DR_CR_IND = 'C'
	GROUP BY GURFEED_ACCOUNT, GURFEED_DR_CR_IND
 "
"BANINST1","TBVISTP","Installment plan transactions view","SELECT TBRIDET_INSTALLMENT_PLAN,
       TBRIDET_TERM_CODE,
       TBRIDET_DETAIL_CODE,
       TBBDETC_TYPE_IND
FROM   TBBDETC, TBRIDET
WHERE  TBBDETC_DETAIL_CODE = TBRIDET_DETAIL_CODE
UNION ALL
SELECT TBRIDCT_INSTALLMENT_PLAN,
       TBRIDCT_TERM_CODE,
       TBBDETC_DETAIL_CODE,
       TBBDETC_TYPE_IND
FROM   TBBDETC, TBRIDCT
WHERE  TBBDETC_DCAT_CODE = TBRIDCT_DCAT_CODE
AND    NOT EXISTS (SELECT 'X'
		   FROM   TBRIDTX
		   WHERE  TBRIDTX_DCAT_CODE        = TBRIDCT_DCAT_CODE
		   AND    TBRIDTX_INSTALLMENT_PLAN = TBRIDCT_INSTALLMENT_PLAN
		   AND    TBRIDTX_TERM_CODE        = TBRIDCT_TERM_CODE
		   AND    TBRIDTX_DETAIL_CODE      = TBBDETC_DETAIL_CODE)
 "
"BANINST1","TBVINVS","Outstanding Invoice Summary View","(SELECT TBRACCD_PIDM, TBRACCD_INVOICE_NUMBER, TBRACCD_BILL_DATE,
          TBRACCD_DUE_DATE, SUM(TBRACCD_AMOUNT), SUM(TBRACCD_BALANCE)
   FROM  TBRACCD
   WHERE TBRACCD_INVOICE_NUMBER IS NOT NULL
   HAVING SUM(TBRACCD_BALANCE) <> 0
   GROUP BY TBRACCD_PIDM, TBRACCD_DUE_DATE, TBRACCD_INVOICE_NUMBER,
            TBRACCD_BILL_DATE)
 "
"BANINST1","TBVINSS","Automated Installment Plans Summary by Term for TSAISTP","Select
TBVINSP_PIDM,
TBVINSP_TERM_CODE,
SUM(TBVINSP_AMOUNT),
SUM(TBVINSP_BALANCE),
TBVINSP_DETAIL_CODE,
MAX(TBVINSP_DESC),
TRUNC(TBVINSP_EFF_DATE),
MAX(TBVINSP_DETC_TYPE_IND)
FROM TBVINSP
GROUP BY
TBVINSP_PIDM,
TBVINSP_TERM_CODE,
TBVINSP_DETAIL_CODE,
TRUNC(TBVINSP_EFF_DATE)
 "
"BANINST1","TBVINSP","Plan Payments view for TSAISTP","Select tbrcisp_pidm,
 tbrcisp_installment_plan,
 tbrcisp_term_code,
 tbrcisp_due_date,
 tbrcisp_amount,
 decode(tbbdetc_type_ind, 'C', tbrcisp_amount, tbrcisp_amount*(-1)),
 Tbrcisp_detail_code,
 Tbbdetc_desc,
 tbbdetc_type_ind,
 'C'
from tbbdetc, tbrcisp
where tbrcisp_sessionid = userenv('sessionid')
  and tbrcisp_detail_code = tbbdetc_detail_code
UNION ALL
/* get all installment transactions from tbraccd */
Select tbraccd_pidm,
 tbristl_installment_plan,
 tbraccd_term_code,
 tbraccd_effective_date,
 tbraccd_amount,
 tbraccd_balance,
 Tbraccd_detail_code,
 Tbbdetc_desc,
 tbbdetc_type_ind,
 'E'
from tbbdetc, tbraccd, tbristl
where tbraccd_srce_code = 'I'
 and tbraccd_pidm = tbristl_pidm
 and tbraccd_crossref_number = tbristl_ref_number
 and tbraccd_detail_code = tbbdetc_detail_code
 "
"BANINST1","TBVFIFD","BANNER ACCOUNTS RECEIVABLE WITH BANNER FINANCE ACCOUNTING FEED DEBITS VIEW","SELECT SUM(GURFEED_TRANS_AMT), GURFEED_COAS_CODE, GURFEED_ACCI_CODE,
               GURFEED_FUND_CODE, GURFEED_ORGN_CODE, GURFEED_ACCT_CODE,
               GURFEED_PROG_CODE, GURFEED_ACTV_CODE, GURFEED_LOCN_CODE,
               GURFEED_DR_CR_IND
	FROM GURFEED
	WHERE GURFEED_SYSTEM_ID = 'ACTRECV'
	AND GURFEED_REC_TYPE = '2'
	AND GURFEED_DR_CR_IND = 'D'
	GROUP BY GURFEED_COAS_CODE, GURFEED_ACCI_CODE,
               GURFEED_FUND_CODE, GURFEED_ORGN_CODE, GURFEED_ACCT_CODE,
               GURFEED_PROG_CODE, GURFEED_ACTV_CODE, GURFEED_LOCN_CODE,
               GURFEED_DR_CR_IND
 "
"BANINST1","TBVFIFC","BANNER ACCOUNTS RECEIVABLE WITH BANNER FINANCE ACCOUNTING FEED CREDITS VIEW","SELECT SUM(GURFEED_TRANS_AMT), GURFEED_COAS_CODE, GURFEED_ACCI_CODE,
               GURFEED_FUND_CODE, GURFEED_ORGN_CODE, GURFEED_ACCT_CODE,
               GURFEED_PROG_CODE, GURFEED_ACTV_CODE, GURFEED_LOCN_CODE,
               GURFEED_DR_CR_IND
	FROM GURFEED
	WHERE GURFEED_SYSTEM_ID = 'ACTRECV'
	AND GURFEED_REC_TYPE = '2'
	AND GURFEED_DR_CR_IND = 'C'
	GROUP BY GURFEED_COAS_CODE, GURFEED_ACCI_CODE,
               GURFEED_FUND_CODE, GURFEED_ORGN_CODE, GURFEED_ACCT_CODE,
               GURFEED_PROG_CODE, GURFEED_ACTV_CODE, GURFEED_LOCN_CODE,
               GURFEED_DR_CR_IND
 "
"BANINST1","TBVESTU","Exemption Assignment Query View","(SELECT SPRIDEN_ID,
        f_format_name(spriden_pidm, 'LFM'),
        TBBESTU_PIDM,
        TBBESTU_EXEMPTION_CODE,
        TBBESTU_TERM_CODE,
        TBBESTU_ACTIVITY_DATE,
        TBBESTU_STUDENT_EXPT_ROLL_IND,
        TBBESTU_TERM_CODE_EXPIRATION,
        TBBESTU_DEL_IND
FROM    SPRIDEN, TBBESTU
WHERE   SPRIDEN_PIDM = TBBESTU_PIDM
AND     SPRIDEN_CHANGE_IND IS NULL
AND     SPRIDEN_ENTITY_IND = 'P')"
"BANINST1","TBVDTTR","Detail of Accounts Receivable Transactions View","SELECT tbraccd_session_number,
       tbraccd_user,
       tbraccd_cshr_end_date,
       tbraccd_feed_doc_code,
       tbraccd_feed_date,
       tbraccd_acct_feed_ind,
       tbraccd_activity_date,
       tbraccd_tran_number,
       tbraccd_receipt_number,
       tbraccd_detail_code,
       tbraccd_desc,
       tbbdetc_dcat_code,
       tbbdetc_type_ind,
       NULL,
       tbraccd_amount,
       decode(spriden_entity_ind,
              'P',f_format_name(spriden_pidm, 'LFM'),
                  spriden_last_name),
       spriden_id,
       tbraccd_pidm,
       'ACCD'
  FROM tbbdetc,
       spriden,
       tbraccd
 WHERE spriden_pidm = tbraccd_pidm
   AND spriden_change_ind IS NULL
   AND tbbdetc_detail_code = tbraccd_detail_code
 UNION ALL
SELECT tbrdepo_session_number,
       tbrdepo_user,
       tbrdepo_cshr_end_date,
       tbrdepo_feed_doc_code,
       tbrdepo_feed_date,
       tbrdepo_acct_feed_ind,
       tbrdepo_activity_date,
       tbrdepo_tran_number,
       tbrdepo_receipt_number,
       tbrdepo_detail_code_payment,
       tbrdepo_desc,
       tbbdepc_dtyp_code,
       tbbdetc_type_ind,
       NULL,
       tbrdepo_amount,
       decode(spriden_entity_ind,
              'P',f_format_name(spriden_pidm, 'LFM'),
                  spriden_last_name),
       spriden_id,
       tbrdepo_pidm,
       'DEPO'
  FROM tbbdepc,
       tbbdetc,
       spriden,
       tbrdepo
 WHERE spriden_pidm = tbrdepo_pidm
   AND spriden_change_ind IS NULL
   AND tbbdetc_detail_code = tbrdepo_detail_code_payment
   AND tbbdepc_detail_code_deposit = tbrdepo_detail_code_deposit
 UNION ALL
SELECT tbrmisd_session_number,
       tbrmisd_user,
       tbrmisd_cshr_end_date,
       tbrmisd_feed_doc_code,
       tbrmisd_feed_date,
       tbrmisd_acct_feed_ind,
       tbrmisd_activity_date,
       tbrmisd_tran_number,
       tbrmisd_receipt_number,
       tbrmisd_pay_detail_code,
       decode(tbbdetc_gl_nos_enterable,
             'N',tbrmisd_desc,
                 tbrmisd_pay_coas||' '||tbrmisd_pay_fund||' '||tbrmisd_pay_orgn||' '
                 ||tbrmisd_pay_acct||' '||tbrmisd_pay_prog),
       tbbdetc_dcat_code,
       tbbdetc_type_ind,
       tbrmisd_dr_cr_ind,
       decode(tbbdetc_type_ind,
              'P',tbrmisd_amount,
                  0-tbrmisd_amount),
       decode(tbrmisd_pidm,
              NULL,tbbmisc_name,
                   decode(spriden_entity_ind,
                          'P',f_format_name(spriden_pidm, 'LFM'),
                              spriden_last_name)),
       spriden_id,
       tbrmisd_pidm,
       'MISD'
  FROM spriden,
       tbbdetc,
       tbbmisc,
       tbrmisd
 WHERE tbrmisd_pay_detail_code IS NOT NULL
   AND tbbmisc_receipt_number(+) = tbrmisd_receipt_number
   AND spriden_pidm(+) = tbrmisd_pidm
   AND spriden_change_ind IS NULL
   AND tbbdetc_detail_code = tbrmisd_pay_detail_code
 UNION ALL
SELECT tbrmisd_session_number,
       tbrmisd_user,
       tbrmisd_cshr_end_date,
       tbrmisd_feed_doc_code,
       tbrmisd_feed_date,
       tbrmisd_acct_feed_ind,
       tbrmisd_activity_date,
       tbrmisd_tran_number,
       tbrmisd_receipt_number,
       tbrmisd_charge_detail_code,
       decode(tbbdetc_gl_nos_enterable,
             'N',tbrmisd_desc,
                 tbrmisd_charge_coas||' '||tbrmisd_charge_fund||' '||tbrmisd_charge_orgn||' '
                 ||tbrmisd_charge_acct||' '||tbrmisd_charge_prog),
       tbbdetc_dcat_code,
       tbbdetc_type_ind,
       tbrmisd_dr_cr_ind,
       decode(tbbdetc_type_ind,
              'C',tbrmisd_amount,
                  0-tbrmisd_amount),
       decode(tbrmisd_pidm,
              NULL,tbbmisc_name,
                   decode(spriden_entity_ind,
                          'P',f_format_name(spriden_pidm, 'LFM'),
                              spriden_last_name)),
       spriden_id,
       tbrmisd_pidm,
       'MISD'
  FROM spriden,
       tbbdetc,
       tbbmisc,
       tbrmisd
 WHERE tbrmisd_charge_detail_code IS NOT NULL
   AND tbbmisc_receipt_number(+) = tbrmisd_receipt_number
   AND spriden_pidm(+) = tbrmisd_pidm
   AND spriden_change_ind IS NULL
   AND tbbdetc_detail_code = tbrmisd_charge_detail_code
 UNION ALL
SELECT trraccd_session_number,
       trraccd_user_id,
       trraccd_cshr_end_date,
       trraccd_feed_doc_code,
       trraccd_feed_date,
       trraccd_acct_feed_ind,
       trraccd_activity_date,
       trraccd_tran_number,
       NULL,
       trraccd_detail_code,
       trraccd_desc,
       tbbdetc_dcat_code,
       tbbdetc_type_ind,
       NULL,
       trraccd_amount,
       frbgrnt_title,
       trraccd_grnt_code,
       NULL,
       'GRAR'
  FROM frbgrnt,
       tbbdetc,
       trraccd
 WHERE tbbdetc_detail_code = trraccd_detail_code
   AND frbgrnt_code = trraccd_grnt_code"
"BANINST1","TBVDTAP","Detail of Application of Payments View","SELECT tbrappl_feed_doc_code,
       tbrappl_feed_date,
       tbrappl_acct_feed_ind,
       tbrappl_pidm,
       tbrappl_pay_tran_number,
       tbrappl_chg_tran_number,
       tbrappl_amount,
       tbrappl_direct_pay_ind,
       tbrappl_reappl_ind,
       trunc(x.tbraccd_trans_date),
       trunc(y.tbraccd_trans_date),
       x.tbraccd_detail_code,
       y.tbraccd_detail_code,
       v.tbbdetc_type_ind,
       w.tbbdetc_type_ind,
       x.tbraccd_desc,
       y.tbraccd_desc,
       x.tbraccd_term_code,
       y.tbraccd_term_code,
       trunc(x.tbraccd_effective_date),
       trunc(y.tbraccd_effective_date),
       trunc(tbrappl_activity_date),
       tbrappl_user,
       decode(spriden_entity_ind,
             'P',f_format_name(spriden_pidm, 'LFM'), spriden_last_name),
       spriden_id,
       'APPL',
       NULL,
       NULL,
       tbrappl_inv_number_paid,
       DECODE(NVL(TBRAPPL_DIRECT_PAY_TYPE,'N'), 'N', NULL,TBRAPPL_DIRECT_PAY_TYPE)
  FROM spriden,
       tbbdetc v,
       tbbdetc w,
       tbraccd x,
       tbraccd y,
       tbrappl
 WHERE spriden_pidm = tbrappl_pidm
   AND spriden_change_ind IS NULL
   AND v.tbbdetc_detail_code = x.tbraccd_detail_code
   AND w.tbbdetc_detail_code = y.tbraccd_detail_code
   AND tbrappl_pay_tran_number = x.tbraccd_tran_number
   AND tbrappl_chg_tran_number = y.tbraccd_tran_number
   AND x.tbraccd_pidm = tbrappl_pidm
   AND y.tbraccd_pidm = tbrappl_pidm
UNION ALL
SELECT tbrapph_feed_doc_code,
       tbrapph_feed_date,
       tbrapph_acct_feed_ind,
       tbrapph_pidm,
       tbrapph_pay_tran_number,
       tbrapph_chg_tran_number,
       tbrapph_amount,
       tbrapph_direct_pay_ind,
       tbrapph_reappl_ind,
       trunc(x.tbraccd_trans_date),
       trunc(y.tbraccd_trans_date),
       x.tbraccd_detail_code,
       y.tbraccd_detail_code,
       v.tbbdetc_type_ind,
       w.tbbdetc_type_ind,
       x.tbraccd_desc,
       y.tbraccd_desc,
       x.tbraccd_term_code,
       y.tbraccd_term_code,
       trunc(x.tbraccd_effective_date),
       trunc(y.tbraccd_effective_date),
       trunc(tbrapph_activity_date),
       tbrapph_user,
       decode(spriden_entity_ind,
             'P',f_format_name(spriden_pidm, 'LFM'), spriden_last_name),
       spriden_id,
       'APPL',
       'Y',
       tbrapph_archive_date,
       TBRAPPH_INV_NUMBER_PAID,
       DECODE(NVL(TBRAPPH_DIRECT_PAY_TYPE,'N'), 'N', NULL,TBRAPPH_DIRECT_PAY_TYPE)
  FROM spriden,
       tbbdetc v,
       tbbdetc w,
       tbraccd x,
       tbraccd y,
       tbrapph
 WHERE spriden_pidm = tbrapph_pidm
   AND spriden_change_ind IS NULL
   AND v.tbbdetc_detail_code = x.tbraccd_detail_code
   AND w.tbbdetc_detail_code = y.tbraccd_detail_code
   AND tbrapph_pay_tran_number = x.tbraccd_tran_number
   AND tbrapph_chg_tran_number = y.tbraccd_tran_number
   AND x.tbraccd_pidm = tbrapph_pidm
   AND y.tbraccd_pidm = tbrapph_pidm

   
UNION ALL
SELECT trrappl_feed_doc_code,
       trrappl_feed_date,
       trrappl_acct_feed_ind,
       NULL,
       trrappl_pay_tran_number,
       trrappl_chg_tran_number,
       trrappl_amount,
       trrappl_direct_pay_ind,
       trrappl_reappl_ind,
       trunc(x.trraccd_trans_date),
       trunc(y.trraccd_trans_date),
       x.trraccd_detail_code,
       y.trraccd_detail_code,
       v.tbbdetc_type_ind,
       w.tbbdetc_type_ind,
       x.trraccd_desc,
       y.trraccd_desc,
       NULL,
       NULL,
       trunc(x.trraccd_effective_date),
       trunc(y.trraccd_effective_date),
       trunc(trrappl_activity_date),
       trrappl_user_id,
       frbgrnt_title,
       trrappl_grnt_code,
       'GRAP',
       NULL,
       NULL,
       NULL,
       NULL
  FROM frbgrnt,
       tbbdetc v,
       tbbdetc w,
       trraccd x,
       trraccd y,
       trrappl
 WHERE frbgrnt_code = trrappl_grnt_code
   AND v.tbbdetc_detail_code = x.trraccd_detail_code
   AND w.tbbdetc_detail_code = y.trraccd_detail_code
   AND x.trraccd_tran_number = trrappl_pay_tran_number
   AND y.trraccd_tran_number = trrappl_chg_tran_number
   AND x.trraccd_grnt_code = trrappl_grnt_code
   AND y.trraccd_grnt_code = trrappl_grnt_code"
"BANINST1","TBVDETC","A/R Detail Code view.","SELECT TBBDETC_DCAT_CODE,
         TBBDETC_DETAIL_CODE,
         TBBDETC_DESC,
         TBBDETC_TYPE_IND,
         TBBDETC_PRIORITY,
         TBBDETC_LIKE_TERM_IND,
         TBBDETC_AMOUNT,
         TBBDETC_TERM_CODE,
         TBBDETC_REFUNDABLE_IND,
         TBBDETC_RECEIPT_IND,
         TBBDETC_REFUND_IND,
         TBBDETC_PAYT_CODE,
         TBBDETC_PREBILL_PRINT_IND,
         TBBDETC_GL_NOS_ENTERABLE,
         TBBDETC_TAXT_CODE,
         TBBDETC_DETAIL_CODE_IND,
         TBBDETC_DETC_ACTIVE_IND,
         TBBDETC_TIV_IND,
         TBBDETC_INST_CHG_IND,
         TBBDETC_LIKE_AIDY_IND,
         DECODE(TBBDETC_TIV_IND, 'Y', 'T', 'N',
         DECODE(TBBDETC_INST_CHG_IND, 'Y', 'I', 'N', ''),''),
         DECODE(NVL(TBBDETC_LIKE_TERM_IND, 'N'), 'Y', 'T', 'N',
         DECODE(TBBDETC_LIKE_AIDY_IND, 'Y', 'A', 'N', ''),''),
         TBRACCT_PERCENT,
         TBRACCT_A_COAS_CODE,
         TBRACCT_A_ACCI_CODE,
         TBRACCT_A_FUND_CODE,
         TBRACCT_A_ORGN_CODE,
         TBRACCT_A_ACCT_CODE,
         TBRACCT_A_PROG_CODE,
         TBRACCT_A_ACTV_CODE,
         TBRACCT_A_LOCN_CODE,
         TBRACCT_A_RUCL_CODE1,
         TBRACCT_A_RUCL_CODE2,
         TBRACCT_A_RUCL_CODE3,
         'A',
         TBRACCT_ACCOUNT_A,
         TBBEACT_TBDC_IND,
         TBBEACT_EFF_DATE,
         TBRACCT_TBDS_CODE,
         TBBEACT_NCHG_DATE
   FROM TBRACCT, TBBDETC, TBBEACT
  WHERE TBBDETC_DETAIL_CODE = TBRACCT_DETAIL_CODE
    AND TBBDETC_DETAIL_CODE = TBBEACT_DETAIL_CODE
    AND TBBEACT_EFF_DATE = TBRACCT_DETC_EFF_DATE
UNION ALL
  SELECT TBBDETC_DCAT_CODE,
         TBBDETC_DETAIL_CODE,
         TBBDETC_DESC,
         TBBDETC_TYPE_IND,
         TBBDETC_PRIORITY,
         TBBDETC_LIKE_TERM_IND,
         TBBDETC_AMOUNT,
         TBBDETC_TERM_CODE,
         TBBDETC_REFUNDABLE_IND,
         TBBDETC_RECEIPT_IND,
         TBBDETC_REFUND_IND,
         TBBDETC_PAYT_CODE,
         TBBDETC_PREBILL_PRINT_IND,
         TBBDETC_GL_NOS_ENTERABLE,
         TBBDETC_TAXT_CODE,
         TBBDETC_DETAIL_CODE_IND,
         TBBDETC_DETC_ACTIVE_IND,
         TBBDETC_TIV_IND,
         TBBDETC_INST_CHG_IND,
         TBBDETC_LIKE_AIDY_IND,
         DECODE(TBBDETC_TIV_IND, 'Y', 'T', 'N',
         DECODE(TBBDETC_INST_CHG_IND, 'Y', 'I', 'N', ''),''),
         DECODE(NVL(TBBDETC_LIKE_TERM_IND, 'N'), 'Y', 'T', 'N',
         DECODE(TBBDETC_LIKE_AIDY_IND, 'Y', 'A', 'N', ''),''),
         0.00,'','','','',
        '','','','','',
        '','','','',
        'N',sysdate,'',
        TO_DATE('31-DEC-2099', 'DD-MON-YYYY')
   FROM TBBDETC A
  where A.tbbdetc_detail_code not in
         ( select tbracct_detail_code from tbracct
             where tbracct_detail_code = A.tbbdetc_detail_code)
 UNION ALL
  SELECT TBBDETC_DCAT_CODE,
         TBBDETC_DETAIL_CODE,
         TBBDETC_DESC,
         TBBDETC_TYPE_IND,
         TBBDETC_PRIORITY,
         TBBDETC_LIKE_TERM_IND,
         TBBDETC_AMOUNT,
         TBBDETC_TERM_CODE,
         TBBDETC_REFUNDABLE_IND,
         TBBDETC_RECEIPT_IND,
         TBBDETC_REFUND_IND,
         TBBDETC_PAYT_CODE,
         TBBDETC_PREBILL_PRINT_IND,
         TBBDETC_GL_NOS_ENTERABLE,
         TBBDETC_TAXT_CODE,
         TBBDETC_DETAIL_CODE_IND,
         TBBDETC_DETC_ACTIVE_IND,
         TBBDETC_TIV_IND,
         TBBDETC_INST_CHG_IND,
         TBBDETC_LIKE_AIDY_IND,
         DECODE(TBBDETC_TIV_IND, 'Y', 'T', 'N',
         DECODE(TBBDETC_INST_CHG_IND, 'Y', 'I', 'N', ''),''),
         DECODE(NVL(TBBDETC_LIKE_TERM_IND, 'N'), 'Y', 'T', 'N',
         DECODE(TBBDETC_LIKE_AIDY_IND, 'Y', 'A', 'N', ''),''),
         TBRACCT_PERCENT,
         TBRACCT_B_COAS_CODE,
         TBRACCT_B_ACCI_CODE,
         TBRACCT_B_FUND_CODE,
         TBRACCT_B_ORGN_CODE,
         TBRACCT_B_ACCT_CODE,
         TBRACCT_B_PROG_CODE,
         TBRACCT_B_ACTV_CODE,
         TBRACCT_B_LOCN_CODE,
         TBRACCT_B_RUCL_CODE1,
         TBRACCT_B_RUCL_CODE2,
         TBRACCT_B_RUCL_CODE3,
         'B',
         TBRACCT_ACCOUNT_B,
         TBBEACT_TBDC_IND,
         TBBEACT_EFF_DATE,
         TBRACCT_TBDS_CODE,
	 TBBEACT_NCHG_DATE
   FROM TBRACCT, TBBDETC, TBBEACT
  WHERE TBBDETC_DETAIL_CODE = TBRACCT_DETAIL_CODE
    AND TBBDETC_DETAIL_CODE = TBBEACT_DETAIL_CODE
    AND TBBEACT_EFF_DATE = TBRACCT_DETC_EFF_DATE"
"BANINST1","TBVDETA","BANNER Reporting view to retrieve detail code information","select tbbdetc_detail_code, tbbdetc_desc, tbbdetc_type_ind, tbbdetc_dcat_code,
       tbbdetc_activity_date, tbbdetc_priority, tbbdetc_refund_ind,
       tbbdetc_like_term_ind, tbbdetc_amount, tbbdetc_term_code,
       trunc(tbbdetc_effective_date), tbbdetc_refundable_ind,
       tbbdetc_receipt_ind, tbbdetc_tiv_ind, tbbdetc_inst_chg_ind,
       tbbdetc_like_aidy_ind,
       tbbdetc_payt_code, tbbdetc_prebill_print_ind, tbbdetc_gl_nos_enterable,
       tbbdetc_taxt_code, tbracct_account_a, tbracct_account_b,
       tbracct_percent, tbracct_a_coas_code, tbracct_a_acci_code,
       tbracct_a_fund_code, tbracct_a_orgn_code, tbracct_a_acct_code,
       tbracct_a_prog_code, tbracct_a_actv_code, tbracct_a_locn_code,
       tbracct_a_rucl_code1, tbracct_a_rucl_code2, tbracct_a_rucl_code3,
       tbracct_b_coas_code, tbracct_b_acci_code,
       tbracct_b_fund_code, tbracct_b_orgn_code, tbracct_b_acct_code,
       tbracct_b_prog_code, tbracct_b_actv_code, tbracct_b_locn_code,
       tbracct_b_rucl_code1, tbracct_b_rucl_code2, tbracct_b_rucl_code3
  from tbracct, tbbdetc, tbbeact
 where tbbdetc_detail_code = tbracct_detail_code(+)
   and tbbdetc_detail_code = tbbeact_detail_code
   and tbbeact_eff_date = tbracct_detc_eff_date
union
 select tbbdetc_detail_code, tbbdetc_desc, tbbdetc_type_ind, tbbdetc_dcat_code,
       tbbdetc_activity_date, tbbdetc_priority, tbbdetc_refund_ind,
       tbbdetc_like_term_ind, tbbdetc_amount, tbbdetc_term_code,
       trunc(tbbdetc_effective_date), tbbdetc_refundable_ind,
       tbbdetc_receipt_ind, tbbdetc_tiv_ind, tbbdetc_inst_chg_ind,
       tbbdetc_like_aidy_ind,
       tbbdetc_payt_code, tbbdetc_prebill_print_ind, tbbdetc_gl_nos_enterable,
       tbbdetc_taxt_code, '', '', 0.00, '', '',
       '', '', '', '', '', '',
       '', '', '', '','',
       '', '', '', '', '', '', '', '', ''
  from tbbdetc A
  where A.tbbdetc_detail_code not in
                    (select tbracct_detail_code
                     from tbracct
                     where tbracct_detail_code = A.tbbdetc_detail_code)"
"BANINST1","TBVCTEX","Previously Applied Contracts and Exemptions","SELECT	TBRCLCT_PIDM,
	TBRCLCT_TERM_CODE,
	TBRACCD_DETAIL_CODE,
	NVL(SUM(TBRACCD_AMOUNT),0),
	TBRACCD_CROSSREF_PIDM,
	TBRACCD_CROSSREF_NUMBER,
	TBRACCD_CROSSREF_DETAIL_CODE,
	TBRACCD_SRCE_CODE,
	TBRACCD_CROSSREF_SRCE_CODE,
        TBRACCD_CROSSREF_DCAT_CODE
FROM	TBRACCD, TBRCLCT
WHERE   TBRACCD_SRCE_CODE		IN ('C','E')
AND	TBRACCD_TERM_CODE||''           = TBRCLCT_TERM_CODE
AND	TBRACCD_PIDM			= TBRCLCT_PIDM
AND	TBRCLCT_SESSIONID		= TO_CHAR(USERENV('SESSIONID'))
GROUP BY TBRCLCT_PIDM,
	TBRCLCT_TERM_CODE,
	TBRACCD_SRCE_CODE,
	TBRACCD_CROSSREF_PIDM,
	TBRACCD_CROSSREF_NUMBER,
	TBRACCD_CROSSREF_DETAIL_CODE,
        TBRACCD_CROSSREF_DCAT_CODE,
	TBRACCD_CROSSREF_SRCE_CODE,
	TBRACCD_DETAIL_CODE
 "
"BANINST1","TBVCSUM","Cashier Session Summary View","(SELECT TBVCDTL.TBVCDTL_USER, TBVCDTL.TBVCDTL_DETAIL_CODE,
       TBVCDTL.TBVCDTL_SRCE_CODE, SUM(TBVCDTL.TBVCDTL_AMOUNT),
       TBVCDTL_CURR_CODE, SUM(TBVCDTL_FOREIGN_AMOUNT)
FROM   TBVCDTL
GROUP BY TBVCDTL.TBVCDTL_USER,
	 TBVCDTL.TBVCDTL_DETAIL_CODE,
	 TBVCDTL_SRCE_CODE,
         TBVCDTL_CURR_CODE)
 "
"BANINST1","TBVCSTU","Contract Assignment Query View","(SELECT SPRIDEN_ID,
        f_format_name(spriden_pidm, 'LFM'),
        TBBCSTU_STU_PIDM,
        TBBCSTU_CONTRACT_PRIORITY,
        TBBCSTU_CONTRACT_PIDM,
        TBBCSTU_CONTRACT_NUMBER,
        TBBCSTU_TERM_CODE,
        TBBCSTU_ACTIVITY_DATE,
        TBBCSTU_AUTH_NUMBER,
        TBBCSTU_AUTH_IND,
        TBBCSTU_STUDENT_CONT_ROLL_IND,
        TBBCSTU_TERM_CODE_EXPIRATION,
        TBBCSTU_SPONSOR_REF_NUMBER,
        TBBCSTU_DEL_IND
FROM    SPRIDEN, TBBCSTU
WHERE   SPRIDEN_PIDM = TBBCSTU_STU_PIDM
AND     SPRIDEN_CHANGE_IND IS NULL
AND     SPRIDEN_ENTITY_IND = 'P')"
"BANINST1","TBVCSRV","AR Customer Service view for TSICSRV.","select tbraccd_pidm,
tbraccd_detail_code,
tbraccd_term_code,
tbraccd_aidy_code,
MAX(tbbdetc_desc),
sum(tbraccd_balance),
sum(tbraccd_amount),
SUM(decode(tbbdetc_type_ind, 'C', tbraccd_amount,NULL)) charge_amount,
SUM(decode(tbbdetc_type_ind, 'P', tbraccd_amount,NULL)) payment_amount,
MAX(tbbdetc_type_ind),
MAX(tbbdetc_dcat_code),
'Y',
trunc(tbraccd_effective_date),
DECODE(tbbctrl_study_path_ind,'Y',tbraccd_stsp_key_sequence,null) tbraccd_stsp_key_sequence,
tbraccd_period
from tbbdetc, tbraccd, tbbctrl
where tbraccd_detail_code = tbbdetc_detail_code
group by tbraccd_pidm, tbraccd_detail_code, tbraccd_term_code, tbraccd_aidy_code,
            trunc(tbraccd_effective_date),
            DECODE(tbbctrl_study_path_ind,'Y',tbraccd_stsp_key_sequence,null),
            tbraccd_period
union
select tbraccd_pidm,
tbraccd_detail_code,
tbraccd_term_code,
tbraccd_aidy_code,
MAX(tbbdetc_desc),
sum(tbraccd_balance),
sum(tbraccd_amount),
SUM(decode(tbbdetc_type_ind, 'C', tbraccd_amount,NULL)) charge_amount,
SUM(decode(tbbdetc_type_ind, 'P', tbraccd_amount,NULL)) payment_amount,
MAX(tbbdetc_type_ind),
MAX(tbbdetc_dcat_code),
'N',
to_date(null),
DECODE(tbbctrl_study_path_ind,'Y',tbraccd_stsp_key_sequence,null) tbraccd_stsp_key_sequence,
tbraccd_period
from tbbdetc, tbraccd, tbbctrl
where tbraccd_detail_code = tbbdetc_detail_code
group by tbraccd_pidm, tbraccd_detail_code, tbraccd_term_code, tbraccd_aidy_code,
				 DECODE(tbbctrl_study_path_ind,'Y',tbraccd_stsp_key_sequence,null),
				 tbraccd_period"
"BANINST1","TBVCSHR","All Cashiers Session View","(SELECT TBRACCD.TBRACCD_PIDM, TBRACCD.TBRACCD_TRAN_NUMBER,
	TBRACCD.TBRACCD_USER, TBRACCD.TBRACCD_ENTRY_DATE,
	TBRACCD.TBRACCD_DETAIL_CODE, TBRACCD.TBRACCD_AMOUNT,
	TBRACCD.TBRACCD_EFFECTIVE_DATE, TBRACCD.TBRACCD_RECEIPT_NUMBER,
	TBRACCD.TBRACCD_DESC, TBRACCD.TBRACCD_SRCE_CODE,
	TBRACCD.TBRACCD_ACCT_FEED_IND,
	TO_CHAR(TBRACCD.TBRACCD_ENTRY_DATE,'HH24:MI:SS'),
        TBRACCD.TBRACCD_SESSION_NUMBER,
        TBBCCLR.TBBCCLR_SESSION_IND,
	NVL(TBBDETC.TBBDETC_DCAT_CODE,'###'), TBBDETC.TBBDETC_TYPE_IND,
        TBRACCD_CURR_CODE, TBRACCD_FOREIGN_AMOUNT
FROM 	TBBDETC, TBRACCD, TBBCCLR
WHERE   (NVL(TBBDETC.TBBDETC_DCAT_CODE,'###') LIKE TBBCCLR.TBBCCLR_DCAT_CODE
        OR TBBCCLR.TBBCCLR_DCAT_CODE IS NULL)
AND  	TBBDETC.TBBDETC_DETAIL_CODE = TBRACCD.TBRACCD_DETAIL_CODE
AND     TBRACCD.TBRACCD_USER = TBBCCLR.TBBCCLR_USER
AND     TBRACCD.TBRACCD_SESSION_NUMBER = TBBCCLR.TBBCCLR_SESSION_NUMBER
AND     NVL(TBRACCD.TBRACCD_CSHR_END_DATE,TBBCCLR.TBBCCLR_CSHR_END_DATE)
        = TBBCCLR.TBBCCLR_CSHR_END_DATE
AND	TBBCCLR.TBBCCLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION ALL
SELECT 0, TRRACCD.TRRACCD_TRAN_NUMBER,
       TRRACCD.TRRACCD_USER_ID, TRRACCD.TRRACCD_ENTRY_DATE,
       TRRACCD.TRRACCD_DETAIL_CODE, TRRACCD.TRRACCD_AMOUNT,
       TRRACCD.TRRACCD_EFFECTIVE_DATE, 0,
       TRRACCD.TRRACCD_DESC, TRRACCD.TRRACCD_SRCE_CODE,
       TRRACCD.TRRACCD_ACCT_FEED_IND,
       TO_CHAR(TRRACCD.TRRACCD_ENTRY_DATE,'HH24:MI:SS'),
       TRRACCD.TRRACCD_SESSION_NUMBER, TBBCCLR.TBBCCLR_SESSION_IND,
       NVL(TBBDETC.TBBDETC_DCAT_CODE,'###'), TBBDETC.TBBDETC_TYPE_IND,
       '',0
FROM TBBDETC, TRRACCD, TBBCCLR
     WHERE   (NVL(TBBDETC.TBBDETC_DCAT_CODE,'###')
     LIKE TBBCCLR.TBBCCLR_DCAT_CODE OR TBBCCLR.TBBCCLR_DCAT_CODE IS NULL)
     AND TBBDETC.TBBDETC_DETAIL_CODE = TRRACCD.TRRACCD_DETAIL_CODE
     AND TRRACCD.TRRACCD_USER_ID = TBBCCLR.TBBCCLR_USER
     AND TRRACCD.TRRACCD_SESSION_NUMBER = TBBCCLR.TBBCCLR_SESSION_NUMBER
     AND NVL(TRRACCD.TRRACCD_CSHR_END_DATE,TBBCCLR.TBBCCLR_CSHR_END_DATE)
            = TBBCCLR.TBBCCLR_CSHR_END_DATE
     AND TBBCCLR.TBBCCLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION ALL
SELECT  TBRDEPO.TBRDEPO_PIDM, TBRDEPO.TBRDEPO_TRAN_NUMBER,
	TBRDEPO.TBRDEPO_USER, TBRDEPO.TBRDEPO_ENTRY_DATE,
	TBRDEPO.TBRDEPO_DETAIL_CODE_PAYMENT, TBRDEPO.TBRDEPO_AMOUNT,
	TBRDEPO.TBRDEPO_EFFECTIVE_DATE, TBRDEPO.TBRDEPO_RECEIPT_NUMBER,
	TBRDEPO.TBRDEPO_DESC, 'D',
	TBRDEPO.TBRDEPO_ACCT_FEED_IND,
	TO_CHAR(TBRDEPO.TBRDEPO_ENTRY_DATE,'HH24:MI:SS'),
        TBRDEPO.TBRDEPO_SESSION_NUMBER,
        TBBCCLR.TBBCCLR_SESSION_IND,
	NVL(TBBDETC.TBBDETC_DCAT_CODE,'###'), TBBDETC.TBBDETC_TYPE_IND,
        TBRDEPO_CURR_CODE, TBRDEPO_FOREIGN_AMOUNT
FROM 	TBBDETC, TBRDEPO, TBBCCLR
WHERE   (NVL(TBBDETC.TBBDETC_DCAT_CODE,'###') LIKE TBBCCLR.TBBCCLR_DCAT_CODE
        OR TBBCCLR.TBBCCLR_DCAT_CODE IS NULL)
AND  	TBBDETC.TBBDETC_DETAIL_CODE = TBRDEPO.TBRDEPO_DETAIL_CODE_PAYMENT
AND 	TBRDEPO.TBRDEPO_USER = TBBCCLR.TBBCCLR_USER
AND     TBRDEPO.TBRDEPO_SESSION_NUMBER = TBBCCLR.TBBCCLR_SESSION_NUMBER
AND     NVL(TBRDEPO.TBRDEPO_CSHR_END_DATE,TBBCCLR.TBBCCLR_CSHR_END_DATE)
        = TBBCCLR.TBBCCLR_CSHR_END_DATE
AND	TBBCCLR.TBBCCLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION ALL
SELECT  0, TBRMISD.TBRMISD_TRAN_NUMBER,
	TBRMISD.TBRMISD_USER, TBRMISD.TBRMISD_TRANS_DATE,
	TBRMISD.TBRMISD_CHARGE_DETAIL_CODE, TBRMISD.TBRMISD_AMOUNT,
	TBRMISD.TBRMISD_ACTIVITY_DATE, TBRMISD.TBRMISD_RECEIPT_NUMBER,
	TBRMISD.TBRMISD_DESC, 'S',
	TBRMISD.TBRMISD_ACCT_FEED_IND,
	TO_CHAR(TBRMISD.TBRMISD_ACTIVITY_DATE,'HH24:MI:SS'),
        TBRMISD.TBRMISD_SESSION_NUMBER,
        TBBCCLR.TBBCCLR_SESSION_IND,
	NVL(TBBDETC.TBBDETC_DCAT_CODE,'###'), TBBDETC.TBBDETC_TYPE_IND,
        TBRMISD_CURR_CODE, TBRMISD_FOREIGN_AMOUNT
FROM 	TBRMISD, TBBDETC, TBBCCLR
WHERE   (NVL(TBBDETC.TBBDETC_DCAT_CODE,'###') LIKE TBBCCLR.TBBCCLR_DCAT_CODE
        OR TBBCCLR.TBBCCLR_DCAT_CODE IS NULL)
AND     TBBDETC.TBBDETC_TYPE_IND = 'C'
AND	TBBDETC.TBBDETC_DETAIL_CODE = TBRMISD.TBRMISD_CHARGE_DETAIL_CODE
AND 	TBRMISD.TBRMISD_USER = TBBCCLR.TBBCCLR_USER
AND     TBRMISD.TBRMISD_SESSION_NUMBER = TBBCCLR.TBBCCLR_SESSION_NUMBER
AND     NVL(TBRMISD.TBRMISD_CSHR_END_DATE,TBBCCLR.TBBCCLR_CSHR_END_DATE)
        = TBBCCLR.TBBCCLR_CSHR_END_DATE
AND	TBBCCLR.TBBCCLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION ALL
SELECT  0, TBRMISD.TBRMISD_TRAN_NUMBER,
	TBRMISD.TBRMISD_USER, TBRMISD.TBRMISD_TRANS_DATE,
	TBRMISD.TBRMISD_CHARGE_DETAIL_CODE, (TBRMISD.TBRMISD_AMOUNT * -1),
	TBRMISD.TBRMISD_ACTIVITY_DATE, TBRMISD.TBRMISD_RECEIPT_NUMBER,
	TBRMISD.TBRMISD_DESC, 'S',
	TBRMISD.TBRMISD_ACCT_FEED_IND,
	TO_CHAR(TBRMISD.TBRMISD_ACTIVITY_DATE,'HH24:MI:SS'),
        TBRMISD.TBRMISD_SESSION_NUMBER,
        TBBCCLR.TBBCCLR_SESSION_IND,
	NVL(TBBDETC.TBBDETC_DCAT_CODE,'###'), TBBDETC.TBBDETC_TYPE_IND,
        TBRMISD_CURR_CODE, TBRMISD_FOREIGN_AMOUNT
FROM 	TBRMISD, TBBDETC, TBBCCLR
WHERE   (NVL(TBBDETC.TBBDETC_DCAT_CODE,'###') LIKE TBBCCLR.TBBCCLR_DCAT_CODE
        OR TBBCCLR.TBBCCLR_DCAT_CODE IS NULL)
AND     TBBDETC.TBBDETC_TYPE_IND = 'P'
AND	TBBDETC.TBBDETC_DETAIL_CODE = TBRMISD.TBRMISD_CHARGE_DETAIL_CODE
AND 	TBRMISD.TBRMISD_USER = TBBCCLR.TBBCCLR_USER
AND     TBRMISD.TBRMISD_SESSION_NUMBER = TBBCCLR.TBBCCLR_SESSION_NUMBER
AND     NVL(TBRMISD.TBRMISD_CSHR_END_DATE,TBBCCLR.TBBCCLR_CSHR_END_DATE)
        = TBBCCLR.TBBCCLR_CSHR_END_DATE
AND	TBBCCLR.TBBCCLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION ALL
SELECT  0, TBRMISD.TBRMISD_TRAN_NUMBER,
	TBRMISD.TBRMISD_USER, TBRMISD.TBRMISD_TRANS_DATE,
	TBRMISD.TBRMISD_PAY_DETAIL_CODE, TBRMISD.TBRMISD_AMOUNT,
	TBRMISD.TBRMISD_ACTIVITY_DATE, TBRMISD.TBRMISD_RECEIPT_NUMBER,
	TBRMISD.TBRMISD_DESC, 'S',
	TBRMISD.TBRMISD_ACCT_FEED_IND,
	TO_CHAR(TBRMISD.TBRMISD_ACTIVITY_DATE,'HH24:MI:SS'),
        TBRMISD.TBRMISD_SESSION_NUMBER,
        TBBCCLR.TBBCCLR_SESSION_IND,
	NVL(TBBDETC.TBBDETC_DCAT_CODE,'###'), TBBDETC.TBBDETC_TYPE_IND,
        TBRMISD_CURR_CODE, TBRMISD_FOREIGN_AMOUNT
FROM 	TBRMISD, TBBDETC, TBBCCLR
WHERE   (NVL(TBBDETC.TBBDETC_DCAT_CODE,'###') LIKE TBBCCLR.TBBCCLR_DCAT_CODE
        OR TBBCCLR.TBBCCLR_DCAT_CODE IS NULL)
AND     TBBDETC.TBBDETC_TYPE_IND = 'P'
AND	TBBDETC.TBBDETC_DETAIL_CODE = TBRMISD.TBRMISD_PAY_DETAIL_CODE
AND 	TBRMISD.TBRMISD_USER = TBBCCLR.TBBCCLR_USER
AND     TBRMISD.TBRMISD_SESSION_NUMBER = TBBCCLR.TBBCCLR_SESSION_NUMBER
AND     NVL(TBRMISD.TBRMISD_CSHR_END_DATE,TBBCCLR.TBBCCLR_CSHR_END_DATE)
        = TBBCCLR.TBBCCLR_CSHR_END_DATE
AND	TBBCCLR.TBBCCLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION ALL
SELECT  0, TBRMISD.TBRMISD_TRAN_NUMBER,
	TBRMISD.TBRMISD_USER, TBRMISD.TBRMISD_TRANS_DATE,
	TBRMISD.TBRMISD_PAY_DETAIL_CODE, (TBRMISD.TBRMISD_AMOUNT * -1),
	TBRMISD.TBRMISD_ACTIVITY_DATE, TBRMISD.TBRMISD_RECEIPT_NUMBER,
	TBRMISD.TBRMISD_DESC, 'S',
	TBRMISD.TBRMISD_ACCT_FEED_IND,
	TO_CHAR(TBRMISD.TBRMISD_ACTIVITY_DATE,'HH24:MI:SS'),
        TBRMISD.TBRMISD_SESSION_NUMBER,
        TBBCCLR.TBBCCLR_SESSION_IND,
	NVL(TBBDETC.TBBDETC_DCAT_CODE,'###'), TBBDETC.TBBDETC_TYPE_IND,
        TBRMISD_CURR_CODE, TBRMISD_FOREIGN_AMOUNT
FROM 	TBRMISD, TBBDETC, TBBCCLR
WHERE   (NVL(TBBDETC.TBBDETC_DCAT_CODE,'###') LIKE TBBCCLR.TBBCCLR_DCAT_CODE
        OR TBBCCLR.TBBCCLR_DCAT_CODE IS NULL)
AND     TBBDETC.TBBDETC_TYPE_IND = 'C'
AND	TBBDETC.TBBDETC_DETAIL_CODE = TBRMISD.TBRMISD_PAY_DETAIL_CODE
AND 	TBRMISD.TBRMISD_USER = TBBCCLR.TBBCCLR_USER
AND     TBRMISD.TBRMISD_SESSION_NUMBER = TBBCCLR.TBBCCLR_SESSION_NUMBER
AND     NVL(TBRMISD.TBRMISD_CSHR_END_DATE,TBBCCLR.TBBCCLR_CSHR_END_DATE)
        = TBBCCLR.TBBCCLR_CSHR_END_DATE
AND	TBBCCLR.TBBCCLR_SESSIONID = TO_CHAR(USERENV('SESSIONID')))
 "
"BANINST1","TBVCRD6","Detail Category level exemption view","SELECT USERENV('SESSIONID'), TBRCLCT_PIDM, TBRCLCT_TERM_CODE,
               TBRCLCT_EXPT_PRTY, TBBESTU_EXEMPTION_PRIORITY,
               TBRECAT_DCAT_PRIORITY,
               NVL(TBBESTU_MAX_STUDENT_AMOUNT,9999999999.99),
               TBBESTU_EXEMPTION_CODE,
               TBBEXPT_DETAIL_CODE, TBRECAT_DCAT_CODE, '@@@@', TBBEXPT_DESC,
               LEAST(ROUND(
               (NVL(SUM(TBRACCD_AMOUNT),0) - NVL(TBRECAT_MIN_AMOUNT,0))
               * (NVL(TBRECAT_PERCENT,0) /100),2),
               NVL(TBRECAT_MAX_AMOUNT,9999999999)),
               NVL(SUM(TBRACCD_AMOUNT),0), 0, 'E', 'C', 'N', SYSDATE,
               TBRACCD_SRCE_CODE, 'Y', USER,
               TBRECAT_MIN_AMOUNT,TBRECAT_MAX_AMOUNT,TBRECAT_PERCENT
          FROM TBRACCD, TBBEXPT, TBRECAT,
               TBBESTU, TBRCLCT
         WHERE f_get_dcat_code(TBRACCD_DETAIL_CODE)||'' = TBRECAT_DCAT_CODE
           AND (TBRACCD_SRCE_CODE               IN
               (SELECT TBRECSI_SOURCE_CODE
                  FROM TBRECSI
                 WHERE TBRECAT_I_E_SOURCE_IND = 'I'
                   AND TBRECSI_TERM_CODE      = TBRACCD_TERM_CODE
                   AND TBRECSI_DCAT_CODE      = f_get_dcat_code(TBRACCD_DETAIL_CODE)
                   AND TBRECSI_EXEMPTION_CODE = TBBEXPT_EXEMPTION_CODE)
            OR TBRACCD_SRCE_CODE               IN
              (SELECT TTVSRCE_CODE
                 FROM TTVSRCE
                WHERE (TBRECAT_I_E_SOURCE_IND  = 'E'
                   OR TBRECAT_I_E_SOURCE_IND = 'A')
                  AND TTVSRCE_CODE NOT IN
                      (SELECT TBRECSI_SOURCE_CODE
                         FROM TBRECSI
                        WHERE TBRECSI_TERM_CODE      = TBRACCD_TERM_CODE
                          AND TBRECSI_DCAT_CODE      = f_get_dcat_code(TBRACCD_DETAIL_CODE)
                          AND TBRECSI_EXEMPTION_CODE = TBBEXPT_EXEMPTION_CODE)))
           AND TAFTPCR.F_TP_EXEMPTION_COURSE_REQ(TBBESTU_EXEMPTION_CODE,
                                                 TBBESTU_TERM_CODE,
                                                 TBBESTU_PIDM) = 'Y'
           AND TBRACCD_TERM_CODE||''   = TBRCLCT_TERM_CODE
           AND TBRACCD_PIDM            = TBRCLCT_PIDM
           AND TBBEXPT_EXEMPTION_CODE  = TBBESTU_EXEMPTION_CODE
           AND TBBEXPT_TERM_CODE       = TBRCLCT_TERM_CODE
           AND TBRECAT_EXEMPTION_CODE  = TBBESTU_EXEMPTION_CODE
           AND TBRECAT_TERM_CODE       = TBRCLCT_TERM_CODE
           AND TBBESTU_DEL_IND IS NULL
           AND TBBESTU_TERM_CODE       = TBRCLCT_TERM_CODE
           AND TBBESTU_PIDM = TBRCLCT_PIDM
           AND TBRCLCT_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
      GROUP BY TBRECAT_EXEMPTION_CODE, TBRECAT_DCAT_CODE,
               TBBESTU_EXEMPTION_PRIORITY, TBBESTU_EXEMPTION_CODE,
               TBRECAT_DCAT_PRIORITY,
               NVL(TBBESTU_MAX_STUDENT_AMOUNT,9999999999.99),
               TBBEXPT_DETAIL_CODE, TBBEXPT_DESC, TBRECAT_PERCENT,
               TBRECAT_MIN_AMOUNT, TBRECAT_MAX_AMOUNT, TBRACCD_SRCE_CODE,
               TBRCLCT_PIDM, TBRCLCT_TERM_CODE,
               TBRCLCT_EXPT_PRTY, USERENV('SESSIONID')"
"BANINST1","TBVCRD5","Detail Category level contracts view","SELECT USERENV('SESSIONID'), TBRCLCT_PIDM, TBRCLCT_TERM_CODE,
              TBRCLCT_CONT_PRTY, TBBCSTU_CONTRACT_PRIORITY,
              LEAST(TBRCCAT_DCAT_PRIORITY,'999'),
              NVL(TBBCSTU_MAX_STUDENT_AMOUNT,9999999999.99),
              TBBCSTU_CONTRACT_PIDM, TBBCSTU_CONTRACT_NUMBER,
              TBBCONT_DETAIL_PAY_CODE, TBBDETC_DCAT_CODE,
              TBBCONT_DETAIL_CHG_CODE, TBBCONT_DESC,
              LEAST(ROUND(
              (NVL(SUM(TBRACCD_AMOUNT),0) - NVL(TBRCCAT_MIN_AMOUNT,0))
              * (NVL(TBRCCAT_PERCENT,0) /100),2),
              NVL(TBRCCAT_MAX_AMOUNT,9999999999)),
              NVL(SUM(TBRACCD_AMOUNT),0), 0, 'C', 'C', 'N', SYSDATE,
              TBRACCD_SRCE_CODE, TBBCSTU_AUTH_IND, USER,
              TBRCCAT_MIN_AMOUNT,TBRCCAT_MAX_AMOUNT,TBRCCAT_PERCENT
         FROM TBRACCD, TBBCONT, TBRCCAT,
              TBBCSTU, TBRCLCT, TBBDETC
        WHERE f_get_dcat_code(TBRACCD_DETAIL_CODE)||'' = TBRCCAT_DCAT_CODE
          AND TBRACCD_DETAIL_CODE = TBBDETC_DETAIL_CODE
          AND TBBDETC_TYPE_IND = 'C'
          AND (TBRACCD_SRCE_CODE               IN
              (SELECT TBRCCSI_SOURCE_CODE
                 FROM TBRCCSI
                WHERE TBRCCAT_I_E_SOURCE_IND  = 'I'
                  AND TBRCCSI_PIDM            = TBBCONT_PIDM
                  AND TBRCCSI_TERM_CODE       = TBRACCD_TERM_CODE
                  AND TBRCCSI_DCAT_CODE       = f_get_dcat_code(TBRACCD_DETAIL_CODE)
                  AND TBRCCSI_CONTRACT_NUMBER = TBBCONT_CONTRACT_NUMBER)
           OR TBRACCD_SRCE_CODE               IN
              (SELECT TTVSRCE_CODE
                 FROM TTVSRCE
                WHERE (TBRCCAT_I_E_SOURCE_IND  = 'E'
                   OR TBRCCAT_I_E_SOURCE_IND = 'A')
                  AND TTVSRCE_CODE NOT IN
                      (SELECT TBRCCSI_SOURCE_CODE
                         FROM TBRCCSI
                        WHERE TBRCCSI_PIDM            = TBBCONT_PIDM
                          AND TBRCCSI_TERM_CODE       = TBRACCD_TERM_CODE
                          AND TBRCCSI_DCAT_CODE       = f_get_dcat_code(TBRACCD_DETAIL_CODE)
                          AND TBRCCSI_CONTRACT_NUMBER = TBBCONT_CONTRACT_NUMBER)))
          AND TAFTPCR.F_TP_CONTRACT_COURSE_REQ(TBBCSTU_CONTRACT_PIDM,
                                               TBBCSTU_TERM_CODE,
                                               TBBCSTU_STU_PIDM,
                                               TBBCSTU_CONTRACT_NUMBER) = 'Y'
          AND TBRACCD_TERM_CODE||''           = TBRCLCT_TERM_CODE
          AND TBRACCD_PIDM                    = TBRCLCT_PIDM
          AND TBBCONT_CONTRACT_NUMBER         = TBRCCAT_CONTRACT_NUMBER
          AND TBBCONT_TERM_CODE               = TBRCCAT_TERM_CODE
          AND TBBCONT_PIDM                    = TBBCSTU_CONTRACT_PIDM
          AND TBRCCAT_CONTRACT_NUMBER         = TBBCSTU_CONTRACT_NUMBER
          AND TBRCCAT_TERM_CODE               = TBBCSTU_TERM_CODE
          AND TBRCCAT_PIDM                    = TBBCSTU_CONTRACT_PIDM
          AND TBBCSTU_DEL_IND IS NULL
          AND (TBBCSTU_AUTH_IND = 'Y' OR
               TBBCSTU_AUTH_IND IS NULL)
          AND TBBCSTU_TERM_CODE               = TBRCLCT_TERM_CODE
          AND TBBCSTU_STU_PIDM = TBRCLCT_PIDM
          AND TBRCLCT_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
     GROUP BY TBRCCAT_CONTRACT_NUMBER, TBRCCAT_DCAT_CODE,
              TBBDETC_DCAT_CODE, TBBCSTU_CONTRACT_PRIORITY,
              LEAST(TBRCCAT_DCAT_PRIORITY,'999'),
              NVL(TBBCSTU_MAX_STUDENT_AMOUNT,9999999999.99),
              TBBCSTU_CONTRACT_PIDM, TBBCSTU_CONTRACT_NUMBER,
              TBBCONT_DETAIL_PAY_CODE, TBBCONT_DETAIL_CHG_CODE,
              TBBCONT_DESC, TBRCCAT_PERCENT, TBRCCAT_MIN_AMOUNT,
              TBRCCAT_MAX_AMOUNT, TBRACCD_SRCE_CODE, TBRCLCT_PIDM,
              TBRCLCT_TERM_CODE, TBRCLCT_CONT_PRTY, TBBCSTU_AUTH_IND,
              USERENV('SESSIONID')"
"BANINST1","TBVCRD4","Account level exemption view","SELECT  USERENV('SESSIONID'), TBRCLCT_PIDM, TBRCLCT_TERM_CODE,
	        TBRCLCT_EXPT_PRTY, TBBESTU_EXEMPTION_PRIORITY,
                TBREACC_ACC_PRIORITY,
                NVL(TBBESTU_MAX_STUDENT_AMOUNT,9999999999.99),
                TBBESTU_EXEMPTION_CODE,
	        TBBEXPT_DETAIL_CODE, '@@@@', TBBEXPT_DESC,
                LEAST(ROUND(
                (NVL(SUM(TBRACCD_AMOUNT),0) - NVL(TBREACC_MIN_AMOUNT,0))
                * (NVL(TBREACC_PERCENT,0) /100),2),
                NVL(TBREACC_MAX_AMOUNT,9999999999)),
                NVL(SUM(TBRACCD_AMOUNT),0),
		0, 'E', 'A', 'N', SYSDATE, TBREACC_SRCE_CODE, 'Y', USER,
                TBREACC_MIN_AMOUNT,TBREACC_MAX_AMOUNT,TBREACC_PERCENT
	FROM    TBRACCD, TBBDETC, TBBEXPT, TBREACC, TBBESTU, TBRCLCT
        WHERE   TBRACCD_PIDM            = TBRCLCT_PIDM
	AND     TBRACCD_TERM_CODE||''   = TBRCLCT_TERM_CODE
	AND     TBRACCD_SRCE_CODE       = TBREACC_SRCE_CODE
        AND     TBRACCD_DETAIL_CODE     = TBBDETC_DETAIL_CODE
        AND     TBBDETC_TYPE_IND        = 'C'
        AND     TAFTPCR.F_TP_EXEMPTION_COURSE_REQ(TBBESTU_EXEMPTION_CODE,
                                                  TBBESTU_TERM_CODE,
                                                  TBBESTU_PIDM) = 'Y'
	AND     TBBEXPT_EXEMPTION_CODE  = TBREACC_EXEMPTION_CODE
	AND     TBBEXPT_TERM_CODE       = TBRCLCT_TERM_CODE
	AND     TBREACC_EXEMPTION_CODE  = TBBESTU_EXEMPTION_CODE
	AND     TBREACC_TERM_CODE       = TBRCLCT_TERM_CODE
	AND     TBBESTU_DEL_IND IS NULL
	AND     TBBESTU_TERM_CODE       = TBRCLCT_TERM_CODE
	AND     TBBESTU_PIDM            = TBRCLCT_PIDM
        AND     TBRCLCT_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
	GROUP BY TBREACC_EXEMPTION_CODE, TBBESTU_EXEMPTION_PRIORITY,
                 TBREACC_ACC_PRIORITY,
                 NVL(TBBESTU_MAX_STUDENT_AMOUNT,9999999999.99),
                 TBBESTU_EXEMPTION_CODE, TBBEXPT_DETAIL_CODE,
                 TBBEXPT_DESC, TBREACC_PERCENT,
	         TBREACC_MIN_AMOUNT, TBREACC_MAX_AMOUNT, TBREACC_SRCE_CODE,
                 TBRCLCT_PIDM, TBRCLCT_TERM_CODE, TBRCLCT_EXPT_PRTY,
	         USERENV('SESSIONID')"
"BANINST1","TBVCRD3","Detail level exemption view","SELECT USERENV('SESSIONID'), TBRCLCT_PIDM, TBRCLCT_TERM_CODE,
               TBRCLCT_EXPT_PRTY, TBBESTU_EXEMPTION_PRIORITY,
               TBREDET_DETAIL_PRIORITY,
               NVL(TBBESTU_MAX_STUDENT_AMOUNT,9999999999.99),
               TBBESTU_EXEMPTION_CODE,
               TBBEXPT_DETAIL_CODE, TBREDET_DETAIL_CODE, '@@@@', TBBEXPT_DESC,
               LEAST(ROUND(
               (NVL(SUM(TBRACCD_AMOUNT),0) - NVL(TBREDET_MIN_AMOUNT,0))
               * (NVL(TBREDET_PERCENT,0) /100),2),
               NVL(TBREDET_MAX_AMOUNT,9999999999)),
               NVL(SUM(TBRACCD_AMOUNT),0), 0, 'E', 'D', 'N', SYSDATE,
               TBRACCD_SRCE_CODE, 'Y', USER,
               TBREDET_MIN_AMOUNT,TBREDET_MAX_AMOUNT,TBREDET_PERCENT
          FROM TBRACCD, TBBEXPT, TBREDET,
               TBBESTU, TBRCLCT
         WHERE TBRACCD_DETAIL_CODE||'' = TBREDET_DETAIL_CODE
           AND (TBRACCD_SRCE_CODE               IN
               (SELECT TBREDSI_SOURCE_CODE
                  FROM TBREDSI
                 WHERE TBREDET_I_E_SOURCE_IND = 'I'
                   AND TBREDSI_TERM_CODE      = TBRACCD_TERM_CODE
                   AND TBREDSI_DETAIL_CODE    = TBRACCD_DETAIL_CODE
                   AND TBREDSI_EXEMPTION_CODE = TBBEXPT_EXEMPTION_CODE)
            OR TBRACCD_SRCE_CODE               IN
               (SELECT TTVSRCE_CODE
                 FROM TTVSRCE
                WHERE (TBREDET_I_E_SOURCE_IND = 'E'
                   OR TBREDET_I_E_SOURCE_IND = 'A')
                  AND TTVSRCE_CODE NOT IN
                      (SELECT TBREDSI_SOURCE_CODE
                         FROM TBREDSI
                        WHERE TBREDSI_TERM_CODE      = TBRACCD_TERM_CODE
                          AND TBREDSI_DETAIL_CODE    = TBRACCD_DETAIL_CODE
                          AND TBREDSI_EXEMPTION_CODE = TBBEXPT_EXEMPTION_CODE)))
           AND TAFTPCR.F_TP_EXEMPTION_COURSE_REQ(TBBESTU_EXEMPTION_CODE,
                                                 TBBESTU_TERM_CODE,
                                                 TBBESTU_PIDM) = 'Y'
           AND TBRACCD_TERM_CODE||''   = TBRCLCT_TERM_CODE
           AND TBRACCD_PIDM            = TBRCLCT_PIDM
           AND TBBEXPT_EXEMPTION_CODE  = TBREDET_EXEMPTION_CODE
           AND TBBEXPT_TERM_CODE       = TBRCLCT_TERM_CODE
           AND TBREDET_EXEMPTION_CODE  = TBBESTU_EXEMPTION_CODE
           AND TBREDET_TERM_CODE       = TBRCLCT_TERM_CODE
           AND TBBESTU_DEL_IND IS NULL
           AND TBBESTU_TERM_CODE       = TBRCLCT_TERM_CODE
           AND TBBESTU_PIDM = TBRCLCT_PIDM
           AND TBRCLCT_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
      GROUP BY TBREDET_EXEMPTION_CODE, TBREDET_DETAIL_CODE,
               TBRACCD_DETAIL_CODE, TBBESTU_EXEMPTION_PRIORITY,
               TBREDET_DETAIL_PRIORITY,
               NVL(TBBESTU_MAX_STUDENT_AMOUNT,9999999999.99),
               TBBESTU_EXEMPTION_CODE, TBBEXPT_DETAIL_CODE,
               TBBEXPT_DESC, TBREDET_PERCENT,
               TBREDET_MIN_AMOUNT, TBREDET_MAX_AMOUNT, TBRACCD_SRCE_CODE,
               TBRCLCT_PIDM, TBRCLCT_TERM_CODE, TBRCLCT_EXPT_PRTY,
               USERENV('SESSIONID')"
"BANINST1","TBVCRD2","Account level contracts view","SELECT  USERENV('SESSIONID'), TBRCLCT_PIDM, TBRCLCT_TERM_CODE,
                TBRCLCT_CONT_PRTY, TBBCSTU_CONTRACT_PRIORITY,
                TBRCACC_ACC_PRIORITY,
                NVL(TBBCSTU_MAX_STUDENT_AMOUNT,9999999999.99),
	        TBBCSTU_CONTRACT_PIDM, TBBCSTU_CONTRACT_NUMBER,
	        TBBCONT_DETAIL_PAY_CODE, TBBCONT_DETAIL_CHG_CODE,
		TBBCONT_DESC,
                LEAST(ROUND(
                (NVL(SUM(TBRACCD_AMOUNT),0) - NVL(TBRCACC_MIN_AMOUNT,0))
                * (NVL(TBRCACC_PERCENT,0) /100),2),
                NVL(TBRCACC_MAX_AMOUNT,9999999999)),
                NVL(SUM(TBRACCD_AMOUNT),0),
                0, 'C', 'A', 'N', SYSDATE, TBRCACC_SRCE_CODE,
                TBBCSTU_AUTH_IND, USER,
                TBRCACC_MIN_AMOUNT,TBRCACC_MAX_AMOUNT,TBRCACC_PERCENT
	FROM    TBRACCD, TBBDETC, TBBCONT,
                TBRCACC, TBBCSTU, TBRCLCT
        WHERE   TBRACCD_PIDM = TBRCLCT_PIDM
	AND     TBRACCD_TERM_CODE||'' = TBRCLCT_TERM_CODE
	AND     TBRACCD_SRCE_CODE = TBRCACC_SRCE_CODE
        AND     TBRACCD_DETAIL_CODE = TBBDETC_DETAIL_CODE
        AND     TBBDETC_TYPE_IND = 'C'
        AND     TAFTPCR.F_TP_CONTRACT_COURSE_REQ(TBBCSTU_CONTRACT_PIDM,
                                                 TBBCSTU_TERM_CODE,
                                                 TBBCSTU_STU_PIDM,
                                                 TBBCSTU_CONTRACT_NUMBER) = 'Y'
	AND     TBBCONT_CONTRACT_NUMBER         = TBRCACC_CONTRACT_NUMBER
	AND     TBBCONT_TERM_CODE               = TBRCACC_TERM_CODE
	AND     TBBCONT_PIDM                    = TBBCSTU_CONTRACT_PIDM
	AND     TBRCACC_CONTRACT_NUMBER         = TBBCSTU_CONTRACT_NUMBER
	AND     TBRCACC_TERM_CODE               = TBBCSTU_TERM_CODE
	AND     TBRCACC_PIDM                    = TBBCSTU_CONTRACT_PIDM
	AND     TBBCSTU_DEL_IND IS NULL
        AND     (TBBCSTU_AUTH_IND = 'Y' OR
                 TBBCSTU_AUTH_IND IS NULL)
	AND     TBBCSTU_TERM_CODE               = TBRCLCT_TERM_CODE
	AND     TBBCSTU_STU_PIDM                = TBRCLCT_PIDM
        AND     TBRCLCT_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
	GROUP BY TBRCACC_CONTRACT_NUMBER, TBBCSTU_CONTRACT_PRIORITY,
                 TBRCACC_ACC_PRIORITY,
                 NVL(TBBCSTU_MAX_STUDENT_AMOUNT,9999999999.99),
	         TBBCONT_DETAIL_PAY_CODE, TBBCSTU_CONTRACT_PIDM,
	         TBBCSTU_CONTRACT_NUMBER, TBBCONT_DESC,
	         TBBCONT_DETAIL_CHG_CODE, TBRCACC_PERCENT,
	         TBRCACC_MIN_AMOUNT, TBRCACC_MAX_AMOUNT,
		 TBRCACC_SRCE_CODE, TBRCLCT_PIDM, TBRCLCT_TERM_CODE,
                 TBRCLCT_CONT_PRTY, TBBCSTU_AUTH_IND,
	         USERENV('SESSIONID')"
"BANINST1","TBVCRD1","Detail level contracts view","SELECT USERENV('SESSIONID'), TBRCLCT_PIDM, TBRCLCT_TERM_CODE,
             TBRCLCT_CONT_PRTY, TBBCSTU_CONTRACT_PRIORITY,
             TBRCDET_DETAIL_PRIORITY,
             NVL(TBBCSTU_MAX_STUDENT_AMOUNT,9999999999.99),
             TBBCSTU_CONTRACT_PIDM, TBBCSTU_CONTRACT_NUMBER,
             TBBCONT_DETAIL_PAY_CODE, TBRCDET_DETAIL_CODE,
             TBBCONT_DETAIL_CHG_CODE, TBBCONT_DESC,
             LEAST(ROUND(
             (NVL(SUM(TBRACCD_AMOUNT),0) - NVL(TBRCDET_MIN_AMOUNT,0))
             * (NVL(TBRCDET_PERCENT,0) /100),2),
             NVL(TBRCDET_MAX_AMOUNT,9999999999)),
             NVL(SUM(TBRACCD_AMOUNT),0), 0, 'C', 'D', 'N', SYSDATE,
             TBRACCD_SRCE_CODE, TBBCSTU_AUTH_IND, USER,
             TBRCDET_MIN_AMOUNT,TBRCDET_MAX_AMOUNT,TBRCDET_PERCENT
	 FROM TBRACCD, TBBCONT, TBRCDET,
              TBBCSTU, TBRCLCT
	WHERE TBRACCD_DETAIL_CODE||''         = TBRCDET_DETAIL_CODE
          AND (TBRACCD_SRCE_CODE               IN
              (SELECT TBRCDSI_SOURCE_CODE
                 FROM TBRCDSI
                WHERE TBRCDET_I_E_SOURCE_IND = 'I'
                  AND TBRCDSI_PIDM           = TBBCONT_PIDM
                  AND TBRCDSI_TERM_CODE      = TBRACCD_TERM_CODE
                  AND TBRCDSI_DETAIL_CODE    = TBRACCD_DETAIL_CODE
                  AND TBRCDSI_CONTRACT_NUMBER= TBBCONT_CONTRACT_NUMBER)
           OR TBRACCD_SRCE_CODE               IN
              (SELECT TTVSRCE_CODE
                 FROM TTVSRCE
                WHERE (TBRCDET_I_E_SOURCE_IND = 'E'
                   OR TBRCDET_I_E_SOURCE_IND = 'A')
                  AND TTVSRCE_CODE NOT IN
                      (SELECT TBRCDSI_SOURCE_CODE
                         FROM TBRCDSI
                        WHERE TBRCDSI_PIDM           = TBBCONT_PIDM
                          AND TBRCDSI_TERM_CODE      = TBRACCD_TERM_CODE
                          AND TBRCDSI_DETAIL_CODE    = TBRACCD_DETAIL_CODE
                          AND TBRCDSI_CONTRACT_NUMBER= TBBCONT_CONTRACT_NUMBER)))
          AND TAFTPCR.F_TP_CONTRACT_COURSE_REQ(TBBCSTU_CONTRACT_PIDM,
                                               TBBCSTU_TERM_CODE,
                                               TBBCSTU_STU_PIDM,
                                               TBBCSTU_CONTRACT_NUMBER) = 'Y'
          AND TBRACCD_TERM_CODE||''           = TBRCLCT_TERM_CODE
          AND TBRACCD_PIDM                    = TBRCLCT_PIDM
          AND TBBCONT_CONTRACT_NUMBER         = TBRCDET_CONTRACT_NUMBER
          AND TBBCONT_TERM_CODE               = TBRCDET_TERM_CODE
          AND TBBCONT_PIDM                    = TBBCSTU_CONTRACT_PIDM
          AND TBRCDET_CONTRACT_NUMBER         = TBBCSTU_CONTRACT_NUMBER
          AND TBRCDET_TERM_CODE               = TBBCSTU_TERM_CODE
          AND TBRCDET_PIDM                    = TBBCSTU_CONTRACT_PIDM
          AND TBBCSTU_DEL_IND IS NULL
          AND (TBBCSTU_AUTH_IND = 'Y' OR
               TBBCSTU_AUTH_IND IS NULL)
          AND TBBCSTU_TERM_CODE               = TBRCLCT_TERM_CODE
          AND TBBCSTU_STU_PIDM = TBRCLCT_PIDM
          AND TBRCLCT_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
     GROUP BY TBRCDET_CONTRACT_NUMBER, TBRCDET_DETAIL_CODE,
              TBRACCD_DETAIL_CODE, TBBCSTU_CONTRACT_PRIORITY,
              TBRCDET_DETAIL_PRIORITY,
              NVL(TBBCSTU_MAX_STUDENT_AMOUNT,9999999999.99),
              TBBCSTU_CONTRACT_PIDM, TBBCSTU_CONTRACT_NUMBER,
              TBBCONT_DETAIL_PAY_CODE, TBBCONT_DETAIL_CHG_CODE,
              TBBCONT_DESC, TBRCDET_PERCENT, TBRCDET_MIN_AMOUNT,
              TBRCDET_MAX_AMOUNT,TBRACCD_SRCE_CODE, TBRCLCT_PIDM,
              TBRCLCT_TERM_CODE, TBRCLCT_CONT_PRTY, TBBCSTU_AUTH_IND,
              USERENV('SESSIONID')"
"BANINST1","TBVCONR","Contract Receivable Detail View","(SELECT TBRACCD_PIDM,
        CONT.SPRIDEN_ID,
        CONT.SPRIDEN_LAST_NAME,  -- always a non-person
        TBRACCD_CROSSREF_NUMBER,
        TBRACCD_TERM_CODE,
        TBRACCD_CROSSREF_PIDM,
        STU.SPRIDEN_ID,
        DECODE(TBRACCD_CROSSREF_PIDM,NULL,NULL,
                      f_format_name(TBRACCD_CROSSREF_PIDM,'LFMI')), -- always a person
        TBRACCD_TRAN_NUMBER,
        TBRACCD_DETAIL_CODE,
        TBRACCD_USER,
        DECODE(TBBDETC_TYPE_IND,'C',TBRACCD_AMOUNT,NULL),
        DECODE(TBBDETC_TYPE_IND,'P',TBRACCD_AMOUNT,NULL),
        TBRACCD_BALANCE,
        TBRACCD_DESC,
        TBRACCD_TRAN_NUMBER_PAID,
        TBRACCD_CROSSREF_DETAIL_CODE,
        TBRACCD_CROSSREF_DCAT_CODE,
        TBRACCD_CROSSREF_SRCE_CODE,
        TBRACCD_DOCUMENT_NUMBER,
        TBRACCD_TRANS_DATE,
        TBRACCD_INVOICE_NUMBER,
        TBRACCD_SRCE_CODE,
        TBRACCD_DATA_ORIGIN,
        TBRACCD_CREATE_SOURCE,
        TBRACCD_USER,
        NVL(TBRACCD_CPDT_IND,'N'),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        'N',
        'N'
   FROM TBBDETC,
        SPRIDEN CONT,
        SPRIDEN STU,
        TBRACCD
  WHERE TBBDETC_DETAIL_CODE = TBRACCD_DETAIL_CODE
    AND CONT.SPRIDEN_PIDM = TBRACCD_PIDM
    AND CONT.SPRIDEN_CHANGE_IND IS NULL
    AND STU.SPRIDEN_PIDM(+) = TBRACCD_CROSSREF_PIDM
    AND STU.SPRIDEN_CHANGE_IND(+) IS NULL
    AND (NVL(TBRACCD_CPDT_IND,'N') = 'N'
      OR (TBRACCD_CPDT_IND = 'Y' AND tb_contract_payment.f_exists(TBRACCD_PIDM,TBRACCD_TRAN_NUMBER) = 'N'))
UNION ALL
SELECT TBRACCD_PIDM,
        CONT.SPRIDEN_ID,
        CONT.SPRIDEN_LAST_NAME,  -- always a non-person
        TBRCPDT_CONTRACT_NUMBER,
        TBRACCD_TERM_CODE,
        TBRCPDT_STU_PIDM,
        STU.SPRIDEN_ID,
        DECODE(TBRCPDT_STU_PIDM,NULL,TBRCPDT_NAME_PROVIDED,
                      f_format_name(TBRCPDT_STU_PIDM,'LFMI')), -- always a person
        TBRACCD_TRAN_NUMBER,
        TBRACCD_DETAIL_CODE,
        TBRCPDT_USER_ID,
        NULL,
        TBRCPDT_AMOUNT,
        TBRCPDT_BALANCE,
        TBRACCD_DESC,
        TBRACCD_TRAN_NUMBER_PAID,
        TBRACCD_CROSSREF_DETAIL_CODE,
        TBRACCD_CROSSREF_DCAT_CODE,
        TBRACCD_CROSSREF_SRCE_CODE,
        TBRACCD_DOCUMENT_NUMBER,
        TBRACCD_TRANS_DATE,
        TBRACCD_INVOICE_NUMBER,
        TBRACCD_SRCE_CODE,
        TBRCPDT_DATA_ORIGIN,
        NULL,
        TBRCPDT_CREATE_USER,
        TBRACCD_CPDT_IND,
        TBRCPDT_TRAN_NUMBER,
        TBRCPDT_RFND_STDN_AMT,
        TBRCPDT_RFND_CONT_AMT,
        TBRCPDT_NAME_PROVIDED,
        TBRCPDT_TRAN_NUMBER_PAID,
        TBRCPDT_FINAL_IND,
        TBRCPDT_REFUND_IND
   FROM SPRIDEN CONT,
        SPRIDEN STU,
        TBRCPDT,
        TBRACCD
  WHERE CONT.SPRIDEN_PIDM = TBRACCD_PIDM
    AND CONT.SPRIDEN_CHANGE_IND IS NULL
    AND STU.SPRIDEN_PIDM(+) = TBRCPDT_STU_PIDM
    AND STU.SPRIDEN_CHANGE_IND(+) IS NULL
    AND NVL(TBRACCD_CPDT_IND,'N') = 'Y'
    AND TBRCPDT_CONT_PIDM = TBRACCD_PIDM
    AND TBRCPDT_CONT_TRAN_NUMBER = TBRACCD_TRAN_NUMBER)"
"BANINST1","TBVCOLC","Collections Query View","(SELECT SPRIDEN_ID,
        f_format_name(spriden_pidm, 'LFM'),
        TBRCOLC_PIDM,
        TBRCOLC_COLC_AGENCY_PIDM,
        TBRCOLC_COLC_AGENCY_DATE,
        TBBACCT_BILL_CODE,
        TBBACCT_DELI_CODE,
        NVL(SUM(TBRACCD_BALANCE), 0),
        TBRCOLC_ACTIVITY_DATE
   FROM SPRIDEN, TBRACCD, TBBACCT, TBRCOLC
  WHERE SPRIDEN_CHANGE_IND IS NULL
    AND SPRIDEN_PIDM = TBRCOLC_PIDM
    AND TBBACCT_PIDM (+) = TBRCOLC_PIDM
    AND TBRACCD_PIDM (+) = TBRCOLC_PIDM
GROUP BY SPRIDEN_ID,
        f_format_name(spriden_pidm, 'LFM'),
        TBRCOLC_PIDM,
        TBRCOLC_COLC_AGENCY_PIDM,
        TBRCOLC_COLC_AGENCY_DATE,
        TBBACCT_BILL_CODE,
        TBBACCT_DELI_CODE,
        TBRCOLC_ACTIVITY_DATE)"
"BANINST1","TBVCDTL","Cashier Detail View","(SELECT TBRACCD.TBRACCD_PIDM, TBRACCD.TBRACCD_TRAN_NUMBER,
	TBRACCD.TBRACCD_USER, TRUNC(TBRACCD.TBRACCD_ENTRY_DATE),
	TBRACCD.TBRACCD_DETAIL_CODE, TBRACCD.TBRACCD_AMOUNT,
	TBRACCD.TBRACCD_EFFECTIVE_DATE, TBRACCD.TBRACCD_RECEIPT_NUMBER,
	TBRACCD.TBRACCD_DESC, TBRACCD.TBRACCD_SRCE_CODE,
	TBRACCD.TBRACCD_ACCT_FEED_IND,
	TO_CHAR(TBRACCD.TBRACCD_ENTRY_DATE,'HH24:MI:SS'),
        TBRACCD_CURR_CODE, TBRACCD_FOREIGN_AMOUNT, ''
FROM    TBRACCD, TBRCOLR
WHERE   TBRACCD.TBRACCD_USER = TBRCOLR.TBRCOLR_SESSION_USER
AND     TBRACCD.TBRACCD_SESSION_NUMBER = TBRCOLR.TBRCOLR_SESSION_NUMBER
AND     NVL(TBRACCD.TBRACCD_CSHR_END_DATE,TBRCOLR.TBRCOLR_SESS_END_DATE)
        = TBRCOLR.TBRCOLR_SESS_END_DATE
AND	TBRCOLR.TBRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 0, TRRACCD_TRAN_NUMBER,
        TRRACCD_USER_ID, TRUNC(TRRACCD_ENTRY_DATE),
        TRRACCD_DETAIL_CODE, TRRACCD_AMOUNT,
        TRRACCD_EFFECTIVE_DATE,0,
        TRRACCD_DESC, TRRACCD_SRCE_CODE,
        TRRACCD_ACCT_FEED_IND,
        TO_CHAR(TRRACCD.TRRACCD_ENTRY_DATE,'HH24:MI:SS'),
        '',0, trraccd_grnt_code
FROM   TRRACCD, TBRCOLR
WHERE  TRRACCD_USER_ID = TBRCOLR_SESSION_USER
AND     TRRACCD_SESSION_NUMBER = TBRCOLR_SESSION_NUMBER
AND     NVL(TRRACCD_CSHR_END_DATE, TBRCOLR_SESS_END_DATE)
        = TBRCOLR.TBRCOLR_SESS_END_DATE
AND     TBRCOLR.TBRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT  TBRDEPO.TBRDEPO_PIDM, TBRDEPO.TBRDEPO_TRAN_NUMBER,
	TBRDEPO.TBRDEPO_USER, TRUNC(TBRDEPO.TBRDEPO_ENTRY_DATE),
	TBRDEPO.TBRDEPO_DETAIL_CODE_PAYMENT, TBRDEPO.TBRDEPO_AMOUNT,
	TBRDEPO.TBRDEPO_EFFECTIVE_DATE, TBRDEPO.TBRDEPO_RECEIPT_NUMBER,
	TBBDETC.TBBDETC_DESC, 'D',
	TBRDEPO.TBRDEPO_ACCT_FEED_IND,
        TO_CHAR(TBRDEPO.TBRDEPO_ENTRY_DATE,'HH24:MI:SS'),
        TBRDEPO_CURR_CODE, TBRDEPO_FOREIGN_AMOUNT, ''
FROM    TBRDEPO, TBBDETC, TBRCOLR
WHERE	TBRDEPO.TBRDEPO_USER = TBRCOLR.TBRCOLR_SESSION_USER
AND     TBRDEPO.TBRDEPO_SESSION_NUMBER = TBRCOLR.TBRCOLR_SESSION_NUMBER
AND     NVL(TBRDEPO.TBRDEPO_CSHR_END_DATE,TBRCOLR.TBRCOLR_SESS_END_DATE)
        = TBRCOLR.TBRCOLR_SESS_END_DATE
AND     TBBDETC.TBBDETC_DETAIL_CODE = TBRDEPO.TBRDEPO_DETAIL_CODE_PAYMENT
AND	TBRCOLR.TBRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT  0, TBRMISD.TBRMISD_TRAN_NUMBER,
	TBRMISD.TBRMISD_USER, TRUNC(TBRMISD.TBRMISD_TRANS_DATE),
	TBRMISD.TBRMISD_CHARGE_DETAIL_CODE, TBRMISD.TBRMISD_AMOUNT,
	TBRMISD.TBRMISD_TRANS_DATE, TBRMISD.TBRMISD_RECEIPT_NUMBER,
	TBRMISD.TBRMISD_DESC, 'S', TBRMISD.TBRMISD_ACCT_FEED_IND,
        TO_CHAR(TBRMISD.TBRMISD_TRANS_DATE,'HH24:MI:SS'),
        TBRMISD_CURR_CODE, TBRMISD_FOREIGN_AMOUNT, ''
FROM    TBRMISD, TBBDETC, TBRCOLR
WHERE   TBBDETC_TYPE_IND = 'C'
AND     TBBDETC_DETAIL_CODE = TBRMISD_CHARGE_DETAIL_CODE
AND     TBRMISD.TBRMISD_USER = TBRCOLR.TBRCOLR_SESSION_USER
AND     TBRMISD.TBRMISD_SESSION_NUMBER = TBRCOLR.TBRCOLR_SESSION_NUMBER
AND     NVL(TBRMISD.TBRMISD_CSHR_END_DATE,TBRCOLR.TBRCOLR_SESS_END_DATE)
        = TBRCOLR.TBRCOLR_SESS_END_DATE
AND	TBRCOLR.TBRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT  0, TBRMISD.TBRMISD_TRAN_NUMBER,
	TBRMISD.TBRMISD_USER, TRUNC(TBRMISD.TBRMISD_TRANS_DATE),
	TBRMISD.TBRMISD_CHARGE_DETAIL_CODE, (TBRMISD.TBRMISD_AMOUNT * -1),
	TBRMISD.TBRMISD_TRANS_DATE, TBRMISD.TBRMISD_RECEIPT_NUMBER,
	TBRMISD.TBRMISD_DESC, 'S', TBRMISD.TBRMISD_ACCT_FEED_IND,
        TO_CHAR(TBRMISD.TBRMISD_TRANS_DATE,'HH24:MI:SS'),
        TBRMISD_CURR_CODE, TBRMISD_FOREIGN_AMOUNT, ''
FROM    TBRMISD, TBBDETC, TBRCOLR
WHERE   TBBDETC_TYPE_IND = 'P'
AND     TBBDETC_DETAIL_CODE = TBRMISD_CHARGE_DETAIL_CODE
AND     TBRMISD.TBRMISD_USER = TBRCOLR.TBRCOLR_SESSION_USER
AND     TBRMISD.TBRMISD_SESSION_NUMBER = TBRCOLR.TBRCOLR_SESSION_NUMBER
AND     NVL(TBRMISD.TBRMISD_CSHR_END_DATE,TBRCOLR.TBRCOLR_SESS_END_DATE)
        = TBRCOLR.TBRCOLR_SESS_END_DATE
AND	TBRCOLR.TBRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT  0, TBRMISD.TBRMISD_TRAN_NUMBER,
	TBRMISD.TBRMISD_USER, TRUNC(TBRMISD.TBRMISD_TRANS_DATE),
	TBRMISD.TBRMISD_PAY_DETAIL_CODE, TBRMISD.TBRMISD_AMOUNT,
	TBRMISD.TBRMISD_TRANS_DATE, TBRMISD.TBRMISD_RECEIPT_NUMBER,
	TBRMISD.TBRMISD_DESC, 'S', TBRMISD.TBRMISD_ACCT_FEED_IND,
        TO_CHAR(TBRMISD.TBRMISD_TRANS_DATE,'HH24:MI:SS'),
        TBRMISD_CURR_CODE, TBRMISD_FOREIGN_AMOUNT, ''
FROM    TBRMISD, TBBDETC, TBRCOLR
WHERE   TBBDETC_TYPE_IND = 'P'
AND     TBBDETC_DETAIL_CODE = TBRMISD_PAY_DETAIL_CODE
AND     TBRMISD.TBRMISD_USER = TBRCOLR.TBRCOLR_SESSION_USER
AND     TBRMISD.TBRMISD_SESSION_NUMBER = TBRCOLR.TBRCOLR_SESSION_NUMBER
AND     NVL(TBRMISD.TBRMISD_CSHR_END_DATE,TBRCOLR.TBRCOLR_SESS_END_DATE)
        = TBRCOLR.TBRCOLR_SESS_END_DATE
AND	TBRCOLR.TBRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT  0, TBRMISD.TBRMISD_TRAN_NUMBER,
	TBRMISD.TBRMISD_USER, TRUNC(TBRMISD.TBRMISD_TRANS_DATE),
	TBRMISD.TBRMISD_PAY_DETAIL_CODE, (TBRMISD.TBRMISD_AMOUNT * -1),
	TBRMISD.TBRMISD_TRANS_DATE, TBRMISD.TBRMISD_RECEIPT_NUMBER,
	TBRMISD.TBRMISD_DESC, 'S', TBRMISD.TBRMISD_ACCT_FEED_IND,
        TO_CHAR(TBRMISD.TBRMISD_TRANS_DATE,'HH24:MI:SS'),
        TBRMISD_CURR_CODE, TBRMISD_FOREIGN_AMOUNT, ''
FROM    TBRMISD, TBBDETC, TBRCOLR
WHERE   TBBDETC_TYPE_IND = 'C'
AND     TBBDETC_DETAIL_CODE = TBRMISD_PAY_DETAIL_CODE
AND     TBRMISD.TBRMISD_USER = TBRCOLR.TBRCOLR_SESSION_USER
AND     TBRMISD.TBRMISD_SESSION_NUMBER = TBRCOLR.TBRCOLR_SESSION_NUMBER
AND     NVL(TBRMISD.TBRMISD_CSHR_END_DATE,TBRCOLR.TBRCOLR_SESS_END_DATE)
        = TBRCOLR.TBRCOLR_SESS_END_DATE
AND	TBRCOLR.TBRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID')))
 "
"BANINST1","TBVAPPL","Application of Payments View","(SELECT TBRAPPL_PIDM,
        TBRAPPL_PAY_TRAN_NUMBER,
        TBRAPPL_CHG_TRAN_NUMBER,
        TBRAPPL_AMOUNT,
        TBRAPPL_DIRECT_PAY_IND,
        TBRAPPL_REAPPL_IND,
        TBRAPPL_ACCT_FEED_IND,
        TRUNC(X.TBRACCD_TRANS_DATE),
        TRUNC(Y.TBRACCD_TRANS_DATE),
	      X.TBRACCD_DETAIL_CODE,
        Y.TBRACCD_DETAIL_CODE,
        X.TBRACCD_DESC,
        Y.TBRACCD_DESC,
        X.TBRACCD_TERM_CODE,
        Y.TBRACCD_TERM_CODE,
        X.TBRACCD_AIDY_CODE,
        Y.TBRACCD_AIDY_CODE,
        TRUNC(X.TBRACCD_EFFECTIVE_DATE),
        TRUNC(Y.TBRACCD_EFFECTIVE_DATE),
	TRUNC(TBRAPPL_ACTIVITY_DATE),
	NVL(ROWIDTOCHAR(TBRAPPL.ROWID),'0'),
        TBRAPPL_FEED_DATE,
        TBRAPPL_FEED_DOC_CODE,
        TBRAPPL_USER,
        NULL,
        NULL,
        X.TBRACCD_PERIOD,
        Y.TBRACCD_PERIOD,
        TBRAPPL_INV_NUMBER_PAID,
        DECODE(NVL(TBRAPPL_DIRECT_PAY_TYPE,'N'), 'N', NULL,TBRAPPL_DIRECT_PAY_TYPE)
FROM    TBRACCD X,
        TBRACCD Y,
        TBRAPPL,
        TBBPIDM
WHERE   TO_CHAR(USERENV('SESSIONID')) = TBBPIDM_SESSIONID
AND     TBRAPPL_PAY_TRAN_NUMBER = X.TBRACCD_TRAN_NUMBER
AND     TBRAPPL_CHG_TRAN_NUMBER = Y.TBRACCD_TRAN_NUMBER
AND     TBRAPPL_PIDM = TBBPIDM_PIDM
AND     X.TBRACCD_PIDM = TBBPIDM_PIDM
AND     Y.TBRACCD_PIDM = TBBPIDM_PIDM
UNION ALL
SELECT  TBRAPPH_PIDM,
        TBRAPPH_PAY_TRAN_NUMBER,
        TBRAPPH_CHG_TRAN_NUMBER,
        TBRAPPH_AMOUNT,
        TBRAPPH_DIRECT_PAY_IND,
        TBRAPPH_REAPPL_IND,
        TBRAPPH_ACCT_FEED_IND,
        TRUNC(X.TBRACCD_TRANS_DATE),
        TRUNC(Y.TBRACCD_TRANS_DATE),
	      X.TBRACCD_DETAIL_CODE,
        Y.TBRACCD_DETAIL_CODE,
        X.TBRACCD_DESC,
        Y.TBRACCD_DESC,
        X.TBRACCD_TERM_CODE,
        Y.TBRACCD_TERM_CODE,
        X.TBRACCD_AIDY_CODE,
        Y.TBRACCD_AIDY_CODE,
        TRUNC(X.TBRACCD_EFFECTIVE_DATE),
        TRUNC(Y.TBRACCD_EFFECTIVE_DATE),
	TRUNC(TBRAPPH_ACTIVITY_DATE),
	NVL(ROWIDTOCHAR(TBRAPPH.ROWID),'0'),
        TBRAPPH_FEED_DATE,
        TBRAPPH_FEED_DOC_CODE,
        TBRAPPH_USER,
		    'Y',
		    TBRAPPH_ARCHIVE_DATE,
		    X.TBRACCD_PERIOD,
        Y.TBRACCD_PERIOD,
        TBRAPPH_INV_NUMBER_PAID,
        DECODE(NVL(TBRAPPH_DIRECT_PAY_TYPE,'N'), 'N', NULL,TBRAPPH_DIRECT_PAY_TYPE)
FROM    TBRACCD X,
        TBRACCD Y,
        TBRAPPH,
        TBBPIDM
WHERE   TO_CHAR(USERENV('SESSIONID')) = TBBPIDM_SESSIONID
AND     TBRAPPH_PAY_TRAN_NUMBER = X.TBRACCD_TRAN_NUMBER
AND     TBRAPPH_CHG_TRAN_NUMBER = Y.TBRACCD_TRAN_NUMBER
AND     TBRAPPH_PIDM = TBBPIDM_PIDM
AND     X.TBRACCD_PIDM = TBBPIDM_PIDM
AND     Y.TBRACCD_PIDM = TBBPIDM_PIDM)"
"BANINST1","TBVAGES","BANNER Reporting view to retrieve AR data for aging purposes","select tbraccd_pidm, spriden_surname_prefix, spriden_last_name, spriden_first_name, spriden_id,
       tbraccd_term_code, stvterm_desc, ttvdcat_code, ttvdcat_desc,
       tbraccd_detail_code, tbbdetc_desc, tbbdetc_type_ind, tbraccd_srce_code,
       ttvsrce_desc, trunc(tbraccd_effective_date), trunc(tbraccd_bill_date),
       trunc(tbraccd_due_date), trunc(tbraccd_trans_date),
       nvl(tbraccd_amount,0), nvl(tbraccd_balance,0),
       trunc(sysdate)-trunc(tbraccd_effective_date)
  from stvterm, tbraccd,
       tbbdetc, ttvdcat, ttvsrce, spriden
 where tbraccd_pidm = spriden_pidm
   and spriden_change_ind is null
   and tbraccd_detail_code = tbbdetc_detail_code
   and tbbdetc_dcat_code = ttvdcat_code
   and tbraccd_srce_code = ttvsrce_code
   and tbraccd_term_code = stvterm_code(+)"
"BANINST1","TBVACTV","Cashier Active Session View","(SELECT TBRACCD.TBRACCD_ENTRY_DATE, TBRACCD_USER
 FROM    TBRACCD
 WHERE   TBRACCD.TBRACCD_SESSION_NUMBER = 0
UNION
  SELECT TRRACCD_ENTRY_DATE, TRRACCD_USER_ID
 FROM    TRRACCD
 WHERE  TRRACCD_SESSION_NUMBER = 0
UNION
 SELECT  TBRDEPO.TBRDEPO_ENTRY_DATE, TBRDEPO_USER
 FROM    TBRDEPO
 WHERE   TBRDEPO.TBRDEPO_SESSION_NUMBER = 0
UNION
 SELECT  TBRMISD.TBRMISD_ACTIVITY_DATE, TBRMISD_USER
 FROM    TBRMISD
 WHERE   TBRMISD.TBRMISD_SESSION_NUMBER = 0)
 "
"BANINST1","TBVACCD","BANNERQuest A/R Account Detail View","SELECT TBRACCD_PIDM,
                        TBRACCD_TRAN_NUMBER,
                        TBRACCD_TERM_CODE,
                        TBBDETC_DETAIL_CODE,
                        TBRACCD_AMOUNT,
                        TBRACCD_DESC,
                        TBRACCD_SRCE_CODE,
                        TBRACCD_USER,
                        TBRACCD_BALANCE,
                        TBRACCD_ACCT_FEED_IND,
                        TBRACCD_STATEMENT_DATE,
                        TTVDCAT_CODE,
                        TBBDETC_TYPE_IND,
                        TBRACCD_TRANS_DATE,
                        TBRACCD_BILL_DATE,
                        TBRACCD_DUE_DATE,
                        TBBDETC_DESC
                   FROM TBRACCD, TBBDETC, TTVDCAT
                  WHERE TBRACCD_DETAIL_CODE = TBBDETC_DETAIL_CODE
                    AND TBBDETC_DCAT_CODE = TTVDCAT_CODE
 "
"BANINST1","TBVACC1","Account Detail Query View","(SELECT SPRIDEN_ID,
        f_format_name(SPRIDEN_PIDM, 'LFM'),
        TBRACCD_TRAN_NUMBER, TBRACCD_TERM_CODE, TBRACCD_DETAIL_CODE,
        TBRACCD_USER, TBRACCD_AMOUNT, TBRACCD_BALANCE, TBRACCD_EFFECTIVE_DATE,
        TBRACCD_BILL_DATE, TBRACCD_DUE_DATE, TBRACCD_DESC,
        TBRACCD_RECEIPT_NUMBER, TBRACCD_TRAN_NUMBER_PAID,
        TBRACCD_CROSSREF_PIDM, TBRACCD_CROSSREF_NUMBER,
        TBRACCD_CROSSREF_DETAIL_CODE, TBRACCD_SRCE_CODE, TBRACCD_ACCT_FEED_IND,
        TBRACCD_ACTIVITY_DATE, TBRACCD_SESSION_NUMBER, TBRACCD_CSHR_END_DATE,
        TBRACCD_CRN, TBRACCD_CROSSREF_SRCE_CODE, TBRACCD_TRANS_DATE,
        TBRACCD_INVOICE_NUMBER, TBRACCD_STATEMENT_DATE, TBRACCD_FEED_DATE,
        TBRACCD_INV_NUMBER_PAID, TBRACCD_FEED_DOC_CODE, TBRACCD_CPDT_IND,
        TBRACCD_AIDY_CODE, TBRACCD_PERIOD, SUBSTR(goksels.f_name_bio_value(TBRACCD_CROSSREF_PIDM, 'ID'),1,9)
FROM    SPRIDEN, TBRACCD
WHERE   SPRIDEN_PIDM = TBRACCD_PIDM
AND     SPRIDEN_CHANGE_IND IS NULL)"
"BANINST1","SZWINTK","","SELECT szrintk_seqno seqno,
            szrintk_review_ind review_ind,
            szrintk_dup_ok dup_ok,
            szrintk_pidm pidm,
            szrintk_id ID,
            SZRINTK_ASSOCIATEDIDNUMBER ssn,
            SZRINTK_PRSN_PRM_LAST_NM last_name,
            SZRINTK_PRSN_PRM_1ST_NM first_name,
            NULL mi,
            NULL suffix,
            SZRINTK_PRSN_BIRTH_DT birth_date,
            szrintk_err_spriden err_iden,
            szrintk_sex sex,
            NULL ethn_code,
            NULL citz_code,
            szrintk_err_spbpers err_pers,
            SZRINTK_INST_CD camp_code,
            SZRINTK_STU_ADMT_TERM_CD term_code,
            NULL styp_code,
            NULL edlv_code,
            NULL majr_code,
            NULL egol_code,
            NULL ca_res_date,
            NULL resd_code,
            NULL lang_code,
            NULL citz_resd_over,
            NULL err_adap,
            NULL err_stdn,
            SZRINTK_PRSN_FRGN_LN1_ADDR street_ma,
            SZRINTK_PRSN_FRGN_CTY_NM city_ma,
            SZRINTK_PRSN_FRGN_ST_CD state_ma,
            SZRINTK_PRSN_FRGN_ZIP_CD zip_ma,
            SZRINTK_PRSN_FRGN_CNTRY_CD natn_ma,
            szrintk_err_spraddr_vf err_ma,
            SZRINTK_PRSN_LCL_LN1_ADDR street_pr,
            SZRINTK_PRSN_LCL_CTY_NM city_pr,
            SZRINTK_PRSN_LCL_ST_CD state_pr,
            SZRINTK_PRSN_LCL_ZIP_CD zip_pr,
            NULL natn_pr,
            szrintk_err_spraddr_pr err_pr,
            szrintk_phone_area phone_area,
            szrintk_phone_number phone_number,
            szrintk_phone_ext phone_ext,
            szrintk_err_sprtele err_tele,
            SZRINTK_PRSN_GDS_CMP_EMAIL_ADR email_address,
            szrintk_err_p_emal err_emal,
            NULL parent_last,
            NULL parent_first,
            NULL relt_code,
            NULL err_folk,
            NULL visa_number,
            NULL visa_type,
            NULL visa_issue,
            NULL visa_expire,
            NULL err_intl,
            SZRINTK_MORE_DATA_IND more_data,
            NULL proc_email,
            szrintk_more_email_sent more_email,
            NULL integrity_flags,
            NULL high_school,
            NULL mili_status,
            NULL mili_home_rec,
            NULL ca_nonres_tax,
            NULL reg_vote_non_ca,
            NULL res_std_non_ca,
            NULL lawsuit_non_ca,
            NULL resd_code_source,
            szrintk_ora_err_mesg ORA_ERR_MESG,
            SZRintk_MATCH_STATUS MATCH_STATUS,
            szrintk_match_date MATCH_DATE,
            NULL INTEG_FLAGS,
            NULL ERR_INTEG,
            NULL STREET2_PR,
            NULL STREET2_MA,
            NULL MATCH_OVERRIDE,
            NULL szrintk_program,
            szrintk_match_source source_cd
       FROM szrintk
      WHERE szrintk_banner_updated IS NULL
   ORDER BY szrintk_seqno DESC"
"BANINST1","SZWCCAP","","SELECT szrccap_seqno seqno,
          szrccap_review_ind review_ind,
          szrccap_dupe_ok dup_ok,
          szrccap_pidm pidm,
          szrccap_id ID,
          szrccap_ssn ssn,
          szrccap_last_name last_name,
          szrccap_first_name first_name,
          szrccap_mi mi,
          szrccap_name_suffix suffix,
          szrccap_birth_date birth_date,
          szrccap_err_spriden err_iden,
          szrccap_sex sex,
          szrccap_ethn_code ethn_code,
          szrccap_citz_code citz_code,
          szrccap_err_spbpers err_pers,
          szrccap_camp_code camp_code,
          szrccap_term_code term_code,
          szrccap_styp_code_source styp_code,
          szrccap_edlv_code edlv_code,
          szrccap_majr_code_1 majr_code,
          szrccap_egol_code egol_code,
          szrccap_ca_res_date ca_res_date,
          szrccap_resd_code resd_code,
          szrccap_lang_code lang_code,
          szrccap_citz_resd_over citz_resd_over,
          szrccap_err_saradap err_adap,
          szrccap_err_sgbstdn err_stdn,
          szrccap_street_line1_ma street_ma,
          szrccap_city_ma city_ma,
          szrccap_stat_code_ma state_ma,
          szrccap_zip_ma zip_ma,
          szrccap_natn_code_ma natn_ma,
          szrccap_err_spraddr_ma err_ma,
          szrccap_street_line1_pr street_pr,
          szrccap_city_pr city_pr,
          szrccap_stat_code_pr state_pr,
          szrccap_zip_pr zip_pr,
          szrccap_natn_code_pr natn_pr,
          szrccap_err_spraddr_pr err_pr,
          szrccap_phone_area phone_area,
          szrccap_phone_number phone_number,
          szrccap_phone_ext phone_ext,
          szrccap_err_sprtele err_tele,
          szrccap_email_address email_address,
          szrccap_err_goremal err_emal,
          szrccap_parent_last parent_last,
          szrccap_parent_first parent_first,
          szrccap_relt_code relt_code,
          szrccap_err_sorfolk err_folk,
          szrccap_visa_number visa_number,
          szrccap_vtyp_code_current visa_type,
          szrccap_visa_issue_date visa_issue,
          szrccap_visa_expire_date visa_expire,
          szrccap_err_sprintl err_intl,
          szrccap_more_data_ind more_data,
          szrccap_proc_email_sent proc_email,
          szrccap_more_email_sent more_email,
          szrccap_integrity_flags integrity_flags,
          szrccap_name_hsch high_school,
          szrccap_mili_status mili_status,
          szrccap_mili_home_record mili_home_rec,
          szrccap_ca_nonres_tax ca_nonres_tax,
          szrccap_reg_vote_non_ca reg_vote_non_ca,
          szrccap_res_std_non_ca res_std_non_ca,
          szrccap_lawsuit_non_ca lawsuit_non_ca,
          szrccap_resd_code_source resd_code_source,
          szrccap_ora_err_mesg ORA_ERR_MESG,
          szrccap_intend_pr_ca_res,
          szrccap_err_sorhsch,
          szrccap_err_sorpcol_1,
          szrccap_err_sorpcol_2,
          szrccap_err_sorpcol_3,
          szrccap_err_sorpcol_4,
          szrccap_err_gobtpac,
          szrccap_styp_code,
          szrccap_edlv_date,
          --TO_CHAR (szrccap_edlv_date, 'YYYY'),
          szrccap_hs_grad_date,
          szrccap_edlv_code_source,
          szrccap_hs_ed_level,
          szrccap_coll_code,
          szrccap_reviewed_ind_ma REVIEWED_IND_MA,
          szrccap_reviewed_ind_pr REVIEWED_IND_PR,
          szrccap_reviewed_user_ma REVIEWED_USER_MA,
          szrccap_reviewed_user_pr REVIEWED_USER_PR,
          SZRCCAP_CONFIRM_NUMBER,
          SZRCCAP_CARRIER_ROUTE_PR CARRIER_ROUTE_PR,
          SZRCCAP_CARRIER_ROUTE_MA CARRIER_ROUTE_MA,
          SZRCCAP_CORRECTION_DIGIT_PR CORRECTION_DIGIT_PR,
          SZRCCAP_CORRECTION_DIGIT_MA CORRECTION_DIGIT_MA,
          SZRCCAP_DELIVERY_POINT_PR DELIVERY_POINT_PR,
          SZRCCAP_DELIVERY_POINT_MA DELIVERY_POINT_MA,
          szrccap_pre_2000 PRE_2000,
          szrccap_prior_id PRIOR_ID,
          szrccap_pre_2000_over PRE_2000_OVER,
          SZRCCAP_MATCH_STATUS MATCH_STATUS,
          szrccap_match_date MATCH_DATE,
          szrccap_integrity_flags INTEG_FLAGS,
          szrccap_err_integ ERR_INTEG,
          szrccap_street_line2_pr STREET2_PR,
          szrccap_street_line2_ma STREET2_MA,
          szrccap_match_override MATCH_OVERRIDE,
          szrccap_program,
          szrccap_mil_discharge MILI_SEP_DATE
     FROM szrccap, stvterm
    WHERE     (   NVL (szrccap_first_pass_ind, 'Y') = 'Y'
               OR NVL (szrccap_review_ind, 'N') = 'N'
               OR NVL (szrccap_dupe_ok, 'N') = 'N'
               OR szrccap_err_spriden LIKE 'E%'
               OR szrccap_err_spbpers LIKE 'E%'
               OR szrccap_err_saradap LIKE 'E%'
               OR szrccap_err_saradap IS NULL
               OR szrccap_err_sgbstdn LIKE 'E%'
               OR szrccap_err_sgbstdn IS NULL
               OR szrccap_err_spraddr_ma LIKE 'E%'
               OR szrccap_err_spraddr_pr LIKE 'E%'
               OR szrccap_err_sprtele LIKE 'E%'
               OR szrccap_err_sorfolk LIKE 'E%'
               OR szrccap_err_sorhsch LIKE 'E%'
               OR szrccap_err_sorpcol_1 LIKE 'E%'
               OR szrccap_err_sorpcol_2 LIKE 'E%'
               OR szrccap_err_sorpcol_3 LIKE 'E%'
               OR szrccap_err_sorpcol_4 LIKE 'E%'
               OR szrccap_err_goremal LIKE 'E%'
               OR szrccap_err_gobtpac LIKE 'E%'
               OR szrccap_err_sprintl LIKE 'E%'
               OR szrccap_ora_err_mesg IS NOT NULL)
          AND szrccap_banner_updated IS NULL
          AND stvterm_code = szrccap_term_code
          AND stvterm_end_date > SYSDATE - 380
          AND (   SUBSTR (fhda_f_banner_security ('CCCAPPLY', USER), 1, 1) =
                     'Y'
               OR EXISTS
                     (SELECT 'Y'
                        FROM session_privs
                       WHERE PRIVILEGE = 'SELECT ANY TABLE'))"
"BANINST1","SZWBOGW","","SELECT SZRBOGW_COLLEGE_ID,
            SZRBOGW_YEAR_CODE,
            SZRBOGW_SEQNO,
            SZRBOGW_PIDM,
            SZRBOGW_ID,
            SZRBOGW_SSN,
            SZRBOGW_REVIEWED_IND,
            SZRBOGW_DUPE_OK,
            SZRBOGW_LASTNAME,
            SZRBOGW_FIRSTNAME,
            SZRBOGW_MIDDLENAME,
            SZRBOGW_BIRTHDATE,
            SZRBOGW_ERR_SPRIDEN,
            SZRBOGW_ERR_SPBPERS,
            SZRBOGW_MATCH_STATUS,
            SZRBOGW_MATCH_DATE,
            SZRBOGW_MATCH_OVERRIDE,
            SZRBOGW_STREETADDRESS1,
            SZRBOGW_STREETADDRESS2,
            SZRBOGW_CITY,
            SZRBOGW_STATE,
            SZRBOGW_POSTALCODE,
            SZRBOGW_COUNTRY,
            SZRBOGW_ERR_SPRADDR_FA,
            SZRBOGW_PHONE_AREA,
            SZRBOGW_PHONE_NUMBER,
            SZRBOGW_PHONE_EXT,
            SZRBOGW_ERR_SPRTELE,
            SZRBOGW_EMAIL,
            SZRBOGW_ERR_GOREMAL,
            SZRBOGW_MORE_DATA_IND,
            SZRBOGW_PROC_EMAIL_SENT,
            SZRBOGW_MORE_EMAIL_SENT,
            SZRBOGW_DELIVERY_POINT_FA,
            SZRBOGW_CORRECTION_DIGIT_FA,
            SZRBOGW_CARRIER_ROUTE_FA,
            SZRBOGW_REVIEWED_IND_FA,
            SZRBOGW_REVIEWED_USER_FA,
            SZRBOGW_SOURCE_CD,
            SZRBOGW_CCC_ID,
            SZRBOGW_PROBLEM,
            SZRBOGW_ORA_ERR_MESG,
            SZRBOGW_HIDE_APP,
            SZRBOGW_BOGW_LOADED
       FROM szrbogw                                                --, robinst
      WHERE     szrbogw_banner_updated IS NULL
            AND NVL (SZRBOGW_HIDE_APP, 'N') <> 'Y'
            -- and robinst_aidy_code=SZRBOGW_YEAR_CODE and substr(robinst_aprd_code_def,1,2)=SZRBOGW_COLLEGE_ID
            AND szrbogw_year_code IN (SELECT ROBINST_AIDY_CODE
                                        FROM ROBINST
                                       WHERE ROBINST_AIDY_END_DATE >= SYSDATE)
   ORDER BY SZRBOGW_SEQNO DESC"
"BANINST1","SWVASGN","Assignment Meeting Time View -FHDA Version","SELECT SIRASGN_PIDM, SIRASGN_TERM_CODE, SIRASGN_CRN, SSBSECT_CAMP_CODE,
          SIRASGN_PRIMARY_IND,
          SSRMEET_START_DATE, SSRMEET_END_DATE, SSRMEET_BEGIN_TIME,
          SSRMEET_END_TIME, SSRMEET_CATAGORY, SSRMEET_MON_DAY,
          SSRMEET_TUE_DAY, SSRMEET_WED_DAY, SSRMEET_THU_DAY,
          SSRMEET_FRI_DAY, SSRMEET_SAT_DAY, SSRMEET_SUN_DAY,
          SSRMEET_BLDG_CODE, SSRMEET_ROOM_CODE, ROWIDTOCHAR(SSRMEET.ROWID),
          SIRASGN_OVER_RIDE, SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
          SSBSECT_SEQ_NUMB, substr(SSKSELS.F_GET_SSRXLST_GROUP(SIRASGN_TERM_CODE,SIRASGN_CRN),1,2),
          SSRMEET_SCHD_CODE,
          SSRMEET_CREDIT_HR_SESS, SSBSECT_ENRL, SSBSECT_MAX_ENRL,
          SSBSECT_PTRM_CODE, SSRMEET_MTYP_CODE,
          SSBSECT_PTRM_START_DATE, SSBSECT_PTRM_END_DATE
 FROM  SSRMEET, SSBSECT, SIRASGN
 WHERE SSRMEET_TERM_CODE = SIRASGN_TERM_CODE
 AND   SSRMEET_CRN  = SIRASGN_CRN
 AND   SSRMEET_CATAGORY = SIRASGN_CATEGORY
 AND   SSBSECT_TERM_CODE = SIRASGN_TERM_CODE
 AND   SSBSECT_CRN = SIRASGN_CRN
 -- Restrictions added on 9/26/2015 by Xiaobin
 and SSBSECT_SSTS_CODE not in ('X')
 and SSBSECT_VOICE_AVAIL in ('Y')
UNION
   SELECT SIRASGN_PIDM, SIRASGN_TERM_CODE, SIRASGN_CRN, SSBSECT_CAMP_CODE, SIRASGN_PRIMARY_IND,
          NULL,NULL,NULL,NULL,SIRASGN_CATEGORY,NULL,NULL,NULL,NULL,
          NULL,NULL,NULL,NULL,NULL,NULL,
          SIRASGN_OVER_RIDE, SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
          SSBSECT_SEQ_NUMB,substr(SSKSELS.F_GET_SSRXLST_GROUP(SIRASGN_TERM_CODE,SIRASGN_CRN),1,2), NULL,
          NULL, SSBSECT_ENRL, SSBSECT_MAX_ENRL,
          SSBSECT_PTRM_CODE, NULL,
          SSBSECT_PTRM_START_DATE, SSBSECT_PTRM_END_DATE
 FROM  SSBSECT, SIRASGN
 WHERE SSBSECT_TERM_CODE = SIRASGN_TERM_CODE
 AND   SSBSECT_CRN = SIRASGN_CRN
 -- Restrictions added on 9/26/2015 by Xiaobin
 and SSBSECT_SSTS_CODE not in ('X')
 and SSBSECT_VOICE_AVAIL in ('Y')
 AND NOT exists
      (select 'X' from SSRMEET a
       WHERE a.SSRMEET_TERM_CODE = SIRASGN.SIRASGN_TERM_CODE
       AND a.SSRMEET_CRN = SIRASGN.SIRASGN_CRN
       AND a.SSRMEET_CATAGORY = SIRASGN.SIRASGN_CATEGORY)
"
"BANINST1","SVWRORL","This view lists the history table (SVBSECH) data, Matched rule data from Rule Table (SVBRORL) and Census 2 data.","SELECT NULL svbrorl_process_priority, svbsech_term_code, svbsech_crn,
       svbsech_dicd_code, svbsech_seqno,
       DECODE (svbsech_roster_type,
               'TR', G$_NLS.Get('SVWRORL-0000','SQL','Total Roster'),   /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
               'CR', G$_NLS.Get('SVWRORL-0001','SQL','Census Roster'),  /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
               'WR', G$_NLS.Get('SVWRORL-0002','SQL','W Roster'),       /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
               'OR', G$_NLS.Get('SVWRORL-0003','SQL','Opening Day Roster') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
              ) svbsech_roster_long_type,
       svbrorl_roster_type_desc, svbsech_roster_type, svbsech_crn_acct_type,
       svbsech_login_pidm,
       DECODE (svbsech_census_used_type,
               'NA', G$_NLS.Get('SVWRORL-0004','SQL','Not Applicable'),   /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
               G$_NLS.Get('SVWRORL-0005','SQL','Census ') || svbsech_census_used_type  /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
              ) svbsech_census_used_type,
       svbsech_activity_date, svbsech_add_date,
       (CASE
           WHEN TRUNC(SYSDATE)                                                 /*C3SC AS 09/23/2010 CHANGE Defect:1-CVHYHZ */
                  BETWEEN sv_fac_droproster_bp.f_avail_strt_date
                                                          (svbsech_term_code,
                                                           svbsech_crn,
                                                            DECODE(svbsech_roster_type||svbsech_census_used_type,               /*C3SC AS 09/21/2010 CHANGE Defect:1-CVHYHZ */
                                                                   'CR2',
                                                                   svbsech_roster_type||svbsech_census_used_type,svbsech_roster_type)
                                                          )
                      AND sv_fac_droproster_bp.f_avail_end_date
                                                          (svbsech_term_code,
                                                           svbsech_crn,
                                                           DECODE(svbsech_roster_type||svbsech_census_used_type,               /*C3SC AS 09/21/2010 CHANGE Defect:1-CVHYHZ */
                                                                  'CR2',
                                                                  svbsech_roster_type||svbsech_census_used_type,svbsech_roster_type)
                                                          )
           AND svbrorl_active_ind = 'Y'
              THEN G$_NLS.Get('SVWRORL-0006','SQL','Now') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
           WHEN TRUNC(SYSDATE) >                                 /*C3SC AS 08/03/2010 CHANGE Defect:1-CVHYHZ */
                  sv_fac_droproster_bp.f_avail_end_date (svbsech_term_code,
                                                         svbsech_crn,
                                                         DECODE(svbsech_roster_type||svbsech_census_used_type,               /*C3SC AS 09/21/2010 CHANGE Defect:1-CVHYHZ */
                                                                'CR2',
                                                                svbsech_roster_type||svbsech_census_used_type,svbsech_roster_type)
                                                        )
           AND svbrorl_active_ind = 'Y'
              THEN G$_NLS.Get('SVWRORL-0007','SQL','Expired') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
           WHEN TRUNC(SYSDATE) <                                      /*C3SC AS 08/03/2010 CHANGE Defect:1-CVHYHZ */
                  sv_fac_droproster_bp.f_avail_strt_date (svbsech_term_code,
                                                          svbsech_crn,
                                                          DECODE(svbsech_roster_type||svbsech_census_used_type,               /*C3SC AS 09/21/2010 CHANGE Defect:1-CVHYHZ */
                                                          'CR2',
                                                          svbsech_roster_type||svbsech_census_used_type,svbsech_roster_type)
                                                         )
           AND svbrorl_active_ind = 'Y'
              THEN G$_NLS.Get('SVWRORL-0008','SQL','Future') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
           WHEN svbrorl_active_ind = 'N' or sv_fac_droproster_bp.f_avail_strt_date (svbsech_term_code,
                                                          svbsech_crn,
                                                          DECODE(svbsech_roster_type||svbsech_census_used_type,               /*C3SC AS 09/21/2010 CHANGE Defect:1-CVHYHZ */
                                                                 'CR2',
                                                                 svbsech_roster_type||svbsech_census_used_type,svbsech_roster_type)
                                                         ) is null
              THEN G$_NLS.Get('SVWRORL-0009','SQL','History') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
        END
       ) active,
       svbrorl_active_ind,
       sv_fac_droproster_bp.f_avail_strt_date (svbsech_term_code,
                                               svbsech_crn,
                                               decode(svbsech_roster_type||svbsech_census_used_type,'CR2',     /*C3SC AS 08/03/2010 CHANGE Defect:1-CVHYHZ */
                                                      svbsech_roster_type||svbsech_census_used_type,svbsech_roster_type)
                                              ) begin_date,
       sv_fac_droproster_bp.f_avail_end_date (svbsech_term_code,
                                              svbsech_crn,
                                              decode(svbsech_roster_type||svbsech_census_used_type,'CR2',    /*C3SC AS 08/03/2010 CHANGE Defect:1-CVHYHZ */
                                                     svbsech_roster_type||svbsech_census_used_type,svbsech_roster_type)
                                             ) end_date,
       NULL rule_match, NULL acct_match
  FROM svbsech sech, svbrorl rorl
 WHERE sech.svbsech_term_code = rorl.svbrorl_term_code
   AND sech.svbsech_dicd_code = rorl.svbrorl_dicd_code
   AND sech.svbsech_crn_acct_type = rorl.svbrorl_crn_acct_type
   AND sech.svbsech_roster_type = rorl.svbrorl_roster_type
   AND sech.svbsech_seqno = rorl.svbrorl_seqno
UNION
SELECT svbrorl_process_priority, svbrorl_term_code, ssbsect_crn,
       svbrorl_dicd_code, svbrorl_seqno, svbrorl_roster_type,
       svbrorl_roster_type_desc, roster_type, svbrorl_crn_acct_type,
       NULL login_pidm, census_used,  NULL,
       NULL, active, svbrorl_active_ind, begin_date, end_date, rule_match,
       acct_match
  FROM (SELECT   svbrorl_term_code, ssbsect_crn, svbrorl_dicd_code,
                 svbrorl_seqno, svbrorl_process_priority, ssbsect_ptrm_code,
                 ssbsect_acct_code,
                 DECODE (svbrorl_roster_type,
                         'TR', G$_NLS.Get('SVWRORL-0011','SQL','Total Roster'), /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                         'CR', G$_NLS.Get('SVWRORL-0012','SQL','Census Roster'), /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                         'WR', G$_NLS.Get('SVWRORL-0013','SQL','W Roster'), /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                         'OR', G$_NLS.Get('SVWRORL-0014','SQL','Opening Day Roster') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                        ) svbrorl_roster_type,
                 svbrorl_roster_type_desc, svbrorl_roster_type roster_type,
                 svbrorl_crn_acct_type,
                 (CASE
                     WHEN svbrorl_roster_type IN ('TR', 'OR', 'WR')
                        THEN G$_NLS.Get('SVWRORL-0015','SQL','Not Applicable') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                     WHEN svbrorl_roster_type = 'CR'
                     AND sv_fac_droproster_bp.f_is_census2 (svbrorl_term_code,
                                                            ssbsect_crn
                                                           ) = 'N'
                        THEN G$_NLS.Get('SVWRORL-0016','SQL','Census 1') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                     ELSE G$_NLS.Get('SVWRORL-0017','SQL','Census 1') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                  END
                 ) census_used,
                 (CASE
                     WHEN TRUNC(SYSDATE)                                          /*C3SC AS 09/23/2010 CHANGE Defect:1-CVHYHZ */
                            BETWEEN sv_fac_droproster_bp.f_avail_strt_date
                                                          (svbrorl_term_code,
                                                           ssbsect_crn,
                                                           svbrorl_roster_type
                                                          )
                                AND sv_fac_droproster_bp.f_avail_end_date
                                                          (svbrorl_term_code,
                                                           ssbsect_crn,
                                                           svbrorl_roster_type
                                                          )
                     AND svbrorl_active_ind = 'Y'
                        THEN G$_NLS.Get('SVWRORL-0018','SQL','Now') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                     WHEN TRUNC(SYSDATE) >                                        /*C3SC AS 09/23/2010 CHANGE Defect:1-CVHYHZ */
                            sv_fac_droproster_bp.f_avail_end_date
                                                          (svbrorl_term_code,
                                                           ssbsect_crn,
                                                           svbrorl_roster_type
                                                          )
                     AND svbrorl_active_ind = 'Y'
                        THEN G$_NLS.Get('SVWRORL-0019','SQL','Expired') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                     WHEN TRUNC(SYSDATE) <                                           /*C3SC AS 09/23/2010 CHANGE Defect:1-CVHYHZ */
                            sv_fac_droproster_bp.f_avail_strt_date
                                                          (svbrorl_term_code,
                                                           ssbsect_crn,
                                                           svbrorl_roster_type
                                                          )
                     AND svbrorl_active_ind = 'Y'
                        THEN G$_NLS.Get('SVWRORL-0020','SQL','Future') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                     WHEN svbrorl_active_ind = 'N' or sv_fac_droproster_bp.f_avail_strt_date (svbrorl_term_code,
                                                          ssbsect_crn,
                                                          svbrorl_roster_type
                                                         ) is null
                        THEN G$_NLS.Get('SVWRORL-0021','SQL','History') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                  END
                 ) active,
                 svbrorl_active_ind,
                 sv_fac_droproster_bp.f_avail_strt_date
                                              (svbrorl_term_code,
                                               ssbsect_crn,
                                               svbrorl_roster_type
                                              ) begin_date,
                 sv_fac_droproster_bp.f_avail_end_date
                                                (svbrorl_term_code,
                                                 ssbsect_crn,
                                                 svbrorl_roster_type
                                                ) end_date,
                 (CASE
                     WHEN svbrorl_roster_type = 'TR'
                     AND ssbsect_ptrm_code IS NULL
                        THEN 'TR'
                     WHEN svbrorl_roster_type = 'CR'
                     AND ssbsect_ptrm_code IS NOT NULL
                     AND ssbsect_acct_code =
                            (SELECT stvacct_code
                               FROM stvacct
                              WHERE NVL (stvacct_actual_ind, 'N') <> 'Y'
                                AND ssbsect_acct_code = stvacct_code)
                        THEN 'CR'
                     WHEN svbrorl_roster_type = 'OR'
                     AND ssbsect_ptrm_code IS NOT NULL
                        THEN 'OR'
                     WHEN svbrorl_roster_type = 'WR'
                     AND ssbsect_ptrm_code IS NOT NULL
                        THEN 'WR'
                     WHEN svbrorl_roster_type = 'TR'
                     AND ssbsect_ptrm_code IS NOT NULL
                        THEN 'TR'
                  END
                 ) rule_match,
                 (CASE
                     WHEN svbrorl_crn_acct_type = 'O'
                     AND ssbsect_ptrm_code IS NULL
                        THEN 'O'
                     WHEN svbrorl_crn_acct_type = 'C'
                     AND ssbsect_ptrm_code IS NOT NULL
                     AND ssbsect_acct_code =
                            (SELECT stvacct_code
                               FROM stvacct
                              WHERE NVL (stvacct_actual_ind, 'N') <> 'Y'
                                AND ssbsect_acct_code = stvacct_code)
                        THEN 'C'
                     WHEN svbrorl_crn_acct_type = 'A'
                     AND ssbsect_ptrm_code IS NOT NULL
                        THEN 'A'
                     WHEN svbrorl_crn_acct_type = 'P'
                     AND ssbsect_ptrm_code IS NOT NULL
                     AND ssbsect_acct_code =
                            (SELECT stvacct_code
                               FROM stvacct
                              WHERE NVL (stvacct_actual_ind, 'N') = 'Y'
                                AND ssbsect_acct_code = stvacct_code)
                        THEN 'P'
                  END
                 ) acct_match
            FROM svbrorl, ssbsect, stvcamp
           WHERE ssbsect_camp_code = stvcamp_code
             AND stvcamp_dicd_code = svbrorl_dicd_code
             AND svbrorl_term_code = ssbsect_term_code
             AND svbrorl_active_ind = 'Y'
             AND NOT EXISTS (
                    SELECT svbsech_seqno
                      FROM svbsech
                     WHERE svbsech_term_code = svbrorl_term_code
                       AND svbsech_dicd_code = svbrorl_dicd_code
                       AND svbsech_crn_acct_type = svbrorl_crn_acct_type
                       AND svbsech_roster_type = svbrorl_roster_type
                       AND DECODE(svbsech_roster_type,'CR',svbsech_roster_type||svbsech_census_used_type,'CR1') = 'CR1'    /*C3SC AS 08/03/2010 CHANGE Defect:1-CVHYHZ */
                       AND svbsech_crn = ssbsect_crn
                       AND svbsech_seqno = svbrorl_seqno)
        ORDER BY ssbsect_crn, svbrorl_process_priority) svbrorl_query
 WHERE rule_match IS NOT NULL AND acct_match IS NOT NULL
UNION
SELECT svbrorl_process_priority, svbrorl_term_code, ssbsect_crn,
       svbrorl_dicd_code, svbrorl_seqno, svbrorl_roster_type,
       svbrorl_roster_type_desc, roster_type, svbrorl_crn_acct_type,
       NULL login_pidm, census_used, NULL,
       NULL, active, svbrorl_active_ind, begin_date, end_date, rule_match,
       acct_match
  FROM (SELECT   svbrorl_term_code, ssbsect_crn, svbrorl_dicd_code,
                 svbrorl_seqno, svbrorl_process_priority, ssbsect_ptrm_code,
                 ssbsect_acct_code,
                 DECODE (svbrorl_roster_type,
                         'TR', G$_NLS.Get('SVWRORL-0023','SQL','Total Roster'), /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                         'CR', G$_NLS.Get('SVWRORL-0024','SQL','Census Roster'), /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                         'WR', G$_NLS.Get('SVWRORL-0025','SQL','W Roster'), /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                         'OR', G$_NLS.Get('SVWRORL-0026','SQL','Opening Day Roster') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                        ) svbrorl_roster_type,
                 svbrorl_roster_type_desc,
                 svbrorl_roster_type ||'2' roster_type,
                 svbrorl_crn_acct_type, G$_NLS.Get('SVWRORL-0027','SQL','Census 2') census_used, /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                 (CASE
                     WHEN TRUNC(SYSDATE)                        /*C3SC AS 09/23/2010 CHANGE Defect:1-CVHYHZ */
                            BETWEEN sv_fac_droproster_bp.f_avail_strt_date
                                                          (svbrorl_term_code,
                                                           ssbsect_crn,
                                                           'CR2'
                                                          )
                                AND sv_fac_droproster_bp.f_avail_end_date
                                                          (svbrorl_term_code,
                                                           ssbsect_crn,
                                                          'CR2'
                                                          )
                     AND svbrorl_active_ind = 'Y'
                        THEN G$_NLS.Get('SVWRORL-0028','SQL','Now') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                     WHEN TRUNC(SYSDATE) >                        /*C3SC AS 09/23/2010 CHANGE Defect:1-CVHYHZ */
                            sv_fac_droproster_bp.f_avail_end_date
                                                          (svbrorl_term_code,
                                                           ssbsect_crn,
                                                           'CR2'
                                                          )
                     AND svbrorl_active_ind = 'Y'
                        THEN G$_NLS.Get('SVWRORL-0029','SQL','Expired') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                     WHEN TRUNC(SYSDATE) <                           /*C3SC AS 09/23/2010 CHANGE Defect:1-CVHYHZ */
                            sv_fac_droproster_bp.f_avail_strt_date
                                                          (svbrorl_term_code,
                                                           ssbsect_crn,
                                                           'CR2'
                                                          )
                     AND svbrorl_active_ind = 'Y'
                        THEN G$_NLS.Get('SVWRORL-0030','SQL','Future') /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                     WHEN svbrorl_active_ind = 'N' or sv_fac_droproster_bp.f_avail_strt_date (svbrorl_term_code,
                                                          ssbsect_crn,
                                                          'CR2'
                                                         ) is null
                        THEN G$_NLS.Get('SVWRORL-0031','SQL','History' ) /*C3SC MV 07/01/2010 CHANGE Defect:1-CCFDBZ */
                  END
                 ) active,
                 svbrorl_active_ind,
                 sv_fac_droproster_bp.f_avail_strt_date
                                              (svbrorl_term_code,
                                               ssbsect_crn,
                                               'CR2'
                                              ) begin_date,
                 sv_fac_droproster_bp.f_avail_end_date
                                                (svbrorl_term_code,
                                                 ssbsect_crn,
                                                 'CR2'
                                                ) end_date,
                 'CR2' rule_match,
                 (CASE
                     WHEN svbrorl_crn_acct_type = 'O'
                     AND ssbsect_ptrm_code IS NULL
                        THEN 'O'
                     WHEN svbrorl_crn_acct_type = 'C'
                     AND ssbsect_ptrm_code IS NOT NULL
                     AND ssbsect_acct_code =
                            (SELECT stvacct_code
                               FROM stvacct
                              WHERE NVL (stvacct_actual_ind, 'N') <> 'Y'
                                AND ssbsect_acct_code = stvacct_code)
                        THEN 'C'
                     WHEN svbrorl_crn_acct_type = 'A'
                     AND ssbsect_ptrm_code IS NOT NULL
                        THEN 'A'
                     WHEN svbrorl_crn_acct_type = 'P'
                     AND ssbsect_ptrm_code IS NOT NULL
                     AND ssbsect_acct_code =
                            (SELECT stvacct_code
                               FROM stvacct
                              WHERE NVL (stvacct_actual_ind, 'N') = 'Y'
                                AND ssbsect_acct_code = stvacct_code)
                        THEN 'P'
                  END
                 ) acct_match
            FROM svbrorl, ssbsect, stvcamp
           WHERE ssbsect_camp_code = stvcamp_code
             AND stvcamp_dicd_code = svbrorl_dicd_code
             AND svbrorl_term_code = ssbsect_term_code
             AND svbrorl_active_ind = 'Y'
             AND NOT EXISTS (
                    SELECT svbsech_seqno
                      FROM svbsech
                     WHERE svbsech_term_code = svbrorl_term_code
                       AND svbsech_dicd_code = svbrorl_dicd_code
                       AND svbsech_crn_acct_type = svbrorl_crn_acct_type
                       AND svbsech_roster_type = svbrorl_roster_type
                       AND svbsech_roster_type||svbsech_census_used_type = DECODE(svbsech_roster_type,'CR',     /*C3SC AS 09/21/2010 CHANGE Defect:1-CVHYHZ */
                        'CR2',svbsech_roster_type||svbsech_census_used_type)
                       AND svbsech_crn = ssbsect_crn
                       AND svbsech_seqno = svbrorl_seqno)
        ORDER BY ssbsect_crn, svbrorl_process_priority) svbrorl_query
 WHERE rule_match IS NOT NULL
   AND acct_match IS NOT NULL
   AND roster_type = 'CR2'
   AND sv_fac_droproster_bp.f_is_census2 (svbrorl_term_code, ssbsect_crn) =
                                                                           'Y'"
"BANINST1","SVWMIST","This view lists the records with a positive status in SVAMIST form.","SELECT SVBSIST_PIDM,
       SVBSIST_DICD_CODE,
       SVBSIST_TERM_CODE
FROM SVBSIST
WHERE SVBSIST.SVBSIST_SIST_CODE IS NOT NULL
  AND SVBSIST.SVBSIST_SIST_CODE NOT IN( '0','X')
UNION
 SELECT SVBMESA_PIDM,
        SVBMESA_DICD_CODE,
        SVBMESA_TERM_CODE
   FROM SVBMESA
  WHERE SVBMESA.SVBMESA_MESA_CODE IS NOT NULL
   AND SVBMESA.SVBMESA_MESA_CODE <> '0'
   AND sv_mis_sg.f_get_apply_promgram(SVBMESA_TERM_CODE,SVBMESA_DICD_CODE,'MESA') <> 'Y'
UNION
  SELECT SVBPNTE_PIDM,
         SVBPNTE_DICD_CODE,
         SVBPNTE_TERM_CODE
    FROM SVBPNTE
    WHERE SVBPNTE.SVBPNTE_PNTE_CODE IS NOT NULL
     AND SVBPNTE.SVBPNTE_PNTE_CODE <> '0'
     AND sv_mis_sg.f_get_apply_promgram(SVBPNTE_TERM_CODE,SVBPNTE_DICD_CODE,'PUENTE') <> 'Y'
UNION
  SELECT SVBMCHS_PIDM,
         SVBMCHS_DICD_CODE,
         SVBMCHS_TERM_CODE
    FROM SVBMCHS
    WHERE SVBMCHS.SVBMCHS_MCHS_CODE IS NOT NULL
      AND SVBMCHS.SVBMCHS_MCHS_CODE <> '0'
      AND sv_mis_sg.f_get_apply_promgram(SVBMCHS_TERM_CODE,SVBMCHS_DICD_CODE,'MCHS') <> 'Y'
UNION
  SELECT SVBSUST_PIDM,
         SVBSUST_DICD_CODE,
         SVBSUST_TERM_CODE
   FROM SVBSUST
  WHERE SVBSUST.SVBSUST_SUST_CODE IS NOT NULL
    AND SVBSUST.SVBSUST_SUST_CODE <> '0'
    AND sv_mis_sg.f_get_apply_promgram(SVBSUST_TERM_CODE,SVBSUST_DICD_CODE,'UMOJA') <> 'Y'
 UNION
  SELECT SVBSCAA_PIDM,
         SVBSCAA_DICD_CODE,
         SVBSCAA_TERM_CODE
    FROM SVBSCAA
   WHERE SVBSCAA.SVBSCAA_CAA_IND = 'Y'
     AND sv_mis_sg.f_get_apply_promgram(SVBSCAA_TERM_CODE,SVBSCAA_DICD_CODE,'CAA') <> 'Y'"
"BANINST1","SVWMISH","This view lists the Effective Terms that exists on SVAMISH Form.","SELECT A.SVBSMSS_PIDM,
       A.SVBSMSS_DICD_CODE,
       A.SVBSMSS_EFF_TERM,
       STVTERM_DESC,
       (select NVL(MIN(B.SVBSMSS_EFF_TERM),'999999')
         FROM   SVBSMSS B
         WHERE  B.SVBSMSS_EFF_TERM > A.SVBSMSS_EFF_TERM
           AND  B.SVBSMSS_DICD_CODE = A.SVBSMSS_DICD_CODE
            AND B.SVBSMSS_PIDM = A.SVBSMSS_PIDM
        ) TO_TERM
 from SVBSMSS A ,
      STVTERM
 where STVTERM_CODE = A.SVBSMSS_EFF_TERM
UNION
( SELECT C.SVBSFYS_PIDM,
       C.SVBSFYS_DICD_CODE,
       C.SVBSFYS_EFF_TERM,
       STVTERM_DESC,
       (select NVL(MIN(D.SVBSFYS_EFF_TERM),'999999')
         FROM   SVBSFYS D
         WHERE  D.SVBSFYS_EFF_TERM > C.SVBSFYS_EFF_TERM
           AND  D.SVBSFYS_DICD_CODE = C.SVBSFYS_DICD_CODE
           AND  D.SVBSFYS_PIDM = C.SVBSFYS_PIDM
        ) TO_TERM
 from  SVBSFYS C,
       STVTERM
 WHERE STVTERM_CODE = C.SVBSFYS_EFF_TERM
)
UNION
(select E.SVBSGPD_PIDM,
       E.SVBSGPD_DICD_CODE,
       E.SVBSGPD_EFF_TERM,
       STVTERM_DESC,
       (select NVL(MIN(F.SVBSGPD_EFF_TERM),'999999')
         FROM   SVBSGPD F
         WHERE F.SVBSGPD_EFF_TERM > E.SVBSGPD_EFF_TERM
           AND F.SVBSGPD_DICD_CODE = E.SVBSGPD_DICD_CODE
           AND F.SVBSGPD_PIDM = E.SVBSGPD_PIDM
        ) TO_TERM
 from SVBSGPD E ,
      STVTERM
 where STVTERM_CODE = E.SVBSGPD_EFF_TERM
 )"
"BANINST1","SVWMIS2","This view lists the records with a positive status in SVAMISH form.","SELECT svbsmss_PIDM,
         svbsmss_dicd_code,
         svbsmss_eff_term
    FROM svbsmss
   WHERE ( SVBSMSS_STUDENT_ACTIVE_IND = 'Y'
           OR SVBSMSS_STUDENT_VETERAN_IND = 'Y'
           OR SVBSMSS_STUDENT_RESERVE_IND = 'Y'
           OR SVBSMSS_STUDENT_NATL_GRD_IND = 'Y'
           OR SVBSMSS_GUARDIAN_ACTIVE_IND = 'Y'
           OR SVBSMSS_GUARDIAN_VETERAN_IND = 'Y'
           OR SVBSMSS_GUARDIAN_RESERVE_IND = 'Y'
           OR SVBSMSS_GUARDIAN_NATL_GRD_IND = 'Y'
         )
  UNION
  SELECT svbsfys_pidm,
         svbsfys_dicd_code,
         svbsfys_eff_term
    FROM svbsfys
   WHERE svbsfys_foster_youth_cde IS NOT NULL  -- C3SC Defect 1-1DQE4KD JC 04/17/2013 CHANGED
     AND svbsfys_foster_youth_cde <> '0'       -- C3SC Defect 1-1DQE4KD JC 04/17/2013 ADDED
  UNION
  SELECT SVBSGPD_PIDM,
         SVBSGPD_DICD_CODE,
         SVBSGPD_EFF_TERM
    FROM  SVBSGPD
   WHERE ( ( SVBSGPD_GUARD_1_GEDL_CODE IS NOT NULL
             AND SVBSGPD_GUARD_1_GEDL_CODE NOT IN ('X','Y')
            )
        OR ( SVBSGPD_GUARD_2_GEDL_CODE IS NOT NULL
              AND SVBSGPD_GUARD_2_GEDL_CODE NOT IN ('X','Y')
            )
         )"
"BANINST1","SVWGCNT","This view lists the grades and the corresponding count for each grade corresponding to a term and a CRN.","SELECT SIRASGN_PIDM,
       SFRSTCR_TERM_CODE,
       SFRSTCR_CRN,
       SHRGRDE_QUALITY_POINTS,
       SHRGRDE_NUMERIC_VALUE,
       SFRSTCR_GRDE_CODE,
       COUNT(*)
  FROM STVRSTS, SFRSTCR, SHRGRDE,SIRASGN
 WHERE SIRASGN_TERM_CODE=SFRSTCR_TERM_CODE
   AND SIRASGN_CRN=SFRSTCR_CRN
   AND STVRSTS_CODE = SFRSTCR_RSTS_CODE
   AND STVRSTS_GRADABLE_IND = 'Y'
   AND SFRSTCR_GRDE_CODE = SHRGRDE_CODE
   AND SFRSTCR.SFRSTCR_LEVL_CODE = SHRGRDE.SHRGRDE_LEVL_CODE
   AND SFRSTCR_GRDE_CODE IS NOT NULL
 GROUP BY SIRASGN_PIDM,SFRSTCR_TERM_CODE,SFRSTCR_CRN,SHRGRDE_QUALITY_POINTS,SHRGRDE_NUMERIC_VALUE,SFRSTCR_GRDE_CODE
 ORDER BY SHRGRDE_QUALITY_POINTS desc,SHRGRDE_NUMERIC_VALUE desc,SFRSTCR_GRDE_CODE "
"BANINST1","SSVXMTI","Cross List Meeting Time View","SELECT SSRXLST_TERM_CODE,
       SSRXLST_XLST_GROUP,
       SSRXLST_CRN,
       SSRMEET_DAYS_CODE,
       SSRMEET_DAY_NUMBER,
       SSRMEET_BEGIN_TIME,
       SSRMEET_END_TIME,
       SSRMEET_BLDG_CODE,
       SSRMEET_ROOM_CODE,
       SSRMEET_ACTIVITY_DATE,
       SSRMEET_START_DATE,
       SSRMEET_END_DATE,
       SSRMEET_CATAGORY,
       SSRMEET_SUN_DAY,
       SSRMEET_MON_DAY,
       SSRMEET_TUE_DAY,
       SSRMEET_WED_DAY,
       SSRMEET_THU_DAY,
       SSRMEET_FRI_DAY,
       SSRMEET_SAT_DAY,
       SSRMEET_SCHD_CODE,
       SSRMEET_OVER_RIDE,
       SSRMEET_CREDIT_HR_SESS,
       SSRMEET_MEET_NO,
       SSRMEET_HRS_WEEK,
       SSRMEET_MTYP_CODE
  FROM SSRMEET, SSRXLST
 WHERE SSRXLST_TERM_CODE = SSRMEET_TERM_CODE
   AND SSRXLST_CRN = SSRMEET_CRN
UNION ALL
SELECT SSRXLST_TERM_CODE,
       SSRXLST_XLST_GROUP,
       SSRXLST_CRN,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL
  FROM SSRXLST
 WHERE NOT EXISTS (SELECT 'X'
          FROM SSRMEET
         WHERE SSRMEET_TERM_CODE = SSRXLST_TERM_CODE
           AND SSRXLST_CRN = SSRMEET_CRN)"
"BANINST1","SSVSECT","Section Cross List View","SELECT 	SSBSECT.SSBSECT_TERM_CODE,
        SSBSECT.SSBSECT_CRN,
        SSBSECT.SSBSECT_SUBJ_CODE,
        SSBSECT.SSBSECT_CRSE_NUMB,
        SSBSECT.SSBSECT_PTRM_CODE,
        SSBSECT.SSBSECT_REG_FROM_DATE,
        SSBSECT.SSBSECT_REG_TO_DATE,
        SSBSECT.SSBSECT_LEARNER_REGSTART_FDATE,
        SSBSECT.SSBSECT_LEARNER_REGSTART_TDATE,
        SSBSECT.SSBSECT_INSM_CODE,
        SSBSECT.SSBSECT_DUNT_CODE,
        SSBSECT.SSBSECT_NUMBER_OF_UNITS,
        SSBSECT.SSBSECT_NUMBER_OF_EXTENSIONS,
        SSBSECT.SSBSECT_CRSE_TITLE,
        SCBCRSE.SCBCRSE_TITLE,
        SSBSECT.SSBSECT_SEQ_NUMB,
        SSBSECT.SSBSECT_LINK_IDENT,
        SSBSECT.SSBSECT_SSTS_CODE,
        SSBSECT.SSBSECT_SCHD_CODE,
        SSBSECT.SSBSECT_CAMP_CODE,
        SSBSECT.SSBSECT_RESERVED_IND,
        SSBSECT.SSBSECT_MAX_ENRL,
        SSBSECT.SSBSECT_ENRL,
        SSBSECT.SSBSECT_SEATS_AVAIL,
        SSBSECT.SSBSECT_WAIT_CAPACITY,
        SSBSECT.SSBSECT_WAIT_COUNT,
        SSBSECT.SSBSECT_WAIT_AVAIL,
        substr(ssksels.f_get_ssrxlst_group(SSBSECT.SSBSECT_TERM_CODE,SSBSECT.SSBSECT_CRN),1,2)
	FROM  SSBSECT, SCBCRSE
        WHERE SCBCRSE_SUBJ_CODE  = SSBSECT.SSBSECT_SUBJ_CODE
          AND SCBCRSE_CRSE_NUMB  = SSBSECT.SSBSECT_CRSE_NUMB
          AND SCBCRSE_EFF_TERM =
                 (SELECT MAX (SCBCRSE_EFF_TERM)
                    FROM SCBCRSE
                   WHERE SCBCRSE_SUBJ_CODE  = SSBSECT_SUBJ_CODE
                     AND SCBCRSE_CRSE_NUMB  = SSBSECT.SSBSECT_CRSE_NUMB
                     AND SCBCRSE_EFF_TERM <= SSBSECT.SSBSECT_TERM_CODE)"
"BANINST1","SSVSEC2","","select
 ssbsect_term_code,
 ssbsect_crn,
 ssbsect_seq_numb,
 substr(f_active_section_ind(ssbsect_ssts_code),1,1),
 substr(f_active_course_ind(a.scbcrse_csta_code),1,1),
 substr(f_check_for_course_coreqs
     (ssbsect_subj_code,ssbsect_crse_numb,ssbsect_term_code),1,1),
 substr(f_check_for_course_prereqs
     (ssbsect_subj_code,ssbsect_crse_numb,ssbsect_term_code,''),1,1),
 substr(f_check_for_section_coreqs(ssbsect_term_code, ssbsect_crn),1,1),
 substr(f_check_for_section_prereqs(ssbsect_term_code, ssbsect_crn,''),1,1),
 a.scbcrse_eff_term,
 a.scbcrse_coll_code,
 a.scbcrse_dept_code,
 substr(f_get_course_levels
     (ssbsect_subj_code,ssbsect_crse_numb,ssbsect_term_code,1),1,2),
 substr(f_get_course_levels
     (ssbsect_subj_code,ssbsect_crse_numb,ssbsect_term_code,2),1,2),
 substr(f_get_course_levels
     (ssbsect_subj_code,ssbsect_crse_numb,ssbsect_term_code,3),1,2),
 substr(f_get_course_levels
     (ssbsect_subj_code,ssbsect_crse_numb,ssbsect_term_code,4),1,2),
 a.scbcrse_divs_code,
 ssbsect_subj_code,
 ssbsect_crse_numb,
 a.scbcrse_ceu_ind,
 a.scbcrse_csta_code,
 ssbsect_credit_hrs,
 a.scbcrse_credit_hr_low,
 a.scbcrse_credit_hr_high,
 a.scbcrse_credit_hr_ind,
 nvl(ssbsect_bill_hrs, a.scbcrse_bill_hr_low),
 a.scbcrse_bill_hr_low,
 a.scbcrse_bill_hr_high,
 a.scbcrse_bill_hr_ind,
 ssbsect_ssts_code,
 ssbsect_camp_code,
 nvl(ssbsect_gmod_code,substr(f_default_gmod
     (ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code),1,1)),
 nvl(ssbsect_crse_title, a.scbcrse_title),
 ssbsect_sapr_code,
 ssbsect_census_enrl,
 ssbsect_census_enrl_date,
 ssbsect_census_2_enrl,
 ssbsect_census_2_date,
 ssbsect_proj_enrl,
 ssbsect_max_enrl,
 ssbsect_enrl,
 ssbsect_seats_avail,
 ssbsect_ptrm_code,
 ssbsect_ptrm_start_date,
 ssbsect_ptrm_end_date,
 ssbsect_link_ident,
 SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,1,'DS'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,2,'DS'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,3,'DS'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,4,'DS'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,5,'DS'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,6,'DS'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,7,'DS'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,8,'DS'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,9,'DS'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'BT'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'ET'),1,4),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'BC'),1,6),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'RC'),1,10),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'SC'),1,3),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'MD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'TD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'WD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'DT'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'FD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'SD'),1,1),
SUBSTR(ssksels.f_ssrmeet_value(ssbsect_term_code,ssbsect_crn,10,'DS'),1,1),
SUBSTR(scksels.f_scrattr_value('CRSEATTR',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,1,'SC'),1,4),
SUBSTR(scksels.f_scrattr_value('CRSEATTR',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,2,'SC'),1,4),
SUBSTR(scksels.f_scrattr_value('CRSEATTR',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,3,'SC'),1,4),
SUBSTR(scksels.f_scrattr_value('CRSEATTR',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,4,'SC'),1,4),
SUBSTR(scksels.f_scrattr_value('CRSEATTR',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,5,'SC'),1,4),
 substr(f_more_attributes
     (scbcrse_subj_code, scbcrse_crse_numb, scbcrse_eff_term),1,1),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, 'Y',''),  'ID'), 1,9),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, 'Y',''),  'LAST'), 1,60),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, 'Y',''),  'FIRST'), 1,60),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, 'Y',''), 'M'), 1,1),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, '',1),  'ID'), 1,9),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, '',1),  'LAST'), 1,60),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, '',1),  'FIRST'), 1,60),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, '',1), 'M'), 1,1),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, '',2),  'ID'), 1,9),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, '',2),  'LAST'), 1,60),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, '',2),  'FIRST'), 1,60),
SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, '',2), 'M'), 1,1),
DECODE( ssksels.f_section_instructor( ssbsect_crn, ssbsect_term_code, '',3), null,'N','Y'),
 SUBSTR(ssksels.f_ssbovrr_value(ssbsect_term_code,ssbsect_crn,'CLC'),1,2),
 SUBSTR(ssksels.f_ssbovrr_value(ssbsect_term_code,ssbsect_crn,'DSC'),1,4),
 SUBSTR(ssksels.f_ssbovrr_value(ssbsect_term_code,ssbsect_crn,'DTC'),1,4),
 SUBSTR(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,1,'SC'),1,3),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,1,'WL')),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,1,'ME')),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,1,'AW')),
 SUBSTR(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,2,'SC'),1,3),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,2,'WL')),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,2,'ME')),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,2,'AW')),
 SUBSTR(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,3,'SC'),1,3),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,3,'WL')),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,3,'ME')),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,3,'AW')),
 SUBSTR(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,4,'SC'),1,3),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,4,'WL')),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,4,'ME')),
 TO_NUMBER(scksels.f_scrschd_value('CRSESCHD',ssbsect_subj_code, ssbsect_crse_numb, ssbsect_term_code,4,'AW'))
from scbcrse a,
     ssbsect
where
  a.scbcrse_subj_code = ssbsect_subj_code
  and a.scbcrse_crse_numb = ssbsect_crse_numb
  and a.scbcrse_eff_term =
      scksels.f_get_scbcrse_max_term_code(ssbsect_subj_code,
            ssbsect_crse_numb,  ssbsect_term_code)"
"BANINST1","SSVMEET","Section Meeting Time View","SELECT SSRMEET.SSRMEET_TERM_CODE,
       SSRMEET.SSRMEET_CRN,
       SSBSECT.SSBSECT_SUBJ_CODE,
       SSBSECT.SSBSECT_CRSE_NUMB,
       SSBSECT.SSBSECT_PTRM_CODE,
       SSRMEET.SSRMEET_START_DATE,
       SSRMEET.SSRMEET_END_DATE,
       SSRMEET.SSRMEET_DAY_NUMBER,
       SSRMEET.SSRMEET_MON_DAY,
       SSRMEET.SSRMEET_TUE_DAY,
       SSRMEET.SSRMEET_WED_DAY,
       SSRMEET.SSRMEET_THU_DAY,
       SSRMEET.SSRMEET_FRI_DAY,
       SSRMEET.SSRMEET_SAT_DAY,
       SSRMEET.SSRMEET_SUN_DAY,
       SSRMEET.SSRMEET_BEGIN_TIME,
       SSRMEET.SSRMEET_END_TIME,
       SSRMEET.SSRMEET_BLDG_CODE,
       SSRMEET.SSRMEET_ROOM_CODE,
       SSRMEET.SSRMEET_FUNC_CODE,
       DECODE(SSRMEET.SSRMEET_BLDG_CODE,NULL,NULL,
             (SELECT SLBBLDG.SLBBLDG_CAMP_CODE FROM SLBBLDG
               WHERE SLBBLDG.SLBBLDG_BLDG_CODE = SSRMEET.SSRMEET_BLDG_CODE)),
       SSRMEET.SSRMEET_OVER_RIDE,
       SUBSTR(SSKSELS.F_GET_SSRXLST_GROUP(SSRMEET.SSRMEET_TERM_CODE,
                                   SSRMEET.SSRMEET_CRN),1,2)
  FROM SSBSECT, SSRMEET
 WHERE SSBSECT.SSBSECT_TERM_CODE = SSRMEET.SSRMEET_TERM_CODE
   AND SSBSECT.SSBSECT_CRN = SSRMEET.SSRMEET_CRN
UNION ALL
SELECT SSRMEET.SSRMEET_TERM_CODE,
       SSRMEET.SSRMEET_CRN,
       NULL,
       NULL,
       NULL,
       SSRMEET.SSRMEET_START_DATE,
       SSRMEET.SSRMEET_END_DATE,
       SSRMEET.SSRMEET_DAY_NUMBER,
       SSRMEET.SSRMEET_MON_DAY,
       SSRMEET.SSRMEET_TUE_DAY,
       SSRMEET.SSRMEET_WED_DAY,
       SSRMEET.SSRMEET_THU_DAY,
       SSRMEET.SSRMEET_FRI_DAY,
       SSRMEET.SSRMEET_SAT_DAY,
       SSRMEET.SSRMEET_SUN_DAY,
       SSRMEET.SSRMEET_BEGIN_TIME,
       SSRMEET.SSRMEET_END_TIME,
       SSRMEET.SSRMEET_BLDG_CODE,
       SSRMEET.SSRMEET_ROOM_CODE,
       SSRMEET.SSRMEET_FUNC_CODE,
       DECODE(SSRMEET.SSRMEET_BLDG_CODE,NULL,NULL,
             (SELECT SLBBLDG.SLBBLDG_CAMP_CODE FROM SLBBLDG
               WHERE SLBBLDG.SLBBLDG_BLDG_CODE = SSRMEET.SSRMEET_BLDG_CODE)),
       SSRMEET.SSRMEET_OVER_RIDE,
       NULL
  FROM SSRMEET
 WHERE NOT EXISTS
 (SELECT 'X'
          FROM SSBSECT
         WHERE SSBSECT.SSBSECT_TERM_CODE = SSRMEET.SSRMEET_TERM_CODE
           AND SSBSECT.SSBSECT_CRN = SSRMEET.SSRMEET_CRN)"
"BANINST1","SSVMDAY","BANNERQuest Student view","select
 SSRMEET_TERM_CODE,
 SSRMEET_CRN,
 STVDAYS_CODE,
 to_number(STVDAYS_NUMBER),
 SSRMEET_BEGIN_TIME,
 SSRMEET_END_TIME,
 SSRMEET_BLDG_CODE,
 SSRMEET_ROOM_CODE,
 SSRMEET_ACTIVITY_DATE,
 SSRMEET_START_DATE,
 SSRMEET_END_DATE,
 SSRMEET_CATAGORY,
 SSRMEET_SUN_DAY,
 SSRMEET_MON_DAY,
 SSRMEET_TUE_DAY,
 SSRMEET_WED_DAY,
 SSRMEET_THU_DAY,
 SSRMEET_FRI_DAY,
 SSRMEET_SAT_DAY,
 SSRMEET_SCHD_CODE,
 SSRMEET_OVER_RIDE,
 SSRMEET_CREDIT_HR_SESS,
 SSRMEET_MEET_NO,
 SSRMEET_HRS_WEEK
 from stvdays, ssrmeet
where stvdays_code = ssrmeet_sun_day
   or stvdays_code = ssrmeet_mon_day
   or stvdays_code = ssrmeet_tue_day
   or stvdays_code = ssrmeet_wed_day
   or stvdays_code = ssrmeet_thu_day
   or stvdays_code = ssrmeet_fri_day
   or stvdays_code = ssrmeet_sat_day

 "
"BANINST1","SSVENRL","This is the view of the Catalog and Schedule information for use by Enrollment Management.","select
 ssvenr1_term_code,
 substr(f_get_desc_fnc('STVTERM',ssvenr1_term_code,30),1,30),
 ssvenr1_crn,
 ssvenr1_ptrm_code,
 substr(decode(ssvenr1_ptrm_code,null,null,f_get_desc_fnc
     ('STVPTRM',ssvenr1_ptrm_code,30)),1,30),
 ssvenr1_subj_code,
 substr(decode(ssvenr1_subj_code,null,null,f_get_desc_fnc
     ('STVSUBJ',ssvenr1_subj_code,30)),1,30),
 ssvenr1_crse_numb,
 ssvenr1_seq_numb,
 ssvenr1_schd_code,
 substr(decode(ssvenr1_schd_code,null,null,f_get_desc_fnc
     ('STVSCHD',ssvenr1_schd_code,30)),1,30),
 ssvenr1_camp_code,
 substr(decode(ssvenr1_camp_code,null,null,f_get_desc_fnc
     ('STVCAMP',ssvenr1_camp_code,30)),1,30),
 ssvenr1_crse_title,
 ssvenr1_credit_hrs,
 ssvenr1_bill_hrs,
 ssvenr1_prior_enrl,
 ssvenr1_proj_enrl,
 ssvenr1_max_enrl,
 ssvenr1_enrl,
 ssvenr1_seats_avail,
 ssvenr1_tot_credit_hrs,
 ssvenr1_census_enrl,
 ssvenr1_census_enrl_date,
 ssvenr1_census_2_date,
 ssvenr1_census_2_enrl,
 ssvenr1_name,
 ssvenr1_dept,
 substr(decode(ssvenr1_dept,null,null,f_get_desc_fnc
     ('STVDEPT',ssvenr1_dept,30)),1,30),
 ssvenr1_coll,
 substr(decode(ssvenr1_coll,null,null,f_get_desc_fnc
     ('STVCOLL',ssvenr1_coll,30)),1,30),
 ssvenr1_xlst_ind,
 ssvenr1_lec_hr,
 ssvenr1_lab_hr,
 ssvenr1_oth_hr,
 ssvenr1_cont_hr,
 ssvenr1_section_status,
 ssvenr1_activity_date
 from ssvenr1
 "
"BANINST1","SSVENR1","This is a view of Catalog and Schedule data for use by the Enrollment Management Product.","select ssbsect_term_code,
        ssbsect_crn,
        ssbsect_ptrm_code,
        ssbsect_subj_code,
        ssbsect_crse_numb,
        ssbsect_seq_numb,
        ssbsect_schd_code,
        ssbsect_camp_code,
        nvl(ssbsect_crse_title,x.scbcrse_title),
        nvl(ssbsect_credit_hrs,x.scbcrse_credit_hr_low),
        nvl(ssbsect_bill_hrs,x.scbcrse_bill_hr_low),
        nvl(ssbsect_prior_enrl,0),
        nvl(ssbsect_proj_enrl,0),
        nvl(ssbsect_max_enrl,0),
        nvl(ssbsect_enrl,0),
        nvl(ssbsect_seats_avail,0),
        nvl(ssbsect_tot_credit_hrs,0),
        nvl(ssbsect_census_enrl,0),
        trunc(ssbsect_census_enrl_date),
        trunc(ssbsect_census_2_date),
        nvl(ssbsect_census_2_enrl,0),
        substr(f_instructor_fnc
            (ssbsect_term_code, ssbsect_crn,'NAME'),1,35),
        substr(f_instructor_fnc
            (ssbsect_term_code, ssbsect_crn,'DEPT'),1,4),
        substr(f_instructor_fnc
            (ssbsect_term_code, ssbsect_crn,'COLL'),1,2),
        substr(f_xlst_fnc(ssbsect_term_code,ssbsect_crn),1,1),
        nvl(ssbsect_lec_hr,x.scbcrse_lec_hr_low),
        nvl(ssbsect_lab_hr,x.scbcrse_lab_hr_low),
        nvl(ssbsect_oth_hr,x.scbcrse_oth_hr_low),
        nvl(ssbsect_cont_hr,x.scbcrse_cont_hr_low),
        gtvsdax_translation_code,
        sysdate
   from scbcrse x, gtvsdax, ssbsect
  where x.scbcrse_crse_numb = ssbsect_crse_numb
     and x.scbcrse_subj_code = ssbsect_subj_code
     and x.scbcrse_eff_term =
         (select max(y.scbcrse_eff_term)
            from scbcrse y
           where y.scbcrse_eff_term <= ssbsect_term_code
             and y.scbcrse_subj_code = ssbsect_subj_code
             and y.scbcrse_crse_numb = ssbsect_crse_numb)
     and gtvsdax_external_code = ssbsect_ssts_code
     and gtvsdax_internal_code_group = 'SECTION STATUS'
 "
"BANINST1","SRVSTRG","This is a view of the contacts for recruits that do not have an admissions aplication for the associated term and level.","select
  srbrecr_pidm,
  srbrecr_admin_seqno,
  srbrecr_levl_code,
  substr(f_get_desc_fnc('STVLEVL',srbrecr_levl_code,30),1,30),
  srbrecr_term_code,
  substr(f_get_desc_fnc('STVTERM',srbrecr_term_code,30),1,30),
  sorcont_ctyp_code,
  substr(f_get_desc_fnc('STVCTYP',sorcont_ctyp_code,30),1,30),
  sorcont_contact_date,
  f_count_contacts_fnc
    (srbrecr_pidm, sorcont_ctyp_code, sorcont_contact_date),
  sysdate
 from sorcont, srbrecr
where sorcont_pidm = srbrecr_pidm
  and not exists
      (select 'X' from saradap
        where saradap_pidm = srbrecr_pidm
          and saradap_term_code_entry = srbrecr_term_code
          and saradap_levl_code = srbrecr_levl_code)
 "
"BANINST1","SRVSRCE","Recruiting Source View","SELECT
	 SRBRECR_PIDM,
   SRBRECR_TERM_CODE,
	 SRBRECR_ADMIN_SEQNO,
	 SRRRSRC_SBGI_CODE,
   STVSBGI_DESC,
   SRRRSRC_PRIMARY_SRCE_IND
FROM
	 STVSBGI,
	 SRRRSRC,
	 SRBRECR
WHERE
	     STVSBGI_CODE  = SRRRSRC_SBGI_CODE
  AND  SRRRSRC_PIDM  = SRBRECR_PIDM
  AND  SRRRSRC_TERM_CODE  = SRBRECR_TERM_CODE
  AND  SRRRSRC_ADMIN_SEQNO = SRBRECR_ADMIN_SEQNO
UNION ALL
SELECT
	 SRBRECR_PIDM,
	 SRBRECR_TERM_CODE,
	 SRBRECR_ADMIN_SEQNO,
	 NULL,
	 NULL,
	 NULL
FROM
	SRBRECR
WHERE
  NOT EXISTS (SELECT 1 FROM SRRRSRC
		WHERE  SRRRSRC_PIDM = SRBRECR_PIDM
  		AND  SRRRSRC_TERM_CODE  = SRBRECR_TERM_CODE
  		AND  SRRRSRC_ADMIN_SEQNO = SRBRECR_ADMIN_SEQNO)"
"BANINST1","SRVSEC1","This is the intermediate level view of secondary school info for recruits that do not have a corresponding applicant record for their term, pidm and level combination.","select
  srbrecr_term_code,
  srbrecr_pidm,
  srbrecr_levl_code,
  srbrecr_admin_seqno,
  spriden_id,
  substr(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  srbrecr_admt_code,
  '',
  srbrecr_degc_code,
  srbrecr_majr_code,
  srbrecr_full_part_ind,
  sorhsch_sbgi_code,
  sobsbgi_city,
  sobsbgi_natn_code,
  sobsbgi_stat_code,
  substr(decode(sorhsch_sbgi_code,null,null,
      f_hsch_type_fnc(sorhsch_sbgi_code)),1,3),
  substr(to_char(sorhsch_graduation_date,'YYYY'),1,4),
  sorhsch_percentile,
  sorhsch_class_rank,
  sorhsch_class_size,
  substr(f_inquirer_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  substr(f_prospect_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  '',
  '',
  '',
  substr(f_class_fnc
    (srbrecr_pidm, srbrecr_levl_code, srbrecr_term_code),1,10),
  srbrecr_styp_code,
  srbrecr_coll_code,
  srbrecr_camp_code,
  srbrecr_program_1
 from sobsbgi, spriden, srbrecr, sorhsch
where sobsbgi_sbgi_code = sorhsch_sbgi_code
  and spriden_change_ind is null
  and spriden_pidm = sorhsch_pidm
  and not exists
      (select 'X'
         from saradap
        where saradap_term_code_entry = srbrecr_term_code
          and saradap_pidm = srbrecr_pidm
          and saradap_levl_code = srbrecr_levl_code)
  and srbrecr_pidm = sorhsch_pidm
UNION ALL
select
  srbrecr_term_code,
  srbrecr_pidm,
  srbrecr_levl_code,
  srbrecr_admin_seqno,
  spriden_id,
  substr(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  srbrecr_admt_code,
  '',
  srbrecr_degc_code,
  srbrecr_majr_code,
  srbrecr_full_part_ind,
  sorhsch_sbgi_code,
  NULL,
  NULL,
  NULL,
  substr(decode(sorhsch_sbgi_code,null,null,
      f_hsch_type_fnc(sorhsch_sbgi_code)),1,3),
  substr(to_char(sorhsch_graduation_date,'YYYY'),1,4),
  sorhsch_percentile,
  sorhsch_class_rank,
  sorhsch_class_size,
  substr(f_inquirer_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  substr(f_prospect_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  '',
  '',
  '',
  substr(f_class_fnc
    (srbrecr_pidm, srbrecr_levl_code, srbrecr_term_code),1,10),
  srbrecr_styp_code,
  srbrecr_coll_code,
  srbrecr_camp_code,
  srbrecr_program_1
 from spriden, srbrecr, sorhsch
where spriden_change_ind is null
  and spriden_pidm = sorhsch_pidm
  and not exists
      (select 'X'
         from saradap
        where saradap_term_code_entry = srbrecr_term_code
          and saradap_pidm = srbrecr_pidm
          and saradap_levl_code = srbrecr_levl_code)
  and srbrecr_pidm = sorhsch_pidm
  and not exists
      (select 'X'
         from sobsbgi
        where sobsbgi_sbgi_code = sorhsch_sbgi_code)"
"BANINST1","SRVRSR1","","select
 srbrecr_pidm,
 srbrecr_term_code,
 srbrecr_admin_seqno,
 srrrsrc_sbgi_code,
 srrrsrc_primary_srce_ind,
 substr(f_applied_admissions(srbrecr_pidm,srbrecr_term_code),1,1),
 substr(f_accepted_admissions(
     srbrecr_pidm,srbrecr_term_code,null,'STUDENT'),1,1),
 substr(f_accepted_admissions(
     srbrecr_pidm,srbrecr_term_code,null,'INSTITUTION'),1,1),
 substr(f_paid_admissions_deposit(srbrecr_pidm,srbrecr_term_code,null),1,1),
 substr(f_enrolled_this_term(srbrecr_pidm, srbrecr_term_code),1,1),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'SUF'),1,20),
 TO_DATE(goksels.f_name_bio_value(srbrecr_pidm,'BDATE'),g$_date.get_nls_date_format),
 TO_NUMBER(goksels.f_name_bio_value(srbrecr_pidm,'AGE')),
 f_calculate_age(srbrecr_add_date,goksels.f_name_bio_value(srbrecr_pidm,'BDATE'), null),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'SEX'),1,1),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'ETHN'),1,2),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'LGCY'),1,1),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'DEAD'),1,1),
 TO_DATE(goksels.f_name_bio_value(srbrecr_pidm,'DDATE'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'CONF'),1,1),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
 srbrecr_full_part_ind,
 srbrecr_dept_code,
 srbrecr_levl_code,
 srbrecr_degc_code,
 srbrecr_majr_code,
 srbrecr_coll_code,
 srbrecr_recr_code,
 srbrecr_rsta_code,
 srbrecr_select_ind,
 srbrecr_add_date,
 srbrecr_camp_code,
 srbrecr_sbgi_code,
 srbrecr_wrsn_code,
 srbrecr_rtyp_code,
 srbrecr_resd_code,
 srbrecr_sess_code
from srbrecr, srrrsrc
where srbrecr_pidm = srrrsrc_pidm
  and srbrecr_term_code = srrrsrc_term_code
  and srbrecr_admin_seqno = srrrsrc_admin_seqno"
"BANINST1","SRVRECR","Recruiting Information View","SELECT SRBRECR_TERM_CODE,
       substr(gb_stvterm.f_get_description(srbrecr_term_code),1,30),
       SPRIDEN_ID,
       SUBSTR(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' ||
              SUBSTR(SPRIDEN_MI,1,1),1,25),
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI,
       SRBRECR_PIDM,
       SRBRECR_ADMIN_SEQNO,
       SRBRECR_LEVL_CODE,
       (select stvlevl_desc from stvlevl where stvlevl_code=srbrecr_levl_code),
       SRBRECR_DEPT_CODE,
       (select stvdept_desc from stvdept where stvdept_code=srbrecr_dept_code),
       SRBRECR_DEGC_CODE,
       (select stvdegc_desc from stvdegc where stvdegc_code=srbrecr_degc_code),
       SRBRECR_MAJR_CODE,
       (select stvmajr_desc from stvmajr where stvmajr_code=srbrecr_majr_code),
       SRBRECR_RECR_CODE,
       (select stvrecr_desc from stvrecr where stvrecr_code=srbrecr_recr_code),
       SRBRECR_RSTA_CODE,
       (select stvrsta_desc from stvrsta where stvrsta_code=srbrecr_rsta_code),
       SARADAP_APPL_NO,
       SARADAP_APST_CODE,
       STVAPST_DESC,
       substr(saksels.f_appl_decision_values ( srbrecr_pidm,
            saradap_term_code_entry , saradap_appl_no, 'APDC'),1,2),
       substr(saksels.f_appl_decision_values ( srbrecr_pidm,
            saradap_term_code_entry , saradap_appl_no, 'DESC'),1,30),
       substr(saksels.f_appl_decision_values ( srbrecr_pidm,
            saradap_term_code_entry , saradap_appl_no, 'SIG'),1,1),
       substr(saksels.f_appl_decision_values ( srbrecr_pidm,
            saradap_term_code_entry , saradap_appl_no, 'INST'),1,1),
       substr(saksels.f_appl_decision_values ( srbrecr_pidm,
            saradap_term_code_entry , saradap_appl_no, 'STDN'),1,1),
       substr(saksels.f_appl_decision_values ( srbrecr_pidm,
            saradap_term_code_entry , saradap_appl_no, 'INACT'),1,1),
       substr(sfksels.f_sfbetrm_value(SRBRECR_PIDM,SRBRECR_TERM_CODE),1,2),
       substr(sb_stvests.f_get_description(sfksels.f_sfbetrm_value(SRBRECR_PIDM,SRBRECR_TERM_CODE)),1,30),
       substr(DECODE(sfksels.f_sfbetrm_value(SRBRECR_PIDM,SRBRECR_TERM_CODE),NULL,NULL,DECODE(sb_enrollment.f_eligible_to_register(sfksels.f_sfbetrm_value(SRBRECR_PIDM,SRBRECR_TERM_CODE)),'Y','N','Y')),1,1),
       substr(f_recruit_source(srbrecr_pidm, srbrecr_term_code, srbrecr_admin_seqno, 'Y',0),1,6),
       substr(gb_stvsbgi.f_get_description( substr(  f_recruit_source(srbrecr_pidm, srbrecr_term_code, srbrecr_admin_seqno, 'Y',0),1,6)),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SEX'),1,1),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SSN'),1,15),
       TO_DATE(goksels.f_name_bio_value(spriden_pidm, 'BDATE'), G$_DATE.GET_NLS_DATE_FORMAT),
       to_number(goksels.f_name_bio_value(spriden_pidm, 'AGE')),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'LGCY'),1,1),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'LGCYD'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'ETHN'),1,2),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'ETHND'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'MRTL'),1,1),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'MRTLD'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'RELG'),1,2),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'RELGD'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'CITZ'),1,2),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'CITZD'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'CONF'),1,1)
FROM   STVAPST,
       SARADAP,
       SPRIDEN,
       SRBRECR
WHERE  SPRIDEN_PIDM  = SRBRECR_PIDM
  AND  SPRIDEN_CHANGE_IND IS NULL
  AND  STVAPST_CODE  = SARADAP_APST_CODE
  AND  SARADAP_PIDM  = SRBRECR_PIDM
  AND  SARADAP_TERM_CODE_ENTRY  = SRBRECR_TERM_CODE
  AND  NOT EXISTS (SELECT 'X' FROM SPBPERS
                   WHERE  SPBPERS_PIDM  = SRBRECR_PIDM
                     AND  SPBPERS_DEAD_IND ='Y')
  AND  SRBRECR_PIDM > 0
UNION ALL
SELECT SRBRECR_TERM_CODE,
       substr(gb_stvterm.f_get_description(srbrecr_term_code),1,30),
       SPRIDEN_ID,
       SUBSTR(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' ||
              SUBSTR(SPRIDEN_MI,1,1),1,25),
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI,
       SRBRECR_PIDM,
       SRBRECR_ADMIN_SEQNO,
       SRBRECR_LEVL_CODE,
       (select stvlevl_desc from stvlevl where stvlevl_code=srbrecr_levl_code),
       SRBRECR_DEPT_CODE,
       (select stvdept_desc from stvdept where stvdept_code=srbrecr_dept_code),
       SRBRECR_DEGC_CODE,
       (select stvdegc_desc from stvdegc where stvdegc_code=srbrecr_degc_code),
       SRBRECR_MAJR_CODE,
       (select stvmajr_desc from stvmajr where stvmajr_code=srbrecr_majr_code),
       SRBRECR_RECR_CODE,
       (select stvrecr_desc from stvrecr where stvrecr_code=srbrecr_recr_code),
       SRBRECR_RSTA_CODE,
       (select stvrsta_desc from stvrsta where stvrsta_code=srbrecr_rsta_code),
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       substr(sfksels.f_sfbetrm_value(SRBRECR_PIDM,SRBRECR_TERM_CODE),1,2),
       substr(sb_stvests.f_get_description(sfksels.f_sfbetrm_value(SRBRECR_PIDM,SRBRECR_TERM_CODE)),1,30),
       substr(DECODE(sfksels.f_sfbetrm_value(SRBRECR_PIDM,SRBRECR_TERM_CODE),NULL,NULL,DECODE(sb_enrollment.f_eligible_to_register(sfksels.f_sfbetrm_value(SRBRECR_PIDM,SRBRECR_TERM_CODE)),'Y','N','Y')),1,1),
       substr(  f_recruit_source(srbrecr_pidm, srbrecr_term_code, srbrecr_admin_seqno, 'Y',0),1,6),
       substr(gb_stvsbgi.f_get_description( substr(  f_recruit_source(srbrecr_pidm, srbrecr_term_code, srbrecr_admin_seqno, 'Y',0),1,6)),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SEX'),1,1),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SSN'),1,15),
       TO_DATE(goksels.f_name_bio_value(spriden_pidm, 'BDATE'), G$_DATE.GET_NLS_DATE_FORMAT),
       to_number(goksels.f_name_bio_value(spriden_pidm, 'AGE')),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'LGCY'),1,1),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'LGCYD'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'ETHN'),1,2),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'ETHND'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'MRTL'),1,1),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'MRTLD'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'RELG'),1,2),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'RELGD'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'CITZ'),1,2),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'CITZD'),1,30),
       SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'CONF'),1,1)
FROM   SPRIDEN,
       SRBRECR
WHERE  SPRIDEN_PIDM  = SRBRECR_PIDM
  AND  SPRIDEN_CHANGE_IND IS NULL
  AND  NOT EXISTS (SELECT 'X' FROM SARADAP
                   WHERE SARADAP_PIDM             = SRBRECR_PIDM
                     AND SARADAP_TERM_CODE_ENTRY  = SRBRECR_TERM_CODE)
  AND  NOT EXISTS (SELECT 'X' FROM SPBPERS
                   WHERE  SPBPERS_PIDM  = SRBRECR_PIDM
                     AND  SPBPERS_DEAD_IND='Y')
  AND  SRBRECR_PIDM > 0"
"BANINST1","SRVRCR1","","select
 srbrecr_pidm,
 srbrecr_term_code,
 srbrecr_admin_seqno,
 substr(f_applied_admissions(srbrecr_pidm,srbrecr_term_code),1,1),
 substr(f_accepted_admissions(
     srbrecr_pidm,srbrecr_term_code,null,'STUDENT'),1,1),
 substr(f_accepted_admissions(
     srbrecr_pidm,srbrecr_term_code,null,'INSTITUTION'),1,1),
 substr(f_paid_admissions_deposit(srbrecr_pidm,srbrecr_term_code,null),1,1),
 substr(f_enrolled_this_term(srbrecr_pidm, srbrecr_term_code),1,1),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'ID'),1,9),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'SSN'),1,15),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'LAST'),1,60),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'FIRST'),1,60),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'MI'),1,60),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'M'),1,1),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'PRE'),1,20),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'SUF'),1,20),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'LSUF'),1,60),
 TO_DATE(goksels.f_name_bio_value(srbrecr_pidm,'BDATE'),g$_date.get_nls_date_format),
 TO_NUMBER(goksels.f_name_bio_value(srbrecr_pidm,'AGE')),
 f_calculate_age(srbrecr_add_date, TO_DATE(goksels.f_name_bio_value(srbrecr_pidm,'BDATE')),null),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'SEX'),1,1),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'ETHN'),1,2),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'LGCY'),1,1),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'DEAD'),1,1),
 TO_DATE(goksels.f_name_bio_value(srbrecr_pidm,'DDATE'),g$_date.get_nls_date_format),
 substr(goksels.f_name_bio_value(srbrecr_pidm,'CONF'),1,1),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'HN','A',NULL),1,10),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'S4','A',NULL),1,75),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PC'),1,4),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'HN','A',NULL),1,10),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'S4','A',NULL),1,75),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
 substr(goksels.f_address_telephone_value(srbrecr_pidm,'RECRADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PC'),1,4),
 srbrecr_full_part_ind,
 srbrecr_dept_code,
 srbrecr_levl_code,
 srbrecr_degc_code,
 srbrecr_majr_code,
 srbrecr_coll_code,
 srbrecr_recr_code,
 srbrecr_rsta_code,
 srbrecr_select_ind,
 srbrecr_add_date,
 srbrecr_camp_code,
 srbrecr_sbgi_code,
 srbrecr_wrsn_code,
 srbrecr_rtyp_code,
 srbrecr_resd_code,
 srbrecr_sess_code,
 substr(f_recruit_source(
         srbrecr_pidm,srbrecr_term_code,srbrecr_admin_seqno,'Y',null),1,6),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SC','N',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,60),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SC','P',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,4),
 substr(f_recruit_source(
         srbrecr_pidm,srbrecr_term_code,srbrecr_admin_seqno,null,1),1,6),
 substr(f_recruit_source(
         srbrecr_pidm,srbrecr_term_code,srbrecr_admin_seqno,null,2),1,6),
 substr(f_recruit_source(
         srbrecr_pidm,srbrecr_term_code,srbrecr_admin_seqno,null,3),1,6),
 substr(f_student_check_for_more(
     'RSOURCES',srbrecr_pidm,srbrecr_term_code,srbrecr_admin_seqno,'RECRSRCE')
     ,1,1),
 substr(soklibs.f_sorcont_first_last('RECRCTYP',srbrecr_pidm,'FIRST','C'),1,3),
 TO_DATE(soklibs.f_sorcont_first_last('RECRCTYP',srbrecr_pidm,'FIRST','D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
 substr(soklibs.f_sorcont_first_last('RECRCTYP',srbrecr_pidm,'LAST','C'),1,3),
 TO_DATE(soklibs.f_sorcont_first_last('RECRCTYP',srbrecr_pidm,'LAST','D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
 substr(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,1,'C'),1,3),
 TO_DATE(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,1,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
 substr(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,2,'C'),1,3),
 TO_DATE(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,2,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
 substr(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,3,'C'),1,3),
 TO_DATE(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,3,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
 substr(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,4,'C'),1,3),
 TO_DATE(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,4,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
 substr(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,5,'C'),1,3),
 TO_DATE(soklibs.f_sorcont_order('RECRCTYP',srbrecr_pidm,5,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
 substr(f_student_check_for_more(
    'RCONTACTS',srbrecr_pidm,null,null,'RECRCTYP'),1,1),
 substr(f_outside_interest('RECRINTS',srbrecr_pidm,1),1,2),
 substr(f_outside_interest('RECRINTS',srbrecr_pidm,2),1,2),
 substr(f_outside_interest('RECRINTS',srbrecr_pidm,3),1,2),
 substr(f_outside_interest('RECRINTS',srbrecr_pidm,4),1,2),
 substr(f_outside_interest('RECRINTS',srbrecr_pidm,5),1,2),
 substr(f_student_check_for_more(
    'RINTERESTS',srbrecr_pidm,null,null,'RECRINTS'),1,1),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'HS','SC',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,6),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SB','HN',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,10),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SB','S1',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,75),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SB','S2',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,75),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SB','S3',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,75),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SB','S4',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,75),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SB','C',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,50),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SB','SC',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,3),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'SB','Z',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,30),
 TO_DATE(soklibs.f_highschool_value(srbrecr_pidm,'HS','GD',srbrecr_term_code,srbrecr_admin_seqno,'R')),
 TO_NUMBER(soklibs.f_highschool_value(srbrecr_pidm,'HS','P',srbrecr_term_code,srbrecr_admin_seqno,'R')),
 TO_NUMBER(soklibs.f_highschool_value(srbrecr_pidm,'HS','CR',srbrecr_term_code,srbrecr_admin_seqno,'R')),
 TO_NUMBER(soklibs.f_highschool_value(srbrecr_pidm,'HS','CS',srbrecr_term_code,srbrecr_admin_seqno,'R')),
 substr(soklibs.f_highschool_value(srbrecr_pidm,'HS','GPA',srbrecr_term_code,srbrecr_admin_seqno,'R'),1,24),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,1,'LC'),1,15),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,1,'CC'),1,4),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,1,'SI'),1,2),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,1,'MC'),1,1),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,1,'MM'),1,4),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,1,'DI')),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,1,'DP')),
 decode(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,1,'DP'),null,'Y','N'),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,2,'LC'),1,15),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,2,'CC'),1,4),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,2,'SI'),1,2),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,2,'MC'),1,1),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,2,'MM'),1,4),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,2,'DI')),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,2,'DP')),
 decode(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,2,'DP'),null,'Y','N'),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,3,'LC'),1,15),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,3,'CC'),1,4),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,3,'SI'),1,2),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,3,'MC'),1,1),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,3,'MM'),1,4),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,3,'DI')),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,3,'DP')),
 decode(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,3,'DP'),null,'Y','N'),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,4,'LC'),1,15),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,4,'CC'),1,4),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,4,'SI'),1,2),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,4,'MC'),1,1),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,4,'MM'),1,4),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,4,'DI')),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,4,'DP')),
 decode(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,4,'DP'),null,'Y','N'),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,5,'LC'),1,15),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,5,'CC'),1,4),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,5,'SI'),1,2),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,5,'MC'),1,1),
 substr(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,5,'MM'),1,4),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,5,'DI')),
 TO_DATE(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,5,'DP')),
 decode(soksels.f_gurmail_value('RECRLETR',srbrecr_pidm,5,'DP'),null,'Y','N'),
 substr(f_student_check_for_more(
    'MAIL',srbrecr_pidm,null,null,'RECRLETR'),1,1),
 substr(soklibs.f_srrlend_value(srbrecr_pidm,srbrecr_term_code,srbrecr_admin_seqno),1,10),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'MREC2'),1,5),
 TO_DATE(goksels.f_name_bio_value(srbrecr_pidm,'MREC1'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(srbrecr_pidm,'MREETHN'),1,7),
 soklibs.f_get_race(srbrecr_pidm)
 from  srbrecr"
"BANINST1","SRVPREL","Electronic Prospect View.","SELECT
 SRTIDEN_RIDM,
 SRTIDEN_PIDM,
 SRTIDEN_ID,
 SRTIDEN_SURNAME_PREFIX,
 SRTIDEN_LAST_NAME,
 SRTIDEN_FIRST_NAME,
 SUBSTR(SRTIDEN_MI,1,1),
 SRTIDEN_MI,
 SRTIDEN_MATCH_STATUS,
 SRTIDEN_DATE_MATCHED,
 SUBSTR(decode(srtiden_pidm,null,null, F_MATCH_SRTIDEN_ID(SRTIDEN_PIDM)),1,30),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','SSN'),1,15),
 To_date(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','BDATE'),G$_DATE.GET_NLS_DATE_FORMAT),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','LGCY'),1,1),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','ETHN'),1,2),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','MRTL'),1,1),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','RELG'),1,2),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','SEX'),1,1),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','CONF'),1,1),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','DEAD'),1,1),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','VETC'),1,10),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','LEGAL'),1,500),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','PREFF'),1,60),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','NAMEP'),1,4),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','NAMES'),1,4),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','BDAY'),1,2),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','BMON'),1,2),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','BYEAR'),1,2),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPERS','ETHNC'),1,1),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ASRC'),1,4),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','AATYP'),1,2),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ASTRHN'),1,10),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ASTRT1'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ASTRT2'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ASTRT3'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ASTRT4'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ACITY'),1,50),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ASTATE'),1,3),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','AZIP'),1,30),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ACNTY'),1,5),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','ANATN'),1,5),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTADDR','AEPSC'),1,30),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTTELE','TELE'),1,4),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTTELE','PHNUM'),1,12),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTTELE','PHARE'),1,6),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTTELE','PCTRY'),1,4),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGI'),1,6),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGID'),1,30),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIHN'),1,10),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIS1'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIS2'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIS3'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIS4'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGICT'),1,50),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIST'),1,3),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIZP'),1,30),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGINT'),1,5),
 TO_DATE(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIGD'),G$_DATE.GET_NLS_DATE_FORMAT),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIGP'),1,24),
 to_number(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGICR')),
 to_number(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGICS')),
 to_number(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIPR')),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIDP'),1,2),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIIN'),1,1),
 TO_DATE(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGITD'),G$_DATE.GET_NLS_DATE_FORMAT),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIEP'),1,30),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTHSCH','SBGIGA'),1,24),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGI'),1,6),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGID'),1,30),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGIHN'),1,10),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGIS1'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGIS2'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGIS3'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGIS4'),1,75),
--  SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGISE'),1,75),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGICT'),1,50),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGIST'),1,3),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGIZP'),1,30),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGINT'),1,5),
 To_date(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGIGD'), G$_DATE.GET_NLS_DATE_FORMAT),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTPCOL','SBGIGP'),1,24),
 SRTPREL_PREL_CODE,
 SRTPREL_STYP_CODE,
 SRTPREL_TAPE_ID,
 STVPREL_TAPE_CODE,
 SRTPREL_USER,
 TRUNC(SRTPREL_ADD_DATE),
 SRTPREL_ADD_DATE,
 SRTPREL_LOAD_STATUS,
 SRTPREL_LOAD_DATE,
 SRTPREL_TERM_CODE,
 SRTPREL_ADMIN_SEQNO,
 SRTPREL_LEVL_CODE,
 SRTPREL_COLL_CODE,
 SRTPREL_CAMP_CODE,
 SRTPREL_PROGRAM,
 SRTPREL_ADMT_CODE,
 SRTPREL_DEGC_CODE,
 SRTPREL_MAJR_CODE,
 SRTPREL_DEPT_CODE,
 SRTPREL_SBGI_CODE,
 SRTPREL_CTYP_CODE,
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTINTL','VTYP'),1,2),
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTEMAL','EMAIL'),1,128),
 SRTIDEN_LAST_NAME_OLD,
 SRTIDEN_FIRST_NAME_OLD,
 SUBSTR(srkprel.f_get_srvprel(srtiden_ridm,'SRTINTL','NATN'),1,5),
 SRTIDEN_ADDITIONAL_ID,
 SRTIDEN_ADID_CODE
FROM  SRTIDEN, STVPREL,SRTPREL
WHERE SRTIDEN_RIDM=SRTPREL_RIDM
  AND   STVPREL_CODE = SRTPREL_PREL_CODE
"
"BANINST1","SRVPCO1","This is the intermediate level view of prior college info for recruits that do not have a corresponding applicant record for their term, pidm and level combination.","select
  srbrecr_term_code,
  srbrecr_pidm,
  srbrecr_levl_code,
  srbrecr_admin_seqno,
  spriden_id,
  substr(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  srbrecr_admt_code,
  '',
  srbrecr_degc_code,
  srbrecr_majr_code,
  srbrecr_full_part_ind,
  sorpcol_sbgi_code,
  sobsbgi_city,
  sobsbgi_natn_code,
  sobsbgi_stat_code,
  substr(f_inquirer_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  substr(f_prospect_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  '',
  '',
  '',
  substr(f_class_fnc
    (srbrecr_pidm, srbrecr_levl_code, srbrecr_term_code),1,10),
  srbrecr_styp_code,
  srbrecr_coll_code,
  srbrecr_camp_code,
  srbrecr_program_1
 from sobsbgi, spriden, srbrecr, sorpcol
where sobsbgi_sbgi_code = sorpcol_sbgi_code
  and spriden_change_ind is null
  and spriden_pidm = sorpcol_pidm
  and not exists
      (select 'X'
         from saradap
        where saradap_term_code_entry = srbrecr_term_code
          and saradap_pidm = srbrecr_pidm
          and saradap_levl_code = srbrecr_levl_code)
  and srbrecr_pidm = sorpcol_pidm
UNION ALL
select
  srbrecr_term_code,
  srbrecr_pidm,
  srbrecr_levl_code,
  srbrecr_admin_seqno,
  spriden_id,
  substr(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  srbrecr_admt_code,
  '',
  srbrecr_degc_code,
  srbrecr_majr_code,
  srbrecr_full_part_ind,
  sorpcol_sbgi_code,
  NULL,
  NULL,
  NULL,
  substr(f_inquirer_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  substr(f_prospect_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  '',
  '',
  '',
  substr(f_class_fnc
    (srbrecr_pidm, srbrecr_levl_code, srbrecr_term_code),1,10),
  srbrecr_styp_code,
  srbrecr_coll_code,
  srbrecr_camp_code,
  srbrecr_program_1
 from spriden, srbrecr, sorpcol
where spriden_change_ind is null
  and spriden_pidm = sorpcol_pidm
  and not exists
      (select 'X'
         from saradap
        where saradap_term_code_entry = srbrecr_term_code
          and saradap_pidm = srbrecr_pidm
          and saradap_levl_code = srbrecr_levl_code)
  and srbrecr_pidm = sorpcol_pidm
  and not exists
      (select 'X'
         from sobsbgi
        where sobsbgi_sbgi_code = sorpcol_sbgi_code)"
"BANINST1","SRVLIFE","This view returns life information for recruits that do not have a corresponding applicant record for their term, pidm and level combination.","select
  srvlif1_term_code,
  substr(f_get_desc_fnc('STVTERM',srvlif1_term_code,30),1,30),
  srvlif1_pidm,
  srvlif1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',srvlif1_levl_code,30),1,30),
  srvlif1_appl_no,
  srvlif1_id,
  srvlif1_name,
  srvlif1_ssn,
  srvlif1_birth_date,
  srvlif1_ethn_code,
  substr(decode(srvlif1_ethn_code,null,null,
    f_get_desc_fnc('STVETHN',srvlif1_ethn_code,30)),1,30),
  srvlif1_sex,
  srvlif1_natn_code,
  substr(decode(srvlif1_natn_code,null,null,
    f_get_desc_fnc('STVNATN',srvlif1_natn_code,30)),1,30),
  srvlif1_stat_code,
  substr(decode(srvlif1_stat_code,null,null,
    f_get_desc_fnc('STVSTAT',srvlif1_stat_code,30)),1,30),
  srvlif1_citz_code,
  substr(decode(srvlif1_citz_code,null,null,
    f_get_desc_fnc('STVCITZ',srvlif1_citz_code,30)),1,30),
  srvlif1_admt_code,
  substr(decode(srvlif1_admt_code,null,null,
    f_get_desc_fnc('STVADMT',srvlif1_admt_code,30)),1,30),
  srvlif1_apst_code,
  substr(decode(srvlif1_apst_code,null,null,
    f_get_desc_fnc('STVAPST',srvlif1_apst_code,30)),1,30),
  srvlif1_degc_code_1,
  substr(decode(srvlif1_degc_code_1,null,null,
    f_get_desc_fnc('STVDEGC',srvlif1_degc_code_1,30)),1,30),
  srvlif1_appl_eval,
  srvlif1_majr_code_1,
  substr(decode(srvlif1_majr_code_1,null,null,
    f_get_desc_fnc('STVMAJR',srvlif1_majr_code_1,30)),1,30),
  srvlif1_full_part_ind,
  srvlif1_sbgi_code_source,
  substr(decode(srvlif1_sbgi_code_source,null,null,
    f_get_desc_fnc('STVSBGI',srvlif1_sbgi_code_source,30)),1,30),
  srvlif1_apdc_code_inst,
  substr(decode(srvlif1_apdc_code_inst,null,null,
    f_get_desc_fnc('STVAPDC',srvlif1_apdc_code_inst,30)),1,30),
  srvlif1_apdc_code_stdn,
  substr(decode(srvlif1_apdc_code_stdn,null,null,
    f_get_desc_fnc('STVAPDC',srvlif1_apdc_code_stdn,30)),1,30),
  srvlif1_sbgi_code_othr_coll,
  substr(decode(srvlif1_sbgi_code_othr_coll,null,null,
    f_get_desc_fnc('STVSBGI',srvlif1_sbgi_code_othr_coll,30)),1,30),
  srvlif1_chrt_code,
  substr(decode(srvlif1_chrt_code,null,null,
    f_get_desc_fnc('STVCHRT',srvlif1_chrt_code,30)),1,30),
  srvlif1_sbgi_code_hsch,
  substr(decode(srvlif1_sbgi_code_hsch,null,null,
    f_get_desc_fnc('STVSBGI',srvlif1_sbgi_code_hsch,30)),1,30),
  srvlif1_hsch_city,
  srvlif1_natn_code_hsch,
  substr(decode(srvlif1_natn_code_hsch,null,null,
    f_get_desc_fnc('STVNATN',srvlif1_natn_code_hsch,30)),1,30),
  srvlif1_stat_code_hsch,
  substr(decode(srvlif1_stat_code_hsch,null,null,
    f_get_desc_fnc('STVSTAT',srvlif1_stat_code_hsch,30)),1,30),
  srvlif1_hsch_type,
  srvlif1_hsch_grad_year,
  srvlif1_hsch_percentile,
  srvlif1_hsch_rank,
  srvlif1_hsch_size,
  srvlif1_gpa_normalized,
  srvlif1_gpa_reported,
  srvlif1_aidy_code,
  substr(decode(srvlif1_aidy_code,null,null,
    f_finaid_get_desc('ROBINST',srvlif1_aidy_code,30)),1,30),
  srvlif1_fa_applicant,
  srvlif1_inst_aid_recipient,
  srvlif1_inst_grant_amt,
  srvlif1_state_grant_amt,
  srvlif1_seog_amt,
  srvlif1_pell_amt,
  srvlif1_other_grant_amt,
  srvlif1_inst_loan_amt,
  srvlif1_perk_loan_amt,
  srvlif1_staf_loan_amt,
  srvlif1_other_loan_amt,
  srvlif1_fws_amt,
  srvlif1_gws_amt,
  decode(srvlif1_inquirer,'Y','Y','N',
      decode(srvlif1_prospect,'Y','Y','N',
          decode(srvlif1_applicant,'Y','Y','N',
              decode(srvlif1_admit,'Y','Y','N',
                  decode(srvlif1_deposit,'Y','Y','N',
                      decode(srvlif1_class,'FRESHMAN','Y',
                                           'SOPHOMORE','Y',
                                           'JUNIOR','Y',
                                           'SENIOR','Y',
                                           'GRADUATE','Y','N')))))),
  decode(srvlif1_prospect,'Y','Y','N',
      decode(srvlif1_applicant,'Y','Y','N',
          decode(srvlif1_admit,'Y','Y','N',
              decode(srvlif1_deposit,'Y','Y','N',
                  decode(srvlif1_class,'FRESHMAN','Y',
                                       'SOPHOMORE','Y',
                                       'JUNIOR','Y',
                                       'SENIOR','Y',
                                       'GRADUATE','Y','N'))))),
  decode(srvlif1_applicant,'Y','Y','N',
      decode(srvlif1_admit,'Y','Y','N',
          decode(srvlif1_deposit,'Y','Y','N',
              decode(srvlif1_class,'FRESHMAN','Y',
                                   'SOPHOMORE','Y',
                                   'JUNIOR','Y',
                                   'SENIOR','Y',
                                   'GRADUATE','Y','N')))),
  decode(srvlif1_admit,'Y','Y','N',
      decode(srvlif1_deposit,'Y','Y','N',
          decode(srvlif1_class,'FRESHMAN','Y',
                               'SOPHOMORE','Y',
                               'JUNIOR','Y',
                               'SENIOR','Y',
                               'GRADUATE','Y','N'))),
  decode(srvlif1_deposit,'Y','Y','N',
      decode(srvlif1_class,'FRESHMAN','Y',
                           'SOPHOMORE','Y',
                           'JUNIOR','Y',
                           'SENIOR','Y',
                           'GRADUATE','Y','N')),
  decode(srvlif1_class,'FRESHMAN','Y',
                       'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvlif1_class,'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvlif1_class,'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvlif1_class,'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvlif1_class,'GRADUATE','Y','N'),
  srvlif1_term_code_stdn,
  substr(decode(srvlif1_term_code_stdn,null,null,
    f_get_desc_fnc('STVTERM',srvlif1_term_code_stdn,30)),1,30),
  srvlif1_act_composite,
  srvlif1_sat_combined,
  srvlif1_sat_math,
  srvlif1_sat_verbal,
  srvlif1_adms_termination_date
 from srvlif1
 "
"BANINST1","SRVLIF1","This is the intermediate level view of life information for recruits that do not have a corresponding applicant record for their term, pidm and level combination.","select
  srbrecr_term_code,
  srbrecr_pidm,
  srbrecr_levl_code,
  srbrecr_admin_seqno,
  spriden_id,
  SUBSTR(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  SUBSTR(goksels.f_name_bio_value(srbrecr_pidm, 'SSN'),1,15),
  TO_DATE(goksels.f_name_bio_value(srbrecr_pidm, 'BDATE'), G$_DATE.GET_NLS_DATE_FORMAT),
  SUBSTR(goksels.f_name_bio_value(srbrecr_pidm, 'ETHN'),1,2),
  SUBSTR(goksels.f_name_bio_value(srbrecr_pidm, 'SEX'),1,1),
  SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'EMGTADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(srbrecr_pidm,'EMGTADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
  SUBSTR(goksels.f_name_bio_value(srbrecr_pidm, 'CITZ'),1,2),
  srbrecr_admt_code,
  to_char('',''),
  srbrecr_degc_code,
  to_char('',''),
  srbrecr_majr_code,
  srbrecr_full_part_ind,
  substr(f_recr_source_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_admin_seqno,'Y'),1,6),
  to_char('',''),
  to_char('',''),
  srbrecr_sbgi_code,
  substr(f_recr_cohort_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_admin_seqno),1,10),
  SUBSTR(soklibs.f_highschool_value(srbrecr_pidm,'HS','SC','.','0','.'),1,6),
  SUBSTR(soklibs.f_highschool_value(srbrecr_pidm,'SB','C','.','0','.'),1,50),
  SUBSTR(soklibs.f_highschool_value(srbrecr_pidm,'SB','NTN','.','0','.'),1,5),
  SUBSTR(soklibs.f_highschool_value(srbrecr_pidm,'SB','SC','.','0','.'),1,3),
   decode (soklibs.f_highschool_value(srbrecr_pidm,'HS','SC','.','0','.'), null, null, substr(f_hsch_type_fnc(
         SUBSTR(soklibs.f_highschool_value(srbrecr_pidm,'HS','SC','.','0','.'),1,6)
        ),1,3)),  --hsch_type
  to_char(
     to_date(soklibs.f_highschool_value(srbrecr_pidm,'HS','GD','.','0','.'),
             G$_DATE.GET_NLS_DATE_FORMAT),
     'YYYY'), --graduation year
  TO_NUMBER(soklibs.f_highschool_value(srbrecr_pidm,'HS','P','.','0','.')), --sorhsch_percentile
  TO_NUMBER(soklibs.f_highschool_value(srbrecr_pidm,'HS','CR','.','0','.')), --sorhsch_class_rank
  TO_NUMBER(soklibs.f_highschool_value(srbrecr_pidm,'HS','CS','.','0','.')), --sorhsch_class_size
  f_normalized_gpa_fnc(srbrecr_pidm),
  SUBSTR(soklibs.f_highschool_value(srbrecr_pidm,'HS','GPA','.','0','.'),1,24),
  stvterm_fa_proc_yr,
  substr(f_finaid_applicant_ind
    (srbrecr_pidm, stvterm_fa_proc_yr, null),1,1),
  substr(f_inst_aid_fnc
    (srbrecr_pidm, stvterm_fa_proc_yr),1,1),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'I','G',null,'C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'S','G',null,'C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'F','G','SEOG','C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'F','G','PELL','C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'O','G',null,'C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'I','L',null,'C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'F','L','PERK','C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'F','L','STFD','C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'O','L',null,'C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'F','W',null,'C',null),
  f_fa_amt_year_fnc
    (srbrecr_pidm,stvterm_fa_proc_yr,'I','W',null,'C',null),
  substr(f_inquirer_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  substr(f_prospect_fnc
    (srbrecr_pidm, srbrecr_term_code, srbrecr_levl_code),1,1),
  'N',
  'N',
  'N',
  substr(f_class_fnc
    (srbrecr_pidm, srbrecr_levl_code, srbrecr_term_code),1,10),
  substr(f_latest_term_fnc(srbrecr_pidm),1,6),
  f_test_score_fnc(srbrecr_pidm,null,'COMPOSITE',null),
  f_test_score_fnc(srbrecr_pidm,null,'COMBINED',null),
  f_test_score_fnc(srbrecr_pidm,'SATM','HIGH','Y'),
  f_test_score_fnc(srbrecr_pidm,'SATV','HIGH','Y'),
  to_date(to_char('',''),'DD-MON-YYYY'),
  sysdate
from spriden, stvterm, srbrecr
where spriden_change_ind is null
  and spriden_pidm = srbrecr_pidm
  and stvterm_code = srbrecr_term_code
  and not exists
      (select 'X'
         from saradap
        where saradap_term_code_entry = srbrecr_term_code
          and saradap_pidm = srbrecr_pidm
          and saradap_levl_code = srbrecr_levl_code)"
"BANINST1","SRVINTS","Recruiting Outside Interests View","SELECT
       DISTINCT  SRBRECR_PIDM,
       SRBRECR_TERM_CODE,
       SRBRECR_ADMIN_SEQNO,
       SORINTS_INTS_CODE,
       STVINTS_DESC
FROM
       STVINTS,
       SORINTS,
       SRBRECR
WHERE
       STVINTS_CODE  = SORINTS_INTS_CODE
  AND
       SORINTS_PIDM  = SRBRECR_PIDM
UNION ALL
SELECT DISTINCT
       SRBRECR_PIDM,
       SRBRECR_TERM_CODE,
       SRBRECR_ADMIN_SEQNO,
       NULL,
       NULL
FROM
       SRBRECR
WHERE NOT EXISTS (SELECT 1 FROM SORINTS
			            WHERE   SORINTS_PIDM  = SRBRECR_PIDM)"
"BANINST1","SRVHSCH","View to combine student, high school, and sbgi
address info. Used by the matching process within the tape load process.","SELECT
	SORHSCH_PIDM,
	SORHSCH_SBGI_CODE,
	SORHSCH_GRADUATION_DATE,
	SORHSCH_GPA,
	SORHSCH_CLASS_RANK,
	SORHSCH_CLASS_SIZE,
	SORHSCH_PERCENTILE,
	SORHSCH_DPLM_CODE,
	SORHSCH_COLL_PREP_IND,
	SORHSCH_TRANS_RECV_DATE,
	SORHSCH_ADMR_CODE,
	STVSBGI_DESC,
	SOBSBGI_STREET_LINE1,
	SOBSBGI_STREET_LINE2,
	SOBSBGI_STREET_LINE3,
	SOBSBGI_CITY,
	SOBSBGI_STAT_CODE,
	SOBSBGI_CNTY_CODE,
	SOBSBGI_ZIP,
	SOBSBGI_NATN_CODE
   FROM SOBSBGI, STVSBGI, SORHSCH
  WHERE STVSBGI_CODE = SORHSCH_SBGI_CODE
   AND  SOBSBGI_SBGI_CODE = SORHSCH_SBGI_CODE
UNION ALL
SELECT
	SORHSCH_PIDM,
	SORHSCH_SBGI_CODE,
	SORHSCH_GRADUATION_DATE,
	SORHSCH_GPA,
	SORHSCH_CLASS_RANK,
	SORHSCH_CLASS_SIZE,
	SORHSCH_PERCENTILE,
	SORHSCH_DPLM_CODE,
	SORHSCH_COLL_PREP_IND,
	SORHSCH_TRANS_RECV_DATE,
	SORHSCH_ADMR_CODE,
	STVSBGI_DESC,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL
   FROM STVSBGI, SORHSCH
  WHERE STVSBGI_CODE = SORHSCH_SBGI_CODE
   AND  NOT EXISTS (SELECT 'X' FROM SOBSBGI
                    WHERE SOBSBGI_SBGI_CODE = SORHSCH_SBGI_CODE)"
"BANINST1","SRVCONT","Recruiting Contact View","SELECT SRBRECR.SRBRECR_PIDM,
       SRBRECR.SRBRECR_TERM_CODE,
       SRBRECR.SRBRECR_ADMIN_SEQNO,
       SORCONT.SORCONT_CTYP_CODE,
       SUBSTR(F_GET_DESC_FNC ('STVCTYP',SORCONT.SORCONT_CTYP_CODE,30),1,30),
       SORCONT.SORCONT_CONTACT_DATE
FROM   SORCONT,
       SRBRECR
WHERE SORCONT_PIDM = SRBRECR_PIDM
UNION ALL
SELECT SRBRECR.SRBRECR_PIDM,
       SRBRECR.SRBRECR_TERM_CODE,
       SRBRECR.SRBRECR_ADMIN_SEQNO,
       NULL,
       NULL,
       NULL
FROM   SRBRECR
WHERE NOT EXISTS
   (SELECT 'X' FROM SORCONT WHERE SORCONT.SORCONT_PIDM = SRBRECR.SRBRECR_PIDM)"
"BANINST1","SRVCMNR","Minors Curriculum View.","SELECT sorcmnr_curr_rule,
       sorcmnr_cmnr_rule,
       sorcmnr_term_code_eff,
       sorcmnr_adm_ind,
       sorcmnr_stu_ind,
       sorcmnr_his_ind,
       sorcmnr_rec_ind,
       sorcmnr_dau_ind,
       sorcmnr_activity_date,
       sorcmnr_majr_code_minr,
       sorcmnr_edi_qlfr,
       sorcmnr_edi_value,
       sorcmnr_disp_web_ind,
       sorcmnr_desc,
       sobcurr_levl_code,
       sobcurr_activity_date,
       sobcurr_prim_roll_ind,
       sobcurr_secd_roll_ind,
       sobcurr_camp_code,
       sobcurr_coll_code,
       sobcurr_degc_code,
       sobcurr_program,
       null,
       null
  FROM sobcurr,
       sorcmnr
 WHERE sobcurr_curr_rule = sorcmnr_curr_rule 
 "
"BANINST1","SRVCMJR","Majors Curriculum View.","SELECT sorcmjr_curr_rule,
       sorcmjr_cmjr_rule,
       sorcmjr_term_code_eff,
       sorcmjr_adm_ind,
       sorcmjr_stu_ind,
       sorcmjr_his_ind,
       sorcmjr_rec_ind,
       sorcmjr_dau_ind,
       sorcmjr_activity_date,
       sorcmjr_majr_code,
       sorcmjr_dept_code,
       sorcmjr_degr_cde,
       sorcmjr_edi_qlfr,
       sorcmjr_edi_value,
       sorcmjr_disp_web_ind,
       sorcmjr_desc,
       sorcmjr_auto_dec_ind,
       sobcurr_levl_code,
       sobcurr_activity_date,
       sobcurr_prim_roll_ind,
       sobcurr_secd_roll_ind,
       sobcurr_camp_code,
       sobcurr_coll_code,
       sobcurr_degc_code,
       sobcurr_program,
       null,
       null
  FROM sobcurr ,
       sorcmjr
 WHERE sobcurr_curr_rule = sorcmjr_curr_rule
 
 "
"BANINST1","SRVCCUR","This view lists curriculum for a recruit. ","select
  SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR.ROWID
 , decode( SOBCTRL_CURRENT_RECR_CDE, 'Y',
           DECODE(NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind,
              'YY',
              DENSE_RANK()
              OVER(PARTITION BY SORLCUR_PIDM,
                   SORLCUR_TERM_CODE,
                   SORLCUR_LMOD_CODE,
                   SORLCUR_KEY_SEQNO ORDER BY
                   NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind DESC,
                   SORLCUR_PRIORITY_NO),
              0),
               SOKCCUR.f_order(sorlcur_pidm,
                               sorlcur_lmod_code,
                               sorlcur_seqno,
                               srbrecr_term_code,
                               srbrecr_admin_seqno )
              )
 , sobcact_active_ind
 , SRBRECR.ROWID
 ,SRBRECR_RECR_CODE
 ,SRBRECR_RSTA_CODE
 ,SRBRECR_SELECT_IND
 ,SRBRECR_ADD_DATE
 ,SRBRECR_ADMT_CODE
 ,SRBRECR_EDLV_CODE
 ,SRBRECR_EGOL_CODE
 ,SRBRECR_FULL_PART_IND
 ,SRBRECR_SBGI_CODE
 ,SRBRECR_WRSN_CODE
 ,SRBRECR_RTYP_CODE
 ,SRBRECR_RESD_CODE
 ,SRBRECR_SESS_CODE
 ,SRBRECR_SITE_CODE
 ,SRBRECR_STYP_CODE
  , SORLCUR_USER_ID_UPDATE
 , SORLCUR_ACTIVITY_DATE_UPDATE
 , SORLCUR_CURRENT_CDE
from  srbrecr,  sorlcur ,sobcact,sobctrl
where srbrecr_term_code      = sorlcur_term_code
and sobcact_cact_code        = sorlcur_cact_code
and srbrecr_admin_seqno    = sorlcur_key_seqno
and srbrecr_pidm           = sorlcur_pidm
and sorlcur_lmod_code      =
 ( Select sb_curriculum_str.f_recruit from dual)
and sorlcur_pidm           > 0  "
"BANINST1","SRVCCON","Concentrations Curriculum View.","SELECT sorccon_curr_rule,
       sorccon_ccon_rule,
       sorccon_term_code_eff,
       sorccon_adm_ind,
       sorccon_stu_ind,
       sorccon_his_ind,
       sorccon_rec_ind,
       sorccon_dau_ind,
       sorccon_activity_date,
       sorccon_cmjr_rule,
       sorccon_majr_code_conc,
       sb_fieldofstudy_rules.f_get_conc_attach_majr(sorccon_cmjr_rule),
       sorccon_edi_qlfr,
       sorccon_edi_value,
       sorccon_disp_web_ind,
       sorccon_desc,
       sobcurr_levl_code,
       sobcurr_activity_date,
       sobcurr_prim_roll_ind,
       sobcurr_secd_roll_ind,
       sobcurr_camp_code,
       sobcurr_coll_code,
       sobcurr_degc_code,
       sobcurr_program,
       null,
       null
  FROM sobcurr ,
       sorccon
 WHERE sobcurr_curr_rule = sorccon_curr_rule 
 "
"BANINST1","SRVADRS","Recruiting Address Hierarchy View","SELECT SRBRECR_PIDM,
       SRBRECR_TERM_CODE,
       SRBRECR_ADMIN_SEQNO,
       SPRADDR_ATYP_CODE,
       (SELECT STVATYP_DESC FROM stvatyp WHERE stvatyp_code = spraddr_atyp_code),
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       (SELECT STVSTAT_DESC FROM stvstat WHERE stvstat_code = spraddr_stat_code),
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       (SELECT STVCNTY_DESC FROM stvcnty WHERE stvcnty_code = spraddr_cnty_code),
       SPRADDR_NATN_CODE,
       (SELECT STVNATN_NATION FROM stvnatn WHERE stvnatn_code = spraddr_natn_code)
  FROM SPRADDR X,
       SRBRECR,
       GURFCLR Y
 WHERE  X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   SYSDATE BETWEEN X.SPRADDR_FROM_DATE
                     AND X.SPRADDR_TO_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   SYSDATE >= X.SPRADDR_FROM_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   SYSDATE <= X.SPRADDR_TO_DATE))
   AND   X.SPRADDR_PIDM (+) = SRBRECR_PIDM
   AND   Y.GURFCLR_SESSION  =TO_CHAR(USERENV('SESSIONID'))
   AND (Y.GURFCLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
          (SELECT MIN(C.GURFCLR_VALUE_ATYP),
		  SUBSTR(MIN(C.GURFCLR_VALUE_ATYP),2,2)
       	     FROM SPRADDR,
	          GURFCLR C
            WHERE C.GURFCLR_SESSION = Y.GURFCLR_SESSION
	      AND SPRADDR_PIDM = X.SPRADDR_PIDM
	      AND SPRADDR_ATYP_CODE = SUBSTR(C.GURFCLR_VALUE_ATYP,2,2)
	      AND SPRADDR_STATUS_IND IS NULL
	      AND ((SPRADDR_TO_DATE IS NULL
	      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
	      AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   SYSDATE BETWEEN SPRADDR_FROM_DATE
                                AND SPRADDR_TO_DATE)
               OR  (SPRADDR_FROM_DATE IS NOT NULL
	      AND   SPRADDR_TO_DATE IS NULL
              AND   SYSDATE  >= SPRADDR_FROM_DATE)
               OR  (SPRADDR_FROM_DATE IS NULL
	      AND   SPRADDR_TO_DATE IS NOT NULL
              AND   SYSDATE <= SPRADDR_TO_DATE)))"
"BANINST1","SRVACUR","This view lists current and active curriculum for a recruit and all fields of study. ","select
  SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR.ROWID
 , decode( SOBCTRL_CURRENT_RECR_CDE, 'Y',
           DECODE(NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind,
              'YY',
              DENSE_RANK()
              OVER(PARTITION BY SORLCUR_PIDM,
                   SORLCUR_TERM_CODE,
                   SORLCUR_LMOD_CODE,
                   SORLCUR_KEY_SEQNO ORDER BY
                   NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind DESC,
                   SORLCUR_PRIORITY_NO),
              0),
              SOKCCUR.f_order(sorlcur_pidm,
                              sorlcur_lmod_code,
                              sorlcur_seqno,
                              srbrecr_term_code,
                              srbrecr_admin_seqno )
              )
  , sobcact_active_ind
  , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'MAJR'),1,4)
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'DEPT') ,1,4)
  , to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'CRUL') )
  , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'MAJR')  ,1,4)
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'DEPT') ,1,4)
  , to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'CRUL') )
  , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'MAJR')  ,1,4)
 , to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'CRUL') )
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'MAJR') ,1,4)
 , to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'CRUL'))
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'MAJR') ,1,4)
 , to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'CRUL') )
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'ACON') ,1,4)
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'MAJR')  ,1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'CRUL') )
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'ACON') ,1,4)
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'MAJR')  ,1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'CRUL') )
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'ACON') ,1,4)
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'MAJR') ,1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'CRUL') )
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'ACON') ,1,4)
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'MAJR') ,1,4)
 , to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'CRUL')  )
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'ACON') ,1,4)
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'MAJR')  ,1,4)
 , to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'CRUL') )
 , substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'ACON') ,1,4)
 , srbrecr.rowid
 ,SRBRECR_RECR_CODE
 ,SRBRECR_RSTA_CODE
 ,SRBRECR_SELECT_IND
 ,SRBRECR_ADD_DATE
 ,SRBRECR_ADMT_CODE
 ,SRBRECR_EDLV_CODE
 ,SRBRECR_EGOL_CODE
 ,SRBRECR_FULL_PART_IND
 ,SRBRECR_SBGI_CODE
 ,SRBRECR_WRSN_CODE
 ,SRBRECR_RTYP_CODE
 ,SRBRECR_RESD_CODE
 ,SRBRECR_SESS_CODE
 ,SRBRECR_SITE_CODE
 ,SRBRECR_STYP_CODE
 , SORLCUR_USER_ID_UPDATE
 , SORLCUR_ACTIVITY_DATE_UPDATE
  , SORLCUR_CURRENT_CDE
from  srbrecr,  sorlcur , sobcact,sobctrl
where srbrecr_term_code      = sorlcur_term_code
and sobcact_cact_code        = sorlcur_cact_code
and srbrecr_admin_seqno    = sorlcur_key_seqno
and srbrecr_pidm           = sorlcur_pidm
and sorlcur_lmod_code      =
 ( Select sb_curriculum_str.f_recruit from dual)
and sorlcur_pidm           > 0  "
"BANINST1","SPVYEAR","This view returns enrollment inforation about students on an academic year basis for use within the Enrollment Management Product.","select
  spvyea1_acyr_code,
  substr(f_get_desc_fnc('STVACYR',spvyea1_acyr_code,30),1,30),
  spvyea1_pidm,
  spvyea1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',spvyea1_levl_code,30),1,30),
  spvyea1_term_code_latest,
  substr(f_get_desc_fnc('STVTERM',spvyea1_term_code_latest,30),1,30),
  spvyea1_id,
  spvyea1_name,
  spvyea1_ssn,
  spvyea1_birth_date,
  spvyea1_citz_code,
  substr(decode(spvyea1_citz_code,null,null,
    f_get_desc_fnc('STVCITZ',spvyea1_citz_code,30)),1,30),
  spvyea1_ethn_code,
  substr(decode(spvyea1_ethn_code,null,null,
    f_get_desc_fnc('STVETHN',spvyea1_ethn_code,30)),1,30),
  spvyea1_sex,
  spvyea1_chrt_code,
  substr(decode(spvyea1_chrt_code,null,null,
    f_get_desc_fnc('STVCHRT',spvyea1_chrt_code,30)),1,30),
  spvyea1_degc_code,
  substr(f_get_desc_fnc('STVDEGC',spvyea1_degc_code,30),1,30),
  spvyea1_majr_code_1,
  substr(f_get_desc_fnc('STVMAJR',spvyea1_majr_code_1,30),1,30),
  spvyea1_ests_code,
  substr(decode(spvyea1_ests_code,null,null,
    f_get_desc_fnc('STVESTS',spvyea1_ests_code,30)),1,30),
  spvyea1_hours_earned,
  spvyea1_hours_earned_transfer,
  spvyea1_hours_earned_cum,
  spvyea1_cost_of_ed_amt,
  spvyea1_family_income,
  spvyea1_family_contrib,
  spvyea1_parent_contrib,
  spvyea1_tuition_amt,
  spvyea1_housing_amt,
  spvyea1_dining_amt,
  spvyea1_fees_amt_req,
  spvyea1_fees_amt_opt,
  spvyea1_other_charges,
  spvyea1_aidy_code,
  substr(f_finaid_get_desc('ROBINST',spvyea1_aidy_code,30),1,30),
  spvyea1_inst_grant_amt,
  spvyea1_state_grant_amt,
  spvyea1_seog_amt,
  spvyea1_pell_amt,
  spvyea1_other_grant_amt,
  spvyea1_inst_loan_amt,
  spvyea1_perk_loan_amt,
  spvyea1_staf_loan_amt,
  spvyea1_other_loan_amt,
  spvyea1_fws_amt,
  spvyea1_gws_amt,
  spvyea1_cost_of_ed_amt_chg,
  spvyea1_family_income_chg,
  spvyea1_family_contrib_chg,
  spvyea1_parent_contrib_chg,
  spvyea1_tuition_amt_chg,
  spvyea1_housing_amt_chg,
  spvyea1_dining_amt_chg,
  spvyea1_fees_amt_req_chg,
  spvyea1_fees_amt_opt_chg,
  spvyea1_other_charges_chg,
  spvyea1_inst_grant_amt_chg,
  spvyea1_state_grant_amt_chg,
  spvyea1_seog_amt_chg,
  spvyea1_pell_amt_chg,
  spvyea1_other_grant_amt_chg,
  spvyea1_inst_loan_amt_chg,
  spvyea1_perk_loan_amt_chg,
  spvyea1_staf_loan_amt_chg,
  spvyea1_other_loan_amt_chg,
  spvyea1_fws_amt_chg,
  spvyea1_gws_amt_chg,
  spvyea1_activity_date
  from spvyea1
 "
"BANINST1","SPVYEA1","This is the intermediate level view of enrollment information of students on an academic year basis.","select
  sovacyr_acyr_code,
  a.sfbetrm_pidm,
  x.sgbstdn_levl_code,
  a.sfbetrm_term_code,
  spriden_id,
  substr(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SSN'),1,9),
  to_date(goksels.f_name_bio_value(sfbetrm_pidm,'BDATE'),g$_date.get_nls_date_format),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'CITZ'),1,2),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'ETHN'),1,2),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SEX'),1,1),
  SUBSTR(sgksels.f_get_chrt_code(sfbetrm_pidm,sfbetrm_term_code),1,10),
  x.sgbstdn_degc_code_1,
  x.sgbstdn_majr_code_1,
  a.sfbetrm_ests_code,
  f_tgpa_hrs_range_fnc
    (a.sfbetrm_pidm, x.sgbstdn_levl_code, stvterm_acyr_code, 'I',null),
  f_tgpa_hrs_range_fnc
    (a.sfbetrm_pidm, x.sgbstdn_levl_code, stvterm_acyr_code, 'T',null),
  f_tgpa_hrs_range_fnc
    (a.sfbetrm_pidm, x.sgbstdn_levl_code, stvterm_acyr_code, 'I','Y'),
  f_sem_csed_fnc
    (a.sfbetrm_pidm, stvterm_fa_proc_yr,'C',null),
  f_family_income_fnc
    (a.sfbetrm_pidm, stvterm_fa_proc_yr,'C',null),
  f_family_contrib_fnc
    (a.sfbetrm_pidm, stvterm_fa_proc_yr,'C',null),
  f_parent_contrib_fnc
    (a.sfbetrm_pidm, stvterm_fa_proc_yr,'C',null),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, 'TUI', stvterm_acyr_code, 'C', 'CAT'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, 'HOU', stvterm_acyr_code, 'C', 'CAT'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, 'MEA', stvterm_acyr_code, 'C', 'CAT'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, null, stvterm_acyr_code, 'C', 'REQ'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, null, stvterm_acyr_code, 'C', 'OPT'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, null, stvterm_acyr_code, 'C', 'OTH'),
  stvterm_fa_proc_yr,
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'I','G',null,'C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'S','G',null,'C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','G','SEOG','C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','G','PELL','C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'O','G',null,'C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'I','L',null,'C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','L','PERK','C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','L','STFD','C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'O','L',null,'C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','W',null,'C',null),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'I','W',null,'C',null),
  f_sem_csed_fnc
    (a.sfbetrm_pidm, stvterm_fa_proc_yr,'P','Y'),
  f_family_income_fnc
    (a.sfbetrm_pidm, stvterm_fa_proc_yr,'P','Y'),
  f_family_contrib_fnc
    (a.sfbetrm_pidm, stvterm_fa_proc_yr,'P','Y'),
  f_parent_contrib_fnc
    (a.sfbetrm_pidm, stvterm_fa_proc_yr,'P','Y'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, 'TUI', stvterm_acyr_code, 'P', 'CAT'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, 'HOU', stvterm_acyr_code, 'P', 'CAT'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, 'MEA', stvterm_acyr_code, 'P', 'CAT'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, null, stvterm_acyr_code, 'P', 'REQ'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, null, stvterm_acyr_code, 'P', 'OPT'),
  f_calc_and_call_fnc
    (a.sfbetrm_pidm, null, stvterm_acyr_code, 'P', 'OTH'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'I','G',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'S','G',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','G','SEOG','P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','G','PELL','P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'O','G',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'I','L',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','L','PERK','P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','L','STFD','P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'O','L',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'F','W',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.sfbetrm_pidm,stvterm_fa_proc_yr,'I','W',null,'P','Y'),
  sysdate
from spriden, sgbstdn x,
     stvterm, sfbetrm a,
     sovacyr
where a.sfbetrm_term_code between sovacyr_term_code_start and
                                  sovacyr_term_code_end
  and a.sfbetrm_term_code =
          (select max(b.sfbetrm_term_code)
             from sfbetrm b
            where b.sfbetrm_pidm = a.sfbetrm_pidm
              and b.sfbetrm_term_code between sovacyr_term_code_start and
                                              sovacyr_term_code_end)
  and spriden_change_ind is null
  and spriden_pidm = a.sfbetrm_pidm
  and stvterm_code = a.sfbetrm_term_code
  and x.sgbstdn_pidm = a.sfbetrm_pidm
  and x.sgbstdn_term_code_eff =
      (select max(y.sgbstdn_term_code_eff)
         from sgbstdn y
        where y.sgbstdn_pidm = a.sfbetrm_pidm
          and y.sgbstdn_term_code_eff <= a.sfbetrm_term_code)"
"BANINST1","SPVYEA0","This view returns the maximum enrollment term by student within an academic year.","select
 stvacyr_code,
 sfbetrm_pidm,
 max(sfbetrm_term_code)
from sfbetrm, stvterm,stvacyr
where sfbetrm_term_code = stvterm_code
  and stvterm_acyr_code = stvacyr_code
group by stvacyr_code,sfbetrm_pidm
 "
"BANINST1","SPVTERM","This view returns Catalog and Schedule information for the Enrollment Management Product.","select
  spvter1_term_code,
  substr(f_get_desc_fnc('STVTERM',spvter1_term_code,30),1,30),
  spvter1_pidm,
  spvter1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',spvter1_levl_code,30),1,30),
  spvter1_id,
  spvter1_name,
  spvter1_ssn,
  spvter1_birth_date,
  spvter1_citz_code,
  substr(decode(spvter1_citz_code,null,null,
    f_get_desc_fnc('STVCITZ',spvter1_citz_code,30)),1,30),
  spvter1_ethn_code,
  substr(decode(spvter1_ethn_code,null,null,
    f_get_desc_fnc('STVETHN',spvter1_ethn_code,30)),1,30),
  spvter1_sex,
  spvter1_chrt_code,
  substr(decode(spvter1_chrt_code,null,null,
    f_get_desc_fnc('STVCHRT',spvter1_chrt_code,30)),1,30),
  spvter1_degc_code,
  substr(f_get_desc_fnc('STVDEGC',spvter1_degc_code,30),1,30),
  spvter1_majr_code_1,
  substr(f_get_desc_fnc('STVMAJR',spvter1_majr_code_1,30),1,30),
  spvter1_ests_code,
  substr(f_get_desc_fnc('STVESTS',spvter1_ests_code,30),1,30),
  spvter1_hours_attempted,
  spvter1_hours_earned,
  spvter1_hours_earned_transfer,
  spvter1_hours_earned_cum,
  spvter1_tuition_amt,
  spvter1_housing_amt,
  spvter1_dining_amt,
  spvter1_fees_amt_req,
  spvter1_fees_amt_opt,
  spvter1_other_charges,
  spvter1_aidy_code,
  substr(f_finaid_get_desc('ROBINST',spvter1_aidy_code,30),1,30),
  spvter1_inst_grant_amt,
  spvter1_state_grant_amt,
  spvter1_seog_amt,
  spvter1_pell_amt,
  spvter1_other_grant_amt,
  spvter1_inst_loan_amt,
  spvter1_perk_loan_amt,
  spvter1_staf_loan_amt,
  spvter1_other_loan_amt,
  spvter1_fws_amt,
  spvter1_gws_amt,
  spvter1_activity_date
from spvter1
 "
"BANINST1","SPVTER1","This is the intermediate view to retrieve Catalog and Schedule information for Enrollment Management purposes.","select
  sfbetrm_term_code,
  sfbetrm_pidm,
  x.sgbstdn_levl_code,
  spriden_id,
  substr(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SSN'),1,9),
  TO_DATE(goksels.f_name_bio_value(sfbetrm_pidm,'BDATE'),G$_DATE.GET_NLS_DATE_FORMAT),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'CITZ'),1,2),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'ETHN'),1,2),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SEX'),1,1),
  SUBSTR(sgksels.f_get_chrt_code(sfbetrm_pidm,sfbetrm_term_code),1,10),
  x.sgbstdn_degc_code_1,
  x.sgbstdn_majr_code_1,
  sfbetrm_ests_code,
  f_tgpa_fnc
    (sfbetrm_pidm, sfbetrm_term_code, x.sgbstdn_levl_code, 'I','HATT'),
  f_tgpa_fnc
    (sfbetrm_pidm, sfbetrm_term_code, x.sgbstdn_levl_code, 'I','HERN'),
  f_tgpa_fnc
    (sfbetrm_pidm, sfbetrm_term_code, x.sgbstdn_levl_code, 'T','HERN'),
  f_cum_tgpa_fnc
    (sfbetrm_pidm, sfbetrm_term_code, x.sgbstdn_levl_code, null, 'I','HERN'),
  f_cat_term_fnc
    (sfbetrm_pidm, 'TUI', sfbetrm_term_code),
  f_cat_term_fnc
    (sfbetrm_pidm, 'HOU', sfbetrm_term_code),
  f_cat_term_fnc
    (sfbetrm_pidm, 'MEA', sfbetrm_term_code),
  f_req_term_fnc
    (sfbetrm_pidm, sfbetrm_term_code),
  f_opt_term_fnc
    (sfbetrm_pidm, sfbetrm_term_code),
  f_other_term_fnc
    (sfbetrm_pidm, sfbetrm_term_code),
  stvterm_fa_proc_yr,
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'I','G',null,sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'S','G',null,sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'F','G','SEOG',sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'F','G','PELL',sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'O','G',null,sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'I','L',null,sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'F','L','PERK',sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'F','L','STFD',sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'O','L',null,sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'F','W',null,sfbetrm_term_code),
  f_fa_amt_term_fnc
    (sfbetrm_pidm,stvterm_fa_proc_yr,'I','W',null,sfbetrm_term_code),
  sysdate
from spriden, sgbstdn x,
     stvterm, sfbetrm
where spriden_change_ind is null
  and spriden_pidm = sfbetrm_pidm
  and stvterm_code = sfbetrm_term_code
  and x.sgbstdn_pidm = sfbetrm_pidm
  and x.sgbstdn_term_code_eff =
      (select max(y.sgbstdn_term_code_eff)
         from sgbstdn y
        where y.sgbstdn_pidm = sfbetrm_pidm
          and y.sgbstdn_term_code_eff <= sfbetrm_term_code)"
"BANINST1","SPVSTRG","This is a view of the contacts for admissions applicants up through the day that their admissions process was terminated unioned to the contacts of recruits that do not have a corresponding term and level application.","select
  saradap_pidm,
  saradap_appl_no,
  saradap_levl_code,
  substr(f_get_desc_fnc('STVLEVL',saradap_levl_code,30),1,30),
  saradap_term_code_entry,
  substr(f_get_desc_fnc('STVTERM',saradap_term_code_entry,30),1,30),
  sorcont_ctyp_code,
  substr(f_get_desc_fnc('STVCTYP',sorcont_ctyp_code,30),1,30),
  sorcont_contact_date,
  f_count_contacts_fnc
    (saradap_pidm, sorcont_ctyp_code, sorcont_contact_date),
  sysdate
 from sorcont, saradap
where sorcont_pidm = saradap_pidm
  and trunc(sorcont_contact_date) <=
      nvl(trunc(f_adms_termination_fnc
         (saradap_pidm,saradap_term_code_entry,saradap_appl_no)),
          trunc(sorcont_contact_date))
union
select
  srbrecr_pidm,
  srbrecr_admin_seqno,
  srbrecr_levl_code,
  substr(f_get_desc_fnc('STVLEVL',srbrecr_levl_code,30),1,30),
  srbrecr_term_code,
  substr(f_get_desc_fnc('STVTERM',srbrecr_term_code,30),1,30),
  sorcont_ctyp_code,
  substr(f_get_desc_fnc('STVCTYP',sorcont_ctyp_code,30),1,30),
  sorcont_contact_date,
  f_count_contacts_fnc
    (srbrecr_pidm, sorcont_ctyp_code, sorcont_contact_date),
  sysdate
 from sorcont, srbrecr
where sorcont_pidm = srbrecr_pidm
  and not exists
      (select 'X' from saradap
        where saradap_pidm = srbrecr_pidm
          and saradap_term_code_entry = srbrecr_term_code
          and saradap_levl_code = srbrecr_levl_code)
 "
"BANINST1","SPVSECS","This is a union of the srvsec1 and savsec1 views to join in descriptions for the coded fields.  This view returns the combined data from recruiting and admissions by unique term, pidm and level for SEM.","select
  savsec1_term_code,
  substr(f_get_desc_fnc('STVTERM',savsec1_term_code,30),1,30),
  savsec1_pidm,
  savsec1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',savsec1_levl_code,30),1,30),
  savsec1_appl_no,
  savsec1_id,
  savsec1_name,
  savsec1_admt_code,
  substr(decode(savsec1_admt_code,null,null,
    f_get_desc_fnc('STVADMT',savsec1_admt_code,30)),1,30),
  savsec1_apst_code,
  substr(decode(savsec1_apst_code,null,null,
    f_get_desc_fnc('STVAPST',savsec1_apst_code,30)),1,30),
  savsec1_degc_code_1,
  substr(decode(savsec1_degc_code_1,null,null,
    f_get_desc_fnc('STVDEGC',savsec1_degc_code_1,30)),1,30),
  savsec1_majr_code_1,
  substr(decode(savsec1_majr_code_1,null,null,
    f_get_desc_fnc('STVMAJR',savsec1_majr_code_1,30)),1,30),
  savsec1_full_part_ind,
  savsec1_sbgi_code_hsch,
  substr(decode(savsec1_sbgi_code_hsch,null,null,
    f_get_desc_fnc('STVSBGI',savsec1_sbgi_code_hsch,30)),1,30),
  savsec1_hsch_city,
  savsec1_natn_code_hsch,
  substr(decode(savsec1_natn_code_hsch,null,null,
    f_get_desc_fnc('STVNATN',savsec1_natn_code_hsch,30)),1,30),
  savsec1_stat_code_hsch,
  substr(decode(savsec1_stat_code_hsch,null,null,
    f_get_desc_fnc('STVSTAT',savsec1_stat_code_hsch,30)),1,30),
  savsec1_hsch_type,
  savsec1_hsch_grad_year,
  savsec1_hsch_percentile,
  savsec1_hsch_rank,
  savsec1_hsch_size,
  decode(savsec1_inquirer,'Y','Y','N',
      decode(savsec1_prospect,'Y','Y','N',
          decode(savsec1_applicant,'Y','Y','N',
              decode(savsec1_admit,'Y','Y','N',
                  decode(savsec1_deposit,'Y','Y','N',
                      decode(savsec1_class,'FRESHMAN','Y',
                                           'SOPHOMORE','Y',
                                           'JUNIOR','Y',
                                           'SENIOR','Y',
                                           'GRADUATE','Y','N')))))),
  decode(savsec1_prospect,'Y','Y','N',
      decode(savsec1_applicant,'Y','Y','N',
          decode(savsec1_admit,'Y','Y','N',
              decode(savsec1_deposit,'Y','Y','N',
                  decode(savsec1_class,'FRESHMAN','Y',
                                       'SOPHOMORE','Y',
                                       'JUNIOR','Y',
                                       'SENIOR','Y',
                                       'GRADUATE','Y','N'))))),
  decode(savsec1_applicant,'Y','Y','N',
      decode(savsec1_admit,'Y','Y','N',
          decode(savsec1_deposit,'Y','Y','N',
              decode(savsec1_class,'FRESHMAN','Y',
                                   'SOPHOMORE','Y',
                                   'JUNIOR','Y',
                                   'SENIOR','Y',
                                   'GRADUATE','Y','N')))),
  decode(savsec1_admit,'Y','Y','N',
      decode(savsec1_deposit,'Y','Y','N',
          decode(savsec1_class,'FRESHMAN','Y',
                               'SOPHOMORE','Y',
                               'JUNIOR','Y',
                               'SENIOR','Y',
                               'GRADUATE','Y','N'))),
  decode(savsec1_deposit,'Y','Y','N',
      decode(savsec1_class,'FRESHMAN','Y',
                           'SOPHOMORE','Y',
                           'JUNIOR','Y',
                           'SENIOR','Y',
                           'GRADUATE','Y','N')),
  decode(savsec1_class,'FRESHMAN','Y',
                       'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savsec1_class,'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savsec1_class,'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savsec1_class,'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savsec1_class,'GRADUATE','Y','N'),
  savsec1_styp_code,
  savsec1_coll_code,
  savsec1_camp_code,
  savsec1_program_1,
  to_number(substr(decode(savsec1_sbgi_code_hsch,null,null,
     decode(savsec1_hsch_grad_year,null,null,
     f_hs_no_seniors(savsec1_sbgi_code_hsch,savsec1_hsch_grad_year)) ),1,6))
 from savsec1
union
select
  srvsec1_term_code,
  substr(f_get_desc_fnc('STVTERM',srvsec1_term_code,30),1,30),
  srvsec1_pidm,
  srvsec1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',srvsec1_levl_code,30),1,30),
  srvsec1_appl_no,
  srvsec1_id,
  srvsec1_name,
  srvsec1_admt_code,
  substr(decode(srvsec1_admt_code,null,null,
    f_get_desc_fnc('STVADMT',srvsec1_admt_code,30)),1,30),
  srvsec1_apst_code,
  substr(decode(srvsec1_apst_code,null,null,
    f_get_desc_fnc('STVAPST',srvsec1_apst_code,30)),1,30),
  srvsec1_degc_code_1,
  substr(decode(srvsec1_degc_code_1,null,null,
    f_get_desc_fnc('STVDEGC',srvsec1_degc_code_1,30)),1,30),
  srvsec1_majr_code_1,
  substr(decode(srvsec1_majr_code_1,null,null,
    f_get_desc_fnc('STVMAJR',srvsec1_majr_code_1,30)),1,30),
  srvsec1_full_part_ind,
  srvsec1_sbgi_code_hsch,
  substr(decode(srvsec1_sbgi_code_hsch,null,null,
    f_get_desc_fnc('STVSBGI',srvsec1_sbgi_code_hsch,30)),1,30),
  srvsec1_hsch_city,
  srvsec1_natn_code_hsch,
  substr(decode(srvsec1_natn_code_hsch,null,null,
    f_get_desc_fnc('STVNATN',srvsec1_natn_code_hsch,30)),1,30),
  srvsec1_stat_code_hsch,
  substr(decode(srvsec1_stat_code_hsch,null,null,
    f_get_desc_fnc('STVSTAT',srvsec1_stat_code_hsch,30)),1,30),
  srvsec1_hsch_type,
  srvsec1_hsch_grad_year,
  srvsec1_hsch_percentile,
  srvsec1_hsch_rank,
  srvsec1_hsch_size,
  decode(srvsec1_inquirer,'Y','Y','N',
      decode(srvsec1_prospect,'Y','Y','N',
          decode(srvsec1_applicant,'Y','Y','N',
              decode(srvsec1_admit,'Y','Y','N',
                  decode(srvsec1_deposit,'Y','Y','N',
                      decode(srvsec1_class,'FRESHMAN','Y',
                                           'SOPHOMORE','Y',
                                           'JUNIOR','Y',
                                           'SENIOR','Y',
                                           'GRADUATE','Y','N')))))),
  decode(srvsec1_prospect,'Y','Y','N',
      decode(srvsec1_applicant,'Y','Y','N',
          decode(srvsec1_admit,'Y','Y','N',
              decode(srvsec1_deposit,'Y','Y','N',
                  decode(srvsec1_class,'FRESHMAN','Y',
                                       'SOPHOMORE','Y',
                                       'JUNIOR','Y',
                                       'SENIOR','Y',
                                       'GRADUATE','Y','N'))))),
  decode(srvsec1_applicant,'Y','Y','N',
      decode(srvsec1_admit,'Y','Y','N',
          decode(srvsec1_deposit,'Y','Y','N',
              decode(srvsec1_class,'FRESHMAN','Y',
                                   'SOPHOMORE','Y',
                                   'JUNIOR','Y',
                                   'SENIOR','Y',
                                   'GRADUATE','Y','N')))),
  decode(srvsec1_admit,'Y','Y','N',
      decode(srvsec1_deposit,'Y','Y','N',
          decode(srvsec1_class,'FRESHMAN','Y',
                               'SOPHOMORE','Y',
                               'JUNIOR','Y',
                               'SENIOR','Y',
                               'GRADUATE','Y','N'))),
  decode(srvsec1_deposit,'Y','Y','N',
      decode(srvsec1_class,'FRESHMAN','Y',
                           'SOPHOMORE','Y',
                           'JUNIOR','Y',
                           'SENIOR','Y',
                           'GRADUATE','Y','N')),
  decode(srvsec1_class,'FRESHMAN','Y',
                       'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvsec1_class,'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvsec1_class,'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvsec1_class,'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvsec1_class,'GRADUATE','Y','N'),
  srvsec1_styp_code,
  srvsec1_coll_code,
  srvsec1_camp_code,
  srvsec1_program_1,
  to_number(substr(decode(srvsec1_sbgi_code_hsch,null,null,
     decode(srvsec1_hsch_grad_year,null,null,
     f_hs_no_seniors(srvsec1_sbgi_code_hsch,srvsec1_hsch_grad_year)) ),1,6))
 from srvsec1
 "
"BANINST1","SPVPVNM","BANNER Reporting view to retrieve previous names","select spriden_pidm, spriden_id, spriden_last_name, spriden_first_name,
       spriden_mi, substr(spriden_mi,1,1), trunc(spriden_activity_date)
  from spriden
 where spriden_change_ind = 'N'
   and spriden_entity_ind = 'P'
 "
"BANINST1","SPVPVID","BANNER Reporting view to retrieve previous IDs","select spriden_pidm, spriden_id, spriden_last_name, spriden_first_name,
       trunc(spriden_activity_date)
  from spriden
 where spriden_change_ind = 'I'
   and spriden_entity_ind = 'P'
 "
"BANINST1","SPVPERS","","SELECT
 SPRIDEN_PIDM,
 SPRIDEN_ID,
 SPRIDEN_LAST_NAME,
 SPRIDEN_FIRST_NAME,
 SPRIDEN_MI,
 SPRIDEN_CHANGE_IND,
 SPRADDR_ATYP_CODE,
 SPRADDR_STREET_LINE1,
 SPRADDR_STREET_LINE2,
 SPRADDR_STREET_LINE3,
 SPRADDR_CITY,
 SPRADDR_STAT_CODE,
 SPRADDR_ZIP,
 SPRADDR_NATN_CODE,
 SPRTELE_PHONE_AREA,
 SPRTELE_PHONE_NUMBER,
 SPRTELE_PHONE_EXT,
 SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SSN'),1,15),
 TO_CHAR(to_date(goksels.f_name_bio_value(spriden_pidm, 'BDATE')),'MM'),
 TO_CHAR(to_date(goksels.f_name_bio_value(spriden_pidm, 'BDATE')),'DD'),
 TO_CHAR(to_date(goksels.f_name_bio_value(spriden_pidm, 'BDATE')),'YYYY'),
 SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SEX'),1,1)
 from SPRADDR,
     	SPRTELE,
     	SPRIDEN
WHERE SPRADDR_PIDM = SPRIDEN_PIDM
AND SPRTELE_PIDM = SPRADDR_PIDM
AND SPRTELE_ATYP_CODE = SPRADDR_ATYP_CODE
AND SPRTELE_ADDR_SEQNO = SPRADDR_SEQNO
AND SPRIDEN_PIDM > 0
UNION ALL
SELECT
 SPRIDEN_PIDM,
 SPRIDEN_ID,
 SPRIDEN_LAST_NAME,
 SPRIDEN_FIRST_NAME,
 SPRIDEN_MI,
 SPRIDEN_CHANGE_IND,
 SPRADDR_ATYP_CODE,
 SPRADDR_STREET_LINE1,
 SPRADDR_STREET_LINE2,
 SPRADDR_STREET_LINE3,
 SPRADDR_CITY,
 SPRADDR_STAT_CODE,
 SPRADDR_ZIP,
 SPRADDR_NATN_CODE,
 NULL,
 NULL,
 NULL,
 SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SSN'),1,15),
 TO_CHAR(to_date(goksels.f_name_bio_value(spriden_pidm, 'BDATE')),'MM'),
 TO_CHAR(to_date(goksels.f_name_bio_value(spriden_pidm, 'BDATE')),'DD'),
 TO_CHAR(to_date(goksels.f_name_bio_value(spriden_pidm, 'BDATE')),'YYYY'),
 SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SEX'),1,1)
 from SPRADDR,
     	SPRIDEN
WHERE SPRADDR_PIDM = SPRIDEN_PIDM
AND NOT EXISTS (SELECT 'X' FROM SPRTELE
                WHERE SPRTELE_PIDM = SPRADDR_PIDM
                AND SPRTELE_ATYP_CODE = SPRADDR_ATYP_CODE
                AND SPRTELE_ADDR_SEQNO = SPRADDR_SEQNO)
AND SPRIDEN_PIDM > 0
UNION ALL
SELECT
 SPRIDEN_PIDM,
 SPRIDEN_ID,
 SPRIDEN_LAST_NAME,
 SPRIDEN_FIRST_NAME,
 SPRIDEN_MI,
 SPRIDEN_CHANGE_IND,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SSN'),1,15),
 TO_CHAR(to_date(goksels.f_name_bio_value(spriden_pidm, 'BDATE')),'MM'),
 TO_CHAR(to_date(goksels.f_name_bio_value(spriden_pidm, 'BDATE')),'DD'),
 TO_CHAR(to_date(goksels.f_name_bio_value(spriden_pidm, 'BDATE')),'YYYY'),
 SUBSTR(goksels.f_name_bio_value(spriden_pidm, 'SEX'),1,1)
 from SPRIDEN
WHERE NOT EXISTS (SELECT 'X' FROM SPRADDR
                  WHERE SPRADDR.SPRADDR_PIDM = SPRIDEN.SPRIDEN_PIDM)
AND SPRIDEN_PIDM > 0
ORDER BY SPRIDEN_LAST_NAME,SPRIDEN_FIRST_NAME"
"BANINST1","SPVPCOL","This is a union of the srvpco1 and savpco1 views to join in descriptions for the coded fields.  This view returns the combined data from recruiting and admissions by unique term, pidm and level for SEM.","select
  savpco1_term_code,
  substr(f_get_desc_fnc('STVTERM',savpco1_term_code,30),1,30),
  savpco1_pidm,
  savpco1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',savpco1_levl_code,30),1,30),
  savpco1_appl_no,
  savpco1_id,
  savpco1_name,
  savpco1_admt_code,
  substr(decode(savpco1_admt_code,null,null,
    f_get_desc_fnc('STVADMT',savpco1_admt_code,30)),1,30),
  savpco1_apst_code,
  substr(decode(savpco1_apst_code,null,null,
    f_get_desc_fnc('STVAPST',savpco1_apst_code,30)),1,30),
  savpco1_degc_code_1,
  substr(decode(savpco1_degc_code_1,null,null,
    f_get_desc_fnc('STVDEGC',savpco1_degc_code_1,30)),1,30),
  savpco1_majr_code_1,
  substr(decode(savpco1_majr_code_1,null,null,
    f_get_desc_fnc('STVMAJR',savpco1_majr_code_1,30)),1,30),
  savpco1_full_part_ind,
  savpco1_sbgi_code_pcol,
  substr(decode(savpco1_sbgi_code_pcol,null,null,
    f_get_desc_fnc('STVSBGI',savpco1_sbgi_code_pcol,30)),1,30),
  savpco1_pcol_city,
  savpco1_natn_code_pcol,
  substr(decode(savpco1_natn_code_pcol,null,null,
    f_get_desc_fnc('STVNATN',savpco1_natn_code_pcol,30)),1,30),
  savpco1_stat_code_pcol,
  substr(decode(savpco1_stat_code_pcol,null,null,
    f_get_desc_fnc('STVSTAT',savpco1_stat_code_pcol,30)),1,30),
  decode(savpco1_inquirer,'Y','Y','N',
      decode(savpco1_prospect,'Y','Y','N',
          decode(savpco1_applicant,'Y','Y','N',
              decode(savpco1_admit,'Y','Y','N',
                  decode(savpco1_deposit,'Y','Y','N',
                      decode(savpco1_class,'FRESHMAN','Y',
                                           'SOPHOMORE','Y',
                                           'JUNIOR','Y',
                                           'SENIOR','Y',
                                           'GRADUATE','Y','N')))))),
  decode(savpco1_prospect,'Y','Y','N',
      decode(savpco1_applicant,'Y','Y','N',
          decode(savpco1_admit,'Y','Y','N',
              decode(savpco1_deposit,'Y','Y','N',
                  decode(savpco1_class,'FRESHMAN','Y',
                                       'SOPHOMORE','Y',
                                       'JUNIOR','Y',
                                       'SENIOR','Y',
                                       'GRADUATE','Y','N'))))),
  decode(savpco1_applicant,'Y','Y','N',
      decode(savpco1_admit,'Y','Y','N',
          decode(savpco1_deposit,'Y','Y','N',
              decode(savpco1_class,'FRESHMAN','Y',
                                   'SOPHOMORE','Y',
                                   'JUNIOR','Y',
                                   'SENIOR','Y',
                                   'GRADUATE','Y','N')))),
  decode(savpco1_admit,'Y','Y','N',
      decode(savpco1_deposit,'Y','Y','N',
          decode(savpco1_class,'FRESHMAN','Y',
                               'SOPHOMORE','Y',
                               'JUNIOR','Y',
                               'SENIOR','Y',
                               'GRADUATE','Y','N'))),
  decode(savpco1_deposit,'Y','Y','N',
      decode(savpco1_class,'FRESHMAN','Y',
                           'SOPHOMORE','Y',
                           'JUNIOR','Y',
                           'SENIOR','Y',
                           'GRADUATE','Y','N')),
  decode(savpco1_class,'FRESHMAN','Y',
                       'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savpco1_class,'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savpco1_class,'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savpco1_class,'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savpco1_class,'GRADUATE','Y','N'),
  savpco1_styp_code,
  savpco1_coll_code,
  savpco1_camp_code,
  savpco1_program_1
 from savpco1
union
select
  srvpco1_term_code,
  substr(f_get_desc_fnc('STVTERM',srvpco1_term_code,30),1,30),
  srvpco1_pidm,
  srvpco1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',srvpco1_levl_code,30),1,30),
  srvpco1_appl_no,
  srvpco1_id,
  srvpco1_name,
  srvpco1_admt_code,
  substr(decode(srvpco1_admt_code,null,null,
    f_get_desc_fnc('STVADMT',srvpco1_admt_code,30)),1,30),
  srvpco1_apst_code,
  substr(decode(srvpco1_apst_code,null,null,
    f_get_desc_fnc('STVAPST',srvpco1_apst_code,30)),1,30),
  srvpco1_degc_code_1,
  substr(decode(srvpco1_degc_code_1,null,null,
    f_get_desc_fnc('STVDEGC',srvpco1_degc_code_1,30)),1,30),
  srvpco1_majr_code_1,
  substr(decode(srvpco1_majr_code_1,null,null,
    f_get_desc_fnc('STVMAJR',srvpco1_majr_code_1,30)),1,30),
  srvpco1_full_part_ind,
  srvpco1_sbgi_code_pcol,
  substr(decode(srvpco1_sbgi_code_pcol,null,null,
    f_get_desc_fnc('STVSBGI',srvpco1_sbgi_code_pcol,30)),1,30),
  srvpco1_pcol_city,
  srvpco1_natn_code_pcol,
  substr(decode(srvpco1_natn_code_pcol,null,null,
    f_get_desc_fnc('STVNATN',srvpco1_natn_code_pcol,30)),1,30),
  srvpco1_stat_code_pcol,
  substr(decode(srvpco1_stat_code_pcol,null,null,
    f_get_desc_fnc('STVSTAT',srvpco1_stat_code_pcol,30)),1,30),
  decode(srvpco1_inquirer,'Y','Y','N',
      decode(srvpco1_prospect,'Y','Y','N',
          decode(srvpco1_applicant,'Y','Y','N',
              decode(srvpco1_admit,'Y','Y','N',
                  decode(srvpco1_deposit,'Y','Y','N',
                      decode(srvpco1_class,'FRESHMAN','Y',
                                           'SOPHOMORE','Y',
                                           'JUNIOR','Y',
                                           'SENIOR','Y',
                                           'GRADUATE','Y','N')))))),
  decode(srvpco1_prospect,'Y','Y','N',
      decode(srvpco1_applicant,'Y','Y','N',
          decode(srvpco1_admit,'Y','Y','N',
              decode(srvpco1_deposit,'Y','Y','N',
                  decode(srvpco1_class,'FRESHMAN','Y',
                                       'SOPHOMORE','Y',
                                       'JUNIOR','Y',
                                       'SENIOR','Y',
                                       'GRADUATE','Y','N'))))),
  decode(srvpco1_applicant,'Y','Y','N',
      decode(srvpco1_admit,'Y','Y','N',
          decode(srvpco1_deposit,'Y','Y','N',
              decode(srvpco1_class,'FRESHMAN','Y',
                                   'SOPHOMORE','Y',
                                   'JUNIOR','Y',
                                   'SENIOR','Y',
                                   'GRADUATE','Y','N')))),
  decode(srvpco1_admit,'Y','Y','N',
      decode(srvpco1_deposit,'Y','Y','N',
          decode(srvpco1_class,'FRESHMAN','Y',
                               'SOPHOMORE','Y',
                               'JUNIOR','Y',
                               'SENIOR','Y',
                               'GRADUATE','Y','N'))),
  decode(srvpco1_deposit,'Y','Y','N',
      decode(srvpco1_class,'FRESHMAN','Y',
                           'SOPHOMORE','Y',
                           'JUNIOR','Y',
                           'SENIOR','Y',
                           'GRADUATE','Y','N')),
  decode(srvpco1_class,'FRESHMAN','Y',
                       'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvpco1_class,'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvpco1_class,'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvpco1_class,'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvpco1_class,'GRADUATE','Y','N'),
  srvpco1_styp_code,
  srvpco1_coll_code,
  srvpco1_camp_code,
  srvpco1_program_1
 from srvpco1
 "
"BANINST1","SPVMEDI","PERSON MEDICAL INFORMATION VIEW","SELECT  SPRMEDI_PIDM,
        SPRMEDI_MDEQ_CODE,
        SUBSTR(GB_STVMDEQ.F_GET_DESCRIPTION(SPRMEDI_MDEQ_CODE),1,30),
        SUBSTR(SPRMEDI_COMMENT,1,60),
        SPRMEDI_DISA_CODE,
        SUBSTR(GB_STVDISA.F_GET_DESCRIPTION(SPRMEDI_DISA_CODE),1,30),
        SPRMEDI_SPSR_CODE,
        SUBSTR(GB_STVSPSR.F_GET_DESCRIPTION(SPRMEDI_SPSR_CODE),1,30),
        SPRMEDI_ONSET_AGE,
        DECODE(SPRMEDI_DISB_IND,'Y','YES',NULL)
FROM    SPRMEDI"
"BANINST1","SPVLIFE","This is a union of the savlif1 and srvlif1 views to join in descriptions for the coded fields.  This view returns the combined data from recruiting and admissions by unique term, pidm and level for SEM.","select
  savlif1_term_code,
  substr(f_get_desc_fnc('STVTERM',savlif1_term_code,30),1,30),
  savlif1_pidm,
  savlif1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',savlif1_levl_code,30),1,30),
  savlif1_appl_no,
  savlif1_id,
  savlif1_name,
  savlif1_ssn,
  savlif1_birth_date,
  savlif1_ethn_code,
  substr(decode(savlif1_ethn_code,null,null,
    f_get_desc_fnc('STVETHN',savlif1_ethn_code,30)),1,30),
  savlif1_sex,
  savlif1_natn_code,
  substr(decode(savlif1_natn_code,null,null,
    f_get_desc_fnc('STVNATN',savlif1_natn_code,30)),1,30),
  savlif1_stat_code,
  substr(decode(savlif1_stat_code,null,null,
    f_get_desc_fnc('STVSTAT',savlif1_stat_code,30)),1,30),
  savlif1_citz_code,
  substr(decode(savlif1_citz_code,null,null,
    f_get_desc_fnc('STVCITZ',savlif1_citz_code,30)),1,30),
  savlif1_admt_code,
  substr(decode(savlif1_admt_code,null,null,
    f_get_desc_fnc('STVADMT',savlif1_admt_code,30)),1,30),
  savlif1_apst_code,
  substr(decode(savlif1_apst_code,null,null,
    f_get_desc_fnc('STVAPST',savlif1_apst_code,30)),1,30),
  savlif1_degc_code_1,
  substr(decode(savlif1_degc_code_1,null,null,
    f_get_desc_fnc('STVDEGC',savlif1_degc_code_1,30)),1,30),
  savlif1_appl_eval,
  savlif1_majr_code_1,
  substr(decode(savlif1_majr_code_1,null,null,
    f_get_desc_fnc('STVMAJR',savlif1_majr_code_1,30)),1,30),
  savlif1_full_part_ind,
  savlif1_sbgi_code_source,
  substr(decode(savlif1_sbgi_code_source,null,null,
    f_get_desc_fnc('STVSBGI',savlif1_sbgi_code_source,30)),1,30),
  savlif1_apdc_code_inst,
  substr(decode(savlif1_apdc_code_inst,null,null,
    f_get_desc_fnc('STVAPDC',savlif1_apdc_code_inst,30)),1,30),
  savlif1_apdc_code_stdn,
  substr(decode(savlif1_apdc_code_stdn,null,null,
    f_get_desc_fnc('STVAPDC',savlif1_apdc_code_stdn,30)),1,30),
  savlif1_sbgi_code_othr_coll,
  substr(decode(savlif1_sbgi_code_othr_coll,null,null,
    f_get_desc_fnc('STVSBGI',savlif1_sbgi_code_othr_coll,30)),1,30),
  savlif1_chrt_code,
  substr(decode(savlif1_chrt_code,null,null,
    f_get_desc_fnc('STVCHRT',savlif1_chrt_code,30)),1,30),
  savlif1_sbgi_code_hsch,
  substr(decode(savlif1_sbgi_code_hsch,null,null,
    f_get_desc_fnc('STVSBGI',savlif1_sbgi_code_hsch,30)),1,30),
  savlif1_hsch_city,
  savlif1_natn_code_hsch,
  substr(decode(savlif1_natn_code_hsch,null,null,
    f_get_desc_fnc('STVNATN',savlif1_natn_code_hsch,30)),1,30),
  savlif1_stat_code_hsch,
  substr(decode(savlif1_stat_code_hsch,null,null,
    f_get_desc_fnc('STVSTAT',savlif1_stat_code_hsch,30)),1,30),
  savlif1_hsch_type,
  savlif1_hsch_grad_year,
  savlif1_hsch_percentile,
  savlif1_hsch_rank,
  savlif1_hsch_size,
  savlif1_gpa_normalized,
  savlif1_gpa_reported,
  savlif1_aidy_code,
  substr(decode(savlif1_aidy_code,null,null,
    f_finaid_get_desc('ROBINST',savlif1_aidy_code,30)),1,30),
  savlif1_fa_applicant,
  savlif1_inst_aid_recipient,
  savlif1_inst_grant_amt,
  savlif1_state_grant_amt,
  savlif1_seog_amt,
  savlif1_pell_amt,
  savlif1_other_grant_amt,
  savlif1_inst_loan_amt,
  savlif1_perk_loan_amt,
  savlif1_staf_loan_amt,
  savlif1_other_loan_amt,
  savlif1_fws_amt,
  savlif1_gws_amt,
  decode(savlif1_inquirer,'Y','Y','N',
      decode(savlif1_prospect,'Y','Y','N',
          decode(savlif1_applicant,'Y','Y','N',
              decode(savlif1_admit,'Y','Y','N',
                  decode(savlif1_deposit,'Y','Y','N',
                      decode(savlif1_class,'FRESHMAN','Y',
                                           'SOPHOMORE','Y',
                                           'JUNIOR','Y',
                                           'SENIOR','Y',
                                           'GRADUATE','Y','N')))))),
  decode(savlif1_prospect,'Y','Y','N',
      decode(savlif1_applicant,'Y','Y','N',
          decode(savlif1_admit,'Y','Y','N',
              decode(savlif1_deposit,'Y','Y','N',
                  decode(savlif1_class,'FRESHMAN','Y',
                                       'SOPHOMORE','Y',
                                       'JUNIOR','Y',
                                       'SENIOR','Y',
                                       'GRADUATE','Y','N'))))),
  decode(savlif1_applicant,'Y','Y','N',
      decode(savlif1_admit,'Y','Y','N',
          decode(savlif1_deposit,'Y','Y','N',
              decode(savlif1_class,'FRESHMAN','Y',
                                   'SOPHOMORE','Y',
                                   'JUNIOR','Y',
                                   'SENIOR','Y',
                                   'GRADUATE','Y','N')))),
  decode(savlif1_admit,'Y','Y','N',
      decode(savlif1_deposit,'Y','Y','N',
          decode(savlif1_class,'FRESHMAN','Y',
                               'SOPHOMORE','Y',
                               'JUNIOR','Y',
                               'SENIOR','Y',
                               'GRADUATE','Y','N'))),
  decode(savlif1_deposit,'Y','Y','N',
      decode(savlif1_class,'FRESHMAN','Y',
                           'SOPHOMORE','Y',
                           'JUNIOR','Y',
                           'SENIOR','Y',
                           'GRADUATE','Y','N')),
  decode(savlif1_class,'FRESHMAN','Y',
                       'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savlif1_class,'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savlif1_class,'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savlif1_class,'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savlif1_class,'GRADUATE','Y','N'),
  savlif1_term_code_stdn,
  substr(decode(savlif1_term_code_stdn,null,null,
    f_get_desc_fnc('STVTERM',savlif1_term_code_stdn,30)),1,30),
  savlif1_act_composite,
  savlif1_sat_combined,
  savlif1_sat_math,
  savlif1_sat_verbal,
  savlif1_adms_termination_date,
  savlif1_activity_date
 from savlif1
union
select
  srvlif1_term_code,
  substr(f_get_desc_fnc('STVTERM',srvlif1_term_code,30),1,30),
  srvlif1_pidm,
  srvlif1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',srvlif1_levl_code,30),1,30),
  srvlif1_appl_no,
  srvlif1_id,
  srvlif1_name,
  srvlif1_ssn,
  srvlif1_birth_date,
  srvlif1_ethn_code,
  substr(decode(srvlif1_ethn_code,null,null,
    f_get_desc_fnc('STVETHN',srvlif1_ethn_code,30)),1,30),
  srvlif1_sex,
  srvlif1_natn_code,
  substr(decode(srvlif1_natn_code,null,null,
    f_get_desc_fnc('STVNATN',srvlif1_natn_code,30)),1,30),
  srvlif1_stat_code,
  substr(decode(srvlif1_stat_code,null,null,
    f_get_desc_fnc('STVSTAT',srvlif1_stat_code,30)),1,30),
  srvlif1_citz_code,
  substr(decode(srvlif1_citz_code,null,null,
    f_get_desc_fnc('STVCITZ',srvlif1_citz_code,30)),1,30),
  srvlif1_admt_code,
  substr(decode(srvlif1_admt_code,null,null,
    f_get_desc_fnc('STVADMT',srvlif1_admt_code,30)),1,30),
  srvlif1_apst_code,
  substr(decode(srvlif1_apst_code,null,null,
    f_get_desc_fnc('STVAPST',srvlif1_apst_code,30)),1,30),
  srvlif1_degc_code_1,
  substr(decode(srvlif1_degc_code_1,null,null,
    f_get_desc_fnc('STVDEGC',srvlif1_degc_code_1,30)),1,30),
  srvlif1_appl_eval,
  srvlif1_majr_code_1,
  substr(decode(srvlif1_majr_code_1,null,null,
    f_get_desc_fnc('STVMAJR',srvlif1_majr_code_1,30)),1,30),
  srvlif1_full_part_ind,
  srvlif1_sbgi_code_source,
  substr(decode(srvlif1_sbgi_code_source,null,null,
    f_get_desc_fnc('STVSBGI',srvlif1_sbgi_code_source,30)),1,30),
  srvlif1_apdc_code_inst,
  substr(decode(srvlif1_apdc_code_inst,null,null,
    f_get_desc_fnc('STVAPDC',srvlif1_apdc_code_inst,30)),1,30),
  srvlif1_apdc_code_stdn,
  substr(decode(srvlif1_apdc_code_stdn,null,null,
    f_get_desc_fnc('STVAPDC',srvlif1_apdc_code_stdn,30)),1,30),
  srvlif1_sbgi_code_othr_coll,
  substr(decode(srvlif1_sbgi_code_othr_coll,null,null,
    f_get_desc_fnc('STVSBGI',srvlif1_sbgi_code_othr_coll,30)),1,30),
  srvlif1_chrt_code,
  substr(decode(srvlif1_chrt_code,null,null,
    f_get_desc_fnc('STVCHRT',srvlif1_chrt_code,30)),1,30),
  srvlif1_sbgi_code_hsch,
  substr(decode(srvlif1_sbgi_code_hsch,null,null,
    f_get_desc_fnc('STVSBGI',srvlif1_sbgi_code_hsch,30)),1,30),
  srvlif1_hsch_city,
  srvlif1_natn_code_hsch,
  substr(decode(srvlif1_natn_code_hsch,null,null,
    f_get_desc_fnc('STVNATN',srvlif1_natn_code_hsch,30)),1,30),
  srvlif1_stat_code_hsch,
  substr(decode(srvlif1_stat_code_hsch,null,null,
    f_get_desc_fnc('STVSTAT',srvlif1_stat_code_hsch,30)),1,30),
  srvlif1_hsch_type,
  srvlif1_hsch_grad_year,
  srvlif1_hsch_percentile,
  srvlif1_hsch_rank,
  srvlif1_hsch_size,
  srvlif1_gpa_normalized,
  srvlif1_gpa_reported,
  srvlif1_aidy_code,
  substr(decode(srvlif1_aidy_code,null,null,
    f_finaid_get_desc('ROBINST',srvlif1_aidy_code,30)),1,30),
  srvlif1_fa_applicant,
  srvlif1_inst_aid_recipient,
  srvlif1_inst_grant_amt,
  srvlif1_state_grant_amt,
  srvlif1_seog_amt,
  srvlif1_pell_amt,
  srvlif1_other_grant_amt,
  srvlif1_inst_loan_amt,
  srvlif1_perk_loan_amt,
  srvlif1_staf_loan_amt,
  srvlif1_other_loan_amt,
  srvlif1_fws_amt,
  srvlif1_gws_amt,
  decode(srvlif1_inquirer,'Y','Y','N',
      decode(srvlif1_prospect,'Y','Y','N',
          decode(srvlif1_applicant,'Y','Y','N',
              decode(srvlif1_admit,'Y','Y','N',
                  decode(srvlif1_deposit,'Y','Y','N',
                      decode(srvlif1_class,'FRESHMAN','Y',
                                           'SOPHOMORE','Y',
                                           'JUNIOR','Y',
                                           'SENIOR','Y',
                                           'GRADUATE','Y','N')))))),
  decode(srvlif1_prospect,'Y','Y','N',
      decode(srvlif1_applicant,'Y','Y','N',
          decode(srvlif1_admit,'Y','Y','N',
              decode(srvlif1_deposit,'Y','Y','N',
                  decode(srvlif1_class,'FRESHMAN','Y',
                                       'SOPHOMORE','Y',
                                       'JUNIOR','Y',
                                       'SENIOR','Y',
                                       'GRADUATE','Y','N'))))),
  decode(srvlif1_applicant,'Y','Y','N',
      decode(srvlif1_admit,'Y','Y','N',
          decode(srvlif1_deposit,'Y','Y','N',
              decode(srvlif1_class,'FRESHMAN','Y',
                                   'SOPHOMORE','Y',
                                   'JUNIOR','Y',
                                   'SENIOR','Y',
                                   'GRADUATE','Y','N')))),
  decode(srvlif1_admit,'Y','Y','N',
      decode(srvlif1_deposit,'Y','Y','N',
          decode(srvlif1_class,'FRESHMAN','Y',
                               'SOPHOMORE','Y',
                               'JUNIOR','Y',
                               'SENIOR','Y',
                               'GRADUATE','Y','N'))),
  decode(srvlif1_deposit,'Y','Y','N',
      decode(srvlif1_class,'FRESHMAN','Y',
                           'SOPHOMORE','Y',
                           'JUNIOR','Y',
                           'SENIOR','Y',
                           'GRADUATE','Y','N')),
  decode(srvlif1_class,'FRESHMAN','Y',
                       'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvlif1_class,'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvlif1_class,'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvlif1_class,'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(srvlif1_class,'GRADUATE','Y','N'),
  srvlif1_term_code_stdn,
  substr(decode(srvlif1_term_code_stdn,null,null,
    f_get_desc_fnc('STVTERM',srvlif1_term_code_stdn,30)),1,30),
  srvlif1_act_composite,
  srvlif1_sat_combined,
  srvlif1_sat_math,
  srvlif1_sat_verbal,
  srvlif1_adms_termination_date,
  srvlif1_activity_date
 from srvlif1
 "
"BANINST1","SPVINTL","PERSON INTERNATIONAL INFORMATION VIEW","SELECT  GORVISA_PIDM,
        GORVISA_VTYP_CODE,
        SUBSTR(GB_STVVTYP.F_GET_DESCRIPTION (GORVISA_VTYP_CODE),1,30),
        GORVISA_VISA_NUMBER,
        GORVISA_VISA_ISSUE_DATE,
        GORVISA_VISA_EXPIRE_DATE,
        GOBINTL_SPON_CODE,
        SUBSTR(GB_STVSPON.F_GET_DESCRIPTION (GOBINTL_SPON_CODE),1,30),
        GOBINTL_NATN_CODE_BIRTH,
        SUBSTR(GB_STVNATN.F_GET_DESCRIPTION (GOBINTL_NATN_CODE_BIRTH),1,30),
        GOBINTL_NATN_CODE_LEGAL,
        SUBSTR(GB_STVNATN.F_GET_DESCRIPTION (GOBINTL_NATN_CODE_LEGAL),1,30),
        GOBINTL_PASSPORT_ID,
        GOBINTL_PASSPORT_EXP_DATE,
        GOBINTL_REG_NUMBER ,
        GOBINTL_CERT_NUMBER,
        GOBINTL_I94_STATUS,
        GOBINTL_I94_DATE,
        GORVISA_VTYP_CODE,
        SUBSTR(GB_STVVTYP.F_GET_DESCRIPTION (GORVISA_VTYP_CODE),1,30),
        GORVISA_VISA_START_DATE,
        GORVISA_VISA_EXPIRE_DATE,
        GORVISA_PENT_CODE,
        SUBSTR(GB_STVPENT.F_GET_DESCRIPTION (GORVISA_PENT_CODE),1,30),
        GORVISA_NO_ENTRIES,
        GOBINTL_ADMR_CODE,
        GOBINTL_CERT_DATE_RECEIPT,
        GOBINTL_CERT_DATE_ISSUE,
        GOBINTL_LANG_CODE,
        SUBSTR(GB_STVLANG.F_GET_DESCRIPTION (GOBINTL_LANG_CODE),1,30),
        DECODE (GOBINTL_CELG_CODE,'I-20','YES','N','NO',NULL),
        DECODE (GOBINTL_SPOUSE_IND,'Y','YES','N','NO',NULL),
        GOBINTL_CHILD_NUMBER,
        GOBINTL_EMPT_CODE,
        SUBSTR(GB_STVEMPT.F_GET_DESCRIPTION (GOBINTL_EMPT_CODE),1,30),
        DECODE (GOBINTL_SIGNATURE_IND,'Y','YES','N','NO',NULL),
        GOBINTL_FOREIGN_SSN
FROM    GOBINTL,
        GORVISA
WHERE   GOBINTL_PIDM   = GORVISA_PIDM
UNION ALL
SELECT GORVISA_PIDM,
        GORVISA_VTYP_CODE,
        SUBSTR(GB_STVVTYP.F_GET_DESCRIPTION (GORVISA_VTYP_CODE),1,30),
        GORVISA_VISA_NUMBER,
        GORVISA_VISA_ISSUE_DATE,
        GORVISA_VISA_EXPIRE_DATE,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        GORVISA_VTYP_CODE,
        SUBSTR(GB_STVVTYP.F_GET_DESCRIPTION (GORVISA_VTYP_CODE),1,30),
        GORVISA_VISA_START_DATE,
        GORVISA_VISA_EXPIRE_DATE,
        GORVISA_PENT_CODE,
        SUBSTR(GB_STVPENT.F_GET_DESCRIPTION (GORVISA_PENT_CODE),1,30),
        GORVISA_NO_ENTRIES,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL
FROM    GORVISA
WHERE   NOT EXISTS (Select 'X' from GOBINTL WHERE GOBINTL.GOBINTL_PIDM = GORVISA.GORVISA_PIDM)"
"BANINST1","SPVCURR","Current Pidm, ID, and Name Information View","SELECT  SPRIDEN_PIDM,
        SPRIDEN_ID,
        DECODE (SPRIDEN_ENTITY_IND,'C',
                SPRIDEN_LAST_NAME,
                SPRIDEN_LAST_NAME  || ', ' ||
                SPRIDEN_FIRST_NAME || ' ' ||
                SPRIDEN_MI),
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_ACTIVITY_DATE
FROM    SPRIDEN,
        SPBPERS
WHERE   SPRIDEN_PIDM = SPBPERS_PIDM
AND     SPRIDEN_CHANGE_IND IS NULL
AND     SPBPERS_DEAD_IND IS NULL
 "
"BANINST1","SPVCMNT","View placed upon SPRCMNT table to provide access to LONG column","select
       sprcmnt_pidm,
       sprcmnt_cmtt_code,
       nvl(substr(sprcmnt_text,1,2000),
           f_clob_to_text(sprcmnt.rowid, 2000)),
       sprcmnt_confidential_ind,
       sprcmnt_date,
       sprcmnt_orig_code,
       sprcmnt_activity_date,
       sprcmnt_ctyp_code,
       sprcmnt_contact_date,
       sprcmnt_user_id,
       sprcmnt_contact_from_time,
       sprcmnt_contact_to_time,
       f_clob_to_text(sprcmnt.rowid,2000)
  from sprcmnt
 "
"BANINST1","SPVADRS","Student Address Hierarchy View","SELECT SPRADDR_PIDM,
       SPRADDR_ATYP_CODE,
       (SELECT STVATYP_DESC FROM stvatyp WHERE stvatyp_code = SPRADDR_ATYP_CODE),
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       (SELECT STVSTAT_DESC FROM stvstat WHERE stvstat_code = SPRADDR_STAT_CODE),
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       (SELECT STVCNTY_DESC FROM stvcnty WHERE stvcnty_code = SPRADDR_CNTY_CODE),
       SPRADDR_NATN_CODE,
       (SELECT STVNATN_NATION FROM stvnatn WHERE stvnatn_code = SPRADDR_NATN_CODE)
  FROM SPRADDR X,
       GURFCLR Y
 WHERE  X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   SYSDATE BETWEEN TO_DATE(X.SPRADDR_FROM_DATE)
                     AND TO_DATE(X.SPRADDR_TO_DATE))
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   SYSDATE >= TO_DATE(X.SPRADDR_FROM_DATE))
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   SYSDATE <= TO_DATE(X.SPRADDR_TO_DATE)))
   AND   Y.GURFCLR_SESSION  = TO_CHAR(USERENV('SESSIONID'))
   AND (Y.GURFCLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
          (SELECT MIN(C.GURFCLR_VALUE_ATYP),
		  SUBSTR(MIN(C.GURFCLR_VALUE_ATYP),2,2)
       	     FROM SPRADDR,
	          GURFCLR C
            WHERE C.GURFCLR_SESSION = Y.GURFCLR_SESSION
	      AND SPRADDR_PIDM = X.SPRADDR_PIDM
	      AND SPRADDR_ATYP_CODE = SUBSTR(C.GURFCLR_VALUE_ATYP,2,2)
	      AND SPRADDR_STATUS_IND IS NULL
	      AND ((SPRADDR_TO_DATE IS NULL
	      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
	      AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   SYSDATE BETWEEN TO_DATE(SPRADDR_FROM_DATE)
                                AND TO_DATE(SPRADDR_TO_DATE))
               OR  (SPRADDR_FROM_DATE IS NOT NULL
	      AND   SPRADDR_TO_DATE IS NULL
              AND   SYSDATE  >= TO_DATE(SPRADDR_FROM_DATE))
               OR  (SPRADDR_FROM_DATE IS NULL
	      AND   SPRADDR_TO_DATE IS NOT NULL
              AND   SYSDATE <= TO_DATE(SPRADDR_TO_DATE))))"
"BANINST1","SPVADDS","Address Hierarchy View","SELECT SPRADDR_PIDM, SPRIDEN_ID,
       SPRIDEN_SURNAME_PREFIX, SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME, SPRIDEN_MI,
       SPRADDR_ATYP_CODE, STVATYP_DESC,
       SPRADDR_STREET_LINE1, SPRADDR_STREET_LINE2, SPRADDR_STREET_LINE3,
       SPRADDR_CITY, SPRADDR_STAT_CODE, STVSTAT_DESC,
       SPRADDR_ZIP, SPRADDR_CNTY_CODE, STVCNTY_DESC,
       SPRADDR_NATN_CODE, STVNATN_NATION,
       SPRADDR_SEQNO, SPRADDR_DELIVERY_POINT, SPRADDR_CORRECTION_DIGIT,
       SPRADDR_HOUSE_NUMBER, SPRADDR_STREET_LINE4
  FROM STVATYP, STVNATN, STVSTAT,
       STVCNTY, SPRIDEN, SPRADDR X,
       SPRCOLR Y
 WHERE X.SPRADDR_SEQNO =
          (SELECT MAX(SPRADDR_SEQNO)
       	     FROM SPRADDR,
	          SPRCOLR C
	    WHERE C.SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
	      AND SPRADDR_PIDM = X.SPRADDR_PIDM
	      AND SPRADDR_ATYP_CODE = X.SPRADDR_ATYP_CODE
	      AND SPRADDR_STATUS_IND IS NULL
	      AND ((SPRADDR_TO_DATE IS NULL
	      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
	      AND   SPRADDR_FROM_DATE IS NOT NULL
	      AND  TRUNC(C.SPRCOLR_VALUE_DATE) BETWEEN TRUNC(SPRADDR_FROM_DATE)
					     AND TRUNC(SPRADDR_TO_DATE))
               OR  (SPRADDR_FROM_DATE IS NOT NULL
	      AND   SPRADDR_TO_DATE IS NULL
	      AND   TRUNC(C.SPRCOLR_VALUE_DATE) >= TRUNC(SPRADDR_FROM_DATE))
               OR  (SPRADDR_FROM_DATE IS NULL
	      AND   SPRADDR_TO_DATE IS NOT NULL
	      AND   TRUNC(C.SPRCOLR_VALUE_DATE) <= TRUNC(SPRADDR_TO_DATE))))
   AND STVATYP_CODE (+) = SPRADDR_ATYP_CODE
   AND STVNATN_CODE (+) = SPRADDR_NATN_CODE
   AND STVSTAT_CODE (+) = SPRADDR_STAT_CODE
   AND STVCNTY_CODE (+) = SPRADDR_CNTY_CODE
   AND SPRIDEN_PIDM = X.SPRADDR_PIDM
   AND SPRIDEN_CHANGE_IND IS NULL
   AND Y.SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
   AND X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   TRUNC(Y.SPRCOLR_VALUE_DATE) BETWEEN TRUNC(X.SPRADDR_FROM_DATE)
				  AND TRUNC(X.SPRADDR_TO_DATE))
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   TRUNC(Y.SPRCOLR_VALUE_DATE) >= TRUNC(X.SPRADDR_FROM_DATE))
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   TRUNC(Y.SPRCOLR_VALUE_DATE) <= TRUNC(X.SPRADDR_TO_DATE)))
-- AND (Y.SPRCOLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
   AND  X.SPRADDR_ATYP_CODE  = substr(y.sprcolr_value_atyp,2,2)
   AND (Y.SPRCOLR_VALUE_ATYP) =
          (SELECT MIN(C.SPRCOLR_VALUE_ATYP)
--         SUBSTR(MIN(C.SPRCOLR_VALUE_ATYP),2,2)
       	     FROM SPRADDR,
	          SPRCOLR C
	    WHERE C.SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
	      AND SPRADDR_PIDM = X.SPRADDR_PIDM
	      AND SPRADDR_ATYP_CODE = SUBSTR(C.SPRCOLR_VALUE_ATYP,2,2)
	      AND SPRADDR_STATUS_IND IS NULL
	      AND ((SPRADDR_TO_DATE IS NULL
	      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
	      AND   SPRADDR_FROM_DATE IS NOT NULL
	      AND   TRUNC(C.SPRCOLR_VALUE_DATE) BETWEEN TRUNC(SPRADDR_FROM_DATE)
					     AND TRUNC(SPRADDR_TO_DATE))
               OR  (SPRADDR_FROM_DATE IS NOT NULL
	      AND   SPRADDR_TO_DATE IS NULL
	      AND   TRUNC(C.SPRCOLR_VALUE_DATE) >= TRUNC(SPRADDR_FROM_DATE))
               OR  (SPRADDR_FROM_DATE IS NULL
	      AND   SPRADDR_TO_DATE IS NOT NULL
	      AND   TRUNC(C.SPRCOLR_VALUE_DATE) <= TRUNC(SPRADDR_TO_DATE))))"
"BANINST1","SPVADDR","Address Hierarchy Selection View","SELECT SPRIDEN_PIDM,
       SPRIDEN_ID,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI,
       SPRIDEN_ENTITY_IND,
       SPRADDR_ATYP_CODE,
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       SPRADDR_ZIP,
       SPRADDR_NATN_CODE,
       SPRADDR_PHONE_AREA,
       SPRADDR_PHONE_NUMBER,
       SPRADDR_PHONE_EXT,
       SPRIDEN_SURNAME_PREFIX,
       SPRADDR_HOUSE_NUMBER,
       SPRADDR_STREET_LINE4,
       SPRADDR_CTRY_CODE_PHONE
FROM   SPRIDEN X,
       SPRADDR,
       SPRCOLR Y
WHERE  SPRIDEN_PIDM = SPRADDR_PIDM
AND    SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
AND    SPRCOLR_TYPE = 'D'
AND    SPRIDEN_CHANGE_IND IS NULL
AND    SPRADDR_STATUS_IND IS NULL
AND    ((SPRADDR_TO_DATE IS NULL AND
         SPRADDR_FROM_DATE IS NULL)
         OR   (SPRADDR_TO_DATE IS NOT NULL AND
               SPRADDR_FROM_DATE IS NOT NULL AND
               Y.SPRCOLR_VALUE_DATE BETWEEN
                      SPRADDR_FROM_DATE AND SPRADDR_TO_DATE)
         OR   (SPRADDR_FROM_DATE IS NOT NULL AND
               SPRADDR_TO_DATE IS NULL AND
               Y.SPRCOLR_VALUE_DATE >= SPRADDR_FROM_DATE))
AND    SPRADDR_ATYP_CODE IN
	  (SELECT SUBSTR(SPRCOLR_VALUE_ATYP,2,2)
           FROM   SPRCOLR
           WHERE  SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
           AND    SPRCOLR_TYPE = 'A'
           AND    SUBSTR(SPRCOLR_VALUE_ATYP,1,1) =
	      (SELECT MIN(SUBSTR(SPRCOLR_VALUE_ATYP,1,1))
               FROM   SPRCOLR
               WHERE  SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
               AND    SPRCOLR_TYPE = 'A'
               AND    SUBSTR(SPRCOLR_VALUE_ATYP,2,2) IN
	          (SELECT SPRADDR_ATYP_CODE
 	           FROM   SPRADDR,
                          SPRCOLR
 	           WHERE  SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
 	           AND    SPRCOLR_TYPE = 'A'
 	           AND    SUBSTR(SPRCOLR_VALUE_ATYP,2,2) = SPRADDR_ATYP_CODE
                   AND    SPRADDR_STATUS_IND IS NULL
                   AND    ((SPRADDR_TO_DATE IS NULL AND
                            SPRADDR_FROM_DATE IS NULL)
                            OR   (SPRADDR_TO_DATE IS NOT NULL AND
                                  SPRADDR_FROM_DATE IS NOT NULL AND
                                  Y.SPRCOLR_VALUE_DATE BETWEEN
                                      SPRADDR_FROM_DATE AND
                                      SPRADDR_TO_DATE)
                            OR   (SPRADDR_FROM_DATE IS NOT NULL AND
                                  SPRADDR_TO_DATE IS NULL AND
                                  Y.SPRCOLR_VALUE_DATE >=
                                        SPRADDR_FROM_DATE))
 	           AND    SPRADDR_PIDM = X.SPRIDEN_PIDM)))
UNION
(SELECT SPRIDEN_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SPRIDEN_ENTITY_IND,
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        SPRIDEN_SURNAME_PREFIX,
        '',
        '',
        ''
 FROM   SPRIDEN
 WHERE  SPRIDEN_CHANGE_IND IS NULL
 MINUS
 SELECT DISTINCT SPRIDEN_PIDM,
                 SPRIDEN_ID,
                 SPRIDEN_LAST_NAME,
                 SPRIDEN_FIRST_NAME,
                 SPRIDEN_MI,
                 SPRIDEN_ENTITY_IND,
                 '',
                 '',
                 '',
                 '',
                 '',
                 '',
                 '',
                 '',
                 '',
                 '',
                 '',
                 SPRIDEN_SURNAME_PREFIX,
                 '',
                 '',
                 ''
 FROM   SPRIDEN,
        SPRADDR,
        SPRCOLR
 WHERE  SPRIDEN_PIDM = SPRADDR_PIDM
 AND    SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
 AND    SPRCOLR_TYPE = 'D'
 AND    SPRADDR_STATUS_IND IS NULL
 AND    ((SPRADDR_TO_DATE IS NULL AND
          SPRADDR_FROM_DATE IS NULL)
          OR   (SPRADDR_TO_DATE IS NOT NULL AND
                SPRADDR_FROM_DATE IS NOT NULL AND
                SPRCOLR_VALUE_DATE BETWEEN
                       SPRADDR_FROM_DATE AND SPRADDR_TO_DATE)
          OR   (SPRADDR_FROM_DATE IS NOT NULL AND
                SPRADDR_TO_DATE IS NULL AND
                SPRCOLR_VALUE_DATE >= SPRADDR_FROM_DATE))
 AND    SPRADDR_ATYP_CODE IN
            (SELECT SUBSTR(SPRCOLR_VALUE_ATYP,2,2)
             FROM   SPRCOLR
             WHERE  SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
             AND    SPRCOLR_TYPE = 'A'))
"
"BANINST1","SPVADDI","Addresses for BANNERQuest ","SELECT
SPRADDR.SPRADDR_PIDM, SPRADDR.SPRADDR_ATYP_CODE, SPRADDR.SPRADDR_SEQNO,
SPRADDR.SPRADDR_FROM_DATE, SPRADDR.SPRADDR_TO_DATE,
SPRADDR.SPRADDR_STREET_LINE1, SPRADDR.SPRADDR_STREET_LINE2, SPRADDR.SPRADDR_STREET_LINE3,
SPRADDR.SPRADDR_CITY, SPRADDR.SPRADDR_STAT_CODE, SPRADDR.SPRADDR_ZIP,
SPRADDR.SPRADDR_NATN_CODE, SPRADDR.SPRADDR_CNTY_CODE,
SPRADDR.SPRADDR_STATUS_IND, SPRADDR.SPRADDR_ACTIVITY_DATE,
SUBSTR(GB_STVSTAT.F_GET_DESCRIPTION (SPRADDR.SPRADDR_STAT_CODE),1,30),
SUBSTR(GB_STVCNTY.F_GET_DESCRIPTION (SPRADDR.SPRADDR_CNTY_CODE),1,30),
SUBSTR(GB_STVNATN.F_GET_DESCRIPTION (SPRADDR.SPRADDR_NATN_CODE),1,30),
STVATYP.STVATYP_DESC
FROM SPRADDR, STVATYP
WHERE SPRADDR_ATYP_CODE = STVATYP_CODE
  AND (SPRADDR.SPRADDR_STATUS_IND = 'A'
      OR SPRADDR.SPRADDR_STATUS_IND IS NULL)
"
"BANINST1","SPVADDF","Address Hierarchy View For FOCUS","SELECT X.SPRADDR_PIDM,
       SPRIDEN.SPRIDEN_ID,
       SPRIDEN.SPRIDEN_LAST_NAME,
       SPRIDEN.SPRIDEN_FIRST_NAME,
       SPRIDEN.SPRIDEN_MI,
       X.SPRADDR_ATYP_CODE,
       SUBSTR(GB_STVATYP.F_GET_DESCRIPTION (X.SPRADDR_ATYP_CODE),1,30),
       X.SPRADDR_STREET_LINE1,
       X.SPRADDR_STREET_LINE2,
       X.SPRADDR_STREET_LINE3,
       X.SPRADDR_CITY,
       X.SPRADDR_STAT_CODE,
       SUBSTR(GB_STVSTAT.F_GET_DESCRIPTION (X.SPRADDR_STAT_CODE),1,30),
       X.SPRADDR_ZIP,
       X.SPRADDR_CNTY_CODE,
       SUBSTR(GB_STVCNTY.F_GET_DESCRIPTION (X.SPRADDR_CNTY_CODE),1,30),
       X.SPRADDR_NATN_CODE,
       SUBSTR(GB_STVNATN.F_GET_DESCRIPTION (X.SPRADDR_NATN_CODE),1,30),
       X.SPRADDR_SEQNO,
       X.SPRADDR_DELIVERY_POINT,
       X.SPRADDR_CORRECTION_DIGIT
  FROM SPRIDEN,
       SPRADDR X,
       GURFCLR Y,
       GUBINST
 WHERE SPRIDEN.SPRIDEN_PIDM = X.SPRADDR_PIDM
   AND SPRIDEN.SPRIDEN_CHANGE_IND IS NULL
   AND X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   Y.GURFCLR_VALUE_DATE BETWEEN X.SPRADDR_FROM_DATE
                                  AND X.SPRADDR_TO_DATE)
    OR (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   Y.GURFCLR_VALUE_DATE >= X.SPRADDR_FROM_DATE)
    OR (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   Y.GURFCLR_VALUE_DATE <= X.SPRADDR_TO_DATE))
   AND   X.SPRADDR_SEQNO =
          (SELECT MAX (SPRADDR_SEQNO)
             FROM SPRADDR,
                  GURFCLR C
            WHERE C.GURFCLR_SESSION = Y.GURFCLR_SESSION
              AND SPRADDR_PIDM = X.SPRADDR_PIDM
              AND SPRADDR_ATYP_CODE = X.SPRADDR_ATYP_CODE
              AND SPRADDR_STATUS_IND IS NULL
              AND ((SPRADDR_TO_DATE IS NULL
              AND   SPRADDR_FROM_DATE IS NULL)
               OR (SPRADDR_TO_DATE IS NOT NULL
              AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   C.GURFCLR_VALUE_DATE BETWEEN SPRADDR_FROM_DATE
                                             AND SPRADDR_TO_DATE)
               OR (SPRADDR_FROM_DATE IS NOT NULL
              AND   SPRADDR_TO_DATE IS NULL
              AND   C.GURFCLR_VALUE_DATE >= SPRADDR_FROM_DATE)
               OR (SPRADDR_FROM_DATE IS NULL
              AND   SPRADDR_TO_DATE IS NOT NULL
              AND   C.GURFCLR_VALUE_DATE <= SPRADDR_TO_DATE)))
   AND   X.SPRADDR_ATYP_CODE =
                  SUBSTR (Y.GURFCLR_VALUE_ATYP,1,2)
   AND   Y.GURFCLR_VALUE_ATYP =
          (SELECT MIN (C.GURFCLR_VALUE_ATYP)
             FROM SPRADDR,
                  GURFCLR C
            WHERE C.GURFCLR_SESSION = Y.GURFCLR_SESSION
              AND SPRADDR_PIDM = X.SPRADDR_PIDM
              AND SPRADDR_ATYP_CODE = SUBSTR (C.GURFCLR_VALUE_ATYP, 1, 2)
              AND SPRADDR_STATUS_IND IS NULL
              AND ((SPRADDR_TO_DATE IS NULL
              AND   SPRADDR_FROM_DATE IS NULL)
               OR (SPRADDR_TO_DATE IS NOT NULL
              AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   C.GURFCLR_VALUE_DATE BETWEEN SPRADDR_FROM_DATE
                                             AND SPRADDR_TO_DATE)
               OR (SPRADDR_FROM_DATE IS NOT NULL
              AND   SPRADDR_TO_DATE IS NULL
              AND   C.GURFCLR_VALUE_DATE >= SPRADDR_FROM_DATE)
               OR (SPRADDR_FROM_DATE IS NULL
              AND   SPRADDR_TO_DATE IS NOT NULL
              AND   C.GURFCLR_VALUE_DATE <= SPRADDR_TO_DATE)))
AND Y.GURFCLR_SESSION = DECODE (GUBINST_OPERATING_SYSTEM_IND,'VMS',
                                USERENV ('TERMINAL'),
                                TO_CHAR (USERENV ('SESSIONID')))
AND GUBINST_KEY = 'INST'"
"BANINST1","SOVTTRM","Student Academic Standing View","SELECT SHRTTRM_TERM_CODE,
       SHRTTRM_PIDM,
       SHRTTRM_ASTD_CODE_END_OF_TERM,
       SUBSTR(SB_STVASTD.F_GET_DESCRIPTION (SHRTTRM_ASTD_CODE_END_OF_TERM), 1,30),
       SHRTTRM_PREV_CODE,
       SUBSTR(SB_STVPREV.F_GET_DESCRIPTION (SHRTTRM_PREV_CODE),1,30),
       SHRTTRM_CAST_CODE,
       SUBSTR(SB_STVCAST.F_GET_DESCRIPTION (SHRTTRM_CAST_CODE),1,30)
FROM   SHRTTRM"
"BANINST1","SOVTPC1","","select
 tbbcont_term_code,
 tbbcont_pidm,
 sfrstcr_pidm,
 sfrstcr_crn,
 SUBSTR(goksels.f_name_bio_value(tbbcont_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(tbbcont_pidm,'ID'),1,9),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(tbbcont_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','TC'),1,4),
 tbbcont_contract_number,
 tbbcont_desc,
 substr(f_enrolled_this_term(sfrstcr_pidm,tbbcont_term_code),1,1),
 substr(f_registered_this_term(sfrstcr_pidm,tbbcont_term_code),1,1),
 substr(f_applied_for_degree(sfrstcr_pidm),1,1),
 SUBSTR(goksels.f_name_bio_value(sfrstcr_pidm,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(sfrstcr_pidm,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(sfrstcr_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(sfrstcr_pidm,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(sfrstcr_pidm,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(sfrstcr_pidm,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(sfrstcr_pidm,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(sfrstcr_pidm,'SUF'),1,20),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(sfrstcr_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','TC'),1,4),
 substr(f_sgbstdn_fields(sfrstcr_pidm, tbbcont_term_code,
       'COLLEGE_1'),1,2),
 substr(f_sgbstdn_fields(sfrstcr_pidm, tbbcont_term_code,
       'CAMPUS'),1,3),
 substr(f_sgbstdn_fields(sfrstcr_pidm, tbbcont_term_code,
       'LEVEL'),1,2),
 substr(f_class_calc_fnc(sfrstcr_pidm,
       (substr(f_sgbstdn_fields(sfrstcr_pidm, tbbcont_term_code,
       'LEVEL'),1,2)), tbbcont_term_code),1,30),
 substr(f_sgbstdn_fields(sfrstcr_pidm, tbbcont_term_code, 'RATE'),1,5),
 ssbsect_subj_code,
 ssbsect_crse_numb,
 nvl(ssbsect_crse_title, b.scbcrse_title),
 ssbsect_seq_numb,
 sfrstcr_credit_hr,
 sfrstcr_bill_hr,
 sfrstcr_rsts_code,
 tbbcstu_auth_ind,
 tbbcstu_auth_number
from
     ssbsect, scbcrse b, sfrstcr, tbbcont, tbbcstu
where
 tbbcstu_contract_pidm = tbbcont_pidm
 and tbbcstu_contract_number = tbbcont_contract_number
 and tbbcstu_term_code = sfrstcr_term_code
 and tbbcstu_stu_pidm = sfrstcr_pidm
 and tbbcont_term_code = sfrstcr_term_code
 and sfrstcr_crn = ssbsect_crn
 and sfrstcr_term_code = ssbsect_term_code
 and ssbsect_subj_code = b.scbcrse_subj_code
 and ssbsect_crse_numb = b.scbcrse_crse_numb
 and b.scbcrse_eff_term = scksels.f_get_scbcrse_max_term_code(ssbsect_subj_code,ssbsect_crse_numb,tbbcont_term_code)"
"BANINST1","SOVTEST","Combined SAT Scores for BANNERQuest","select
 sortest_pidm,
 f_test_score_fnc (sortest_pidm,'SATM','HIGH','Y'),
 f_test_score_fnc (sortest_pidm,'SATV','HIGH','Y'),
 f_test_score_fnc (sortest_pidm,null,'COMBINED',null)
from sortest
where f_test_score_fnc (sortest_pidm,null,'COMBINED',null) is not null
group by sortest_pidm
 "
"BANINST1","SOVSTDN1","","SELECT STVTERM_CODE,
       STVTERM_DESC,
       S.SPRIDEN_ID,
       SUBSTR(S.SPRIDEN_LAST_NAME || ', ' || S.SPRIDEN_FIRST_NAME ||
              ' ' || SUBSTR(S.SPRIDEN_MI,1,1),1,25),
       S.SPRIDEN_LAST_NAME,
       S.SPRIDEN_FIRST_NAME,
       S.SPRIDEN_MI,
       SGBSTDN_PIDM,
       SGBSTDN_STST_CODE,
       STVSTST_DESC,
       SGBSTDN_LEVL_CODE,
       (SELECT STVLEVL_DESC FROM STVLEVL WHERE STVLEVL_CODE=SGBSTDN_LEVL_CODE),
       SGBSTDN_STYP_CODE,
       STVSTYP_DESC,
       SGBSTDN_ASTD_CODE,
       (SELECT STVASTD_DESC FROM STVASTD WHERE STVASTD_CODE=SGBSTDN_ASTD_CODE),
       SGBSTDN_CAMP_CODE,
       (SELECT STVCAMP_DESC FROM STVCAMP WHERE STVCAMP_CODE=SGBSTDN_CAMP_CODE),
       SGBSTDN_RESD_CODE,
       (SELECT STVRESD_DESC FROM STVRESD WHERE STVRESD_CODE=SGBSTDN_RESD_CODE),
       SGBSTDN_COLL_CODE_1,
       (SELECT STVCOLL_DESC FROM STVCOLL WHERE STVCOLL_CODE=SGBSTDN_COLL_CODE_1),
       SGBSTDN_DEGC_CODE_1,
       (SELECT STVDEGC_DESC FROM STVDEGC WHERE STVDEGC_CODE=SGBSTDN_DEGC_CODE_1),
       SGBSTDN_MAJR_CODE_1,
       (SELECT STVMAJR_DESC FROM STVMAJR WHERE STVMAJR_CODE=SGBSTDN_MAJR_CODE_1),
       (Select AV.SPRIDEN_ID || '{' || AV.SPRIDEN_LAST_NAME || ', ' || AV.SPRIDEN_FIRST_NAME
                || '{'
            FROM SPRIDEN AV, SGRADVR
            WHERE AV.SPRIDEN_PIDM = SGRADVR_ADVR_PIDM
            And AV.SPRIDEN_CHANGE_IND IS NULL
            And SGRADVR_ADVR_PIDM IS Not NULL
            And SGRADVR_PIDM = A.SGBSTDN_PIDM
            And SGRADVR_PRIM_IND = 'Y'
            And SGRADVR_TERM_CODE_EFF= STVTERM_CODE)
FROM   STVSTST,
       STVSTYP,
       SPRIDEN S,
       SGBSTDN A,
       STVTERM
WHERE S.SPRIDEN_PIDM = SGBSTDN_PIDM
  AND S.SPRIDEN_CHANGE_IND IS NULL
  AND STVSTST_CODE = SGBSTDN_STST_CODE
  AND STVSTYP_CODE = SGBSTDN_STYP_CODE
  AND STVSTST_REG_IND = 'Y'
  AND SGBSTDN_PIDM > 0
  AND SGBSTDN_TERM_CODE_EFF =
      (SELECT MAX (B.SGBSTDN_TERM_CODE_EFF)
       FROM   SGBSTDN B
       WHERE B.SGBSTDN_PIDM = A.SGBSTDN_PIDM
         AND B.SGBSTDN_TERM_CODE_EFF <= STVTERM_CODE)"
"BANINST1","SOVSTDN","General Student View","SELECT SOVSTDN1_TERM_CODE,
       SOVSTDN1_TERM_DESC,
       SOVSTDN1_ID,
       SOVSTDN1_FULL_NAME,
       SOVSTDN1_LAST_NAME,
       SOVSTDN1_FIRST_NAME,
       SOVSTDN1_MI,
       SOVSTDN1_PIDM,
       SOVSTDN1_STST_CODE,
       SOVSTDN1_STST_DESC,
       SOVSTDN1_LEVL_CODE,
       SOVSTDN1_LEVL_DESC,
       SOVSTDN1_STYP_CODE,
       SOVSTDN1_STYP_DESC,
       SOVSTDN1_ASTD_CODE,
       SOVSTDN1_ASTD_DESC,
       SOVSTDN1_CAMP_CODE,
       SOVSTDN1_CAMP_DESC,
       SOVSTDN1_RESD_CODE,
       SOVSTDN1_RESD_DESC,
       SOVSTDN1_COLL_CODE_1,
       SOVSTDN1_COLL_DESC_1,
       SOVSTDN1_DEGC_CODE_1,
       SOVSTDN1_DEGC_DESC_1,
       SOVSTDN1_MAJR_CODE_1,
       SOVSTDN1_MAJR_DESC_1,
       substr(f_split_fields(SOVSTDN1_ADVISOR,1),1,9),
       substr(f_split_fields(SOVSTDN1_ADVISOR,2),1,25)
FROM   SOVSTDN1 "
"BANINST1","SOVSREC","Curriculum Search; General Student Curriculum Values","select sgbstdn_pidm, sgbstdn_term_code_eff,
		decode(sovcuri_curr_ind,'1', sgbstdn_curr_rule_1,
			sgbstdn_curr_rule_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_program_1,
			sgbstdn_program_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_term_code_ctlg_1,
			sgbstdn_term_code_ctlg_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_levl_code,
			sgbstdn_levl_code_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_camp_code,
			sgbstdn_camp_code_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_coll_code_1,
			sgbstdn_coll_code_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_degc_code_1,
			sgbstdn_degc_code_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_cmjr_rule_1_1,
			sgbstdn_cmjr_rule_1_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_1,
			sgbstdn_majr_code_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_dept_code,
			sgbstdn_dept_code_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_ccon_rule_11_1,
			sgbstdn_ccon_rule_21_1),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_conc_1,
			sgbstdn_majr_code_conc_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_ccon_rule_11_2,
			sgbstdn_ccon_rule_21_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_conc_1_2,
			sgbstdn_majr_code_conc_2_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_ccon_rule_11_3,
			sgbstdn_ccon_rule_21_3),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_conc_1_3,
			sgbstdn_majr_code_conc_2_3),
		decode(sovcuri_curr_ind,'1', sgbstdn_cmjr_rule_2_1,
			sgbstdn_cmjr_rule_2_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_1_2,
			sgbstdn_majr_code_2_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_dept_code_1_2,
			sgbstdn_dept_code_2_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_ccon_rule_12_1,
			sgbstdn_ccon_rule_22_1),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_conc_2,
			sgbstdn_majr_code_conc_221),
		decode(sovcuri_curr_ind,'1', sgbstdn_ccon_rule_12_2,
			sgbstdn_ccon_rule_22_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_conc_122,
			sgbstdn_majr_code_conc_222),
		decode(sovcuri_curr_ind,'1', sgbstdn_ccon_rule_12_3,
			sgbstdn_ccon_rule_22_3),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_conc_123,
			sgbstdn_majr_code_conc_223),
		decode(sovcuri_curr_ind,'1', sgbstdn_cmnr_rule_1_1,
			sgbstdn_cmnr_rule_2_1),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_minr_1,
			sgbstdn_majr_code_minr_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_cmnr_rule_1_2,
			sgbstdn_cmnr_rule_2_2),
		decode(sovcuri_curr_ind,'1', sgbstdn_majr_code_minr_1_2,
			sgbstdn_majr_code_minr_2_2)
	from sgbstdn, sovcuri
 "
"BANINST1","SOVSPNM","This view lists key elements of the primary curriculum for a learners study path. ","SELECT
   SGRSTSP_PIDM
 , SGRSTSP_TERM_CODE_EFF
 , SGRSTSP_KEY_SEQNO
 , SGRSTSP_STSP_CODE
 , ( Select stvstsp_desc from stvstsp where stvstsp_code = sgrstsp.sgrstsp_stsp_code)
 , SORLCUR_LEVL_CODE
 , ( Select stvlevl_desc from stvlevl where stvlevl_code = sorlcur.sorlcur_levl_code)
 , SORLCUR_COLL_CODE
  , ( Select stvcoll_desc from stvcoll where stvcoll_code = sorlcur.sorlcur_coll_code)
 , SORLCUR_DEGC_CODE
  , ( Select stvdegc_desc from stvdegc where stvdegc_code = sorlcur.sorlcur_degc_code)
 , SORLCUR_CAMP_CODE
  , ( Select stvcamp_desc from stvcamp where stvcamp_code = sorlcur.sorlcur_camp_code)
 , SORLCUR_PROGRAM
  , ( Select smrprle_program_desc from smrprle where smrprle_program = sorlcur.sorlcur_program)
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur.sorlcur_pidm,
                        sorlcur.sorlcur_lmod_code,
                        sorlcur.sorlcur_term_code, sorlcur.sorlcur_key_seqno, sorlcur.sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'MAJR'),1,4)
  , ( Select stvmajr_desc from stvmajr where
       stvmajr_code =    SOKCCUR.f_fieldofstudy_value(sorlcur.sorlcur_pidm,
                        sorlcur.sorlcur_lmod_code,
                        sorlcur.sorlcur_term_code, sorlcur.sorlcur_key_seqno, sorlcur.sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'MAJR')   )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur.sorlcur_pidm,
                        sorlcur.sorlcur_lmod_code,
                        sorlcur.sorlcur_term_code, sorlcur.sorlcur_key_seqno, sorlcur.sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'MAJR'),1,4)
 , ( Select stvmajr_desc from stvmajr where
       stvmajr_code =    SOKCCUR.f_fieldofstudy_value(sorlcur.sorlcur_pidm,
                        sorlcur.sorlcur_lmod_code,
                        sorlcur.sorlcur_term_code, sorlcur.sorlcur_key_seqno, sorlcur.sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'MAJR')   )
 FROM  sobcact X, sorlcur , sgrstsp
WHERE     sorlcur_lmod_code =
  ( Select sb_curriculum_str.f_learner from dual)
  And sorlcur_term_code = sgrstsp_term_code_eff
  And sorlcur_pidm =  sgrstsp_pidm
  And sorlcur_key_seqno = sgrstsp_key_seqno
  And sobcact_cact_code = sorlcur_cact_code
  And sobcact_active_ind = 'Y'
  And sb_curriculum.f_find_current_all_ind( sorlcur.sorlcur_pidm,
         sorlcur.sorlcur_lmod_code,
         sorlcur.sorlcur_term_code,
         sorlcur.sorlcur_key_seqno,
         sorlcur.sorlcur_priority_no,
         sorlcur.sorlcur_seqno,
         sgrstsp.sgrstsp_term_code_eff,
         sorlcur.sorlcur_current_cde,
         'N',
         sorlcur.sorlcur_term_code_end) = 'Y'
  And sorlcur_priority_no =
     ( Select Min(prim.sorlcur_priority_no)
        from sobcact Y, sorlcur prim
        where prim.sorlcur_pidm = sorlcur.sorlcur_pidm
        And prim.sorlcur_lmod_code = sorlcur.sorlcur_lmod_code
        And prim.sorlcur_term_code = sgrstsp.sgrstsp_term_code_eff
        And prim.sorlcur_Key_seqno = sgrstsp.sgrstsp_key_seqno
        And Y.sobcact_cact_code = prim.sorlcur_cact_code
        And Y.sobcact_active_ind = 'Y'
        And sb_curriculum.f_find_current_all_ind( prim.sorlcur_pidm,
         prim.sorlcur_lmod_code,
         prim.sorlcur_term_code,
         prim.sorlcur_key_seqno,
         prim.sorlcur_priority_no,
         prim.sorlcur_seqno,
         sgrstsp.sgrstsp_term_code_eff,
         prim.sorlcur_current_cde,
         'N',
         prim.sorlcur_term_code_end) = 'Y'  )
  And sgrstsp_pidm > 0
"
"BANINST1","SOVSCOR","Test Score Information View","SELECT SARADAP.SARADAP_PIDM,
       SARADAP.SARADAP_TERM_CODE_ENTRY,
       SARADAP.SARADAP_APPL_NO,
       SORTEST.SORTEST_TESC_CODE,
       SUBSTR(GB_STVTESC.F_GET_DESCRIPTION (SORTEST.SORTEST_TESC_CODE),1,30),
       SORTEST.SORTEST_TEST_SCORE,
       SORTEST.SORTEST_TSRC_CODE,
       SUBSTR(SB_STVTSRC.F_GET_DESCRIPTION (SORTEST.SORTEST_TSRC_CODE),1,30),
       SORTEST.SORTEST_TADM_CODE,
       SUBSTR(SB_STVTADM.F_GET_DESCRIPTION (SORTEST.SORTEST_TADM_CODE),1,30),
       SORTEST.SORTEST_TEIN_CODE,
       SUBSTR(SB_STVTEIN.F_GET_DESCRIPTION (SORTEST.SORTEST_TEIN_CODE),1,30),
       SORTEST.SORTEST_TEFR_CODE,
       SUBSTR(SB_STVTEFR.F_GET_DESCRIPTION (SORTEST.SORTEST_TEFR_CODE),1,30),
       SORTEST.SORTEST_TEAC_CODE,
       SUBSTR(SB_STVTEAC.F_GET_DESCRIPTION (SORTEST.SORTEST_TEAC_CODE),1,30),
       SORTEST.SORTEST_TEPR_CODE,
       SUBSTR(SB_STVTEPR.F_GET_DESCRIPTION (SORTEST.SORTEST_TEPR_CODE),1,30)
FROM   SORTEST,
       SARADAP
WHERE SORTEST.SORTEST_PIDM = SARADAP.SARADAP_PIDM
UNION ALL
SELECT SARADAP.SARADAP_PIDM,
       SARADAP.SARADAP_TERM_CODE_ENTRY,
       SARADAP.SARADAP_APPL_NO,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL
FROM   SARADAP
WHERE NOT EXISTS
   (Select 'X' from SORTEST where SORTEST.SORTEST_PIDM = SARADAP.SARADAP_PIDM)"
"BANINST1","SOVSBGV","Source/Background Institution Base Information.","SELECT
X.STVSBGI_CODE,
X.STVSBGI_TYPE_IND,
X.STVSBGI_SRCE_IND,
X.STVSBGI_DESC,
X.STVSBGI_ACTIVITY_DATE,
X.STVSBGI_ADMR_CODE,
X.STVSBGI_EDI_CAPABLE,
X.STVSBGI_FICE,
X.STVSBGI_VR_MSG_NO,
X.STVSBGI_DISP_WEB_IND,
X.SBGI.SOBSBGI_STREET_LINE1,
X.SBGI.SOBSBGI_STREET_LINE2,
X.SBGI.SOBSBGI_STREET_LINE3,
X.SBGI.SOBSBGI_CITY,
X.SBGI.SOBSBGI_STAT_CODE,
X.SBGI.SOBSBGI_CNTY_CODE,
X.SBGI.SOBSBGI_ZIP,
X.SBGI.SOBSBGI_NATN_CODE
FROM
(SELECT STVSBGI_CODE,
       STVSBGI_TYPE_IND,
       STVSBGI_SRCE_IND,
       STVSBGI_DESC,
       STVSBGI_ACTIVITY_DATE,
       STVSBGI_ADMR_CODE,
       STVSBGI_EDI_CAPABLE,
       STVSBGI_FICE,
       STVSBGI_VR_MSG_NO,
       STVSBGI_DISP_WEB_IND,
       (SELECT SO_SOBSBGI(SOBSBGI_STREET_LINE1,
                          SOBSBGI_STREET_LINE2,
                          SOBSBGI_STREET_LINE3,
                          SOBSBGI_CITY,
                          SOBSBGI_STAT_CODE,
                          SOBSBGI_CNTY_CODE,
                          SOBSBGI_ZIP,
                          SOBSBGI_NATN_CODE,
                          NULL,
                          NULL)
          FROM SOBSBGI
         WHERE SOBSBGI_SBGI_CODE = STVSBGI_CODE) SBGI
  FROM STVSBGI) X"
"BANINST1","SOVSBGI","","SELECT
   spvsecs_sbgi_code_hsch,
   spvsecs_sbgi_code_hsch_desc,
   spvsecs_term_code,
   spvsecs_levl_code,
   spvsecs_camp_code,
   spvsecs_coll_code,
   spvsecs_degc_code_1,
   spvsecs_program_1,
   spvsecs_majr_code_1,
   spvsecs_styp_code,
   nvl(spvsecs_bdmo_senior_cnt, nvl(spvsecs_hsch_size,0)),
   sum(decode(spvsecs_inquirer,'Y',1,0)),
   decode(nvl(spvsecs_bdmo_senior_cnt, nvl(spvsecs_hsch_size,0)),0,0,
      ROUND(sum(decode(spvsecs_inquirer,'Y',1,0))*100 /
      nvl(spvsecs_bdmo_senior_cnt, nvl(spvsecs_hsch_size,0)),2) ),
   sum(decode(spvsecs_prospect,'Y',1,0)),
   decode(nvl(spvsecs_bdmo_senior_cnt, nvl(spvsecs_hsch_size,0)),0,0,
      ROUND(sum(decode(spvsecs_prospect,'Y',1,0))*100 /
      nvl(spvsecs_bdmo_senior_cnt, nvl(spvsecs_hsch_size,0)),2) ),
   sum(decode(spvsecs_applicant,'Y',1,0)),
   decode(nvl(spvsecs_bdmo_senior_cnt, nvl(spvsecs_hsch_size,0)),0,0,
      ROUND(sum(decode(spvsecs_applicant,'Y',1,0))*100 /
      nvl(spvsecs_bdmo_senior_cnt, nvl(spvsecs_hsch_size,0)),2) ),
   sum(decode(spvsecs_admit,'Y',1,0)),
   decode(sum(decode(spvsecs_applicant,'Y',1,0)),0,0,
      ROUND(sum(decode(spvsecs_admit,'Y',1,0))*100 /
      sum(decode(spvsecs_applicant,'Y',1,0)), 2) ),
   sum(decode(spvsecs_deposit,'Y',1,0)),
   decode(sum(decode(spvsecs_admit,'Y',1,0)),0,0,
      ROUND(sum(decode(spvsecs_deposit,'Y',1,0))*100 /
      sum(decode(spvsecs_admit,'Y',1,0)), 2) ),
   sum(decode(spvsecs_freshman,'Y',1,0)),
   sum(decode(spvsecs_sophomore,'Y',1,0)),
   sum(decode(spvsecs_junior,'Y',1,0)),
   sum(decode(spvsecs_senior,'Y',1,0)),
   sum(decode(spvsecs_graduate,'Y',1,0))
FROM spvsecs
GROUP BY spvsecs_sbgi_code_hsch,
   spvsecs_sbgi_code_hsch_desc,
   spvsecs_term_code,
   spvsecs_levl_code,
   spvsecs_camp_code,
   spvsecs_coll_code,
   spvsecs_degc_code_1,
   spvsecs_program_1,
   spvsecs_majr_code_1,
   spvsecs_styp_code,
   nvl(spvsecs_bdmo_senior_cnt, nvl(spvsecs_hsch_size,0))

 "
"BANINST1","SOVSATT","Student Attribute View","SELECT A.SGRSATT_PIDM,
       STVTERM.STVTERM_CODE,
       A.SGRSATT_ATTS_CODE,
      (SELECT STVATTS_DESC FROM STVATTS WHERE STVATTS_CODE=SGRSATT_ATTS_CODE)
FROM   SGRSATT A,
       STVTERM
WHERE  A.SGRSATT_TERM_CODE_EFF  =
      (SELECT MAX(B.SGRSATT_TERM_CODE_EFF)
       FROM   SGRSATT B
       WHERE  B.SGRSATT_PIDM = A.SGRSATT_PIDM
         AND  B.SGRSATT_TERM_CODE_EFF <= STVTERM_CODE)"
"BANINST1","SOVSACT","Student Activity View","SELECT SGRSACT_PIDM,
       SGRSACT_TERM_CODE,
       SGRSACT_ACTC_CODE,
       SUBSTR(F_GET_DESC_FNC ('STVACTC', SGRSACT_ACTC_CODE, 30),1,30)
FROM   SGRSACT"
"BANINST1","SOVRREC","Curriculum Search; Recruit Curriculum Values","select srbrecr_pidm, srbrecr_term_code,
		decode(sovcuri_curr_ind,'1', srbrecr_curr_rule_1,''),
		decode(sovcuri_curr_ind,'1', srbrecr_program_1,''),
		decode(sovcuri_curr_ind,'1', srbrecr_term_code_ctlg_1,''),
		decode(sovcuri_curr_ind,'1', srbrecr_levl_code,''),
		decode(sovcuri_curr_ind,'1', srbrecr_camp_code,''),
		decode(sovcuri_curr_ind,'1', srbrecr_coll_code,''),
		decode(sovcuri_curr_ind,'1', srbrecr_degc_code,''),
		decode(sovcuri_curr_ind,'1', srbrecr_cmjr_rule_1_1,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code,''),
		decode(sovcuri_curr_ind,'1', srbrecr_dept_code,''),
		decode(sovcuri_curr_ind,'1', srbrecr_ccon_rule_11_1,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code_conc_111,''),
		decode(sovcuri_curr_ind,'1', srbrecr_ccon_rule_11_2,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code_conc_112,''),
		decode(sovcuri_curr_ind,'1', srbrecr_ccon_rule_11_3,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code_conc_113,''),
		decode(sovcuri_curr_ind,'1', srbrecr_cmjr_rule_1_2,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code2,''),
		decode(sovcuri_curr_ind,'1', srbrecr_dept_code_2,''),
		decode(sovcuri_curr_ind,'1', srbrecr_ccon_rule_12_1,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code_conc_121,''),
		decode(sovcuri_curr_ind,'1', srbrecr_ccon_rule_12_2,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code_conc_122,''),
		decode(sovcuri_curr_ind,'1', srbrecr_ccon_rule_12_3,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code_conc_123,''),
		decode(sovcuri_curr_ind,'1', srbrecr_cmnr_rule_1_1,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code_minr_1,''),
		decode(sovcuri_curr_ind,'1', srbrecr_cmnr_rule_1_2,''),
		decode(sovcuri_curr_ind,'1', srbrecr_majr_code_minr_1_2,'')
	from srbrecr, sovcuri
 "
"BANINST1","SOVPERS","General Person View","SELECT SPBPERS_PIDM,
       SPBPERS_SEX,
       SPBPERS_SSN,
       SPBPERS_BIRTH_DATE,
       to_number(f_calculate_age(SYSDATE, SPBPERS_BIRTH_DATE, SPBPERS_DEAD_DATE)) as SOVPERS_AGE,
       SPBPERS_LGCY_CODE,
       SUBSTR(GB_STVLGCY.F_GET_DESCRIPTION (SPBPERS_LGCY_CODE),1,30) as SOVPERS_LGCY_DESC,
       SPBPERS_ETHN_CODE,
       SUBSTR(GB_STVETHN.F_GET_DESCRIPTION (SPBPERS_ETHN_CODE),1,30) as SOVPERS_ETHN_DESC,
       SPBPERS_MRTL_CODE,
       SUBSTR(GB_STVMRTL.F_GET_DESCRIPTION (SPBPERS_MRTL_CODE),1,30) as SOVPERS_MRTL_DESC,
       SPBPERS_RELG_CODE,
       SUBSTR(GB_STVRELG.F_GET_DESCRIPTION (SPBPERS_RELG_CODE),1,30) as SOVPERS_RELG_DESC,
       SPBPERS_CITZ_CODE,
       SUBSTR(GB_STVCITZ.F_GET_DESCRIPTION (SPBPERS_CITZ_CODE),1,30) as SOVPERS_CITZ_DESC,
       SPBPERS_CONFID_IND
FROM   SPBPERS
WHERE SPBPERS_DEAD_IND IS NULL"
"BANINST1","SOVPCUR","Curriculum Search; Combined Consolidated Results","select sovcurr_id,
		sovcurr_pidm,
		sovcurr_name,
		decode(sum(decode(sovcurr_source,'R',1,0)),1,'Y','N'),
		decode(sum(decode(sovcurr_source,'A',1,0)),1,'Y','N'),
		decode(sum(decode(sovcurr_source,'S',1,0)),1,'Y','N'),
		decode(sum(decode(sovcurr_source,'H',1,0)),1,'Y','N'),
		decode(sum(decode(sovcurr_source,'M',1,0)),1,'Y','N')
	from sovcurr
	group by sovcurr_id, sovcurr_pidm, sovcurr_name
 "
"BANINST1","SOVPCSM","","SELECT
   spvpcol_sbgi_code_pcol,
   spvpcol_sbgi_code_pcol_desc,
   spvpcol_term_code,
   spvpcol_levl_code,
   spvpcol_camp_code,
   spvpcol_coll_code,
   spvpcol_degc_code_1,
   spvpcol_program_1,
   spvpcol_majr_code_1,
   spvpcol_styp_code,
   sum(decode(spvpcol_inquirer,'Y',1,0)),
   sum(decode(spvpcol_prospect,'Y',1,0)),
   sum(decode(spvpcol_applicant,'Y',1,0)),
   sum(decode(spvpcol_admit,'Y',1,0)),
   decode(sum(decode(spvpcol_applicant,'Y',1,0)),0,0,
      ROUND(sum(decode(spvpcol_admit,'Y',1,0))*100 /
      sum(decode(spvpcol_applicant,'Y',1,0)), 2) ),
   sum(decode(spvpcol_deposit,'Y',1,0)),
   decode(sum(decode(spvpcol_admit,'Y',1,0)),0,0,
      ROUND(sum(decode(spvpcol_deposit,'Y',1,0))*100 /
      sum(decode(spvpcol_admit,'Y',1,0)), 2) ),
   sum(decode(spvpcol_freshman,'Y',1,0)),
   sum(decode(spvpcol_sophomore,'Y',1,0)),
   sum(decode(spvpcol_junior,'Y',1,0)),
   sum(decode(spvpcol_senior,'Y',1,0)),
   sum(decode(spvpcol_graduate,'Y',1,0))
FROM spvpcol
GROUP BY spvpcol_sbgi_code_pcol,
   spvpcol_sbgi_code_pcol_desc,
   spvpcol_term_code,
   spvpcol_levl_code,
   spvpcol_camp_code,
   spvpcol_coll_code,
   spvpcol_degc_code_1,
   spvpcol_program_1,
   spvpcol_majr_code_1,
   spvpcol_styp_code

 "
"BANINST1","SOVPCOL","Prior College View","(SELECT
 SORPCOL.SORPCOL_PIDM,
 SORPCOL.SORPCOL_SBGI_CODE,
 SORDEGR.SORDEGR_DEGC_CODE,
 SORDEGR.SORDEGR_DEGC_DATE,
 SORDEGR.SORDEGR_DEGC_YEAR,
 SORDEGR.SORDEGR_ATTEND_FROM,
 SORDEGR.SORDEGR_ATTEND_TO,
 SORDEGR.SORDEGR_COLL_CODE,
 SORDEGR.SORDEGR_HONR_CODE,
 SORDEGR.SORDEGR_HOURS_TRANSFERRED,
 SORDEGR.SORDEGR_GPA_TRANSFERRED
FROM SORDEGR, SORPCOL
WHERE SORDEGR.SORDEGR_PIDM = SORPCOL.SORPCOL_PIDM
  AND SORDEGR.SORDEGR_SBGI_CODE = SORPCOL.SORPCOL_SBGI_CODE
UNION ALL
SELECT
 SORPCOL.SORPCOL_PIDM,
 SORPCOL.SORPCOL_SBGI_CODE,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL,
 NULL
FROM SORPCOL
WHERE NOT EXISTS (SELECT 'X' FROM SORDEGR WHERE SORDEGR.SORDEGR_PIDM = SORPCOL.SORPCOL_PIDM
  AND SORDEGR.SORDEGR_SBGI_CODE = SORPCOL.SORPCOL_SBGI_CODE))"
"BANINST1","SOVMINR","PRIOR COLLEGE MINOR INFORMATION VIEW","SELECT  SORMINR_PIDM,
        SORMINR_SBGI_CODE,
        SUBSTR(GB_STVSBGI.F_GET_DESCRIPTION (SORMINR_SBGI_CODE),1,30),
        SORMINR_DEGC_CODE,
        SUBSTR(GB_STVDEGC.F_GET_DESCRIPTION (SORMINR_DEGC_CODE),1,30),
        SORMINR_DEGR_SEQ_NO,
        SORMINR_MAJR_CODE_MINOR,
        SUBSTR(GB_STVMAJR.F_GET_DESCRIPTION (SORMINR_MAJR_CODE_MINOR),1,30)
FROM    SORMINR"
"BANINST1","SOVMAUD","This view lists students and name in a mass entry.","Select
  maud.SORMAUD_FORM_NAME
 ,maud.SORMAUD_ADD_USER_ID
 ,maud.SORMAUD_ADD_DATE
 ,maud.SORMAUD_PIDM
 ,maud.SORMAUD_SEQNO
 ,maud.SORMAUD_MANUAL_ADD_IND
 ,maud.SORMAUD_PROCESS_IND
 ,maud.SORMAUD_UPDATE_CDE
 ,maud.SORMAUD_ACTIVITY_DATE
 ,maud.SORMAUD_USER_ID
 ,maud.SORMAUD_DATA_ORIGIN
 ,maud.SORMAUD_TERM_CODE
 ,maud.SORMAUD_KEY_SEQNO
 ,maud.SORMAUD_KEY_TEXT
 ,maud.SORMAUD_HOLD_CDE
 ,maud.SORMAUD_MSG
 ,maud.IDEN.spriden_id
 ,maud.IDEN.spriden_last_name
 ,maud.IDEN.spriden_first_name
 ,maud.IDEN.spriden_mi
 ,maud.IDEN.spriden_name
 ,maud.ROWID
 FROM
 ( Select
  SORMAUD_FORM_NAME
 , SORMAUD_ADD_USER_ID
 , SORMAUD_ADD_DATE
 ,SORMAUD_PIDM
 ,SORMAUD_SEQNO
 ,SORMAUD_MANUAL_ADD_IND
 ,SORMAUD_PROCESS_IND
 ,SORMAUD_UPDATE_CDE
 ,SORMAUD_ACTIVITY_DATE
 ,SORMAUD_USER_ID
 ,SORMAUD_DATA_ORIGIN
 ,SORMAUD_TERM_CODE
 ,SORMAUD_KEY_SEQNO
 ,SORMAUD_KEY_TEXT
 ,SORMAUD_HOLD_CDE
 ,SORMAUD_MSG
, ( Select  so_student_name(SPRIDEN_ID,
               spriden_last_name,
               spriden_first_name,
               spriden_mi,
               f_format_name(spriden_pidm, 'LFMI') )
     from spriden
     where spriden_pidm = sormaud.sormaud_pidm
     And spriden_change_ind is null)    IDEN
 , sormaud.rowid
 from sormaud ) maud "
"BANINST1","SOVMAJR","PRIOR COLLEGE MAJOR INFORMATION VIEW","SELECT  SORMAJR.SORMAJR_PIDM,
        SORMAJR.SORMAJR_SBGI_CODE,
        SUBSTR(GB_STVSBGI.F_GET_DESCRIPTION (SORMAJR.SORMAJR_SBGI_CODE),1,30),
        SORMAJR.SORMAJR_DEGC_CODE,
        SUBSTR(GB_STVDEGC.F_GET_DESCRIPTION (SORMAJR.SORMAJR_DEGC_CODE),1,30),
        SORMAJR.SORMAJR_DEGR_SEQ_NO,
        SORMAJR.SORMAJR_MAJR_CODE_MAJOR,
        SUBSTR(GB_STVMAJR.F_GET_DESCRIPTION (SORMAJR.SORMAJR_MAJR_CODE_MAJOR),1,30)
FROM    SORMAJR"
"BANINST1","SOVLFOS","This view lists field of study for a student and includes if it is the most current for the priority or is all other. ","SELECT
   SORLFOS_PIDM
 , SORLFOS_LCUR_SEQNO
 , SORLFOS_SEQNO
 , SORLFOS_LFST_CODE
 , SORLFOS_TERM_CODE
 , SORLFOS_PRIORITY_NO
 , SORLFOS_CSTS_CODE
 , SORLFOS_CACT_CODE
 , SORLFOS_DATA_ORIGIN
 , SORLFOS_USER_ID
 , SORLFOS_ACTIVITY_DATE
 , SORLFOS_MAJR_CODE
 , SORLFOS_TERM_CODE_CTLG
 , SORLFOS_TERM_CODE_END
 , SORLFOS_DEPT_CODE
 , SORLFOS_LFOS_RULE
 , SORLFOS_CONC_ATTACH_RULE
 , substr(sb_fieldofstudy_rules.f_get_conc_attach_majr(SORLFOS_CONC_ATTACH_RULE),1,4)
 , SORLFOS_MAJR_CODE_ATTACH
 , SORLFOS_START_DATE
 , SORLFOS_END_DATE
 , SORLFOS_TMST_CODE
 , SORLFOS_ROLLED_SEQNO
 , substr(sb_fieldofstudy.f_find_current_all_ind (sorlfos_pidm,
     sorlfos_lcur_seqno, sorlfos_seqno, sorlfos_lfst_code, sorlfos_priority_no,
      sorlfos_current_cde), 1,1)
 , substr(sb_learnercurricstatus.f_is_active(SORLFOS_CACT_CODE),1,1)
 , SORLFOS.ROWID
 , SORLFOS_USER_ID_UPDATE
, SORLFOS_ACTIVITY_DATE_UPDATE
,  SORLFOS_CURRENT_CDE
from  sorlfos
"
"BANINST1","SOVLEVL","BANNERQuest Student view","select
 stvlevl_code,
 stvlevl_desc
from
 stvlevl
 "
"BANINST1","SOVLCUR","This view lists curriculum for a student and includes if the curriculum is the most current for the priority or is all other. ","select
  SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_ROLL_IND
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_TERM_CODE_MATRIC
 , SORLCUR_TERM_CODE_ADMIT
 , SORLCUR_ADMT_CODE
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR_ROLLED_SEQNO
 , substr(sb_curriculum.f_find_current_all_ind(sorlcur_pidm,
    sorlcur_lmod_code, sorlcur_term_code, sorlcur_key_seqno,
    sorlcur_priority_no, sorlcur_seqno, '', sorlcur_current_cde,
      'N',   sorlcur_term_code_end),1,1)
 , substr(sb_learnercurricstatus.f_is_active(SORLCUR_CACT_CODE),1,1)
 , SORLCUR.ROWID
 , SORLCUR_STYP_CODE
 , SORLCUR_SITE_CODE
 , SORLCUR_RATE_CODE
 , SORLCUR_LEAV_CODE
 , SORLCUR_LEAV_FROM_DATE
 , SORLCUR_LEAV_TO_DATE
 , SORLCUR_TERM_CODE_GRAD
 , SORLCUR_ACYR_CODE
 , SORLCUR_EXP_GRAD_DATE
 , SORLCUR_APPL_KEY_SEQNO
 , SORLCUR_APPL_SEQNO
 , SORLCUR_USER_ID_UPDATE
 , SORLCUR_ACTIVITY_DATE_UPDATE
 , SORLCUR_GAPP_SEQNO
 , SORLCUR_CURRENT_CDE
from sorlcur
"
"BANINST1","SOVHSCH","High School Information View","SELECT SARADAP.SARADAP_PIDM,
       SARADAP.SARADAP_TERM_CODE_ENTRY,
       SARADAP.SARADAP_APPL_NO,
       SORHSCH.SORHSCH_SBGI_CODE,
       STVSBGI.STVSBGI_DESC,
       SORHSCH.SORHSCH_GRADUATION_DATE,
       SORHSCH.SORHSCH_GPA,
       SORHSCH.SORHSCH_CLASS_RANK,
       SORHSCH.SORHSCH_CLASS_SIZE,
       SORHSCH.SORHSCH_PERCENTILE,
       SORHSCH.SORHSCH_DPLM_CODE,
       SUBSTR(SB_STVDPLM.F_GET_DESCRIPTION(SORHSCH.SORHSCH_DPLM_CODE),1,30),
       SORHSCH.SORHSCH_COLL_PREP_IND,
       SORHSCH.SORHSCH_TRANS_RECV_DATE
  FROM SORHSCH, STVSBGI, SARADAP
 WHERE SORHSCH.SORHSCH_PIDM = SARADAP.SARADAP_PIDM
   AND SORHSCH.SORHSCH_SBGI_CODE = STVSBGI.STVSBGI_CODE
UNION ALL
SELECT SARADAP.SARADAP_PIDM,
       SARADAP.SARADAP_TERM_CODE_ENTRY,
       SARADAP.SARADAP_APPL_NO,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL
  FROM SARADAP
 WHERE NOT EXISTS (SELECT 1 FROM SORHSCH
 									 WHERE SORHSCH.SORHSCH_PIDM = SARADAP.SARADAP_PIDM)"
"BANINST1","SOVHREC","Curriculum Search; Academic History Curriculum Values","select shrdgmr_pidm, shrdgmr_term_code_sturec,
		decode(sovcuri_curr_ind,'1', shrdgmr_curr_rule_1,
			shrdgmr_curr_rule_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_program,
			shrdgmr_program),
		decode(sovcuri_curr_ind,'1', shrdgmr_term_code_ctlg_1,
			shrdgmr_term_code_ctlg_1),
		decode(sovcuri_curr_ind,'1', shrdgmr_levl_code,
			shrdgmr_levl_code),
		decode(sovcuri_curr_ind,'1', shrdgmr_camp_code,
			shrdgmr_camp_code_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_coll_code_1,
			shrdgmr_coll_code_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_degc_code,
			shrdgmr_degc_code),
		decode(sovcuri_curr_ind,'1', shrdgmr_cmjr_rule_1_1,
			shrdgmr_cmjr_rule_1_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_1,
			shrdgmr_majr_code_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_dept_code,
			shrdgmr_dept_code_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_ccon_rule_11_1,
			shrdgmr_ccon_rule_21_1),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_conc_1,
			shrdgmr_majr_code_conc_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_ccon_rule_11_2,
			shrdgmr_ccon_rule_21_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_conc_1_2,
			shrdgmr_majr_code_conc_2_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_ccon_rule_11_3,
			shrdgmr_ccon_rule_21_3),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_conc_1_3,
			shrdgmr_majr_code_conc_2_3),
		decode(sovcuri_curr_ind,'1', shrdgmr_cmjr_rule_2_1,
			shrdgmr_cmjr_rule_2_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_1_2,
			shrdgmr_majr_code_2_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_dept_code_1_2,
			shrdgmr_dept_code_2_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_ccon_rule_12_1,
			shrdgmr_ccon_rule_22_1),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_conc_2,
			shrdgmr_majr_code_conc_221),
		decode(sovcuri_curr_ind,'1', shrdgmr_ccon_rule_12_2,
			shrdgmr_ccon_rule_22_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_conc_122,
			shrdgmr_majr_code_conc_222),
		decode(sovcuri_curr_ind,'1', shrdgmr_ccon_rule_12_3,
			shrdgmr_ccon_rule_22_3),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_conc_123,
			shrdgmr_majr_code_conc_223),
		decode(sovcuri_curr_ind,'1', shrdgmr_cmnr_rule_1_1,
			shrdgmr_cmnr_rule_2_1),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_minr_1,
			shrdgmr_majr_code_minr_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_cmnr_rule_1_2,
			shrdgmr_cmnr_rule_2_2),
		decode(sovcuri_curr_ind,'1', shrdgmr_majr_code_minr_1_2,
			shrdgmr_majr_code_minr_2_2)
	from shrdgmr, sovcuri
 "
"BANINST1","SOVGEOR","","SELECT SPRIDEN_PIDM, SPRADDR_ATYP_CODE, SPRIDEN_FIRST_NAME,
          SPRIDEN_LAST_NAME, SORGEOR_GEOR_CODE, SORGEOR_GEOD_CODE, SPRADDR_CITY,
          SPRADDR_STAT_CODE, SPRADDR_ZIP, SPRADDR_CNTY_CODE, SPRADDR_NATN_CODE
FROM  SPRADDR, SPRIDEN, SORGEOR X
WHERE  SPRADDR_PIDM = SPRIDEN_PIDM
AND SPRADDR_STATUS_IND IS NULL
AND  SPRIDEN_CHANGE_IND IS NULL
AND   ((SYSDATE BETWEEN
      SPRADDR_FROM_DATE AND SPRADDR_TO_DATE
        AND SPRADDR_FROM_DATE IS NOT NULL
        AND SPRADDR_TO_DATE IS NOT NULL)
  OR (SPRADDR_FROM_DATE < SYSDATE
        AND SPRADDR_TO_DATE IS NULL
        AND SPRADDR_FROM_DATE IS NOT NULL)
  OR (SPRADDR_FROM_DATE IS NULL
        AND SPRADDR_TO_DATE IS NULL))
AND  ((SORGEOR_TYPE = 'CITY'
            AND SPRADDR_CITY = SORGEOR_START_RANGE
            AND SPRADDR_STAT_CODE = SORGEOR_END_RANGE)
          OR  (SORGEOR_TYPE = 'STATE'
            AND SPRADDR_STAT_CODE = SORGEOR_START_RANGE)
          OR   (SORGEOR_TYPE = 'ZIP'
            AND SPRADDR_ZIP BETWEEN SORGEOR_START_RANGE AND SORGEOR_END_RANGE)
          OR   (SORGEOR_TYPE = 'COUNTY'
            AND SPRADDR_CNTY_CODE = SORGEOR_START_RANGE)
          OR   (SORGEOR_TYPE = 'NATION'
            AND SPRADDR_NATN_CODE = SORGEOR_START_RANGE))
 "
"BANINST1","SOVFSPN","This view lists key elements of a specific curriculum attached to a learners study path.","SELECT DISTINCT
   SGRSTSP_PIDM
 , SGRSTSP_TERM_CODE_EFF
 , SGRSTSP_KEY_SEQNO
 , SORLCUR_SEQNO
 , SGRSTSP_STSP_CODE
 , (SELECT stvstsp_desc FROM stvstsp WHERE stvstsp_code = sgrstsp_stsp_code)
 , SORLCUR_LEVL_CODE
 , (SELECT stvlevl_desc FROM stvlevl WHERE stvlevl_code = sorlcur_levl_code)
 , SORLCUR_COLL_CODE
 , (SELECT stvcoll_desc FROM stvcoll WHERE stvcoll_code = sorlcur_coll_code)
 , SORLCUR_DEGC_CODE
 , (SELECT stvdegc_desc FROM stvdegc WHERE stvdegc_code = sorlcur_degc_code)
 , SORLCUR_CAMP_CODE
 , (SELECT stvcamp_desc FROM stvcamp WHERE stvcamp_code = sorlcur_camp_code)
 , SORLCUR_PROGRAM
 , (SELECT smrprle_program_desc FROM smrprle WHERE smrprle_program = sorlcur_program)
 , SUBSTR(sokccur.f_fieldofstudy_value(sorlcur_pidm, sorlcur_lmod_code,
                                       sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                                       sb_fieldofstudy_str.f_major, 1, 'MAJR'),1,4)
 , (SELECT stvmajr_desc FROM stvmajr WHERE
       stvmajr_code = sokccur.f_fieldofstudy_value(sorlcur_pidm, sorlcur_lmod_code,
                                                   sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                                                   sb_fieldofstudy_str.f_major, 1, 'MAJR')   )
 , SUBSTR(sokccur.f_fieldofstudy_value(sorlcur_pidm, sorlcur_lmod_code,
                                       sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                                       sb_fieldofstudy_str.f_major, 2, 'MAJR'),1,4)
 , (SELECT stvmajr_desc FROM stvmajr WHERE
       stvmajr_code = sokccur.f_fieldofstudy_value(sorlcur_pidm, sorlcur_lmod_code,
                                                   sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                                                   sb_fieldofstudy_str.f_major, 2, 'MAJR')   )
 FROM sorlcur, sgrstsp
WHERE sorlcur_lmod_code =
     (SELECT sb_curriculum_str.f_learner
        FROM dual)
  AND sorlcur_term_code = sgrstsp_term_code_eff
  AND sorlcur_key_seqno = sgrstsp_key_seqno
  AND sorlcur_pidm =  sgrstsp_pidm
  AND sgrstsp_pidm > 0
"
"BANINST1","SOVETRM","STUDENT ENROLLMENT STATUS VIEW","SELECT SFBETRM.SFBETRM_TERM_CODE,
       SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_ESTS_CODE,
       SUBSTR(SB_STVESTS.F_GET_DESCRIPTION (SFBETRM.SFBETRM_ESTS_CODE),1,30)
FROM   SFBETRM"
"BANINST1","SOVEIDN","","select sabstud_pidm,
	sabstud_aidm,
	spriden_id,
	spriden_last_name,
	spriden_first_name,
	spriden_mi,
	TO_DATE(goksels.f_name_bio_value(spriden_pidm,'BDATE'),g$_date.get_nls_date_format),
	'S'
from spriden, sarhead, sabstud
where sabstud_pidm = spriden_pidm
and spriden_change_ind is null
and sabstud_aidm = sarhead_aidm
union
select 0,
	sabnstu_aidm,
	sabnstu_id,
	sarpers_last_name,
	sarpers_first_name,
	NVL(sarpers_middle_name1,sarpers_middle_name2),
	to_date(sakpcom.f_chartodate( sarpers_dfmt_cde_birth,sarpers_birth_dte),g$_date.get_nls_date_format),
		'N'
from sabnstu, sarhead, sarpers
where sabnstu_aidm = sarpers_aidm
and sabnstu_aidm = sarhead_aidm
and sarpers_seqno = 1"
"BANINST1","SOVDGMR","STUDENT DEGREE VIEW","SELECT SHRDGMR.SHRDGMR_PIDM,
       SHRDGMR.SHRDGMR_SEQ_NO,
       SHRDGMR.SHRDGMR_DEGC_CODE,
       STVDEGC.STVDEGC_DESC,
       SHRDGMR.SHRDGMR_DEGS_CODE,
       STVDEGS.STVDEGS_DESC,
       SHRDGMR.SHRDGMR_LEVL_CODE,
       STVLEVL.STVLEVL_DESC,
       SHRDGMR.SHRDGMR_COLL_CODE_1,
       STVCOLL.STVCOLL_DESC,
       SHRDGMR.SHRDGMR_MAJR_CODE_1,
       STVMAJR.STVMAJR_DESC,
       SHRDGMR.SHRDGMR_APPL_DATE,
       SHRDGMR.SHRDGMR_GRAD_DATE,
       SHRDGMR.SHRDGMR_TERM_CODE_GRAD,
       SHRDGMR.SHRDGMR_GRST_CODE,
       SUBSTR(SB_STVGRST.F_GET_DESCRIPTION(SHRDGMR.SHRDGMR_GRST_CODE),1,30)
  FROM STVCOLL,
       STVDEGC,
       STVDEGS,
       STVLEVL,
       STVMAJR,
       SHRDGMR
WHERE  STVCOLL.STVCOLL_CODE = SHRDGMR.SHRDGMR_COLL_CODE_1
  AND  STVDEGC.STVDEGC_CODE = SHRDGMR.SHRDGMR_DEGC_CODE
  AND  STVDEGS.STVDEGS_CODE = SHRDGMR.SHRDGMR_DEGS_CODE
  AND  STVLEVL.STVLEVL_CODE = SHRDGMR.SHRDGMR_LEVL_CODE
  AND  STVMAJR.STVMAJR_CODE = SHRDGMR.SHRDGMR_MAJR_CODE_1"
"BANINST1","SOVDEGR","PRIOR COLLEGE DEGREE INFORMATION VIEW","SELECT  SORDEGR.SORDEGR_PIDM,
        SORDEGR.SORDEGR_SBGI_CODE,
        SUBSTR(GB_STVSBGI.F_GET_DESCRIPTION (SORDEGR.SORDEGR_SBGI_CODE),1,30),
        SORDEGR.SORDEGR_DEGC_CODE,
        SUBSTR(GB_STVDEGC.F_GET_DESCRIPTION (SORDEGR.SORDEGR_DEGC_CODE),1,30),
        SORDEGR.SORDEGR_DEGR_SEQ_NO,
        SORDEGR.SORDEGR_ATTEND_FROM,
        SORDEGR.SORDEGR_ATTEND_TO,
        SORDEGR.SORDEGR_HOURS_TRANSFERRED,
        SORDEGR.SORDEGR_GPA_TRANSFERRED,
        SORDEGR.SORDEGR_DEGC_DATE,
        SORDEGR.SORDEGR_DEGC_YEAR,
        SORDEGR.SORDEGR_COLL_CODE,
        SUBSTR(GB_STVCOLL.F_GET_DESCRIPTION (SORDEGR.SORDEGR_COLL_CODE),1,30),
        SORDEGR.SORDEGR_HONR_CODE,
        SUBSTR(GB_STVHONR.F_GET_DESCRIPTION (SORDEGR.SORDEGR_HONR_CODE),1,30)
FROM    SORDEGR"
"BANINST1","SOVDATA","Web for Executives Student Cleansing View","SELECT 'STUDENT',
              'ACADEMIC YEAR',
              'B',
              '',
              stvacyr_code,
              '',
              stvacyr_desc,
              substr(stvacyr_desc,1,15)
         FROM stvacyr
UNION
      SELECT 'STUDENT',
             'AWARD CATEGORY',
             'B',
             '',
             stvacat_code,
             '',
             stvacat_desc,
             substr(stvacat_desc,1,15)
        FROM stvacat
UNION
       SELECT 'STUDENT',
              'CAMPUS',
              'B',
              '',
              stvcamp_code,
              '',
              stvcamp_desc,
              substr(stvcamp_desc,1,15)
         FROM stvcamp
UNION
       SELECT 'STUDENT',
              'CLASS',
              'B',
              '',
              stvclas_code,
              '',
              stvclas_desc,
              substr(stvclas_desc,1,15)
         FROM stvclas
UNION
       SELECT 'STUDENT',
              'COHORT',
              'B',
              '',
              stvchrt_code,
              '',
              stvchrt_desc,
              substr(stvchrt_desc,1,15)
         FROM stvchrt
UNION
       SELECT 'STUDENT',
              'COLLEGE',
              'B',
              '',
              stvcoll_code,
              '',
              stvcoll_desc,
              substr(stvcoll_desc,1,15)
         FROM stvcoll
UNION
       SELECT 'STUDENT',
              'DEGREE',
              'B',
              '',
              stvdegc_code,
              '',
              stvdegc_desc,
              substr(stvdegc_desc,1,15)
         FROM stvdegc
UNION
       SELECT 'STUDENT',
              'DEPARTMENT',
              'B',
              '',
              stvdept_code,
              '',
              stvdept_desc,
              substr(stvdept_desc,1,15)
         FROM stvdept
UNION
       SELECT 'STUDENT',
              'ENROLL STATUS',
              'B',
              '',
              stvests_code,
              '',
              stvests_desc,
              substr(stvests_desc,1,15)
         FROM stvests
UNION
       SELECT 'STUDENT',
              'GOV ETHNICITY',
              'B',
              '',
              stvetct_code,
              '',
              stvetct_desc,
              substr(stvetct_desc,1,15)
         FROM stvetct
UNION
      SELECT 'STUDENT',
             'GRADE',
             'B',
             shrgrde_levl_code,
             shrgrde_code,
             '',
             shrgrde_abbrev,
             shrgrde_abbrev
        FROM shrgrde a
       WHERE shrgrde_grde_status_ind     = 'A'
         AND shrgrde_term_code_effective =
                  (SELECT max(shrgrde_term_code_effective)
                     FROM shrgrde X
                    WHERE a.shrgrde_levl_code = shrgrde_levl_code
                      AND a.shrgrde_code      = shrgrde_code
                      AND EXISTS
                             ( SELECT 'X'
                                 FROM stvterm
                                WHERE stvterm_code = X.shrgrde_term_code_effective
                                  AND to_date(to_char(stvterm_start_date,'DD-MON-YYYY'),'DD-MON-YYYY') <=
                                      to_date(to_char(sysdate,'DD-MON-YYYY'),'DD-MON-YYYY')))
UNION
       SELECT 'STUDENT',
              'GRADING MODE',
              'B',
              '',
              stvgmod_code,
              '',
              stvgmod_desc,
              substr(stvgmod_desc,1,15)
         FROM stvgmod
UNION
       SELECT 'STUDENT',
              'INS ETHNICITY',
              'B',
              '',
              stvethn_code,
              '',
              stvethn_desc,
              substr(stvethn_desc,1,15)
         FROM stvethn
UNION
       SELECT 'STUDENT',
              'INS TIME STAT',
              'B',
              '',
              stvtmst_code,
              '',
              stvtmst_desc,
              substr(stvtmst_desc,1,15)
         FROM stvtmst
UNION
       SELECT 'STUDENT',
              'LEVEL',
              'B',
              '',
              stvlevl_code,
              '',
              stvlevl_desc,
              substr(stvlevl_desc,1,15)
         FROM stvlevl
UNION
       SELECT 'STUDENT',
              'MAJOR',
              'B',
              '',
              stvmajr_code,
              '',
              stvmajr_desc,
              substr(stvmajr_desc,1,15)
         FROM stvmajr
UNION
       SELECT 'STUDENT',
              'PART OF TERM',
              'B',
              '',
              stvptrm_code,
              '',
              stvptrm_desc,
              substr(stvptrm_desc,1,15)
         FROM stvptrm
UNION
      SELECT 'STUDENT',
             'PROGRAM',
             'B',
             '',
             smrprle_program,
             '',
             smrprle_program_desc,
             substr(smrprle_program_desc,1,15)
        FROM smrprle
UNION
       SELECT 'STUDENT',
              'DTL APPL TYPE',
              'B',
              '',
              'R'||stvrtyp_code,
              '',
              stvrtyp_desc,
              substr(stvrtyp_desc,1,15)
         FROM stvrtyp
UNION
       SELECT 'STUDENT',
              'DTL APPL TYPE',
              'B',
              '',
              'A'||stvadmt_code,
              '',
              stvadmt_desc,
              substr(stvadmt_desc,1,15)
         FROM stvadmt
UNION
       SELECT 'STUDENT',
              'REG STATUS',
              'B',
              '',
              stvrsts_code,
              '',
              stvrsts_desc,
              substr(stvrsts_desc,1,15)
         FROM stvrsts
UNION
       SELECT 'STUDENT',
              'RESIDENCY',
              'B',
              '',
              stvresd_code,
              '',
              stvresd_desc,
              substr(stvresd_desc,1,15)
         FROM stvresd
UNION
       SELECT 'STUDENT',
              'SECTION TYPE',
              'B',
              '',
              stvschd_code,
              '',
              stvschd_desc,
              substr(stvschd_desc,1,15)
         FROM stvschd
UNION
       SELECT 'STUDENT',
              'SOURCE INS',
              'B',
              '',
              '***WFE**CNBD***',
              '',
              '***WFE**CNBD***',
              '***WFE**CNBD***'
         FROM stvsbgi
UNION
       SELECT 'STUDENT',
              'SOURCE INS',
              'B',
              '',
              stvsbgi_code,
              '',
              stvsbgi_desc,
              substr(stvsbgi_desc,1,15)
         FROM stvsbgi
UNION
       SELECT 'STUDENT',
              'STUDENT TYPE',
              'B',
              '',
              stvstyp_code,
              '',
              stvstyp_desc,
              substr(stvstyp_desc,1,15)
         FROM stvstyp
UNION
       SELECT 'STUDENT',
              'SUBJECT',
              'B',
              '',
              stvsubj_code,
              '',
              stvsubj_desc,
              substr(stvsubj_desc,1,15)
         FROM stvsubj
UNION
       SELECT 'STUDENT',
              'TERM',
              'B',
              '',
              stvterm_code,
              '',
              stvterm_desc,
              substr(stvterm_desc,1,15)
         FROM stvterm
 "
"BANINST1","SOVCURR","","select spriden_id, spriden_pidm,
	substr(spriden_last_name||', '||spriden_first_name,1,30),
	sovrrec_term_code_eff, 'R'
from spriden, sovrrec a, sovcuri
where spriden_pidm = sovrrec_pidm
and spriden_change_ind is null
and ((((exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%PROGRAM%'
	and sovcolr_value is null)
   or
	sovrrec_program =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%PROGRAM%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%LEVEL%'
	and sovcolr_value is null)
    or
	sovrrec_levl_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%LEVEL%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%CAMPUS%'
	and sovcolr_value is null)
    or
	sovrrec_camp_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%CAMPUS%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%COLLEGE%'
	and sovcolr_value is null)
    or
	sovrrec_coll_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%COLLEGE%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%DEGREE%'
	and sovcolr_value is null)
    or
	sovrrec_degc_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%DEGREE%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MAJOR%'
	and sovcolr_value is null)
   or
	(sovrrec_majr_code_1 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%')
	or sovrrec_majr_code_2 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%CONCENTRATION%'
	and sovcolr_value is null)
  or
	(sovrrec_majr_code_conc_11 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')
	or
	sovrrec_majr_code_conc_12 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')
	or
	sovrrec_majr_code_conc_13 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MINOR%'
	and sovcolr_value is null)
   or
	(sovrrec_majr_code_minr_1 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MINOR%')
	or sovrrec_majr_code_minr_2 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MINOR%')))
and sovcuri_search_ind = 'C')
and (sovcuri_module_ind = 'A' or sovcuri_module_ind = 'X'))
union
select spriden_id, spriden_pidm,
	substr(spriden_last_name||', '||spriden_first_name,1,30),
	sovrrec_term_code_eff, 'A'
from spriden, sovrrec a, sovcuri
where spriden_pidm = sovrrec_pidm
and spriden_change_ind is null
and sovcuri_search_ind = 'R'
and (sovcuri_module_ind = 'A' or sovcuri_module_ind = 'X')
and exists
		(select 'x'
		from sovcolr
		where sovcolr_job like '%CURRICULUM RULE%'
		and to_char(a.sovrrec_curr_rule) = sovcolr_value)
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MINOR%'
	and sovcolr_value is null)
    or
        ((to_char(a.sovrrec_cmnr_rule_1) =
           (select sovcolr_value
            from sovcolr
            where sovcolr_job like '%MINOR%'))
     or
         (to_char(a.sovrrec_cmnr_rule_2) =
             (select sovcolr_value
              from sovcolr
              where sovcolr_job like '%MINOR%'))))
and ((exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MAJOR%'
	and sovcolr_value is null)
      and
          (
            (exists
               (select 'x'
                from sovcolr
                where sovcolr_job like '%CONCENTRATION%'
                and sovcolr_value is null))
         or
              (to_char(a.sovrrec_ccon_rule_11) =
               (select sovcolr_value
                from sovcolr
                where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovrrec_ccon_rule_12) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovrrec_ccon_rule_13) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovrrec_ccon_rule_21) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovrrec_ccon_rule_22) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovrrec_ccon_rule_23) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))))
	or ((to_char(a.sovrrec_cmjr_rule_1) =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%'))
	    and (exists
			(select 'x'
			from sovcolr
			where sovcolr_job like '%CONCENTRATION%'
			and sovcolr_value is null))
	         or ((to_char(a.sovrrec_ccon_rule_11) =
                         (select sovcolr_value
			  from sovcolr
			  where sovcolr_job like '%CONCENTRATION%')
                     or (to_char(a.sovrrec_ccon_rule_12) =
                           (select sovcolr_value
                            from sovcolr
                            where sovcolr_job like '%CONCENTRATION%'))
                     or (to_char(a.sovrrec_ccon_rule_13) =
                            (select sovcolr_value
			     from sovcolr
		             where sovcolr_job like '%CONCENTRATION%')))))
	or ((to_char(a.sovrrec_cmjr_rule_2) =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%'))
	    and (exists
			(select 'x'
			from sovcolr
			where sovcolr_job like '%CONCENTRATION%'
			and sovcolr_value is null))
	         or ((to_char(a.sovrrec_ccon_rule_21) =
                         (select sovcolr_value
			  from sovcolr
			  where sovcolr_job like '%CONCENTRATION%')
                     or (to_char(a.sovrrec_ccon_rule_22) =
                           (select sovcolr_value
                            from sovcolr
                            where sovcolr_job like '%CONCENTRATION%'))
                     or (to_char(a.sovrrec_ccon_rule_23) =
                            (select sovcolr_value
			     from sovcolr
		             where sovcolr_job like '%CONCENTRATION%'))))))
union
select spriden_id, spriden_pidm,
	substr(spriden_last_name||', '||spriden_first_name,1,30),
	sovarec_term_code_eff, 'A'
from spriden, sovarec a, sovcuri
where spriden_pidm = sovarec_pidm
and spriden_change_ind is null
and ((((exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%PROGRAM%'
	and sovcolr_value is null)
   or
	sovarec_program =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%PROGRAM%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%LEVEL%'
	and sovcolr_value is null)
    or
	sovarec_levl_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%LEVEL%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%CAMPUS%'
	and sovcolr_value is null)
    or
	sovarec_camp_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%CAMPUS%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%COLLEGE%'
	and sovcolr_value is null)
    or
	sovarec_coll_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%COLLEGE%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%DEGREE%'
	and sovcolr_value is null)
    or
	sovarec_degc_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%DEGREE%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MAJOR%'
	and sovcolr_value is null)
   or
	(sovarec_majr_code_1 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%')
	or sovarec_majr_code_2 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%CONCENTRATION%'
	and sovcolr_value is null)
  or
	(sovarec_majr_code_conc_11 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')
	or
	sovarec_majr_code_conc_12 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')
	or
	sovarec_majr_code_conc_13 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MINOR%'
	and sovcolr_value is null)
   or
	(sovarec_majr_code_minr_1 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MINOR%')
	or sovarec_majr_code_minr_2 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MINOR%')))
and sovcuri_search_ind = 'C')
and (sovcuri_module_ind = 'A' or sovcuri_module_ind = 'X'))
union
select spriden_id, spriden_pidm,
	substr(spriden_last_name||', '||spriden_first_name,1,30),
	sovarec_term_code_eff, 'A'
from spriden, sovarec a, sovcuri
where spriden_pidm = sovarec_pidm
and spriden_change_ind is null
and sovcuri_search_ind = 'R'
and (sovcuri_module_ind = 'A' or sovcuri_module_ind = 'X')
and exists
		(select 'x'
		from sovcolr
		where sovcolr_job like '%CURRICULUM RULE%'
		and to_char(a.sovarec_curr_rule) = sovcolr_value)
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MINOR%'
	and sovcolr_value is null)
    or
        ((to_char(a.sovarec_cmnr_rule_1) =
           (select sovcolr_value
            from sovcolr
            where sovcolr_job like '%MINOR%'))
     or
         (to_char(a.sovarec_cmnr_rule_2) =
             (select sovcolr_value
              from sovcolr
              where sovcolr_job like '%MINOR%'))))
and ((exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MAJOR%'
	and sovcolr_value is null)
      and
          (
            (exists
               (select 'x'
                from sovcolr
                where sovcolr_job like '%CONCENTRATION%'
                and sovcolr_value is null))
         or
              (to_char(a.sovarec_ccon_rule_11) =
               (select sovcolr_value
                from sovcolr
                where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovarec_ccon_rule_12) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovarec_ccon_rule_13) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovarec_ccon_rule_21) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovarec_ccon_rule_22) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovarec_ccon_rule_23) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))))
	or ((to_char(a.sovarec_cmjr_rule_1) =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%'))
	    and (exists
			(select 'x'
			from sovcolr
			where sovcolr_job like '%CONCENTRATION%'
			and sovcolr_value is null))
	         or ((to_char(a.sovarec_ccon_rule_11) =
                         (select sovcolr_value
			  from sovcolr
			  where sovcolr_job like '%CONCENTRATION%')
                     or (to_char(a.sovarec_ccon_rule_12) =
                           (select sovcolr_value
                            from sovcolr
                            where sovcolr_job like '%CONCENTRATION%'))
                     or (to_char(a.sovarec_ccon_rule_13) =
                            (select sovcolr_value
			     from sovcolr
		             where sovcolr_job like '%CONCENTRATION%')))))
	or ((to_char(a.sovarec_cmjr_rule_2) =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%'))
	    and (exists
			(select 'x'
			from sovcolr
			where sovcolr_job like '%CONCENTRATION%'
			and sovcolr_value is null))
	         or ((to_char(a.sovarec_ccon_rule_21) =
                         (select sovcolr_value
			  from sovcolr
			  where sovcolr_job like '%CONCENTRATION%')
                     or (to_char(a.sovarec_ccon_rule_22) =
                           (select sovcolr_value
                            from sovcolr
                            where sovcolr_job like '%CONCENTRATION%'))
                     or (to_char(a.sovarec_ccon_rule_23) =
                            (select sovcolr_value
			     from sovcolr
		             where sovcolr_job like '%CONCENTRATION%'))))))
union
select spriden_id, spriden_pidm,
	substr(spriden_last_name||', '||spriden_first_name,1,30),
	sovsrec_term_code_eff, 'S'
from spriden, sovsrec a, sovcuri
where spriden_pidm = sovsrec_pidm
and spriden_change_ind is null
and ((((exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%PROGRAM%'
	and sovcolr_value is null)
   or
	sovsrec_program =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%PROGRAM%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%LEVEL%'
	and sovcolr_value is null)
    or
	sovsrec_levl_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%LEVEL%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%CAMPUS%'
	and sovcolr_value is null)
    or
	sovsrec_camp_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%CAMPUS%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%COLLEGE%'
	and sovcolr_value is null)
    or
	sovsrec_coll_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%COLLEGE%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%DEGREE%'
	and sovcolr_value is null)
    or
	sovsrec_degc_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%DEGREE%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MAJOR%'
	and sovcolr_value is null)
   or
	(sovsrec_majr_code_1 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%')
	or sovsrec_majr_code_2 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%CONCENTRATION%'
	and sovcolr_value is null)
  or
	(sovsrec_majr_code_conc_11 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')
	or
	sovsrec_majr_code_conc_12 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')
	or
	sovsrec_majr_code_conc_13 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MINOR%'
	and sovcolr_value is null)
   or
	(sovsrec_majr_code_minr_1 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MINOR%')
	or sovsrec_majr_code_minr_2 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MINOR%')))
and sovcuri_search_ind = 'C')
and (sovcuri_module_ind = 'A' or sovcuri_module_ind = 'X'))
union
select spriden_id, spriden_pidm,
	substr(spriden_last_name||', '||spriden_first_name,1,30),
	sovsrec_term_code_eff, 'A'
from spriden, sovsrec a, sovcuri
where spriden_pidm = sovsrec_pidm
and spriden_change_ind is null
and sovcuri_search_ind = 'R'
and (sovcuri_module_ind = 'A' or sovcuri_module_ind = 'X')
and exists
		(select 'x'
		from sovcolr
		where sovcolr_job like '%CURRICULUM RULE%'
		and to_char(a.sovsrec_curr_rule) = sovcolr_value)
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MINOR%'
	and sovcolr_value is null)
    or
        ((to_char(a.sovsrec_cmnr_rule_1) =
           (select sovcolr_value
            from sovcolr
            where sovcolr_job like '%MINOR%'))
     or
         (to_char(a.sovsrec_cmnr_rule_2) =
             (select sovcolr_value
              from sovcolr
              where sovcolr_job like '%MINOR%'))))
and ((exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MAJOR%'
	and sovcolr_value is null)
      and
          (
            (exists
               (select 'x'
                from sovcolr
                where sovcolr_job like '%CONCENTRATION%'
                and sovcolr_value is null))
         or
              (to_char(a.sovsrec_ccon_rule_11) =
               (select sovcolr_value
                from sovcolr
                where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovsrec_ccon_rule_12) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovsrec_ccon_rule_13) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovsrec_ccon_rule_21) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovsrec_ccon_rule_22) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovsrec_ccon_rule_23) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))))
	or ((to_char(a.sovsrec_cmjr_rule_1) =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%'))
	    and (exists
			(select 'x'
			from sovcolr
			where sovcolr_job like '%CONCENTRATION%'
			and sovcolr_value is null))
	         or ((to_char(a.sovsrec_ccon_rule_11) =
                         (select sovcolr_value
			  from sovcolr
			  where sovcolr_job like '%CONCENTRATION%')
                     or (to_char(a.sovsrec_ccon_rule_12) =
                           (select sovcolr_value
                            from sovcolr
                            where sovcolr_job like '%CONCENTRATION%'))
                     or (to_char(a.sovsrec_ccon_rule_13) =
                            (select sovcolr_value
			     from sovcolr
		             where sovcolr_job like '%CONCENTRATION%')))))
	or ((to_char(a.sovsrec_cmjr_rule_2) =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%'))
	    and (exists
			(select 'x'
			from sovcolr
			where sovcolr_job like '%CONCENTRATION%'
			and sovcolr_value is null))
	         or ((to_char(a.sovsrec_ccon_rule_21) =
                         (select sovcolr_value
			  from sovcolr
			  where sovcolr_job like '%CONCENTRATION%')
                     or (to_char(a.sovsrec_ccon_rule_22) =
                           (select sovcolr_value
                            from sovcolr
                            where sovcolr_job like '%CONCENTRATION%'))
                     or (to_char(a.sovsrec_ccon_rule_23) =
                            (select sovcolr_value
			     from sovcolr
		             where sovcolr_job like '%CONCENTRATION%'))))))
union
select spriden_id, spriden_pidm,
	substr(spriden_last_name||', '||spriden_first_name,1,30),
	sovhrec_term_code_eff, 'H'
from spriden, sovhrec a, sovcuri
where spriden_pidm = sovhrec_pidm
and spriden_change_ind is null
and ((((exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%PROGRAM%'
	and sovcolr_value is null)
   or
	sovhrec_program =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%PROGRAM%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%LEVEL%'
	and sovcolr_value is null)
    or
	sovhrec_levl_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%LEVEL%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%CAMPUS%'
	and sovcolr_value is null)
    or
	sovhrec_camp_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%CAMPUS%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%COLLEGE%'
	and sovcolr_value is null)
    or
	sovhrec_coll_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%COLLEGE%'))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%DEGREE%'
	and sovcolr_value is null)
    or
	sovhrec_degc_code =
			(select sovcolr_value
			from sovcolr
			where sovcolr_job like '%DEGREE%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MAJOR%'
	and sovcolr_value is null)
   or
	(sovhrec_majr_code_1 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%')
	or sovhrec_majr_code_2 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%CONCENTRATION%'
	and sovcolr_value is null)
  or
	(sovhrec_majr_code_conc_11 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')
	or
	sovhrec_majr_code_conc_12 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')
	or
	sovhrec_majr_code_conc_13 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%CONCENTRATION%')))
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MINOR%'
	and sovcolr_value is null)
   or
	(sovhrec_majr_code_minr_1 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MINOR%')
	or sovhrec_majr_code_minr_2 =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MINOR%')))
and sovcuri_search_ind = 'C')
and (sovcuri_module_ind = 'A' or sovcuri_module_ind = 'X'))
union
select spriden_id, spriden_pidm,
	substr(spriden_last_name||', '||spriden_first_name,1,30),
	sovhrec_term_code_eff, 'A'
from spriden, sovhrec a, sovcuri
where spriden_pidm = sovhrec_pidm
and spriden_change_ind is null
and sovcuri_search_ind = 'R'
and (sovcuri_module_ind = 'A' or sovcuri_module_ind = 'X')
and exists
		(select 'x'
		from sovcolr
		where sovcolr_job like '%CURRICULUM RULE%'
		and to_char(a.sovhrec_curr_rule) = sovcolr_value)
and (exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MINOR%'
	and sovcolr_value is null)
    or
        ((to_char(a.sovhrec_cmnr_rule_1) =
           (select sovcolr_value
            from sovcolr
            where sovcolr_job like '%MINOR%'))
     or
         (to_char(a.sovhrec_cmnr_rule_2) =
             (select sovcolr_value
              from sovcolr
              where sovcolr_job like '%MINOR%'))))
and ((exists
	(select 'x'
	from sovcolr
	where sovcolr_job like '%MAJOR%'
	and sovcolr_value is null)
      and
          (
            (exists
               (select 'x'
                from sovcolr
                where sovcolr_job like '%CONCENTRATION%'
                and sovcolr_value is null))
         or
              (to_char(a.sovhrec_ccon_rule_11) =
               (select sovcolr_value
                from sovcolr
                where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovhrec_ccon_rule_12) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovhrec_ccon_rule_13) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovhrec_ccon_rule_21) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovhrec_ccon_rule_22) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))
           or (to_char(a.sovhrec_ccon_rule_23) =
                  (select sovcolr_value
                   from sovcolr
                   where sovcolr_job like '%CONCENTRATION%'))))
	or ((to_char(a.sovhrec_cmjr_rule_1) =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%'))
	    and (exists
			(select 'x'
			from sovcolr
			where sovcolr_job like '%CONCENTRATION%'
			and sovcolr_value is null))
	         or ((to_char(a.sovhrec_ccon_rule_11) =
                         (select sovcolr_value
			  from sovcolr
			  where sovcolr_job like '%CONCENTRATION%')
                     or (to_char(a.sovhrec_ccon_rule_12) =
                           (select sovcolr_value
                            from sovcolr
                            where sovcolr_job like '%CONCENTRATION%'))
                     or (to_char(a.sovhrec_ccon_rule_13) =
                            (select sovcolr_value
			     from sovcolr
		             where sovcolr_job like '%CONCENTRATION%')))))
	or ((to_char(a.sovhrec_cmjr_rule_2) =
		(select sovcolr_value
		from sovcolr
		where sovcolr_job like '%MAJOR%'))
	    and (exists
			(select 'x'
			from sovcolr
			where sovcolr_job like '%CONCENTRATION%'
			and sovcolr_value is null))
	         or ((to_char(a.sovhrec_ccon_rule_21) =
                         (select sovcolr_value
			  from sovcolr
			  where sovcolr_job like '%CONCENTRATION%')
                     or (to_char(a.sovhrec_ccon_rule_22) =
                           (select sovcolr_value
                            from sovcolr
                            where sovcolr_job like '%CONCENTRATION%'))
                     or (to_char(a.sovhrec_ccon_rule_23) =
                            (select sovcolr_value
			     from sovcolr
		             where sovcolr_job like '%CONCENTRATION%'))))))
 "
"BANINST1","SOVCURI","Curriculum Search; Search Control Values","select substr(sprcolr_value_atyp,1,1),
		substr(sprcolr_value_atyp,2,1),
		substr(sprcolr_value_atyp,3,1)
	from sprcolr
	where sprcolr_sessionid = to_char(userenv('sessionid'))
	and sprcolr_parm_number = '00'
 "
"BANINST1","SOVCTA2","","select
  sfbetrm_pidm,
  sfbetrm_term_code,
  NVL(TO_DATE(soksels.f_ar_cleared('REP_DATE','AR CTA DATE')),SYSDATE),
  substr(f_enrolled_this_term(sfbetrm_pidm, sfbetrm_term_code),1,1),
  substr(f_registered_this_term(sfbetrm_pidm, sfbetrm_term_code),1,1),
  substr(f_applied_for_degree(sfbetrm_pidm),1,1),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'ID'),1,9),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SSN'),1,15),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'LAST'),1,60),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'FIRST'),1,60),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'MI'),1,60),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'M'),1,1),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'PRE'),1,20),
  SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SUF'),1,20),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
   SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ARADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
  b.sgbstdn_coll_code_1,
  b.sgbstdn_camp_code,
  b.sgbstdn_levl_code,
  b.sgbstdn_rate_code,
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,1,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,1,'FD')),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,1,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,1,'AO')),
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,1,'R'),1,30),
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,2,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,2,'FD')),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,2,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,2,'AO')),
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,2,'R'),1,30),
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,3,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,3,'FD')),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,3,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,3,'AO')),
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,3,'R'),1,30),
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,4,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,4,'FD')),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,4,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,4,'AO')),
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,4,'R'),1,30),
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,5,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,5,'FD')),
  TO_DATE(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,5,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,5,'AO')),
  substr(soklibs.f_sprhold_value('ARHOLD',sfbetrm_pidm,5,'R'),1,30),
  substr(f_student_check_for_more
     ('HOLDS', sfbetrm_pidm, null, null, 'HOLDS'),1,1),
  f_balance_other_terms(sfbetrm_pidm, sfbetrm_term_code),
  f_term_charges(sfbetrm_pidm, sfbetrm_term_code),
  f_term_payments(sfbetrm_pidm, sfbetrm_term_code),
  f_authorized_payments(sfbetrm_pidm, sfbetrm_term_code),
  f_financial_aid_memos(sfbetrm_pidm, sfbetrm_term_code),
  f_amount_owed(sfbetrm_pidm)
from sgbstdn b,
     sfbetrm
where
   b.sgbstdn_pidm = sfbetrm_pidm
   and b.sgbstdn_term_code_eff = sb_learner.f_query_current(sfbetrm_pidm,sfbetrm_term_code)"
"BANINST1","SOVCTA1","","select
 sovcta2_pidm_key,
 sovcta2_term_code_key,
 sovcta2_reporting_date,
 sovcta2_enrolled_ind,
 sovcta2_registered_ind,
 sovcta2_applied_for_degree_ind,
 sovcta2_id,
 sovcta2_ssn,
 sovcta2_last_name,
 sovcta2_first_name,
 sovcta2_middle_name,
 sovcta2_middle_initial,
 sovcta2_name_prefix,
 sovcta2_name_suffix,
 sovcta2_street1_line1,
 sovcta2_street1_line2,
 sovcta2_street1_line3,
 sovcta2_city1,
 sovcta2_stat1_code,
 sovcta2_zip1,
 sovcta2_cnty1_code,
 sovcta2_natn1_code,
 sovcta2_atyp1_code,
 sovcta2_phone1_area,
 sovcta2_phone1_number,
 sovcta2_tele1_code,
 sovcta2_street2_line1,
 sovcta2_street2_line2,
 sovcta2_street2_line3,
 sovcta2_city2,
 sovcta2_stat2_code,
 sovcta2_zip2,
 sovcta2_cnty2_code,
 sovcta2_natn2_code,
 sovcta2_atyp2_code,
 sovcta2_phone2_area,
 sovcta2_phone2_number,
 sovcta2_tele2_code,
 sovcta2_coll_code_1,
 sovcta2_camp_code,
 sovcta2_levl_code,
 substr(f_class_calc_fnc
    (sovcta2_pidm_key,sovcta2_levl_code,sovcta2_term_code_key),1,30),
 sovcta2_rate_code,
 sovcta2_hold_code1,
 sovcta2_hold_from_date1,
 sovcta2_hold_to_date1,
 sovcta2_hold_amount_owed1,
 sovcta2_hold_reason1,
 sovcta2_hold_code2,
 sovcta2_hold_from_date2,
 sovcta2_hold_to_date2,
 sovcta2_hold_amount_owed2,
 sovcta2_hold_reason2,
 sovcta2_hold_code3,
 sovcta2_hold_from_date3,
 sovcta2_hold_to_date3,
 sovcta2_hold_amount_owed3,
 sovcta2_hold_reason3,
 sovcta2_hold_code4,
 sovcta2_hold_from_date4,
 sovcta2_hold_to_date4,
 sovcta2_hold_amount_owed4,
 sovcta2_hold_reason4,
 sovcta2_hold_code5,
 sovcta2_hold_from_date5,
 sovcta2_hold_to_date5,
 sovcta2_hold_amount_owed5,
 sovcta2_hold_reason5,
 sovcta2_additional_holds,
 sovcta2_balance_other_terms,
 sovcta2_term_charges,
 sovcta2_term_payments,
 sovcta2_authorized_payments,
 sovcta2_financial_aid_memos,
 sovcta2_amount_owed
from sovcta2
 "
"BANINST1","SOVCPLN","Communication Plan view for BANNERQuest","select sorplnm_cpln_code, sorplnm_matl_code, sorplnm_wait_days
  from sorplnm
union
select sorplng_cpln_code, sorcgrp_matl_code, sorcgrp_wait_days
  from sorplng, sorcgrp
 where sorplng_cgrp_code = sorcgrp_cgrp_code
 "
"BANINST1","SOVCONC","PRIOR COLLEGE CONCENTRATION AREA INFORMATION VIEW","SELECT  SORCONC_PIDM,
        SORCONC_SBGI_CODE,
        SUBSTR(GB_STVSBGI.F_GET_DESCRIPTION (SORCONC_SBGI_CODE),1,30),
        SORCONC_DEGC_CODE,
        SUBSTR(GB_STVDEGC.F_GET_DESCRIPTION (SORCONC_DEGC_CODE),1,30),
        SORCONC_DEGR_SEQ_NO,
        SORCONC_MAJR_CODE_CONC,
        SUBSTR(GB_STVMAJR.F_GET_DESCRIPTION (SORCONC_MAJR_CODE_CONC),1,30)
FROM    SORCONC"
"BANINST1","SOVCOLR","Surriculum Search; Parameter Values","select sprcolr_type,
		sprcolr_value_atyp,
		sprcolr_job,
		sprcolr_parm_number
	from sprcolr
	where sprcolr_sessionid = to_char(userenv('sessionid'))
	and sprcolr_parm_number > '00'
 "
"BANINST1","SOVCOLP","PRIOR COLLEGE INFORMATION VIEW","SELECT  SORPCOL.SORPCOL_PIDM,
        SORPCOL.SORPCOL_SBGI_CODE,
        SUBSTR(GB_STVSBGI.F_GET_DESCRIPTION (SORPCOL.SORPCOL_SBGI_CODE),1,30),
        SORPCOL.SORPCOL_TRANS_RECV_DATE,
        SORPCOL.SORPCOL_TRANS_REV_DATE,
        SORPCOL.SORPCOL_OFFICIAL_TRANS,
        SORPCOL.SORPCOL_ADMR_CODE
FROM    SORPCOL"
"BANINST1","SOVCOLL","PRIOR COLLEGE INFORMATION VIEW","SELECT SARADAP_PIDM,
       SARADAP_TERM_CODE_ENTRY,
       SARADAP_APPL_NO,
       SORPCOL_SBGI_CODE,
       SUBSTR(GB_STVSBGI.F_GET_DESCRIPTION(SORPCOL_SBGI_CODE),1,30),
       TO_DATE(SOKLIBS.F_GET_SORPCOL_VALUES (SORPCOL_SBGI_CODE, SORPCOL_SBGI_CODE, 'TRANS_RECV_DATE'),G$_DATE.GET_NLS_DATE_FORMAT),
       TO_DATE(SOKLIBS.F_GET_SORPCOL_VALUES (SORPCOL_SBGI_CODE, SORPCOL_SBGI_CODE, 'TRANS_REV_DATE'),G$_DATE.GET_NLS_DATE_FORMAT),
       SUBSTR(SOKLIBS.F_GET_SORPCOL_VALUES (SORPCOL_SBGI_CODE, SORPCOL_SBGI_CODE, 'OFFICIAL_TRANS'),1,1),
       SUBSTR(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'DEGC'),1,6),
       SUBSTR(GB_STVDEGC.F_GET_DESCRIPTION(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'DEGC')),1,30),
       TO_DATE(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'ATTF'),G$_DATE.GET_NLS_DATE_FORMAT),
       TO_DATE(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'ATTT'),G$_DATE.GET_NLS_DATE_FORMAT),
       TO_NUMBER(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'HRTR')),
       TO_NUMBER(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'GPAT')),
       TO_DATE(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'DEGD'),G$_DATE.GET_NLS_DATE_FORMAT),
       SUBSTR(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'DEGY'),1,4),
       SUBSTR(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'COLL'),1,2),
       SUBSTR(GB_STVCOLL.F_GET_DESCRIPTION(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'COLL')),1,30),
       SUBSTR(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'HONR'),1,6),
       SUBSTR(GB_STVHONR.F_GET_DESCRIPTION(SOKLIBS.F_COLL_DEGREE(SORPCOL_PIDM,SORPCOL_SBGI_CODE,'HONR')),1,30)
FROM   SORPCOL,
       SARADAP
WHERE  SORPCOL_PIDM = SARADAP_PIDM
UNION ALL
SELECT SARADAP_PIDM,
       SARADAP_TERM_CODE_ENTRY,
       SARADAP_APPL_NO,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       null
FROM   SARADAP
WHERE NOT EXISTS (Select 'X' from sorpcol where sorpcol_pidm= saradap_pidm)
 "
"BANINST1","SOVCLTR1","This view lists curriculum for a student and includes if the curriculum is the most current for the priority or is all other. ","select
  stvterm_code
 , SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_ROLL_IND
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_TERM_CODE_MATRIC
 , SORLCUR_TERM_CODE_ADMIT
 , SORLCUR_ADMT_CODE
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR_ROLLED_SEQNO
 , substr(sb_curriculum.f_find_current_all_ind(sorlcur_pidm,
    sorlcur_lmod_code, sorlcur_term_code, sorlcur_key_seqno,
    sorlcur_priority_no, sorlcur_seqno, stvterm.stvterm_code, sorlcur_current_cde,
      'N',   sorlcur_term_code_end),1,1)
 , substr(sb_learnercurricstatus.f_is_active(SORLCUR_CACT_CODE),1,1)
 , decode(sorlcur_lmod_code,sb_curriculum_str.f_learner,decode(sorlcur_key_seqno, 99, null,
         sb_studypath_name.f_learner_study_path_name( sorlcur_pidm, sorlcur_term_code , sorlcur_key_seqno)), null)
 , decode(sorlcur_lmod_code, sb_curriculum_str.f_outcome, stvterm.stvterm_code, sorlcur_term_code)
 , SORLCUR.ROWID
 , SORLCUR_STYP_CODE
 , SORLCUR_SITE_CODE
 , SORLCUR_RATE_CODE
 , SORLCUR_LEAV_CODE
 , SORLCUR_LEAV_FROM_DATE
 , SORLCUR_LEAV_TO_DATE
 , SORLCUR_TERM_CODE_GRAD
 , SORLCUR_ACYR_CODE
 , SORLCUR_EXP_GRAD_DATE
 , SORLCUR_APPL_KEY_SEQNO
 , SORLCUR_APPL_SEQNO
 , SORLCUR_USER_ID_UPDATE
 , SORLCUR_ACTIVITY_DATE_UPDATE
 , SORLCUR_GAPP_SEQNO
 , SORLCUR_CURRENT_CDE
from sorlcur, stvterm
WITH READ ONLY
"
"BANINST1","SOVCLTR","This view lists curriculum for a student and includes if the curriculum is the most current for the priority or is all other. ","select
   SOVCLTR1_STVTERM_CODE
 , SOVCLTR1_PIDM
 , SOVCLTR1_SEQNO
 , SOVCLTR1_LMOD_CODE
 , SOVCLTR1_TERM_CODE
 , SOVCLTR1_KEY_SEQNO
 , SOVCLTR1_PRIORITY_NO
 , SOVCLTR1_ROLL_IND
 , SOVCLTR1_CACT_CODE
 , SOVCLTR1_USER_ID
 , SOVCLTR1_DATA_ORIGIN
 , SOVCLTR1_ACTIVITY_DATE
 , SOVCLTR1_LEVL_CODE
 , SOVCLTR1_COLL_CODE
 , SOVCLTR1_DEGC_CODE
 , SOVCLTR1_TERM_CODE_CTLG
 , SOVCLTR1_TERM_CODE_END
 , SOVCLTR1_TERM_CODE_MATRIC
 , SOVCLTR1_TERM_CODE_ADMIT
 , SOVCLTR1_ADMT_CODE
 , SOVCLTR1_CAMP_CODE
 , SOVCLTR1_PROGRAM
 , SOVCLTR1_START_DATE
 , SOVCLTR1_END_DATE
 , SOVCLTR1_CURR_RULE
 , SOVCLTR1_ROLLED_SEQNO
 , SOVCLTR1_CURRENT_IND
 , SOVCLTR1_ACTIVE_IND
 , SOVCLTR1_STUDYPATH_NAME
 , SOVCLTR1_OUTCOME_TERM
 , SOVCLTR1_ROWID
 , SOVCLTR1_STYP_CODE
 , SOVCLTR1_SITE_CODE
 , SOVCLTR1_RATE_CODE
 , SOVCLTR1_LEAV_CODE
 , SOVCLTR1_LEAV_FROM_DATE
 , SOVCLTR1_LEAV_TO_DATE
 , SOVCLTR1_TERM_CODE_GRAD
 , SOVCLTR1_ACYR_CODE
 , SOVCLTR1_EXP_GRAD_DATE
 , SOVCLTR1_APPL_KEY_SEQNO
 , SOVCLTR1_APPL_SEQNO
 , SOVCLTR1_USER_ID_UPDATE
 , SOVCLTR1_ACTIVITY_DATE_UPDATE
 , SOVCLTR1_GAPP_SEQNO
 , SOVCLTR1_CURRENT_CDE
 , substr(decode(sovcltr1_current_ind || sovcltr1_active_ind,'YY'
 , SGKCLAS.F_CLASS_CODE(sovcltr1_PIDM, sovcltr1_LEVL_CODE, sovcltr1_stvterm_code), null )  ,1,2)
from SOVCLTR1
where decode(SOVCLTR1_lmod_code, sb_curriculum_str.f_learner,sovcltr1_stvterm_code, SOVCLTR1_term_code) = sovcltr1_stvterm_code
and SOVCLTR1_outcome_term = SOVCLTR1_term_code
"
"BANINST1","SOVCLTP","This view lists primary current and active curriculum for a student and includes if the curriculum is the most current for the priority or is all other. ","select
  SOVCLTR_STVTERM_CODE
 , SOVCLTR_PIDM
 , SOVCLTR_SEQNO
 , SOVCLTR_LMOD_CODE
 , SOVCLTR_TERM_CODE
 , SOVCLTR_KEY_SEQNO
 , SOVCLTR_PRIORITY_NO
 , SOVCLTR_ROLL_IND
 , SOVCLTR_CACT_CODE
 , SOVCLTR_USER_ID
 , SOVCLTR_DATA_ORIGIN
 , SOVCLTR_ACTIVITY_DATE
 , SOVCLTR_LEVL_CODE
 , SOVCLTR_COLL_CODE
 , SOVCLTR_DEGC_CODE
 , SOVCLTR_TERM_CODE_CTLG
 , SOVCLTR_TERM_CODE_END
 , SOVCLTR_TERM_CODE_MATRIC
 , SOVCLTR_TERM_CODE_ADMIT
 , SOVCLTR_ADMT_CODE
 , SOVCLTR_CAMP_CODE
 , SOVCLTR_PROGRAM
 , SOVCLTR_START_DATE
 , SOVCLTR_END_DATE
 , SOVCLTR_CURR_RULE
 , SOVCLTR_ROLLED_SEQNO
 , SOVCLTR_CURRENT_IND
 , SOVCLTR_ACTIVE_IND
 , SOVCLTR_STUDYPATH_NAME
 , SOVCLTR_OUTCOME_TERM
 , SOVCLTR_ROWID
 , SOVCLTR_STYP_CODE
 , SOVCLTR_SITE_CODE
 , SOVCLTR_RATE_CODE
 , SOVCLTR_LEAV_CODE
 , SOVCLTR_LEAV_FROM_DATE
 , SOVCLTR_LEAV_TO_DATE
 , SOVCLTR_TERM_CODE_GRAD
 , SOVCLTR_ACYR_CODE
 , SOVCLTR_EXP_GRAD_DATE
 , SOVCLTR_APPL_KEY_SEQNO
 , SOVCLTR_APPL_SEQNO
 , SOVCLTR_USER_ID_UPDATE
 , SOVCLTR_ACTIVITY_DATE_UPDATE
 , SOVCLTR_GAPP_SEQNO
 , SOVCLTR_CURRENT_CDE
 , sovcltr_clas_code
from SOVCLTR
where  sovcltr_active_ind = 'Y'
and sovcltr_current_ind = 'Y'
and SOVCLTR_PRIORITY_NO = ( select min(m.sovcltr_priority_no)
                             from sovcltr m
                             where m.sovcltr_pidm = sovcltr.sovcltr_pidm
                             and m.sovcltr_lmod_code = sovcltr.sovcltr_lmod_code
                             and m.sovcltr_key_seqno = sovcltr.sovcltr_key_seqno
                             and m.SOVCLTR_STVTERM_CODE = sovcltr.SOVCLTR_STVTERM_CODE)
"
"BANINST1","SOVCLTM","This view lists primary current and active curriculum for a student and includes if the curriculum is the most current for the priority or is all other. ","SELECT
 SOVCLTP_STVTERM_CODE,
 SOVCLTP_LMOD_CODE,
 SOVCLTP_TERM_CODE,
 SOVCLTP_KEY_SEQNO,
 SOVCLTP_PIDM,
 SOVCLTP_SEQNO,
 SOVCLTP_LEVL_CODE,
 SOVCLTP_COLL_CODE,
 SOVCLTP_DEGC_CODE,
 SOVCLTP_CAMP_CODE,
 SOVCLTP_PROGRAM,
 SUBSTR(( SELECT SOVLFOS_MAJR_CODE
          FROM SOVLFOS
          WHERE SOVLFOS_PIDM = SOVCLTP.SOVCLTP_PIDM
          AND SOVLFOS_LCUR_SEQNO = SOVCLTP.SOVCLTP_SEQNO
          AND SOVLFOS_CURRENT_IND = 'Y'
          AND SOVLFOS_ACTIVE_IND = 'Y'
          AND SOVLFOS_LFST_CODE = sb_fieldofstudy_str.f_major
          AND SOVLFOS_PRIORITY_NO =
             ( SELECT MIN(A.SOVLFOS_PRIORITY_NO)
                FROM SOVLFOS A
                WHERE A.SOVLFOS_PIDM = SOVCLTP.SOVCLTP_PIDM
                AND A.SOVLFOS_LCUR_SEQNO = SOVCLTP.SOVCLTP_SEQNO
                AND A.SOVLFOS_CURRENT_IND = 'Y'
                AND A.SOVLFOS_ACTIVE_IND = 'Y'
                AND A.SOVLFOS_LFST_CODE = sb_fieldofstudy_str.f_major )),1,4)
 FROM SOVCLTP "
"BANINST1","SOVCLAS","STUDENT CLASS VIEW","SELECT X.STVTERM_CODE,
       X.SGBSTDN_PIDM,
       X.STVCLAS_CODE,
       X.STVCLAS_DESC,
       NVL(X.GPA.SHRLGPA_HOURS_ATTEMPTED,0),
       NVL(X.GPA.SHRLGPA_HOURS_EARNED,0),
       NVL(X.GPA.SHRLGPA_HOURS_PASSED,0),
       NVL(X.GPA.SHRLGPA_GPA_HOURS,0),
       NVL(X.GPA.SHRLGPA_QUALITY_POINTS,0),
       X.GPA.SHRLGPA_GPA
FROM
     (SELECT STVTERM.STVTERM_CODE,
             B.SGBSTDN_PIDM,
             STVCLAS.STVCLAS_CODE,
             STVCLAS.STVCLAS_DESC,
             (SELECT SO_SHRLGPA(SHRLGPA.SHRLGPA_HOURS_ATTEMPTED,SHRLGPA.SHRLGPA_HOURS_EARNED,SHRLGPA.SHRLGPA_GPA_HOURS,SHRLGPA.SHRLGPA_QUALITY_POINTS,SHRLGPA.SHRLGPA_GPA,SHRLGPA.SHRLGPA_HOURS_PASSED,NULL,NULL,NULL)
                FROM SHRLGPA
               WHERE SHRLGPA.SHRLGPA_PIDM = B.SGBSTDN_PIDM
                 AND SHRLGPA.SHRLGPA_PIDM = B.SGBSTDN_PIDM
                 AND SHRLGPA.SHRLGPA_LEVL_CODE = B.SGBSTDN_LEVL_CODE
                 AND SHRLGPA.SHRLGPA_GPA_TYPE_IND = 'O')GPA
        FROM STVCLAS,
             SGBSTDN B,
             STVTERM
       WHERE STVCLAS_CODE =
             SGKCLAS.F_CLASS_CODE(B.SGBSTDN_PIDM,B.SGBSTDN_LEVL_CODE,STVTERM_CODE)
         AND B.SGBSTDN_TERM_CODE_EFF =
             (SELECT MAX(A.SGBSTDN_TERM_CODE_EFF)
                FROM   SGBSTDN A
               WHERE  A.SGBSTDN_PIDM = B.SGBSTDN_PIDM
                 AND  A.SGBSTDN_TERM_CODE_EFF <= STVTERM.STVTERM_CODE))X "
"BANINST1","SOVCHRT","STUDENT COHORT VIEW","SELECT A.SGRCHRT_PIDM,
       STVTERM.STVTERM_CODE,
       A.SGRCHRT_CHRT_CODE,
       SUBSTR(F_GET_DESC_FNC('STVCHRT', A.SGRCHRT_CHRT_CODE, 30),1,30)
FROM   SGRCHRT A,
       STVTERM
WHERE  SGRCHRT_TERM_CODE_EFF =
         (SELECT MAX (B.SGRCHRT_TERM_CODE_EFF)
            FROM SGRCHRT B
           WHERE B.SGRCHRT_PIDM = A.SGRCHRT_PIDM
             AND B.SGRCHRT_TERM_CODE_EFF <= STVTERM.STVTERM_CODE
             AND B.SGRCHRT_ACTIVE_IND IS NULL)
AND SGRCHRT_ACTIVE_IND IS NULL"
"BANINST1","SOVCFOS","This view lists field of study for a curriculum. ","SELECT
   SORLFOS_PIDM
 , SORLFOS_LCUR_SEQNO
 , SORLFOS_SEQNO
 , SORLFOS_LFST_CODE
 , SORLFOS_TERM_CODE
 , SORLFOS_PRIORITY_NO
 , SORLFOS_CSTS_CODE
 , SORLFOS_CACT_CODE
 , SORLFOS_DATA_ORIGIN
 , SORLFOS_USER_ID
 , SORLFOS_ACTIVITY_DATE
 , SORLFOS_MAJR_CODE
 , SORLFOS_TERM_CODE_CTLG
 , SORLFOS_TERM_CODE_END
 , SORLFOS_DEPT_CODE
 , SORLFOS_LFOS_RULE
 , SORLFOS_CONC_ATTACH_RULE
 , substr(SB_FIELDOFSTUDY_RULES.F_GET_CONC_ATTACH_MAJR (SORLFOS_CONC_ATTACH_RULE),1,4)
 , SORLFOS_MAJR_CODE_ATTACH
 , SORLFOS_START_DATE
 , SORLFOS_END_DATE
 , SORLFOS_TMST_CODE
 , SORLFOS_ROLLED_SEQNO
 , SORLFOS.ROWID
 , SOBCACT_ACTIVE_IND
 , sb_fieldofstudy.F_LFOS_ORDER (sorlfos_pidm,
     sorlfos_lcur_seqno,
     sorlfos_lfst_code,
     sorlfos.rowid)
, SORLFOS_USER_ID_UPDATE
, SORLFOS_ACTIVITY_DATE_UPDATE
 , SORLFOS_CURRENT_CDE
from sorlfos,sobcact
where SORLFOS_CACT_CODE = SOBCACT_CACT_CODE  "
"BANINST1","SOVCCUR","This view lists curriculum and has the order column which is an ordinal value representing the priority. ","select
  SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_ROLL_IND
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_TERM_CODE_MATRIC
 , SORLCUR_TERM_CODE_ADMIT
 , SORLCUR_ADMT_CODE
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR_ROLLED_SEQNO
 , SORLCUR.ROWID
 , sb_curriculum.f_lcur_order(
          sorlcur_pidm,
          sorlcur_lmod_code,
          sorlcur_term_code,
          sorlcur_key_seqno,
          sorlcur.rowid)
 , substr(sb_learnercurricstatus.f_is_active(SORLCUR_CACT_CODE),1,1)
 , SORLCUR_STYP_CODE
 , SORLCUR_SITE_CODE
 , SORLCUR_RATE_CODE
 , SORLCUR_LEAV_CODE
 , SORLCUR_LEAV_FROM_DATE
 , SORLCUR_LEAV_TO_DATE
 , SORLCUR_TERM_CODE_GRAD
 , SORLCUR_ACYR_CODE
 , SORLCUR_EXP_GRAD_DATE
 , SORLCUR_APPL_KEY_SEQNO
 , SORLCUR_APPL_SEQNO
 , SORLCUR_USER_ID_UPDATE
 , SORLCUR_ACTIVITY_DATE_UPDATE
 , SORLCUR_GAPP_SEQNO
  , SORLCUR_CURRENT_CDE
from    sorlcur
where  sorlcur_seqno > 0
and sorlcur_pidm > 0
"
"BANINST1","SOVAROL","This view displays Administrators and role assignments.","SELECT SORAROL_RADM_CODE,
       STVRADM_DESC,
       SORAROL_PIDM,
       SPRIDEN_ID,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI ,
       Stvradm_rater_ind
FROM stvradm, SPRIDEN, SORAROL
WHERE SPRIDEN_PIDM = SORAROL_PIDM
AND SPRIDEN_CHANGE_IND IS NULL
AND STVRADM_CODE = SORAROL_RADM_CODE
 "
"BANINST1","SOVAREC","Curriculum Search; Admissions Curriculum Values","select saradap_pidm, saradap_term_code_entry,
		decode(sovcuri_curr_ind,'1', saradap_curr_rule_1,
			saradap_curr_rule_2),
		decode(sovcuri_curr_ind,'1', saradap_program_1,
			saradap_program_2),
		decode(sovcuri_curr_ind,'1', saradap_term_code_ctlg_1,
			saradap_term_code_ctlg_2),
		decode(sovcuri_curr_ind,'1', saradap_levl_code,
			saradap_levl_code_2),
		decode(sovcuri_curr_ind,'1', saradap_camp_code,
			saradap_camp_code_2),
		decode(sovcuri_curr_ind,'1', saradap_coll_code_1,
			saradap_coll_code_2),
		decode(sovcuri_curr_ind,'1', saradap_degc_code_1,
			saradap_degc_code_2),
		decode(sovcuri_curr_ind,'1', saradap_cmjr_rule_1_1,
			saradap_cmjr_rule_1_2),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_1,
			saradap_majr_code_2),
		decode(sovcuri_curr_ind,'1', saradap_dept_code,
			saradap_dept_code_2),
		decode(sovcuri_curr_ind,'1', saradap_ccon_rule_11_1,
			saradap_ccon_rule_21_1),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_conc_1,
			saradap_majr_code_conc_2),
		decode(sovcuri_curr_ind,'1', saradap_ccon_rule_11_2,
			saradap_ccon_rule_21_2),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_conc_1_2,
			saradap_majr_code_conc_212),
		decode(sovcuri_curr_ind,'1', saradap_ccon_rule_11_3,
			saradap_ccon_rule_21_3),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_conc_1_3,
			saradap_majr_code_conc_213),
		decode(sovcuri_curr_ind,'1', saradap_cmjr_rule_2_1,
			saradap_cmjr_rule_2_2),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_1_2,
			saradap_majr_code_2_2),
		decode(sovcuri_curr_ind,'1', saradap_dept_code_1_2,
			saradap_dept_code_2_2),
		decode(sovcuri_curr_ind,'1', saradap_ccon_rule_12_1,
			saradap_ccon_rule_22_1),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_conc_2,
			saradap_majr_code_conc_221),
		decode(sovcuri_curr_ind,'1', saradap_ccon_rule_12_2,
			saradap_ccon_rule_22_2),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_conc_122,
			saradap_majr_code_conc_222),
		decode(sovcuri_curr_ind,'1', saradap_ccon_rule_12_3,
			saradap_ccon_rule_22_3),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_conc_123,
			saradap_majr_code_conc_223),
		decode(sovcuri_curr_ind,'1', saradap_cmnr_rule_1_1,
			saradap_cmnr_rule_2_1),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_minr_1_1,
			saradap_majr_code_minr_2_1),
		decode(sovcuri_curr_ind,'1', saradap_cmnr_rule_1_2,
			saradap_cmnr_rule_2_2),
		decode(sovcuri_curr_ind,'1', saradap_majr_code_minr_1_2,
			saradap_majr_code_minr_2_2)
	from saradap, sovcuri
 "
"BANINST1","SOVAINF","This view lists students assigned to
administrators in alpha order on the form soaainf.","SELECT
  SORAINF_TERM_CODE,
  SORAINF_RADM_CODE,
  SORAINF_AROL_PIDM,
  SORAINF_PIDM,
  SPRIDEN_LAST_NAME,
  SPRIDEN_FIRST_NAME,
  SPRIDEN_MI,
  SPRIDEN_ID,
  SORAINF_SOURCE_IND,
  SORAINF_MODULE,
  SORAINF_SEQNO
FROM SPRIDEN, SORAINF
WHERE SPRIDEN_PIDM = SORAINF_PIDM
AND SPRIDEN_CHANGE_IND IS NULL
 "
"BANINST1","SOVAGI1","","select
 tbraccd_pidm,
 tbraccd_tran_number,
 substr(f_enrolled_this_term(tbraccd_pidm,
       substr(f_sgbstdn_fields(tbraccd_pidm, null, 'TERM'),1,6)),1,1),
 substr(f_registered_this_term(tbraccd_pidm,
       substr(f_sgbstdn_fields(tbraccd_pidm, null, 'TERM'),1,6)),1,1),
 substr(f_applied_for_degree(tbraccd_pidm),1,1),
 substr(f_graduated_from_institution(tbraccd_pidm),1,1),
 SUBSTR(gb_identification.f_get_entity(tbraccd_pidm),1,1),
 substr(f_collection_ind(tbraccd_pidm),1,1),
 tbbacct_deli_code,
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'SUF'),1,20),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','TC'),1,4),
 substr(f_sgbstdn_fields(tbraccd_pidm, null, 'TERM'),1,6),
 substr(f_sgbstdn_fields(tbraccd_pidm, null, 'COLLEGE_1'),1,2),
 substr(f_sgbstdn_fields(tbraccd_pidm, null, 'CAMPUS'),1,1),
 substr(f_sgbstdn_fields(tbraccd_pidm, null, 'LEVEL'),1,2),
 tbraccd_invoice_number,
 tbraccd_feed_date,
 tbraccd_feed_doc_code,
 tbbdetc_dcat_code,
 tbraccd_detail_code,
 tbbdetc_desc,
 tbbdetc_type_ind,
 tbraccd_srce_code,
 tbraccd_bill_date,
 tbraccd_effective_date,
 tbraccd_due_date,
 tbraccd_trans_date,
 nvl(tbraccd_balance,0),
 nvl(tbraccd_amount,0),
 f_calc_aged_days(tbraccd_bill_date, tbraccd_effective_date,
       tbraccd_due_date, tbraccd_trans_date)
from tbbacct, tbbdetc,
     tbraccd
where
 tbbacct_pidm = tbraccd_pidm
 and  tbbdetc_detail_code = tbraccd_detail_code
UNION ALL
select
 tbraccd_pidm,
 tbraccd_tran_number,
 substr(f_enrolled_this_term(tbraccd_pidm,
       substr(f_sgbstdn_fields(tbraccd_pidm, null, 'TERM'),1,6)),1,1),
 substr(f_registered_this_term(tbraccd_pidm,
       substr(f_sgbstdn_fields(tbraccd_pidm, null, 'TERM'),1,6)),1,1),
 substr(f_applied_for_degree(tbraccd_pidm),1,1),
 substr(f_graduated_from_institution(tbraccd_pidm),1,1),
 SUBSTR(gb_identification.f_get_entity(tbraccd_pidm),1,1),
 substr(f_collection_ind(tbraccd_pidm),1,1),
 NULL,
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(tbraccd_pidm ,'SUF'),1,20),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,1,'T',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(tbraccd_pidm,'ARADDR','A',SYSDATE,2,'T',NULL,NULL,'T','TC'),1,4),
 substr(f_sgbstdn_fields(tbraccd_pidm, null, 'TERM'),1,6),
 substr(f_sgbstdn_fields(tbraccd_pidm, null, 'COLLEGE_1'),1,2),
 substr(f_sgbstdn_fields(tbraccd_pidm, null, 'CAMPUS'),1,1),
 substr(f_sgbstdn_fields(tbraccd_pidm, null, 'LEVEL'),1,2),
 tbraccd_invoice_number,
 tbraccd_feed_date,
 tbraccd_feed_doc_code,
 tbbdetc_dcat_code,
 tbraccd_detail_code,
 tbbdetc_desc,
 tbbdetc_type_ind,
 tbraccd_srce_code,
 tbraccd_bill_date,
 tbraccd_effective_date,
 tbraccd_due_date,
 tbraccd_trans_date,
 nvl(tbraccd_balance,0),
 nvl(tbraccd_amount,0),
 f_calc_aged_days(tbraccd_bill_date, tbraccd_effective_date,
       tbraccd_due_date, tbraccd_trans_date)
from tbbdetc,
     tbraccd
where tbbdetc_detail_code = tbraccd_detail_code
  and not exists( Select 'X' from tbbacct where tbbacct.tbbacct_pidm = tbraccd.tbraccd_pidm)"
"BANINST1","SOVADAS","This view groups administrators and rule
elements to show the unique rule data elements in the assighment rule.","SELECT SORADAS_AROL_PIDM,
  SORADAS_TERM_CODE_EFF,
  SORADAS_RADM_CODE,
  SORADAS_RULE,
  SORADDA_ADDA_CODE,
  SORADDA_OPERATOR
FROM SORADDA, SORADAS
WHERE SORADDA_AROL_PIDM = SORADAS_AROL_PIDM
AND SORADDA_RULE = SORADAS_RULE
GROUP BY SORADAS_AROL_PIDM, SORADAS_TERM_CODE_EFF,
     SORADAS_RADM_CODE, SORADAS_RULE,  SORADDA_ADDA_CODE, SORADDA_OPERATOR
 "
"BANINST1","SOVACYR","This view creates a start and end term range by academic year for use within the Enrollment Management Product.","select
 stvacyr_code,
 min(stvterm_code),
 max(stvterm_code)
from stvterm, stvacyr
where stvterm_acyr_code = stvacyr_code
group by stvacyr_code
 "
"BANINST1","SOVACUR","This view lists curriculum for a student and 2 majors, 2 minors and 6 concentrations. ","select
  SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_ROLL_IND
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_TERM_CODE_MATRIC
 , SORLCUR_TERM_CODE_ADMIT
 , SORLCUR_ADMT_CODE
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR_ROLLED_SEQNO
 , SORLCUR.ROWID
 , sb_curriculum.f_lcur_order(
          sorlcur_pidm,
          sorlcur_lmod_code,
          sorlcur_term_code,
          sorlcur_key_seqno,
          sorlcur.rowid)
 , substr(sb_learnercurricstatus.f_is_active(SORLCUR_CACT_CODE),1,1)
 , SORLCUR_STYP_CODE
 , SORLCUR_SITE_CODE
 , SORLCUR_RATE_CODE
 , SORLCUR_LEAV_CODE
 , SORLCUR_LEAV_FROM_DATE
 , SORLCUR_LEAV_TO_DATE
 , SORLCUR_TERM_CODE_GRAD
 , SORLCUR_ACYR_CODE
 , SORLCUR_EXP_GRAD_DATE
 , SORLCUR_APPL_KEY_SEQNO
 , SORLCUR_APPL_SEQNO
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'MAJR'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'DEPT'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'MAJR'),1,4)
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'DEPT'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'CRUL') )
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'MAJR'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'CRUL') )
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'ACON') ,1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'MAJR'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'ACON'),1,4)
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'ACON'),1,4)
 , SORLCUR_USER_ID_UPDATE
 , SORLCUR_ACTIVITY_DATE_UPDATE
 , SORLCUR_GAPP_SEQNO
  , SORLCUR_CURRENT_CDE
from   sorlcur
where  sorlcur_seqno > 0
and sorlcur_pidm > 0 "
"BANINST1","SMVSLIB","Student Adjustements View","SELECT SMBSLIB_PIDM,
           SPRIDEN_ID,
           SUBSTR(F_FORMAT_NAME(SMBSLIB_PIDM, 'FMIL'),1,230),
           SMBSLIB_ADJ_PROGRAM_IND,
           SMBSLIB_ADJ_AREA_IND,
           SMBSLIB_ADJ_GROUP_IND,
           SMBSLIB_ADJ_TARGET_IND,
           SMBSLIB_ADJ_WAIVER_IND,
           SMBSLIB_ADJ_SUBST_IND
   	FROM SPRIDEN, SMBSLIB
        WHERE SPRIDEN_PIDM = SMBSLIB_PIDM
          AND SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","SMVRQCM","Request Overview","SELECT SMRRQCM_REQUEST_NO,
           SMRRQCM_PIDM,
           S.SPRIDEN_ID,
           SUBSTR(F_FORMAT_NAME(SMRRQCM_PIDM, 'LFMI'),1,230),
           SMRRQCM_PROGRAM,
           SMRRQCM_USER,
           SMRRQCM_COMPLY_DATE,
           SMRRQCM_ORIG_CODE,
           O.SPRIDEN_ID,
           SUBSTR(O.SPRIDEN_LAST_NAME|| ', '||O.SPRIDEN_FIRST_NAME||' '||
           SUBSTR(O.SPRIDEN_MI,1,1),1,25),
           SMRRQCM_PROG_CHG_IND,
           SMRRQCM_AREA_CHG_IND,
           SMRRQCM_GROUP_CHG_IND,
           SMRRQCM_DETAIL_EXISTS_IND,
           SMRRQCM_CURR_SOURCE
   	FROM SPRIDEN S, SPRIDEN O, SMRRQCM
        WHERE SMRRQCM_ORIG_PIDM IS NOT NULL
          AND O.SPRIDEN_PIDM = SMRRQCM_ORIG_PIDM
          AND O.SPRIDEN_CHANGE_IND IS NULL
          AND SMRRQCM_PIDM = S.SPRIDEN_PIDM
          AND S.SPRIDEN_CHANGE_IND IS NULL
    UNION
     SELECT SMRRQCM_REQUEST_NO,
            SMRRQCM_PIDM,
            S.SPRIDEN_ID,
            SUBSTR(F_FORMAT_NAME(SMRRQCM_PIDM, 'LFMI'),1,230),
            SMRRQCM_PROGRAM,
            SMRRQCM_USER,
            SMRRQCM_COMPLY_DATE,
            SMRRQCM_ORIG_CODE,
            '',
            '',
            SMRRQCM_PROG_CHG_IND,
            SMRRQCM_AREA_CHG_IND,
            SMRRQCM_GROUP_CHG_IND,
            SMRRQCM_DETAIL_EXISTS_IND,
            SMRRQCM_CURR_SOURCE
        FROM SPRIDEN S, SMRRQCM
        WHERE  SMRRQCM_ORIG_PIDM IS NULL
        AND   SMRRQCM_PIDM = S.SPRIDEN_PIDM
        AND   S.SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","SLVRUSE","Room Usage View","(SELECT SLRRASG_TERM_CODE, SLRRASG_BLDG_CODE, SLRRASG_ROOM_NUMBER,
       SPRIDEN_LAST_NAME, SPRIDEN_FIRST_NAME,
       SPRIDEN_ID, SLRRASG_ASCD_CODE, SLRRASG_BEGIN_DATE,
       SLRRASG_END_DATE, SPBPERS_SEX, SLBBLDG_CAMP_CODE
FROM SPBPERS, SLBBLDG,
     SPRIDEN, SLRRASG
WHERE SLBBLDG_BLDG_CODE = SLRRASG_BLDG_CODE
AND   SPBPERS_PIDM = SLRRASG_PIDM
AND   SPRIDEN_CHANGE_IND IS NULL
AND   SPRIDEN_PIDM = SLRRASG_PIDM)

 "
"BANINST1","SLVRSM2","","select
 slvres3_pidm,
 stvterm_code,
 decode(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'TC',2),null,'N','Y'),
 decode(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'TC',2),null,'N','Y'),
 decode(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'TC',2),null,'N','Y'),
 substr(f_enrolled_this_term(slvres3_pidm, stvterm_code),1,1),
 substr(f_registered_this_term(slvres3_pidm, stvterm_code),1,1),
 substr(f_meal_this_term(slvres3_pidm, stvterm_code),1,1),
 substr(f_hous_this_term(slvres3_pidm, stvterm_code),1,1),
 substr(f_phone_this_term(slvres3_pidm, stvterm_code),1,1),
 substr(f_latest_term_fnc(slvres3_pidm),1,6),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'SUF'),1,20),
 TO_DATE(goksels.f_name_bio_value(slbrmap_pidm,'BDATE'),g$_date.get_nls_date_format),
 TO_NUMBER(goksels.f_name_bio_value(slbrmap_pidm,'AGE')),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'SEX'),1,1),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'ETHN'),1,2),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'LGCY'),1,1),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'DEAD'),1,1),
 TO_DATE(goksels.f_name_bio_value(slbrmap_pidm,'DDATE'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(slbrmap_pidm,'CONF'),1,1),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(slbrmap_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'TCE',''),1,6),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'FPI',''),1,1),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'STT',''),1,2),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'LVL',''),1,2),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'STP',''),1,1),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'CC',''),1,3),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'RC',''),1,1),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'CC1',''),1,2),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'DC1',''),1,6),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'MC1',''),1,4),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'MC2',''),1,4),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'FN',stvterm_code),1,2),
 substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'RTC',''),1,5),
 substr(sfksels.f_sfbetrm_value (slvres3_pidm, slvres3_term_code),1,2),
 slbrmap_artp_code,
 slbrmap_from_term,
 slbrmap_to_term,
 slbrmap_prefered_building,
 slbrmap_prefered_room,
 slbrmap_prefered_bcat_code,
 slbrmap_prefered_camp_code,
 slbrmap_mrcd_code,
 slbrmap_haps_code,
 slbrmap_haps_date,
 slbrmap_add_date,
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'PA',1),1,3),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'PN',1),1,7),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'PE',1),1,4),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'BC',1),1,6),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'RT',1),1,1),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'RN',1),1,10),
 to_number(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'MC',1)),
 to_number(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'SC',1)),
 to_number(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'MC',1)),
 substr(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'PA',1),1,3),
 substr(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'PN',1),1,7),
 substr(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'PE',1),1,4),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'RC',1),1,4),
 to_date(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'BD',1)),
 to_date(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'ED',1)),
 to_number(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'TD',1)),
 to_number(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'TM',1)),
 to_number(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'TT',1)),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'AC',1),1,2),
 to_date(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'AD',1)),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'AI',1),1,1),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'OI',1),1,1),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'OE',1),1,1),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'RI',1),1,1),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'AN',1),1,1),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PC',1),1,4),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'AN',1),1,20),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PA',1),1,3),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PN',1),1,7),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PE',1),1,4),
 to_date(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PD',1)),
 to_date(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'ED',1)),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PS',1),1,2),
 to_date(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'SD',1)),
 substr(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'MC',1),1,4),
 to_date(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'BD',1)),
 to_date(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'ED',1)),
 to_number(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'TD',1)),
 to_number(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'TM',1)),
 to_number(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'TT',1)),
 substr(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'MS',1),1,2),
 to_date(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'MD',1)),
 substr(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'AI',1),1,1),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'PA',2),1,3),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'PN',2),1,7),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'PE',2),1,4),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'BC',2),1,6),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'RT',2),1,1),
 substr(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'RN',2),1,10),
 to_number(slksels.f_get_mul_slbrdef_value(slvres3_pidm, slvres3_term_code,'MC',2)),
 to_number(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'SC',2)),
 to_number(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'MC',2)),
 substr(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'PA',2),1,3),
 substr(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'PN',2),1,7),
 substr(slksels.f_get_mul_slbbldg_value(slvres3_pidm, slvres3_term_code,'PE',2),1,4),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'TC',2),1,6),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'RC',2),1,4),
 to_date(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'BD',2)),
 to_date(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'ED',2)),
 to_number(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'TD',2)),
 to_number(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'TM',2)),
 to_number(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'TT',2)),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'AC',2),1,2),
 to_date(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'AD',2)),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'AI',2),1,1),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'OI',2),1,1),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'OE',2),1,1),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'RI',2),1,1),
 substr(slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'AN',2),1,1),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'TC',2),1,6),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PC',2),1,4),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'AN',2),1,20),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PA',2),1,3),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PN',2),1,7),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PE',2),1,4),
 to_date(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PD',2)),
 to_date(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'ED',2)),
 substr(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'PS',2),1,2),
 to_date(slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'SD',2)),
 substr(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'TC',2),1,6),
 substr(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'MC',2),1,4),
 to_date(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'BD',2)),
 to_date(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'ED',2)),
 to_number(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'TD',2)),
 to_number(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'TM',2)),
 to_number(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'TT',2)),
 substr(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'MS',2),1,2),
 to_date(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'MD',2)),
 substr(slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'AI',2),1,1)
from slbrmap,
     slvres3, stvterm
where slvres3_term_code = stvterm_code
  and slbrmap_pidm = slvres3_pidm
  and slbrmap_from_term = slvres3_from_term
 and
    ((slksels.f_get_mul_slrrasg_value(slvres3_pidm, slvres3_term_code,'TC',2) is not null) or
     (slksels.f_get_mul_slrpasg_value(slvres3_pidm, slvres3_term_code,'TC',2) is not null) or
     (slksels.f_get_mul_slrmasg_value(slvres3_pidm, slvres3_term_code,'TC',2) is not null))"
"BANINST1","SLVRRES","Room Assignment Assessment Detail Summary View","SELECT 'HOUSING',
       SUM(SLVRREF_DAY_CHARGES) + SUM(SLVRREF_MONTH_CHARGES)
       + SUM(SLVRREF_TERM_CHARGES),
       SLVRREF_DETAIL_CODE, SLVRREF_SESSIONID, SLVRREF_PIDM,
       SLVRREF_TERM_CODE,
       SLVRREF_M_D_T,
       SLVRREF_LOC_MDT_SEQ
       FROM  SLVRREF
       WHERE SLVRREF_TYPE = 'HOUSING'
GROUP BY SLVRREF_PIDM, SLVRREF_TERM_CODE,
         SLVRREF_DETAIL_CODE, SLVRREF_M_D_T,
         SLVRREF_LOC_MDT_SEQ, SLVRREF_SESSIONID
 "
"BANINST1","SLVRREF","Room Assignment Assessment Detail View","SELECT 'HOUSING',
       SLRRASG.SLRRASG_TOTAL_DAYS,
       SLRRASG.SLRRASG_TOTAL_MONTHS,
       SLRRASG.SLRRASG_TOTAL_TERMS,
       DECODE(SLVMNTH.SLVMNTH_MONTH,0,1,0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,'D',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((SLRRASG.SLRRASG_TOTAL_DAYS * SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',
             ((100 - NVL(SLRRFCR.SLRRFCR_REFUND,0))/100),1),2),0)),
       DECODE(SLVMNTH.SLVMNTH_MONTH,0,1,0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,'T',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((SLRRASG.SLRRASG_TOTAL_TERMS * SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',
             ((100 - NVL(SLRRFCR.SLRRFCR_REFUND,0))/100),1),2),0)),
       DECODE(SLRLMFE.SLRLMFE_M_D_T,'M',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((DECODE(
       SIGN(SLRRASG.SLRRASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH),'-1',0,0,0,
       DECODE((TRUNC(SLRRASG.SLRRASG_TOTAL_MONTHS) - SLVMNTH.SLVMNTH_MONTH),0,
       SLRRASG.SLRRASG_TOTAL_MONTHS - FLOOR(SLRRASG.SLRRASG_TOTAL_MONTHS),1)) *
       SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',
             ((100 - NVL(SLRRFCR.SLRRFCR_REFUND,0))/100),1),2),0),
       SLRLMFE.SLRLMFE_DETAIL_CODE,
       SLRLMFE.SLRLMFE_M_D_T,
       SLVCOLR.SLVCOLR_SESSIONID, SLVCOLR.SLVCOLR_PIDM,
       SLVCOLR.SLVCOLR_TERM_CODE, SLVMNTH.SLVMNTH_MONTH
       FROM  TBBDETC, SLRRFCR, SLRRASG,
	     SLRLMFE, SLVCOLR, SLVMNTH
       WHERE SLRLMFE.SLRLMFE_DETAIL_CODE  = TBBDETC.TBBDETC_DETAIL_CODE
       AND ((SLRLMFE.SLRLMFE_M_D_T in ('T','D') AND SLVMNTH.SLVMNTH_MONTH = 0)
         OR (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH >= 0 AND
             SLRLMFE.SLRLMFE_BASE_RATE <> 0 AND
             SIGN(SLRRASG.SLRRASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0)
         OR (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH = 1 AND
             SLRLMFE.SLRLMFE_BASE_RATE = 0 AND
             SIGN(SLRRASG.SLRRASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0))
       AND   SLRLMFE.SLRLMFE_TERM_CODE    = SLVCOLR.SLVCOLR_TERM_CODE
       AND   SLRLMFE.SLRLMFE_RATE_CODE    = SLRRASG.SLRRASG_RRCD_CODE
       AND   SLRLMFE.SLRLMFE_TYPE         = 'HOUSING'
       AND   SLRRFCR.SLRRFCR_TERM_CODE    = SLRRASG.SLRRASG_TERM_CODE
       AND   SLRRFCR.SLRRFCR_ASCD_CODE    = SLRRASG.SLRRASG_ASCD_CODE
       AND   SLRRASG.SLRRASG_ASCD_DATE BETWEEN
             SLRRFCR.SLRRFCR_FROM_DATE AND SLRRFCR.SLRRFCR_TO_DATE
       AND   SLRRASG.SLRRASG_PIDM         = SLVCOLR.SLVCOLR_PIDM
       AND   SLRRASG.SLRRASG_TERM_CODE    = SLVCOLR.SLVCOLR_TERM_CODE
UNION ALL
SELECT 'HOUSING',
       SLRRASG.SLRRASG_TOTAL_DAYS,
       SLRRASG.SLRRASG_TOTAL_MONTHS,
       SLRRASG.SLRRASG_TOTAL_TERMS,
       DECODE(SLVMNTH.SLVMNTH_MONTH,0,1,0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,'D',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((SLRRASG.SLRRASG_TOTAL_DAYS * SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',1,1),2),0)),
       DECODE(SLVMNTH.SLVMNTH_MONTH,0,1,0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,'T',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((SLRRASG.SLRRASG_TOTAL_TERMS * SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',1,1),2),0)),
       DECODE(SLRLMFE.SLRLMFE_M_D_T,'M',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((DECODE(
       SIGN(SLRRASG.SLRRASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH),'-1',0,0,0,
       DECODE((TRUNC(SLRRASG.SLRRASG_TOTAL_MONTHS) - SLVMNTH.SLVMNTH_MONTH),0,
       SLRRASG.SLRRASG_TOTAL_MONTHS - FLOOR(SLRRASG.SLRRASG_TOTAL_MONTHS),1)) *
       SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',1,1),2),0),
       SLRLMFE.SLRLMFE_DETAIL_CODE,
       SLRLMFE.SLRLMFE_M_D_T,
       SLVCOLR.SLVCOLR_SESSIONID, SLVCOLR.SLVCOLR_PIDM,
       SLVCOLR.SLVCOLR_TERM_CODE, SLVMNTH.SLVMNTH_MONTH
       FROM  TBBDETC, SLRRASG,
	     SLRLMFE, SLVCOLR, SLVMNTH
       WHERE SLRLMFE.SLRLMFE_DETAIL_CODE  = TBBDETC.TBBDETC_DETAIL_CODE
       AND ((SLRLMFE.SLRLMFE_M_D_T in ('T','D') AND SLVMNTH.SLVMNTH_MONTH = 0)
         OR (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH >= 0 AND
             SLRLMFE.SLRLMFE_BASE_RATE <> 0 AND
             SIGN(SLRRASG.SLRRASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0)
         OR (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH = 1 AND
             SLRLMFE.SLRLMFE_BASE_RATE = 0 AND
             SIGN(SLRRASG.SLRRASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0))
       AND   SLRLMFE.SLRLMFE_TERM_CODE    = SLVCOLR.SLVCOLR_TERM_CODE
       AND   SLRLMFE.SLRLMFE_RATE_CODE    = SLRRASG.SLRRASG_RRCD_CODE
       AND   SLRLMFE.SLRLMFE_TYPE         = 'HOUSING'
       AND   SLRRASG.SLRRASG_PIDM         = SLVCOLR.SLVCOLR_PIDM
       AND   SLRRASG.SLRRASG_TERM_CODE    = SLVCOLR.SLVCOLR_TERM_CODE
       AND   NOT EXISTS(SELECT 'X'
                     FROM SLRRFCR
                     WHERE SLRRFCR.SLRRFCR_TERM_CODE = SLRRASG.SLRRASG_TERM_CODE
                     AND SLRRFCR.SLRRFCR_ASCD_CODE = SLRRASG.SLRRASG_ASCD_CODE
                     AND SLRRASG.SLRRASG_ASCD_DATE BETWEEN
                         SLRRFCR.SLRRFCR_FROM_DATE AND SLRRFCR.SLRRFCR_TO_DATE)"
"BANINST1","SLVRMAT","Roommate Application View","(SELECT SLRRMAT.SLRRMAT_TERM_CODE,
       SLRRMAT.SLRRMAT_ONEUP,
       SPRIDEN.SPRIDEN_LAST_NAME,
       SPRIDEN.SPRIDEN_FIRST_NAME,
       SPRIDEN.SPRIDEN_ID,
       substr(DECODE(goksels.f_name_bio_value(SLRRMAT.SLRRMAT_PIDM,'SEX'), NULL, 'N', goksels.f_name_bio_value(SLRRMAT.SLRRMAT_PIDM,'SEX')),1,1),
       'Y',
       SLBRMAP.SLBRMAP_APPL_PRIORITY,
       SLRRMAT.SLRRMAT_ACCEPT_IND
  FROM SLBRMAP, SPRIDEN, SLRRMAT
 WHERE SLBRMAP.SLBRMAP_PIDM = SLRRMAT.SLRRMAT_PIDM
   AND SLBRMAP.SLBRMAP_FROM_TERM = SLRRMAT.SLRRMAT_TERM_CODE
   AND SPRIDEN.SPRIDEN_CHANGE_IND IS NULL
   AND SPRIDEN.SPRIDEN_PIDM = SLRRMAT_PIDM
UNION ALL
SELECT SLRRMAT.SLRRMAT_TERM_CODE,
       SLRRMAT.SLRRMAT_ONEUP,
       SPRIDEN.SPRIDEN_LAST_NAME,
       SPRIDEN.SPRIDEN_FIRST_NAME,
       SPRIDEN.SPRIDEN_ID,
       substr(DECODE(goksels.f_name_bio_value(SLRRMAT.SLRRMAT_PIDM,'SEX'), NULL, 'N', goksels.f_name_bio_value(SLRRMAT.SLRRMAT_PIDM,'SEX')),1,1),
       NULL,
       NULL,
       SLRRMAT.SLRRMAT_ACCEPT_IND
  FROM SPRIDEN, SLRRMAT
 WHERE NOT EXISTS (SELECT 1 FROM  SLBRMAP WHERE SLBRMAP.SLBRMAP_PIDM = SLRRMAT.SLRRMAT_PIDM
                                            AND SLBRMAP.SLBRMAP_FROM_TERM = SLRRMAT.SLRRMAT_TERM_CODE)
   AND SPRIDEN.SPRIDEN_CHANGE_IND IS NULL
   AND SPRIDEN.SPRIDEN_PIDM = SLRRMAT.SLRRMAT_PIDM)
"
"BANINST1","SLVRES3","","select
 slbrmap_pidm,
 stvterm_code,
 slbrmap_from_term,
 slbrmap_to_term
from slbrmap, stvterm
where ((stvterm_code >= slbrmap_from_term) and
       (stvterm_code <= slbrmap_to_term))
 "
"BANINST1","SLVRES2","","select
  slvres3_pidm,
  stvterm_code,
  substr(f_enrolled_this_term(slvres3_pidm, stvterm_code),1,1),
  substr(f_registered_this_term(slvres3_pidm, stvterm_code),1,1),
  substr(f_meal_this_term(slvres3_pidm, stvterm_code),1,1),
  substr(f_hous_this_term(slvres3_pidm, stvterm_code),1,1),
  substr(f_phone_this_term(slvres3_pidm, stvterm_code),1,1),
  substr(f_latest_term_fnc(slvres3_pidm),1,6),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'ID'),1,9),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'SSN'),1,15),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'LAST'),1,60),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'FIRST'),1,60),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'MI'),1,60),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'M'),1,1),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'PRE'),1,20),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'SUF'),1,20),
  TO_DATE(goksels.f_name_bio_value(slvres3_pidm,'BDATE'),g$_date.get_nls_date_format),
  TO_NUMBER(goksels.f_name_bio_value(slvres3_pidm,'AGE')),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'SEX'),1,1),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'ETHN'),1,2),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'LGCY'),1,1),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'DEAD'),1,1),
  TO_DATE(goksels.f_name_bio_value(slvres3_pidm,'DDATE'),g$_date.get_nls_date_format),
  SUBSTR(goksels.f_name_bio_value(slvres3_pidm,'CONF'),1,1),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
   SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
  SUBSTR(goksels.f_address_telephone_value(slvres3_pidm,'RESDADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'TCE',''),1,6),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'FPI',''),1,1),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'STT',''),1,2),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'LVL',''),1,2),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'STP',''),1,1),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'CC',''),1,3),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'RC',''),1,1),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'CC1',''),1,2),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'DC1',''),1,6),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'MC1',''),1,4),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'MC2',''),1,4),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'FN',stvterm_code),1,2),
  substr(sgksels.f_get_sgbstdn_value(slvres3_pidm, slvres3_term_code,'RTC',''),1,5),
  SUBSTR(sfksels.f_sfbetrm_value(slvres3_pidm,slvres3_term_Code),1,2),
  slbrmap_artp_code,
  slbrmap_from_term,
  slbrmap_to_term,
  slbrmap_prefered_building,
  slbrmap_prefered_room,
  slbrmap_prefered_bcat_code,
  slbrmap_prefered_camp_code,
  slbrmap_mrcd_code,
  slbrmap_haps_code,
  slbrmap_haps_date,
  slbrmap_add_date,
  SUBSTR(slksels.f_get_mul_slbrdef_value(slvres3_pidm,slvres3_term_Code,'PA',''),1,3),
  SUBSTR(slksels.f_get_mul_slbrdef_value(slvres3_pidm,slvres3_term_Code,'PN',''),1,7),
  SUBSTR(slksels.f_get_mul_slbrdef_value(slvres3_pidm,slvres3_term_Code,'PE',''),1,4),
  SUBSTR(slksels.f_get_mul_slbrdef_value(slvres3_pidm,slvres3_term_Code,'BC',''),1,6),
  SUBSTR(slksels.f_get_mul_slbrdef_value(slvres3_pidm,slvres3_term_Code,'RT',''),1,1),
  SUBSTR(slksels.f_get_mul_slbrdef_value(slvres3_pidm,slvres3_term_Code,'RN',''),1,10),
  TO_NUMBER(slksels.f_get_mul_slbrdef_value(slvres3_pidm,slvres3_term_Code,'MC','')),
  TO_NUMBER(slksels.f_get_mul_slbbldg_value(slvres3_pidm,slvres3_term_code,'SC','')),
  TO_NUMBER(slksels.f_get_mul_slbbldg_value(slvres3_pidm,slvres3_term_code,'MC','')),
  SUBSTR(slksels.f_get_mul_slbbldg_value(slvres3_pidm,slvres3_term_code,'PA',''),1,3),
  SUBSTR(slksels.f_get_mul_slbbldg_value(slvres3_pidm,slvres3_term_code,'PN',''),1,7),
  SUBSTR(slksels.f_get_mul_slbbldg_value(slvres3_pidm,slvres3_term_code,'PE',''),1,4),
  SUBSTR(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'RC',''),1,4),
  TO_DATE(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'BD','')),
  TO_DATE(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'ED','')),
  TO_NUMBER(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'TD','')),
  TO_NUMBER(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'TM','')),
  TO_NUMBER(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'TT','')),
  SUBSTR(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'AC',''),1,2),
  TO_DATE(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'AD','')),
  SUBSTR(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'AI',''),1,1),
  SUBSTR(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'OI',''),1,1),
  SUBSTR(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'OE',''),1,1),
  SUBSTR(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'RI',''),1,1),
  SUBSTR(slksels.f_get_mul_slrrasg_value(slvres3_pidm,slvres3_term_code,'AN',''),1,1),
  SUBSTR(slksels.f_get_mul_slrpasg_value(slvres3_pidm,slvres3_term_code,'PC',''),1,4),
	SUBSTR(slksels.f_get_mul_slrpasg_value(slvres3_pidm,slvres3_term_code,'AN',''),1,20),
	SUBSTR(slksels.f_get_mul_slrpasg_value(slvres3_pidm,slvres3_term_code,'PA',''),1,3),
	SUBSTR(slksels.f_get_mul_slrpasg_value(slvres3_pidm,slvres3_term_code,'PN',''),1,7),
	SUBSTR(slksels.f_get_mul_slrpasg_value(slvres3_pidm,slvres3_term_code,'PE',''),1,4),
	TO_DATE(slksels.f_get_mul_slrpasg_value(slvres3_pidm,slvres3_term_code,'PD','')),
	TO_DATE(slksels.f_get_mul_slrpasg_value(slvres3_pidm,slvres3_term_code,'ED','')),
	SUBSTR(slksels.f_get_mul_slrpasg_value(slvres3_pidm,slvres3_term_code,'PS',''),1,2),
	TO_DATE(slksels.f_get_mul_slrpasg_value(slvres3_pidm,slvres3_term_code,'SD','')),
  SUBSTR(slksels.f_get_mul_slrmasg_value(slvres3_pidm,slvres3_term_code,'MC',''),1,4),
  TO_DATE(slksels.f_get_mul_slrmasg_value(slvres3_pidm,slvres3_term_code,'BD','')),
  TO_DATE(slksels.f_get_mul_slrmasg_value(slvres3_pidm,slvres3_term_code,'ED','')),
  To_NUMBER(slksels.f_get_mul_slrmasg_value(slvres3_pidm,slvres3_term_code,'TD','')),
  To_NUMBER(slksels.f_get_mul_slrmasg_value(slvres3_pidm,slvres3_term_code,'TM','')),
  To_NUMBER(slksels.f_get_mul_slrmasg_value(slvres3_pidm,slvres3_term_code,'TT','')),
  SUBSTR(slksels.f_get_mul_slrmasg_value(slvres3_pidm,slvres3_term_code,'MS',''),1,2),
  TO_DATE(slksels.f_get_mul_slrmasg_value(slvres3_pidm,slvres3_term_code,'MD','')),
  SUBSTR(slksels.f_get_mul_slrmasg_value(slvres3_pidm,slvres3_term_code,'AI',''),1,1),
  substr(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,1,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,1,'FD')),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,1,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,1,'AO')),
  SUBSTR(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,1,'R'),1,30),
  substr(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,2,'H'),1.2),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,2,'FD')),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,2,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,2,'AO')),
  substr(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,2,'R'),1,30),
  substr(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,3,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,3,'FD')),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,3,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,3,'AO')),
  substr(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,3,'R'),1,30),
  substr(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,4,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,4,'FD')),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,4,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,4,'AO')),
  substr(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,4,'R'),1,30),
  substr(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,5,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,5,'FD')),
  TO_DATE(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,5,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,5,'AO')),
  substr(soklibs.f_sprhold_value('RESDHOLD',slvres3_pidm,5,'R'),1,30),
  substr(f_student_check_for_more('HOLDS',slvres3_pidm,'','','RESDHOLD'),1,1),
  substr(f_concat_as_of_cum_gpa
     (slvres3_pidm,slvres3_term_code,sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'LVL',	stvterm_code),'O',
      sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'CC',	stvterm_code)),1,84),
  substr(f_concat_as_of_cum_gpa
     (slvres3_pidm,slvres3_term_code,sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'LVL',	stvterm_code),'I',
      sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'CC',	stvterm_code)),1,84),
  substr(f_concat_as_of_cum_gpa
     (slvres3_pidm,slvres3_term_code,sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'LVL',	stvterm_code),'T',
      sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'CC',	stvterm_code)),1,84),
  substr(f_concat_term_gpa
     (slvres3_pidm,slvres3_term_code,sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'LVL',	stvterm_code),'O',
      sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'CC',	stvterm_code)),1,84),
  substr(f_concat_term_gpa
     (slvres3_pidm,slvres3_term_code,sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'LVL',	stvterm_code),'I',
      sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'CC',	stvterm_code)),1,84),
  substr(f_concat_term_gpa
     (slvres3_pidm,slvres3_term_code,sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'LVL',	stvterm_code),'T',
      sgksels.f_get_sgbstdn_value(slvres3_pidm,	slvres3_term_code, 'CC',	stvterm_code)),1,84)
  from slbrmap, slvres3, stvterm
  where slvres3_term_code = stvterm_code
  and slbrmap_pidm = slvres3_pidm
  and slbrmap_from_term = slvres3_from_term"
"BANINST1","SLVRES1","","select
 pidm_key,
 term_code_key,
 enrolled_ind,
 registered_ind,
 meal_plan_ind,
 housing_ind,
 phone_ind,
 term_code_last_attended,
 id,
 ssn,
 last_name,
 first_name,
 middle_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 ethn_code,
 lgcy_code,
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 stat_code1,
 cnty_code1,
 zip1,
 natn_code1,
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 stat_code2,
 cnty_code2,
 zip2,
 natn_code2,
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 term_code_effective,
 full_part_time_ind,
 stst_code,
 levl_code,
 styp_code,
 camp_code,
 resd_code,
 coll_code,
 degc_code,
 majr_code1,
 majr_code2,
 clas_code,
 rate_code,
 ests_code,
 artp_code,
 term_code_from,
 term_code_to,
 bldg_code_prefered,
 prefered_room,
 bcat_code_prefered,
 camp_code_prefered,
 mrcd_code_application,
 haps_code,
 housing_application_date,
 housing_application_add_date,
 room_phone_area,
 room_phone_number,
 room_phone_extension,
 bldg_code_room,
 room_type,
 room_number,
 maximum_capacity_of_room,
 building_capacity,
 maximum_capacity_of_building,
 bldg_phone_area,
 bldg_phone_number,
 bldg_phone_extension,
 rrcd_code,
 room_begin_date,
 room_end_date,
 room_total_days,
 room_total_months,
 room_total_terms,
 ascd_code,
 room_status_date,
 room_ar_ind,
 room_overload_ind,
 room_override_error,
 room_roll_ind,
 room_assess_needed,
 prcd_code,
 phone_account_number,
 phone_area,
 phone_number,
 phone_extension,
 phone_begin_date,
 phone_end_date,
 pscd_code,
 phone_status_date,
 mrcd_code,
 meal_begin_date,
 meal_end_date,
 meal_total_days,
 meal_total_months,
 meal_total_terms,
 mscd_code,
 meal_status_date,
 meal_ar_ind,
 hldd_code1,
 hold_from_date1,
 hold_to_date1,
 hold_amount_owed1,
 hold_reason1,
 hldd_code2,
 hold_from_date2,
 hold_to_date2,
 hold_amount_owed2,
 hold_reason2,
 hldd_code3,
 hold_from_date3,
 hold_to_date3,
 hold_amount_owed3,
 hold_reason3,
 hldd_code4,
 hold_from_date4,
 hold_to_date4,
 hold_amount_owed4,
 hold_reason4,
 hldd_code5,
 hold_from_date5,
 hold_to_date5,
 hold_amount_owed5,
 hold_reason5,
 additional_holds_ind,
 to_number(substr(f_split_fields(levl_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,6),1,23),'99999999999999D999999999')
from slvres2
 "
"BANINST1","SLVRACD","Room Assignment Account Summary View","SELECT  'HOUSING',
        A.TBRACCD_PIDM,
        A.TBRACCD_TERM_CODE,
 	SUM(A.TBRACCD_AMOUNT),
       	A.TBRACCD_DETAIL_CODE,
	B.TBBDETC_DESC,
        A.TBRACCD_LOC_MDT,
        A.TBRACCD_LOC_MDT_SEQ,
        MAX(A.TBRACCD_EFFECTIVE_DATE)
       	FROM TBBDETC B, TBRACCD A
       	WHERE B.TBBDETC_DETAIL_CODE = A.TBRACCD_DETAIL_CODE
	  AND A.TBRACCD_SRCE_CODE = 'B'
          AND (A.TBRACCD_PIDM, A.TBRACCD_TERM_CODE) IN
	      (SELECT C.SLVCOLR_PIDM, C.SLVCOLR_TERM_CODE
	       FROM SLVCOLR C)
        GROUP BY A.TBRACCD_PIDM,A.TBRACCD_TERM_CODE,
                 A.TBRACCD_DETAIL_CODE,B.TBBDETC_DESC,
                 A.TBRACCD_LOC_MDT,A.TBRACCD_LOC_MDT_SEQ
 "
"BANINST1","SLVPRES","Phone Assignment Assessment Detail Summary View","SELECT 'PHONE',
       SUM(SLVPREF_DAY_CHARGES) + SUM(SLVPREF_MONTH_CHARGES)
       + SUM(SLVPREF_TERM_CHARGES),
       SLVPREF_DETAIL_CODE, SLVPREF_SESSIONID, SLVPREF_PIDM,
       SLVPREF_TERM_CODE,
       SLVPREF_M_D_T,
       SLVPREF_LOC_MDT_SEQ
       FROM  SLVPREF
       WHERE SLVPREF_TYPE = 'PHONE'
GROUP BY SLVPREF_PIDM, SLVPREF_TERM_CODE,
         SLVPREF_DETAIL_CODE, SLVPREF_M_D_T,
         SLVPREF_LOC_MDT_SEQ, SLVPREF_SESSIONID
 "
"BANINST1","SLVPREF","Phone Assignment Assessment Detail View","SELECT 'PHONE',
       SLRPASG.SLRPASG_TOTAL_DAYS,
       SLRPASG.SLRPASG_TOTAL_MONTHS,
       SLRPASG.SLRPASG_TOTAL_TERMS,
       DECODE(SLVMNTH.SLVMNTH_MONTH, 0, 1, 0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,
               'D',
               ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
                           GREATEST((SLRPASG.SLRPASG_TOTAL_DAYS *
                                    SLRLMFE.SLRLMFE_BASE_RATE),
                                    SLRLMFE.SLRLMFE_MIN_CHARGE)) *
                     DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND, 'N'),
                            'Y',
                            ((100 - NVL(SLRPFCR.SLRPFCR_REFUND, 0)) / 100),
                            1),
                     2),
               0)),
       DECODE(SLVMNTH.SLVMNTH_MONTH, 0, 1, 0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,
               'T',
               ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
                           GREATEST((SLRPASG.SLRPASG_TOTAL_TERMS *
                                    SLRLMFE.SLRLMFE_BASE_RATE),
                                    SLRLMFE.SLRLMFE_MIN_CHARGE)) *
                     DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND, 'N'),
                            'Y',
                            ((100 - NVL(SLRPFCR.SLRPFCR_REFUND, 0)) / 100),
                            1),
                     2),
               0)),
       DECODE(SLRLMFE.SLRLMFE_M_D_T,
              'M',
              ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
                          GREATEST((DECODE(SIGN(SLRPASG.SLRPASG_TOTAL_MONTHS -
                                                SLVMNTH.SLVMNTH_MONTH),
                                           '-1',
                                           0,
                                           0,
                                           0,
                                           DECODE((TRUNC(SLRPASG.SLRPASG_TOTAL_MONTHS) -
                                                  SLVMNTH.SLVMNTH_MONTH),
                                                  0,
                                                  SLRPASG.SLRPASG_TOTAL_MONTHS -
                                                  FLOOR(SLRPASG.SLRPASG_TOTAL_MONTHS),
                                                  1)) *
                                   SLRLMFE.SLRLMFE_BASE_RATE),
                                   SLRLMFE.SLRLMFE_MIN_CHARGE)) *
                    DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND, 'N'),
                           'Y',
                           ((100 - NVL(SLRPFCR.SLRPFCR_REFUND, 0)) / 100),
                           1),
                    2),
              0),
       SLRLMFE.SLRLMFE_DETAIL_CODE,
       SLRLMFE.SLRLMFE_M_D_T,
       SLVCOLR.SLVCOLR_SESSIONID,
       SLVCOLR.SLVCOLR_PIDM,
       SLVCOLR.SLVCOLR_TERM_CODE,
       SLVMNTH.SLVMNTH_MONTH
  FROM TBBDETC, SLRPFCR, SLRPASG, SLRLMFE, SLVCOLR, SLVMNTH
 WHERE SLRLMFE.SLRLMFE_DETAIL_CODE = TBBDETC.TBBDETC_DETAIL_CODE
   AND ((SLRLMFE.SLRLMFE_M_D_T in ('T', 'D') AND SLVMNTH.SLVMNTH_MONTH = 0) OR
       (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH >= 0 AND
       SLRLMFE.SLRLMFE_BASE_RATE <> 0 AND
       SIGN(SLRPASG.SLRPASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0) OR
       (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH = 1 AND
       SLRLMFE.SLRLMFE_BASE_RATE = 0 AND
       SIGN(SLRPASG.SLRPASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0))
   AND SLRLMFE.SLRLMFE_TERM_CODE = SLVCOLR.SLVCOLR_TERM_CODE
   AND SLRLMFE.SLRLMFE_RATE_CODE = SLRPASG.SLRPASG_PRCD_CODE
   AND SLRLMFE.SLRLMFE_TYPE = 'PHONE'
   AND SLRPFCR.SLRPFCR_TERM_CODE = SLRPASG.SLRPASG_TERM_CODE
   AND SLRPFCR.SLRPFCR_PSCD_CODE = SLRPASG.SLRPASG_PSCD_CODE
   AND SLRPASG.SLRPASG_PSCD_DATE BETWEEN SLRPFCR.SLRPFCR_FROM_DATE AND
       SLRPFCR.SLRPFCR_TO_DATE
   AND SLRPASG.SLRPASG_PIDM = SLVCOLR.SLVCOLR_PIDM
   AND SLRPASG.SLRPASG_TERM_CODE = SLVCOLR.SLVCOLR_TERM_CODE
UNION ALL
SELECT 'PHONE',
       SLRPASG.SLRPASG_TOTAL_DAYS,
       SLRPASG.SLRPASG_TOTAL_MONTHS,
       SLRPASG.SLRPASG_TOTAL_TERMS,
       DECODE(SLVMNTH.SLVMNTH_MONTH, 0, 1, 0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,
               'D',
               ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
                           GREATEST((SLRPASG.SLRPASG_TOTAL_DAYS *
                                    SLRLMFE.SLRLMFE_BASE_RATE),
                                    SLRLMFE.SLRLMFE_MIN_CHARGE)) *
                     DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND, 'N'),
                            'Y',
                            1,
                            1),
                     2),
               0)),
       DECODE(SLVMNTH.SLVMNTH_MONTH, 0, 1, 0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,
               'T',
               ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
                           GREATEST((SLRPASG.SLRPASG_TOTAL_TERMS *
                                    SLRLMFE.SLRLMFE_BASE_RATE),
                                    SLRLMFE.SLRLMFE_MIN_CHARGE)) *
                     DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND, 'N'),
                            'Y',
                            1,
                            1),
                     2),
               0)),
       DECODE(SLRLMFE.SLRLMFE_M_D_T,
              'M',
              ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
                          GREATEST((DECODE(SIGN(SLRPASG.SLRPASG_TOTAL_MONTHS -
                                                SLVMNTH.SLVMNTH_MONTH),
                                           '-1',
                                           0,
                                           0,
                                           0,
                                           DECODE((TRUNC(SLRPASG.SLRPASG_TOTAL_MONTHS) -
                                                  SLVMNTH.SLVMNTH_MONTH),
                                                  0,
                                                  SLRPASG.SLRPASG_TOTAL_MONTHS -
                                                  FLOOR(SLRPASG.SLRPASG_TOTAL_MONTHS),
                                                  1)) *
                                   SLRLMFE.SLRLMFE_BASE_RATE),
                                   SLRLMFE.SLRLMFE_MIN_CHARGE)) *
                    DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND, 'N'),
                           'Y',
                           1,
                           1),
                    2),
              0),
       SLRLMFE.SLRLMFE_DETAIL_CODE,
       SLRLMFE.SLRLMFE_M_D_T,
       SLVCOLR.SLVCOLR_SESSIONID,
       SLVCOLR.SLVCOLR_PIDM,
       SLVCOLR.SLVCOLR_TERM_CODE,
       SLVMNTH.SLVMNTH_MONTH
  FROM TBBDETC, SLRPASG, SLRLMFE, SLVCOLR, SLVMNTH
 WHERE SLRLMFE.SLRLMFE_DETAIL_CODE = TBBDETC.TBBDETC_DETAIL_CODE
   AND ((SLRLMFE.SLRLMFE_M_D_T in ('T', 'D') AND SLVMNTH.SLVMNTH_MONTH = 0) OR
       (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH >= 0 AND
       SLRLMFE.SLRLMFE_BASE_RATE <> 0 AND
       SIGN(SLRPASG.SLRPASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0) OR
       (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH = 1 AND
       SLRLMFE.SLRLMFE_BASE_RATE = 0 AND
       SIGN(SLRPASG.SLRPASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0))
   AND SLRLMFE.SLRLMFE_TERM_CODE = SLVCOLR.SLVCOLR_TERM_CODE
   AND SLRLMFE.SLRLMFE_RATE_CODE = SLRPASG.SLRPASG_PRCD_CODE
   AND SLRLMFE.SLRLMFE_TYPE = 'PHONE'
   AND NOT EXISTS
 (SELECT 1
          FROM SLRPFCR
         WHERE SLRPFCR.SLRPFCR_TERM_CODE = SLRPASG.SLRPASG_TERM_CODE
           AND SLRPFCR.SLRPFCR_PSCD_CODE = SLRPASG.SLRPASG_PSCD_CODE
           AND SLRPASG.SLRPASG_PSCD_DATE BETWEEN SLRPFCR.SLRPFCR_FROM_DATE AND
               SLRPFCR.SLRPFCR_TO_DATE)
   AND SLRPASG.SLRPASG_PIDM = SLVCOLR.SLVCOLR_PIDM
   AND SLRPASG.SLRPASG_TERM_CODE = SLVCOLR.SLVCOLR_TERM_CODE"
"BANINST1","SLVPACD","Phone Assignment Account Summary View","SELECT  'PHONE',
        A.TBRACCD_PIDM,
        A.TBRACCD_TERM_CODE,
 	SUM(A.TBRACCD_AMOUNT),
       	A.TBRACCD_DETAIL_CODE,
	B.TBBDETC_DESC,
        A.TBRACCD_LOC_MDT,
        A.TBRACCD_LOC_MDT_SEQ,
        MAX(A.TBRACCD_EFFECTIVE_DATE)
       	FROM TBBDETC B, TBRACCD A
       	WHERE B.TBBDETC_DETAIL_CODE = A.TBRACCD_DETAIL_CODE
	  AND A.TBRACCD_SRCE_CODE = 'U'
          AND (A.TBRACCD_PIDM, A.TBRACCD_TERM_CODE) IN
	      (SELECT C.SLVCOLR_PIDM, C.SLVCOLR_TERM_CODE
	       FROM SLVCOLR C)
        GROUP BY A.TBRACCD_PIDM,A.TBRACCD_TERM_CODE,
                 A.TBRACCD_DETAIL_CODE,B.TBBDETC_DESC,
                 A.TBRACCD_LOC_MDT,A.TBRACCD_LOC_MDT_SEQ
 "
"BANINST1","SLVMRES","Meal Assignment Assessment Detail Summary View","SELECT 'MEAL',
       SUM(SLVMREF_DAY_CHARGES) + SUM(SLVMREF_MONTH_CHARGES)
       + SUM(SLVMREF_TERM_CHARGES),
       SLVMREF_DETAIL_CODE, SLVMREF_SESSIONID, SLVMREF_PIDM,
       SLVMREF_TERM_CODE,
       SLVMREF_M_D_T,
       SLVMREF_LOC_MDT_SEQ
       FROM  SLVMREF
       WHERE SLVMREF_TYPE = 'MEAL'
GROUP BY SLVMREF_PIDM, SLVMREF_TERM_CODE,
         SLVMREF_DETAIL_CODE, SLVMREF_M_D_T,
         SLVMREF_LOC_MDT_SEQ, SLVMREF_SESSIONID
 "
"BANINST1","SLVMREF","Meal Assignment Assessment Detail View","SELECT 'MEAL',
       SLRMASG.SLRMASG_TOTAL_DAYS,
       SLRMASG.SLRMASG_TOTAL_MONTHS,
       SLRMASG.SLRMASG_TOTAL_TERMS,
       DECODE(SLVMNTH.SLVMNTH_MONTH,0,1,0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,'D',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((SLRMASG.SLRMASG_TOTAL_DAYS * SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',
             ((100 - NVL(SLRMFCR.SLRMFCR_REFUND,0))/100),1),2),0)),
       DECODE(SLVMNTH.SLVMNTH_MONTH,0,1,0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,'T',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((SLRMASG.SLRMASG_TOTAL_TERMS * SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',
             ((100 - NVL(SLRMFCR.SLRMFCR_REFUND,0))/100),1),2),0)),
       DECODE(SLRLMFE.SLRLMFE_M_D_T,'M',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((DECODE(
       SIGN(SLRMASG.SLRMASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH),'-1',0,0,0,
       DECODE((TRUNC(SLRMASG.SLRMASG_TOTAL_MONTHS) - SLVMNTH.SLVMNTH_MONTH),0,
       SLRMASG.SLRMASG_TOTAL_MONTHS - FLOOR(SLRMASG.SLRMASG_TOTAL_MONTHS),1)) *
       SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',
             ((100 - NVL(SLRMFCR.SLRMFCR_REFUND,0))/100),1),2),0),
       SLRLMFE.SLRLMFE_DETAIL_CODE,
       SLRLMFE.SLRLMFE_M_D_T,
       SLVCOLR.SLVCOLR_SESSIONID, SLVCOLR.SLVCOLR_PIDM,
       SLVCOLR.SLVCOLR_TERM_CODE, SLVMNTH.SLVMNTH_MONTH
       FROM  TBBDETC, SLRMFCR, SLRMASG,
	     SLRLMFE, SLVCOLR, SLVMNTH
       WHERE SLRLMFE.SLRLMFE_DETAIL_CODE  = TBBDETC.TBBDETC_DETAIL_CODE
       AND ((SLRLMFE.SLRLMFE_M_D_T in ('T','D') AND SLVMNTH.SLVMNTH_MONTH = 0)
         OR (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH >= 0 AND
             SLRLMFE.SLRLMFE_BASE_RATE <> 0 AND
             SIGN(SLRMASG.SLRMASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0)
         OR (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH = 1 AND
             SLRLMFE.SLRLMFE_BASE_RATE = 0 AND
             SIGN(SLRMASG.SLRMASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0))
       AND   SLRLMFE.SLRLMFE_TERM_CODE    = SLVCOLR.SLVCOLR_TERM_CODE
       AND   SLRLMFE.SLRLMFE_RATE_CODE    = SLRMASG.SLRMASG_MRCD_CODE
       AND   SLRLMFE.SLRLMFE_TYPE         = 'MEAL'
       AND   SLRMFCR.SLRMFCR_TERM_CODE = SLRMASG.SLRMASG_TERM_CODE
       AND   SLRMFCR.SLRMFCR_MSCD_CODE = SLRMASG.SLRMASG_MSCD_CODE
       AND   SLRMASG.SLRMASG_MSCD_DATE BETWEEN
             SLRMFCR.SLRMFCR_FROM_DATE AND
             SLRMFCR.SLRMFCR_TO_DATE
       AND   SLRMASG.SLRMASG_PIDM         = SLVCOLR.SLVCOLR_PIDM
       AND   SLRMASG.SLRMASG_TERM_CODE    = SLVCOLR.SLVCOLR_TERM_CODE
UNION ALL
SELECT 'MEAL',
       SLRMASG.SLRMASG_TOTAL_DAYS,
       SLRMASG.SLRMASG_TOTAL_MONTHS,
       SLRMASG.SLRMASG_TOTAL_TERMS,
       DECODE(SLVMNTH.SLVMNTH_MONTH,0,1,0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,'D',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((SLRMASG.SLRMASG_TOTAL_DAYS * SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',
             1,1),2),0)),
       DECODE(SLVMNTH.SLVMNTH_MONTH,0,1,0) *
       (DECODE(SLRLMFE.SLRLMFE_M_D_T,'T',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((SLRMASG.SLRMASG_TOTAL_TERMS * SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',
             1,1),2),0)),
       DECODE(SLRLMFE.SLRLMFE_M_D_T,'M',
       ROUND(LEAST(SLRLMFE.SLRLMFE_MAX_CHARGE,
       GREATEST((DECODE(
       SIGN(SLRMASG.SLRMASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH),'-1',0,0,0,
       DECODE((TRUNC(SLRMASG.SLRMASG_TOTAL_MONTHS) - SLVMNTH.SLVMNTH_MONTH),0,
       SLRMASG.SLRMASG_TOTAL_MONTHS - FLOOR(SLRMASG.SLRMASG_TOTAL_MONTHS),1)) *
       SLRLMFE.SLRLMFE_BASE_RATE),
             SLRLMFE.SLRLMFE_MIN_CHARGE)) *
       DECODE(NVL(TBBDETC.TBBDETC_REFUNDABLE_IND,'N'),'Y',
             1,1),2),0),
       SLRLMFE.SLRLMFE_DETAIL_CODE,
       SLRLMFE.SLRLMFE_M_D_T,
       SLVCOLR.SLVCOLR_SESSIONID, SLVCOLR.SLVCOLR_PIDM,
       SLVCOLR.SLVCOLR_TERM_CODE, SLVMNTH.SLVMNTH_MONTH
       FROM  TBBDETC,SLRMASG,
	     SLRLMFE, SLVCOLR, SLVMNTH
       WHERE SLRLMFE.SLRLMFE_DETAIL_CODE  = TBBDETC.TBBDETC_DETAIL_CODE
       AND ((SLRLMFE.SLRLMFE_M_D_T in ('T','D') AND SLVMNTH.SLVMNTH_MONTH = 0)
         OR (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH >= 0 AND
             SLRLMFE.SLRLMFE_BASE_RATE <> 0 AND
             SIGN(SLRMASG.SLRMASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0)
         OR (SLRLMFE.SLRLMFE_M_D_T = 'M' AND SLVMNTH.SLVMNTH_MONTH = 1 AND
             SLRLMFE.SLRLMFE_BASE_RATE = 0 AND
             SIGN(SLRMASG.SLRMASG_TOTAL_MONTHS - SLVMNTH.SLVMNTH_MONTH) > 0))
       AND   SLRLMFE.SLRLMFE_TERM_CODE    = SLVCOLR.SLVCOLR_TERM_CODE
       AND   SLRLMFE.SLRLMFE_RATE_CODE    = SLRMASG.SLRMASG_MRCD_CODE
       AND   SLRLMFE.SLRLMFE_TYPE         = 'MEAL'
       AND   SLRMASG.SLRMASG_PIDM         = SLVCOLR.SLVCOLR_PIDM
       AND   SLRMASG.SLRMASG_TERM_CODE    = SLVCOLR.SLVCOLR_TERM_CODE
       AND   NOT EXISTS (SELECT 1 FROM SLRMFCR WHERE SLRMFCR.SLRMFCR_TERM_CODE = SLRMASG.SLRMASG_TERM_CODE
       																					AND   SLRMFCR.SLRMFCR_MSCD_CODE = SLRMASG.SLRMASG_MSCD_CODE
       																					AND   SLRMASG.SLRMASG_MSCD_DATE BETWEEN
             																					SLRMFCR.SLRMFCR_FROM_DATE AND
             																					SLRMFCR.SLRMFCR_TO_DATE)"
"BANINST1","SLVMNTH","Location Management view used for the purpose of returning 12 rows for the assessment of monthly charges","SELECT 0 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 1 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 2 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 3 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 4 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 5 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 6 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 7 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 8 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 9 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 10 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
UNION
SELECT 11 FROM SLRCOLR
WHERE SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
 "
"BANINST1","SLVMACD","Meal Assignment Account Summary View","SELECT  'MEAL',
        A.TBRACCD_PIDM,
        A.TBRACCD_TERM_CODE,
 	SUM(A.TBRACCD_AMOUNT),
       	A.TBRACCD_DETAIL_CODE,
	B.TBBDETC_DESC,
        A.TBRACCD_LOC_MDT,
        A.TBRACCD_LOC_MDT_SEQ,
        MAX(A.TBRACCD_EFFECTIVE_DATE)
       	FROM TBBDETC B, TBRACCD A
       	WHERE B.TBBDETC_DETAIL_CODE = A.TBRACCD_DETAIL_CODE
	  AND A.TBRACCD_SRCE_CODE = 'V'
          AND (A.TBRACCD_PIDM, A.TBRACCD_TERM_CODE) IN
	      (SELECT C.SLVCOLR_PIDM, C.SLVCOLR_TERM_CODE
	       FROM SLVCOLR C)
        GROUP BY A.TBRACCD_PIDM,A.TBRACCD_TERM_CODE,
                 A.TBRACCD_DETAIL_CODE,B.TBBDETC_DESC,
                 A.TBRACCD_LOC_MDT,A.TBRACCD_LOC_MDT_SEQ
 "
"BANINST1","SLVCOLR","Location Management Assessment Collector View","SELECT 	SLRCOLR.SLRCOLR_SESSIONID,
       	SLRCOLR.SLRCOLR_TERM_CODE,
       	SLRCOLR.SLRCOLR_PIDM
   FROM SLRCOLR
  WHERE SLRCOLR.SLRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
 "
"BANINST1","SIVSECM","Faculty Schedule Meeting Time View","SELECT SSBSECT_TERM_CODE,
          SSBSECT_CRN,
          SSRMEET_START_DATE,
          SSRMEET_END_DATE,
          SSRMEET_BEGIN_TIME,
          SSRMEET_END_TIME,
          SSRMEET_CATAGORY,
          SSRMEET_MON_DAY,
          SSRMEET_TUE_DAY,
          SSRMEET_WED_DAY,
          SSRMEET_THU_DAY,
          SSRMEET_FRI_DAY,
          SSRMEET_SAT_DAY,
          SSRMEET_SUN_DAY,
          SSRMEET_BLDG_CODE,
          SSRMEET_ROOM_CODE,
          ROWIDTOCHAR (SSRMEET.ROWID),
          SSBSECT_SUBJ_CODE,
          SSBSECT_CRSE_NUMB,
          SSBSECT_SEQ_NUMB,
          substr(SSKSELS.F_GET_SSRXLST_GROUP (SSBSECT_TERM_CODE, SSBSECT_CRN),1,2),
          SSRMEET_SCHD_CODE,
          SSRMEET_CREDIT_HR_SESS,
          SSBSECT_ENRL,
          SSBSECT_MAX_ENRL,
          SSBSECT_PTRM_CODE
     FROM SSRMEET, SSBSECT
    WHERE SSRMEET_TERM_CODE = SSBSECT_TERM_CODE
      AND SSRMEET_CRN = SSBSECT_CRN
UNION ALL
SELECT SSBSECT_TERM_CODE,
       SSBSECT_CRN,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       SSBSECT_SUBJ_CODE,
       SSBSECT_CRSE_NUMB,
       SSBSECT_SEQ_NUMB,
       substr(SSKSELS.F_GET_SSRXLST_GROUP (SSBSECT_TERM_CODE, SSBSECT_CRN),1,2),
       NULL,
       NULL,
       SSBSECT_ENRL,
       SSBSECT_MAX_ENRL,
       SSBSECT_PTRM_CODE
  FROM SSBSECT
 WHERE NOT EXISTS (Select 'X' from SSRMEET
                   WHERE SSRMEET_TERM_CODE = SSBSECT_TERM_CODE
                    AND  SSRMEET_CRN = SSBSECT_CRN)"
"BANINST1","SIVPFAC","","(SELECT SIRASGN_PIDM, SSBSECT_TERM_CODE, SSBSECT_CRN,
        SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
        SSBSECT_SEQ_NUMB, SSRMEET_CATAGORY, SUM(SSRMEET_CREDIT_HR_SESS),
       TRUNC(((SUM(SSRMEET_CREDIT_HR_SESS) * SSBSECT_ENRL) *
           SIRASGN_PERCENT_RESPONSE)/100,3),
       TRUNC((SUM(SSRMEET_CREDIT_HR_SESS) *
           SIRASGN_PERCENT_RESPONSE)/100,3),
       TRUNC((SUM(SSRMEET_HRS_WEEK) * SIRASGN_PERCENT_RESPONSE *
                                      SIRASGN_PERCENT_SESS)/10000,2),
  TRUNC((SUM((SSRMEET_HRS_WEEK/
        DECODE((TO_NUMBER(DECODE(SSRMEET_MON_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_TUE_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_WED_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_THU_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_FRI_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SAT_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SUN_DAY,NULL,0,1))),0,1,
        (TO_NUMBER(DECODE(SSRMEET_MON_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_TUE_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_WED_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_THU_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_FRI_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SAT_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SUN_DAY,NULL,0,1)))))
     * SSRMEET_MEET_NO) * SIRASGN_PERCENT_RESPONSE * SIRASGN_PERCENT_SESS)
        /10000,2),
       TRUNC((TRUNC((NVL(SIRASGN_WORKLOAD_ADJUST,
            NVL(SUM(DECODE(SIGN(NVL(SCRSCHD_MAX_ENRL,999) - SSBSECT_ENRL),
              0,NVL(SCRSCHD_WORKLOAD,0),-1,
	      NVL(SCRSCHD_ADJ_WORKLOAD,NVL(SCRSCHD_WORKLOAD,0)),
              1,NVL(SCRSCHD_WORKLOAD,0))),NVL(SUM(SCRSCHD_WORKLOAD),0))) *
              SIRASGN_PERCENT_RESPONSE)/100,3))/SIKLIBS.F_GET_MIN_SIBTERM_FTE(SSBSECT_TERM_CODE),3),
        NVL(SUM(DECODE(SIGN(NVL(SCRSCHD_MAX_ENRL,999) - SSBSECT_ENRL),
              0,NVL(SCRSCHD_WORKLOAD,0),-1,
	      NVL(SCRSCHD_ADJ_WORKLOAD,NVL(SCRSCHD_WORKLOAD,0)),
              1,NVL(SCRSCHD_WORKLOAD,0))),NVL(SUM(SCRSCHD_WORKLOAD),0)),
        SIRASGN_WORKLOAD_ADJUST,
       (TRUNC((NVL(SIRASGN_WORKLOAD_ADJUST,
              NVL(SUM(DECODE(SIGN(NVL(SCRSCHD_MAX_ENRL,999) - SSBSECT_ENRL),
                  0,NVL(SCRSCHD_WORKLOAD,0),-1,
		  NVL(SCRSCHD_ADJ_WORKLOAD,NVL(SCRSCHD_WORKLOAD,0)),
                  1,NVL(SCRSCHD_WORKLOAD,0))),NVL(SUM(SCRSCHD_WORKLOAD),0))) *
                    SIRASGN_PERCENT_RESPONSE)/100,3)),
       SIRASGN_PERCENT_SESS, SIRASGN_PERCENT_RESPONSE, SIRASGN_POSN,
       SIRASGN_SUFF
FROM SCRSCHD, SSRMEET,
     SSBSECT, SIRASGN, SIRCOLR
WHERE SCRSCHD_SUBJ_CODE = SSBSECT_SUBJ_CODE
AND   SCRSCHD_CRSE_NUMB = SSBSECT_CRSE_NUMB
AND   SCRSCHD_EFF_TERM =
    (SELECT MAX(SCRSCHD_EFF_TERM) FROM SCRSCHD
     WHERE SCRSCHD_SUBJ_CODE = SSBSECT_SUBJ_CODE
     AND   SCRSCHD_CRSE_NUMB = SSBSECT_CRSE_NUMB
     AND   SCRSCHD_EFF_TERM <= SSBSECT_TERM_CODE
     AND   SCRSCHD_SCHD_CODE = SSRMEET_SCHD_CODE)
AND SCRSCHD_SCHD_CODE = SSRMEET_SCHD_CODE
AND   SSRMEET_TERM_CODE = SSBSECT_TERM_CODE
AND   SSRMEET_CRN = SSBSECT_CRN
AND   SSRMEET_CATAGORY = SIRASGN_CATEGORY
AND   SSBSECT_CRN = SIRASGN_CRN
AND   SSBSECT_TERM_CODE = SIRASGN_TERM_CODE
AND   SIRASGN_PIDM = SIRCOLR_PIDM
AND   SIRASGN_TERM_CODE = SIRCOLR_TERM_CODE
AND   SIRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
GROUP BY SIRASGN_PIDM, SSBSECT_TERM_CODE, SSBSECT_CRN,
         SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
         SSBSECT_SEQ_NUMB, SSRMEET_CATAGORY,
         SSBSECT_ENRL, SIRASGN_WORKLOAD_ADJUST,
         SIRASGN_PERCENT_RESPONSE, SIRASGN_PERCENT_SESS,
         SIRASGN_PERCENT_SESS, SIRASGN_PERCENT_RESPONSE,
         SIRASGN_POSN, SIRASGN_SUFF)"
"BANINST1","SIVINST","Instructor Query View","(SELECT SIBINST.SIBINST_TERM_CODE_EFF,
       SIBINST.SIBINST_PIDM,
       SPRIDEN.SPRIDEN_ID,
       SPRIDEN.SPRIDEN_LAST_NAME,
       SPRIDEN.SPRIDEN_FIRST_NAME,
       SPRIDEN.SPRIDEN_MI,
       SIBINST.SIBINST_FCTG_CODE,
       SIBINST.SIBINST_FSTP_CODE,
       SIRICNT.SIRICNT_FCNT_CODE
  FROM SIRICNT, SPRIDEN, SIBINST
 WHERE SIBINST.SIBINST_SCHD_IND = 'Y'
   AND SIBINST.SIBINST_FCST_CODE IN
       (SELECT STVFCST.STVFCST_CODE FROM STVFCST WHERE STVFCST.STVFCST_ACTIVE_IND = 'A')
   AND SIRICNT.SIRICNT_PIDM = SIBINST.SIBINST_PIDM
   AND NVL(SIRICNT.SIRICNT_TERM_CODE_EFF, '000000') =
       (SELECT NVL(MAX(X.SIRICNT_TERM_CODE_EFF), '000000')
          FROM SIRICNT X
         WHERE X.SIRICNT_PIDM = SIBINST.SIBINST_PIDM
           AND X.SIRICNT_TERM_CODE_EFF <= SIBINST.SIBINST_TERM_CODE_EFF)
   AND SPRIDEN.SPRIDEN_PIDM = SIBINST.SIBINST_PIDM
   AND SPRIDEN.SPRIDEN_CHANGE_IND IS NULL
UNION ALL
SELECT SIBINST.SIBINST_TERM_CODE_EFF,
       SIBINST.SIBINST_PIDM,
       SPRIDEN.SPRIDEN_ID,
       SPRIDEN.SPRIDEN_LAST_NAME,
       SPRIDEN.SPRIDEN_FIRST_NAME,
       SPRIDEN.SPRIDEN_MI,
       SIBINST.SIBINST_FCTG_CODE,
       SIBINST.SIBINST_FSTP_CODE,
       NULL
  FROM SPRIDEN, SIBINST
 WHERE SIBINST.SIBINST_SCHD_IND = 'Y'
   AND SIBINST.SIBINST_FCST_CODE IN
       (SELECT STVFCST.STVFCST_CODE FROM STVFCST WHERE STVFCST.STVFCST_ACTIVE_IND = 'A')
   AND NOT EXISTS
 (SELECT 1 FROM SIRICNT WHERE SIRICNT.SIRICNT_PIDM = SIBINST.SIBINST_PIDM)
   AND SPRIDEN.SPRIDEN_PIDM = SIBINST.SIBINST_PIDM
   AND SPRIDEN.SPRIDEN_CHANGE_IND IS NULL)"
"BANINST1","SIVFACQ","Faculty/Advisor Query View","(SELECT	STVTERM_CODE,
        A.SIBINST_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SIBINST_FCST_CODE,
        SIBINST_FSTP_CODE,
        SIBINST_FCTG_CODE,
        SIBINST_WKLD_CODE,
        SIBINST_SCHD_IND,
        SIBINST_ADVR_IND
	FROM SPRIDEN, SIBINST A,
             STVTERM
        WHERE A.SIBINST_TERM_CODE_EFF =
              (SELECT MAX(X.SIBINST_TERM_CODE_EFF)
               FROM SIBINST X
               WHERE X.SIBINST_PIDM = A.SIBINST_PIDM
               AND   X.SIBINST_TERM_CODE_EFF  <= STVTERM_CODE)
        AND   SPRIDEN_PIDM = A.SIBINST_PIDM
        AND   SPRIDEN_CHANGE_IND IS NULL
        GROUP BY
       	STVTERM_CODE,
        A.SIBINST_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SIBINST_FCST_CODE,
        SIBINST_FSTP_CODE,
        SIBINST_FCTG_CODE,
        SIBINST_WKLD_CODE,
        SIBINST_SCHD_IND,
        SIBINST_ADVR_IND)
 "
"BANINST1","SIVFACL","Advisor/Instructor Query View","(SELECT	STVTERM_CODE,
        A.SIBINST_PIDM,
        SPRIDEN.SPRIDEN_ID,
        SPRIDEN.SPRIDEN_LAST_NAME,
        SPRIDEN.SPRIDEN_FIRST_NAME,
        SPRIDEN.SPRIDEN_MI,
        A.SIBINST_FCST_CODE,
        A.SIBINST_FSTP_CODE,
        A.SIBINST_FCTG_CODE,
        DECODE(SIRICNT.SIRICNT_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRICNT.SIRICNT_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM.STVTERM_CODE)),
               1,'',SIRICNT.SIRICNT_FCNT_CODE),''),
        (SELECT sibfacd_tenr_code FROM sibfacd WHERE sibfacd_pidm = A.SIBINST_PIDM) ,
        A.SIBINST_WKLD_CODE,
        DECODE(SIRICNT.SIRICNT_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRICNT.SIRICNT_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM.STVTERM_CODE)),
               1,'',SIRICNT.SIRICNT_CNTR_CODE),''),
        A.SIBINST_SCHD_IND,
        A.SIBINST_ADVR_IND,
        DECODE(SIRDPCL.SIRDPCL_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRDPCL.SIRDPCL_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM.STVTERM_CODE)),
               1,'',SIRDPCL.SIRDPCL_DEPT_CODE),''),
        DECODE(SIRDPCL.SIRDPCL_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRDPCL.SIRDPCL_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM.STVTERM_CODE)),
               1,'',SIRDPCL.SIRDPCL_COLL_CODE),''),
        DECODE(SIRDPCL.SIRDPCL_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRDPCL.SIRDPCL_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM.STVTERM_CODE)),
               1,'',SIRDPCL.SIRDPCL_HOME_IND),'')
	FROM SPRIDEN,
             SIRICNT, SIRDPCL,
             SIBINST A, STVTERM
        WHERE A.SIBINST_TERM_CODE_EFF =
              (SELECT MAX(X.SIBINST_TERM_CODE_EFF)
               FROM SIBINST X
               WHERE X.SIBINST_PIDM = A.SIBINST_PIDM
               AND   X.SIBINST_TERM_CODE_EFF  <= STVTERM_CODE)
        AND   ((SIRDPCL_PIDM  = A.SIBINST_PIDM
               AND   SIRDPCL_TERM_CODE_EFF  =
              (SELECT MAX(Y.SIRDPCL_TERM_CODE_EFF)
               FROM SIRDPCL Y
               WHERE Y.SIRDPCL_PIDM = A.SIBINST_PIDM
               AND   Y.SIRDPCL_TERM_CODE_EFF  <=  STVTERM_CODE))
                  OR
               (NOT EXISTS
                    (SELECT 'X' FROM SIRDPCL
                     WHERE SIRDPCL_PIDM = A.SIBINST_PIDM))
                   OR
                (SIRDPCL_PIDM = A.SIBINST_PIDM
                 AND NOT EXISTS
                     (SELECT 'X' FROM SIRDPCL
                      WHERE SIRDPCL_PIDM = A.SIBINST_PIDM
                      AND   SIRDPCL_TERM_CODE_EFF <= STVTERM_CODE)))
        AND   ((SIRICNT_PIDM  = A.SIBINST_PIDM
               AND   SIRICNT_TERM_CODE_EFF  =
              (SELECT MAX(Z.SIRICNT_TERM_CODE_EFF)
               FROM SIRICNT Z
               WHERE Z.SIRICNT_PIDM = A.SIBINST_PIDM
               AND   Z.SIRICNT_TERM_CODE_EFF  <=  STVTERM_CODE))
                  OR
               (NOT EXISTS
                    (SELECT 'X' FROM SIRICNT
                     WHERE SIRICNT_PIDM = A.SIBINST_PIDM))
                   OR
                (SIRICNT_PIDM = A.SIBINST_PIDM
                 AND NOT EXISTS
                     (SELECT 'X' FROM SIRICNT
                      WHERE SIRICNT_PIDM = A.SIBINST_PIDM
                      AND   SIRICNT_TERM_CODE_EFF <= STVTERM_CODE)))
        AND   SPRIDEN_PIDM = A.SIBINST_PIDM
        AND SPRIDEN_CHANGE_IND IS NULL
        GROUP BY
       	STVTERM_CODE,
        A.SIBINST_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SIBINST_FCST_CODE,
        SIBINST_FSTP_CODE,
        SIBINST_FCTG_CODE,
        DECODE(SIRICNT_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRICNT_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM_CODE)),
               1,'',SIRICNT_FCNT_CODE),''),
        SIBINST_WKLD_CODE,
        DECODE(SIRICNT_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRICNT_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM_CODE)),
               1,'',SIRICNT_CNTR_CODE),''),
        SIBINST_SCHD_IND,
        SIBINST_ADVR_IND,
        DECODE(SIRDPCL_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRDPCL_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM_CODE)),
               1,'',SIRDPCL_DEPT_CODE),''),
        DECODE(SIRDPCL_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRDPCL_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM_CODE)),
               1,'',SIRDPCL_COLL_CODE),''),
        DECODE(SIRDPCL_PIDM,A.SIBINST_PIDM,
        DECODE(SIGN(TO_NUMBER(NVL(SIRDPCL_TERM_CODE_EFF,'999999'))
                   -TO_NUMBER(STVTERM_CODE)),
               1,'',SIRDPCL_HOME_IND),''))"
"BANINST1","SIVFACD","FACULTY INFORMATION VIEW","SELECT  SIBFACD_PIDM,
        SIBFACD_1ST_APPT_DATE,
        SIBFACD_RANK_CODE,
        (SELECT PTVRANK_DESC FROM PTVRANK  WHERE PTVRANK_CODE = SIBFACD_RANK_CODE),
        SIBFACD_RANK_DATE,
        SIBFACD_DISP_CODE,
        (SELECT PTVDISP_DESC FROM PTVDISP  WHERE PTVDISP_CODE = SIBFACD_DISP_CODE),
        SIBFACD_TENR_CODE,
        (SELECT PTRTENR_DESC FROM PTRTENR  WHERE PTRTENR_CODE = SIBFACD_TENR_CODE),
        SIBFACD_TENURE_DATE,
        SIBFACD_TENURE_REV_DATE,
        SIBFACD_LAST_SABB_DATE,
        SIBFACD_NEXT_SABB_DATE,
        SIBFACD_YRS_EXP,
        SIBFACD_BIRTH_STATE,
        SUBSTR(GB_STVSTAT.F_GET_DESCRIPTION (SIBFACD_BIRTH_STATE),1,30),
        DECODE (SIBFACD_AAUP_MEM_IND,'Y','Yes','N','No', NULL),
        SIBFACD_ACADEMIC_TITLE
FROM    SIBFACD"
"BANINST1","SIVFAC2","","select
 stvterm_code,
 a.sibinst_pidm,
 a.sibinst_advr_ind,
 substr(f_faculty_advising_ind(a.sibinst_pidm,stvterm_code),1,1),
 a.sibinst_schd_ind,
 substr(f_faculty_scheduled_ind(a.sibinst_pidm,stvterm_code),1,1),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'SUF'),1,20),
 TO_DATE(goksels.f_name_bio_value(a.sibinst_pidm,'BDATE'),g$_date.get_nls_date_format),
 TO_NUMBER(goksels.f_name_bio_value(a.sibinst_pidm,'AGE')),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'SEX'),1,1),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'ETHN'),1,2),
 SUBSTR(goksels.f_name_bio_value(a.sibinst_pidm,'DEAD'),1,1),
 TO_DATE(goksels.f_name_bio_value(a.sibinst_pidm,'DDATE'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(a.sibinst_pidm,'FACLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'TC'),1,2),
 TO_DATE(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'TD')),
 TO_DATE(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'TRD')),
 TO_DATE(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'LSD')),
 TO_DATE(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'NSD')),
 TO_NUMBER(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'YE')),
 SUBSTR(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'BS'),1,3),
 SUBSTR(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'AMI'),1,1),
 SUBSTR(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'AT'),1,60),
 SUBSTR(siklibs.f_get_sibfacd_value(a.sibinst_pidm,'PA'),1,1),
 a.sibinst_term_code_eff,
 a.sibinst_fcst_code,
 a.sibinst_fcst_date,
 a.sibinst_fctg_code,
 a.sibinst_fstp_code,
 substr(f_concat_sirdpcl(a.sibinst_pidm, stvterm_code),1,21),
 substr(siklibs.f_sirattr_value('FACLATTR',a.sibinst_pidm, stvterm_code,1),1,4),
 substr(siklibs.f_sirattr_value('FACLATTR',a.sibinst_pidm, stvterm_code,2),1,4),
 substr(siklibs.f_sirattr_value('FACLATTR',a.sibinst_pidm, stvterm_code,3),1,4),
 substr(siklibs.f_sirattr_value('FACLATTR',a.sibinst_pidm, stvterm_code,4),1,4),
 substr(siklibs.f_sirattr_value('FACLATTR',a.sibinst_pidm, stvterm_code,5),1,4),
 substr(f_student_check_for_more
     ('FACLATTR',a.sibinst_pidm, stvterm_code, null, 'FACLATTR'),1,1),
 substr(siklibs.f_sirnist_value('FACLNIST',a.sibinst_pidm, stvterm_code,1),1,19),
 substr(siklibs.f_sirnist_value('FACLNIST',a.sibinst_pidm, stvterm_code,2),1,19),
 substr(siklibs.f_sirnist_value('FACLNIST',a.sibinst_pidm, stvterm_code,3),1,19),
 substr(siklibs.f_sirnist_value('FACLNIST',a.sibinst_pidm, stvterm_code,4),1,19),
 substr(siklibs.f_sirnist_value('FACLNIST',a.sibinst_pidm, stvterm_code,5),1,19),
 substr(siklibs.f_sirnist_value('FACLNIST',a.sibinst_pidm, stvterm_code,6),1,19),
 substr(f_student_check_for_more
     ('FACLNIST', a.sibinst_pidm, stvterm_code, null, 'FACLNIST'),1,1)
from sibinst a, stvterm
where a.sibinst_term_code_eff =siklibs.f_get_sibinst_max_term_code(a.sibinst_pidm,stvterm_code)"
"BANINST1","SIVFAC1","","select
 term_code_key,
 pidm_key,
 eligible_to_advise_ind,
 advising_ind,
 eligible_to_be_scheduled_ind,
 scheduled_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 ethn_code,
 deceased_ind,
 deceased_date,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 state1,
 zip1,
 cnty_code1,
 natn_code1,
 atyp_code1,
 phone_area_code1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 state2,
 zip2,
 cnty_code2,
 natn_code2,
 atyp_code2,
 phone_area_code2,
 phone_number2,
 tele_code2,
 tenr_code,
 tenure_date,
 tenure_review_date,
 last_sabbatical_date,
 next_sabbatical_date,
 years_experience,
 birth_state,
 aaup_member_ind,
 academic_title,
 primary_activity,
 term_code_effective,
 fcst_code,
 faculty_member_status_date,
 fctg_code,
 fstp_code,
 substr(decode(dpcl_data,null,null,
     f_split_fields(dpcl_data,1)),1,6),
 substr(decode(dpcl_data,null,null,
     f_split_fields(dpcl_data,2)),1,2),
 substr(decode(dpcl_data,null,null,
     f_split_fields(dpcl_data,3)),1,4),
 substr(decode(dpcl_data,null,null,
     f_split_fields(dpcl_data,4)),1,1),
 to_number(decode(dpcl_data,null,null,
     f_split_fields(dpcl_data,5)),'999'),
 fatt_code1,
 fatt_code2,
 fatt_code3,
 fatt_code4,
 fatt_code5,
 additional_attributes_ind,
 to_number(decode(nist_data1,null,null,
     f_split_fields(nist_data1,1)),'999D99'),
 substr(decode(nist_data1,null,null,
     f_split_fields(nist_data1,2)),1,4),
 substr(decode(nist_data1,null,null,
     f_split_fields(nist_data1,3)),1,2),
 substr(decode(nist_data1,null,null,
     f_split_fields(nist_data1,4)),1,4),
 to_number(decode(nist_data2,null,null,
     f_split_fields(nist_data2,1)),'999D99'),
 substr(decode(nist_data2,null,null,
     f_split_fields(nist_data2,2)),1,4),
 substr(decode(nist_data2,null,null,
     f_split_fields(nist_data2,3)),1,2),
 substr(decode(nist_data2,null,null,
     f_split_fields(nist_data2,4)),1,4),
 to_number(decode(nist_data3,null,null,
     f_split_fields(nist_data3,1)),'999D99'),
 substr(decode(nist_data3,null,null,
     f_split_fields(nist_data3,2)),1,4),
 substr(decode(nist_data3,null,null,
     f_split_fields(nist_data3,3)),1,2),
 substr(decode(nist_data3,null,null,
     f_split_fields(nist_data3,4)),1,4),
 to_number(decode(nist_data4,null,null,
     f_split_fields(nist_data4,1)),'999D99'),
 substr(decode(nist_data4,null,null,
     f_split_fields(nist_data4,2)),1,4),
 substr(decode(nist_data4,null,null,
     f_split_fields(nist_data4,3)),1,2),
 substr(decode(nist_data4,null,null,
     f_split_fields(nist_data4,4)),1,4),
 to_number(decode(nist_data5,null,null,
     f_split_fields(nist_data5,1)),'999D99'),
 substr(decode(nist_data5,null,null,
     f_split_fields(nist_data5,2)),1,4),
 substr(decode(nist_data5,null,null,
     f_split_fields(nist_data5,3)),1,2),
 substr(decode(nist_data5,null,null,
     f_split_fields(nist_data5,4)),1,4),
 to_number(decode(nist_data6,null,null,
     f_split_fields(nist_data6,1)),'999D99'),
 substr(decode(nist_data6,null,null,
     f_split_fields(nist_data6,2)),1,4),
 substr(decode(nist_data6,null,null,
     f_split_fields(nist_data6,3)),1,2),
 substr(decode(nist_data6,null,null,
     f_split_fields(nist_data6,4)),1,4),
 additional_nist_ind
from sivfac2
 "
"BANINST1","SIVCONT","Faculty Contract Analysis View","(SELECT SIRASGN_PIDM, SSBSECT_TERM_CODE, SSBSECT_CRN,
        SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
        SSBSECT_SEQ_NUMB, SSRMEET_CATAGORY, SUM(SSRMEET_CREDIT_HR_SESS),
       TRUNC(((SUM(SSRMEET_CREDIT_HR_SESS) * SSBSECT_ENRL) *
           SIRASGN_PERCENT_RESPONSE)/100,3),
       TRUNC((SUM(SSRMEET_CREDIT_HR_SESS) *
           SIRASGN_PERCENT_RESPONSE)/100,3),
       TRUNC((SUM(SSRMEET_HRS_WEEK) * SIRASGN_PERCENT_RESPONSE *
                                      SIRASGN_PERCENT_SESS)/10000,2),
  TRUNC((SUM((SSRMEET_HRS_WEEK/
        DECODE((TO_NUMBER(DECODE(SSRMEET_MON_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_TUE_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_WED_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_THU_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_FRI_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SAT_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SUN_DAY,NULL,0,1))),0,1,
        (TO_NUMBER(DECODE(SSRMEET_MON_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_TUE_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_WED_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_THU_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_FRI_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SAT_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SUN_DAY,NULL,0,1)))))
     * SSRMEET_MEET_NO) * SIRASGN_PERCENT_RESPONSE * SIRASGN_PERCENT_SESS)
        /10000,2),
       (TRUNC((NVL(SIRASGN_WORKLOAD_ADJUST,
            NVL(SUM(DECODE(SIGN(NVL(SCRSCHD_MAX_ENRL,999) - SSBSECT_ENRL),
              0,NVL(SCRSCHD_WORKLOAD,0),-1,
	      NVL(SCRSCHD_ADJ_WORKLOAD,NVL(SCRSCHD_WORKLOAD,0)),
              1,NVL(SCRSCHD_WORKLOAD,0))),NVL(SUM(SCRSCHD_WORKLOAD),0))) *
                SIRASGN_PERCENT_RESPONSE)/100,3))/SIKLIBS.F_GET_MIN_SIBCFTE_FTE_FACTOR (SIRASGN_PIDM,SSBSECT_TERM_CODE),
        NVL(SUM(DECODE(SIGN(NVL(SCRSCHD_MAX_ENRL,999) - SSBSECT_ENRL),
              0,NVL(SCRSCHD_WORKLOAD,0),-1,
	      NVL(SCRSCHD_ADJ_WORKLOAD,NVL(SCRSCHD_WORKLOAD,0)),
              1,NVL(SCRSCHD_WORKLOAD,0))),NVL(SUM(SCRSCHD_WORKLOAD),0)),
        SIRASGN_WORKLOAD_ADJUST,
       (TRUNC((NVL(SIRASGN_WORKLOAD_ADJUST,
              NVL(SUM(DECODE(SIGN(NVL(SCRSCHD_MAX_ENRL,999) - SSBSECT_ENRL),
                  0,NVL(SCRSCHD_WORKLOAD,0),-1,
		  NVL(SCRSCHD_ADJ_WORKLOAD,NVL(SCRSCHD_WORKLOAD,0)),
                  1,NVL(SCRSCHD_WORKLOAD,0))),NVL(SUM(SCRSCHD_WORKLOAD),0))) *
                    SIRASGN_PERCENT_RESPONSE)/100,3)),
       SIRASGN_PERCENT_SESS, SIRASGN_PERCENT_RESPONSE
FROM SCRSCHD, SSRMEET,
     SSBSECT,
     SIRASGN, SIRFCNT, SIRCOLR
WHERE SCRSCHD_SUBJ_CODE = SSBSECT_SUBJ_CODE
AND   SCRSCHD_CRSE_NUMB = SSBSECT_CRSE_NUMB
AND   SCRSCHD_EFF_TERM =
    (SELECT MAX(SCRSCHD_EFF_TERM) FROM SCRSCHD
     WHERE SCRSCHD_SUBJ_CODE = SSBSECT_SUBJ_CODE
     AND   SCRSCHD_CRSE_NUMB = SSBSECT_CRSE_NUMB
     AND   SCRSCHD_EFF_TERM <= SSBSECT_TERM_CODE
     AND   SCRSCHD_SCHD_CODE = SSRMEET_SCHD_CODE)
AND SCRSCHD_SCHD_CODE = SSRMEET_SCHD_CODE
AND   SSRMEET_TERM_CODE = SSBSECT_TERM_CODE
AND   SSRMEET_CRN = SSBSECT_CRN
AND   SSRMEET_CATAGORY = SIRASGN_CATEGORY
AND   SSBSECT_CRN = SIRASGN_CRN
AND   SSBSECT_TERM_CODE = SIRASGN_TERM_CODE
AND   SIRASGN_TERM_CODE = SIRFCNT_TERM_CODE
AND   SIRASGN_PIDM = SIRCOLR_PIDM
AND   SIRASGN_FCNT_CODE = SIRCOLR_FCNT_CODE
AND   SIRFCNT_FCNT_CODE = SIRCOLR_FCNT_CODE
AND   SIRFCNT_TERM_CODE_EFF =
     (SELECT MAX(SIRFCNT_TERM_CODE_EFF) FROM SIRFCNT
      WHERE SIRFCNT_FCNT_CODE = SIRCOLR_FCNT_CODE
      AND   SIRFCNT_TERM_CODE_EFF <= SIRCOLR_TERM_CODE)
AND   SIRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
GROUP BY SIRFCNT_TERM_CODE, SIRASGN_PIDM, SSBSECT_TERM_CODE, SSBSECT_CRN,
         SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
         SSBSECT_SEQ_NUMB, SSRMEET_CATAGORY,
         SSBSECT_ENRL, SIRASGN_WORKLOAD_ADJUST,
         SIRASGN_PERCENT_RESPONSE, SIRASGN_PERCENT_SESS,
         SIRASGN_PERCENT_SESS, SIRASGN_PERCENT_RESPONSE)"
"BANINST1","SIVCALC","","(SELECT SIRASGN_PIDM, SSBSECT_TERM_CODE, SSBSECT_CRN,
        SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
        SSBSECT_SEQ_NUMB, SSRMEET_CATAGORY, SUM(SSRMEET_CREDIT_HR_SESS),
       TRUNC(((SUM(SSRMEET_CREDIT_HR_SESS) * SSBSECT_ENRL) *
           SIRASGN_PERCENT_RESPONSE)/100,3),
       TRUNC((SUM(SSRMEET_CREDIT_HR_SESS) *
           SIRASGN_PERCENT_RESPONSE)/100,3),
       TRUNC((SUM(SSRMEET_HRS_WEEK) * SIRASGN_PERCENT_RESPONSE *
                                      SIRASGN_PERCENT_SESS)/10000,2),
  TRUNC((SUM((SSRMEET_HRS_WEEK/
        DECODE((TO_NUMBER(DECODE(SSRMEET_MON_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_TUE_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_WED_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_THU_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_FRI_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SAT_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SUN_DAY,NULL,0,1))),0,1,
        (TO_NUMBER(DECODE(SSRMEET_MON_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_TUE_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_WED_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_THU_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_FRI_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SAT_DAY,NULL,0,1)) +
        TO_NUMBER(DECODE(SSRMEET_SUN_DAY,NULL,0,1)))))
     * SSRMEET_MEET_NO) * SIRASGN_PERCENT_RESPONSE * SIRASGN_PERCENT_SESS)
        /10000,2),
       TRUNC((TRUNC((NVL(SIRASGN_WORKLOAD_ADJUST,
            NVL(SUM(DECODE(SIGN(NVL(SCRSCHD_MAX_ENRL,999) - SSBSECT_ENRL),
              0,NVL(SCRSCHD_WORKLOAD,0),-1,
	      NVL(SCRSCHD_ADJ_WORKLOAD,NVL(SCRSCHD_WORKLOAD,0)),
              1,NVL(SCRSCHD_WORKLOAD,0))),NVL(SUM(SCRSCHD_WORKLOAD),0))) *
              SIRASGN_PERCENT_RESPONSE)/100,3))/SIKLIBS.F_GET_MIN_SIBTERM_FTE(SSBSECT_TERM_CODE),3),
        NVL(SUM(DECODE(SIGN(NVL(SCRSCHD_MAX_ENRL,999) - SSBSECT_ENRL),
              0,NVL(SCRSCHD_WORKLOAD,0),-1,
	      NVL(SCRSCHD_ADJ_WORKLOAD,NVL(SCRSCHD_WORKLOAD,0)),
              1,NVL(SCRSCHD_WORKLOAD,0))),NVL(SUM(SCRSCHD_WORKLOAD),0)),
        SIRASGN_WORKLOAD_ADJUST,
       (TRUNC((NVL(SIRASGN_WORKLOAD_ADJUST,
              NVL(SUM(DECODE(SIGN(NVL(SCRSCHD_MAX_ENRL,999) - SSBSECT_ENRL),
                  0,NVL(SCRSCHD_WORKLOAD,0),-1,
		  NVL(SCRSCHD_ADJ_WORKLOAD,NVL(SCRSCHD_WORKLOAD,0)),
                  1,NVL(SCRSCHD_WORKLOAD,0))),NVL(SUM(SCRSCHD_WORKLOAD),0))) *
                    SIRASGN_PERCENT_RESPONSE)/100,3)),
       SIRASGN_PERCENT_SESS, SIRASGN_PERCENT_RESPONSE
FROM SCRSCHD, SSRMEET,
     SSBSECT, SIRASGN, SIRCOLR
WHERE SCRSCHD_SUBJ_CODE = SSBSECT_SUBJ_CODE
AND   SCRSCHD_CRSE_NUMB = SSBSECT_CRSE_NUMB
AND   SCRSCHD_EFF_TERM =
    (SELECT MAX(SCRSCHD_EFF_TERM) FROM SCRSCHD
     WHERE SCRSCHD_SUBJ_CODE = SSBSECT_SUBJ_CODE
     AND   SCRSCHD_CRSE_NUMB = SSBSECT_CRSE_NUMB
     AND   SCRSCHD_EFF_TERM <= SSBSECT_TERM_CODE
     AND   SCRSCHD_SCHD_CODE = SSRMEET_SCHD_CODE)
AND SCRSCHD_SCHD_CODE = SSRMEET_SCHD_CODE
AND   SSRMEET_TERM_CODE = SSBSECT_TERM_CODE
AND   SSRMEET_CRN = SSBSECT_CRN
AND   SSRMEET_CATAGORY = SIRASGN_CATEGORY
AND   SSBSECT_CRN = SIRASGN_CRN
AND   SSBSECT_TERM_CODE = SIRASGN_TERM_CODE
AND   SIRASGN_PIDM = SIRCOLR_PIDM
AND   SIRASGN_TERM_CODE = SIRCOLR_TERM_CODE
AND   SIRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
GROUP BY SIRASGN_PIDM, SSBSECT_TERM_CODE, SSBSECT_CRN,
         SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
         SSBSECT_SEQ_NUMB, SSRMEET_CATAGORY,
         SSBSECT_ENRL, SIRASGN_WORKLOAD_ADJUST,
         SIRASGN_PERCENT_RESPONSE, SIRASGN_PERCENT_SESS,
         SIRASGN_PERCENT_SESS, SIRASGN_PERCENT_RESPONSE)"
"BANINST1","SIVASGN","Assignment Meeting Time View","SELECT SIRASGN_PIDM, SIRASGN_TERM_CODE, SIRASGN_CRN,
          SSRMEET_START_DATE, SSRMEET_END_DATE, SSRMEET_BEGIN_TIME,
          SSRMEET_END_TIME, SSRMEET_CATAGORY, SSRMEET_MON_DAY,
          SSRMEET_TUE_DAY, SSRMEET_WED_DAY, SSRMEET_THU_DAY,
          SSRMEET_FRI_DAY, SSRMEET_SAT_DAY, SSRMEET_SUN_DAY,
          SSRMEET_BLDG_CODE, SSRMEET_ROOM_CODE, ROWIDTOCHAR(SSRMEET.ROWID),
          SIRASGN_OVER_RIDE, SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
          SSBSECT_SEQ_NUMB, substr(SSKSELS.F_GET_SSRXLST_GROUP(SIRASGN_TERM_CODE,SIRASGN_CRN),1,2),
          SSRMEET_SCHD_CODE,
          SSRMEET_CREDIT_HR_SESS, SSBSECT_ENRL, SSBSECT_MAX_ENRL,
          SSBSECT_PTRM_CODE, SSRMEET_MTYP_CODE
 FROM  SSRMEET, SSBSECT, SIRASGN
 WHERE SSRMEET_TERM_CODE = SIRASGN_TERM_CODE
 AND   SSRMEET_CRN  = SIRASGN_CRN
 AND   SSRMEET_CATAGORY = SIRASGN_CATEGORY
 AND   SSBSECT_TERM_CODE = SIRASGN_TERM_CODE
 AND   SSBSECT_CRN = SIRASGN_CRN
UNION
   SELECT SIRASGN_PIDM, SIRASGN_TERM_CODE, SIRASGN_CRN,
          NULL,NULL,NULL,NULL,SIRASGN_CATEGORY,NULL,NULL,NULL,NULL,
          NULL,NULL,NULL,NULL,NULL,NULL,
          SIRASGN_OVER_RIDE, SSBSECT_SUBJ_CODE, SSBSECT_CRSE_NUMB,
          SSBSECT_SEQ_NUMB,substr(SSKSELS.F_GET_SSRXLST_GROUP(SIRASGN_TERM_CODE,SIRASGN_CRN),1,2), NULL,
          NULL, SSBSECT_ENRL, SSBSECT_MAX_ENRL,
          SSBSECT_PTRM_CODE, NULL
 FROM  SSBSECT, SIRASGN
 WHERE SSBSECT_TERM_CODE = SIRASGN_TERM_CODE
 AND   SSBSECT_CRN = SIRASGN_CRN
 AND NOT exists
      (select 'X' from SSRMEET a
       WHERE a.SSRMEET_TERM_CODE = SIRASGN.SIRASGN_TERM_CODE
       AND a.SSRMEET_CRN = SIRASGN.SIRASGN_CRN
       AND a.SSRMEET_CATAGORY = SIRASGN.SIRASGN_CATEGORY)
"
"BANINST1","SHVYEAR","This view returns information from Academic History for students on an academic year basis for Enrollment Management.","select
  shvyea1_acyr_code,
  substr(f_get_desc_fnc('STVACYR',shvyea1_acyr_code,30),1,30),
  shvyea1_pidm,
  shvyea1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',shvyea1_levl_code,30),1,30),
  shvyea1_term_code_latest,
  substr(f_get_desc_fnc('STVTERM',shvyea1_term_code_latest,30),1,30),
  shvyea1_id,
  shvyea1_name,
  shvyea1_ssn,
  shvyea1_birth_date,
  shvyea1_citz_code,
  substr(decode(shvyea1_citz_code,null,null,
    f_get_desc_fnc('STVCITZ',shvyea1_citz_code,30)),1,30),
  shvyea1_ethn_code,
  substr(decode(shvyea1_ethn_code,null,null,
    f_get_desc_fnc('STVETHN',shvyea1_ethn_code,30)),1,30),
  shvyea1_sex,
  shvyea1_chrt_code,
  substr(decode(shvyea1_chrt_code,null,null,
    f_get_desc_fnc('STVCHRT',shvyea1_chrt_code,30)),1,30),
  shvyea1_degc_code,
  substr(f_get_desc_fnc('STVDEGC',shvyea1_degc_code,30),1,30),
  shvyea1_majr_code_1,
  substr(f_get_desc_fnc('STVMAJR',shvyea1_majr_code_1,30),1,30),
  shvyea1_ests_code,
  substr(decode(shvyea1_ests_code,null,null,
    f_get_desc_fnc('STVESTS',shvyea1_ests_code,30)),1,30),
  shvyea1_hours_earned,
  shvyea1_hours_earned_transfer,
  shvyea1_hours_earned_cum,
  shvyea1_cost_of_ed_amt,
  shvyea1_family_income,
  shvyea1_family_contrib,
  shvyea1_parent_contrib,
  shvyea1_tuition_amt,
  shvyea1_housing_amt,
  shvyea1_dining_amt,
  shvyea1_fees_amt_req,
  shvyea1_fees_amt_opt,
  shvyea1_other_charges,
  shvyea1_aidy_code,
  substr(f_finaid_get_desc('ROBINST',shvyea1_aidy_code,30),1,30),
  shvyea1_inst_grant_amt,
  shvyea1_state_grant_amt,
  shvyea1_seog_amt,
  shvyea1_pell_amt,
  shvyea1_other_grant_amt,
  shvyea1_inst_loan_amt,
  shvyea1_perk_loan_amt,
  shvyea1_staf_loan_amt,
  shvyea1_other_loan_amt,
  shvyea1_fws_amt,
  shvyea1_gws_amt,
  shvyea1_cost_of_ed_amt_chg,
  shvyea1_family_income_chg,
  shvyea1_family_contrib_chg,
  shvyea1_parent_contrib_chg,
  shvyea1_tuition_amt_chg,
  shvyea1_housing_amt_chg,
  shvyea1_dining_amt_chg,
  shvyea1_fees_amt_req_chg,
  shvyea1_fees_amt_opt_chg,
  shvyea1_other_charges_chg,
  shvyea1_inst_grant_amt_chg,
  shvyea1_state_grant_amt_chg,
  shvyea1_seog_amt_chg,
  shvyea1_pell_amt_chg,
  shvyea1_other_grant_amt_chg,
  shvyea1_inst_loan_amt_chg,
  shvyea1_perk_loan_amt_chg,
  shvyea1_staf_loan_amt_chg,
  shvyea1_other_loan_amt_chg,
  shvyea1_fws_amt_chg,
  shvyea1_gws_amt_chg,
  shvyea1_activity_date
  from shvyea1
 "
"BANINST1","SHVYEA1","This is the intermediate level view used to retrieve year information on students based on the academic year for Enrollment Management.","select
  sovacyr_acyr_code,
  a.shrttrm_pidm,
  x.sgbstdn_levl_code,
  a.shrttrm_term_code,
  spriden_id,
  substr(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  substr(goksels.f_name_bio_value(shrttrm_pidm, 'SSN'),1,9),
  to_date(goksels.f_name_bio_value(shrttrm_pidm, 'BDATE'), G$_DATE.GET_NLS_DATE_FORMAT),
  substr(goksels.f_name_bio_value(shrttrm_pidm, 'CITZ'),1,2),
  substr(goksels.f_name_bio_value(shrttrm_pidm, 'ETHN'),1,2),
  substr(goksels.f_name_bio_value(shrttrm_pidm, 'SEX'),1,1),
  (select sgrchrt_chrt_code from sgrchrt
     where sgrchrt_pidm = a.shrttrm_pidm
       and sgrchrt_term_code_eff =
           (select max(xx.sgrchrt_term_code_eff)
             from sgrchrt xx
            where xx.sgrchrt_pidm = a.shrttrm_pidm
              and xx.sgrchrt_term_code_eff <= a.shrttrm_term_code
                                 and xx.sgrchrt_active_ind is NULL)
       and sgrchrt_active_ind is NULL),
  x.sgbstdn_degc_code_1,
  x.sgbstdn_majr_code_1,
  to_char('',''),
  f_tgpa_hrs_range_fnc
    (a.shrttrm_pidm, x.sgbstdn_levl_code, stvterm_acyr_code, 'I',null),
  f_tgpa_hrs_range_fnc
    (a.shrttrm_pidm, x.sgbstdn_levl_code, stvterm_acyr_code, 'T',null),
  f_tgpa_hrs_range_fnc
    (a.shrttrm_pidm, x.sgbstdn_levl_code, stvterm_acyr_code, 'I','Y'),
  f_sem_csed_fnc
    (a.shrttrm_pidm, stvterm_fa_proc_yr,'C',null),
  f_family_income_fnc
    (a.shrttrm_pidm, stvterm_fa_proc_yr,'C',null),
  f_family_contrib_fnc
    (a.shrttrm_pidm, stvterm_fa_proc_yr,'C',null),
  f_parent_contrib_fnc
    (a.shrttrm_pidm, stvterm_fa_proc_yr,'C',null),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, 'TUI', stvterm_acyr_code, 'C', 'CAT'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, 'HOU', stvterm_acyr_code, 'C', 'CAT'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, 'MEA', stvterm_acyr_code, 'C', 'CAT'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, null, stvterm_acyr_code, 'C', 'REQ'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, null, stvterm_acyr_code, 'C', 'OPT'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, null, stvterm_acyr_code, 'C', 'OTH'),
  stvterm_fa_proc_yr,
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'I','G',null,'C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'S','G',null,'C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','G','SEOG','C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','G','PELL','C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'O','G',null,'C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'I','L',null,'C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','L','PERK','C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','L','STFD','C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'O','L',null,'C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','W',null,'C',null),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'I','W',null,'C',null),
  f_sem_csed_fnc
    (a.shrttrm_pidm, stvterm_fa_proc_yr,'P','Y'),
  f_family_income_fnc
    (a.shrttrm_pidm, stvterm_fa_proc_yr,'P','Y'),
  f_family_contrib_fnc
    (a.shrttrm_pidm, stvterm_fa_proc_yr,'P','Y'),
  f_parent_contrib_fnc
    (a.shrttrm_pidm, stvterm_fa_proc_yr,'P','Y'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, 'TUI', stvterm_acyr_code, 'P', 'CAT'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, 'HOU', stvterm_acyr_code, 'P', 'CAT'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, 'MEA', stvterm_acyr_code, 'P', 'CAT'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, null, stvterm_acyr_code, 'P', 'REQ'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, null, stvterm_acyr_code, 'P', 'OPT'),
  f_calc_and_call_fnc
    (a.shrttrm_pidm, null, stvterm_acyr_code, 'P', 'OTH'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'I','G',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'S','G',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','G','SEOG','P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','G','PELL','P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'O','G',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'I','L',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','L','PERK','P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','L','STFD','P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'O','L',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'F','W',null,'P','Y'),
  f_fa_amt_year_fnc
    (a.shrttrm_pidm,stvterm_fa_proc_yr,'I','W',null,'P','Y'),
  sysdate
from spriden, sgbstdn x,
     stvterm, shrttrm a,
     sovacyr
where a.shrttrm_term_code between sovacyr_term_code_start and
                                  sovacyr_term_code_end
  and a.shrttrm_term_code =
          (select max(b.shrttrm_term_code)
             from shrttrm b
            where b.shrttrm_pidm = a.shrttrm_pidm
              and b.shrttrm_term_code between sovacyr_term_code_start and
                                              sovacyr_term_code_end)
  and spriden_change_ind is null
  and spriden_pidm = a.shrttrm_pidm
  and stvterm_code = a.shrttrm_term_code
  and x.sgbstdn_pidm = a.shrttrm_pidm
  and x.sgbstdn_term_code_eff =
      (select max(y.sgbstdn_term_code_eff)
         from sgbstdn y
        where y.sgbstdn_pidm = a.shrttrm_pidm
          and y.sgbstdn_term_code_eff <= a.shrttrm_term_code)
 "
"BANINST1","SHVYEA0","This view was designed to allow for access of Academic History data the Enrollment Management Product on an acyr basis.","select
 stvacyr_code,
 shrttrm_pidm,
 max(shrttrm_term_code)
from shrttrm, stvterm,stvacyr
where shrttrm_term_code = stvterm_code
  and stvterm_acyr_code = stvacyr_code
group by stvacyr_code,shrttrm_pidm
 "
"BANINST1","SHVTRE1","Transcript Request Data View","SELECT SHTTRAN.SHTTRAN_PIDM,
SHTTRAN.SHTTRAN_ID,
SPRIDEN.SPRIDEN_LAST_NAME,
SPRIDEN.SPRIDEN_FIRST_NAME,
SPRIDEN.SPRIDEN_MI,
SPRIDEN.SPRIDEN_SURNAME_PREFIX,
SHTTRAN.SHTTRAN_USER,
SHTTRAN.SHTTRAN_SEQ_NO,
SHTTRAN.SHTTRAN_TYPE,
SHTTRAN.SHTTRAN_TERM,
SHTTRAN.SHTTRAN_LEVL_CODE,
SHTTRAN.SHTTRAN_COLL_CODE,
SHTTRAN.SHTTRAN_ADDR_NAME,
SHTTRAN.SHTTRAN_HOUSE_NUMBER,
SHTTRAN.SHTTRAN_STREET1,
SHTTRAN.SHTTRAN_STREET2,
SHTTRAN.SHTTRAN_STREET3,
SHTTRAN.SHTTRAN_STREET_LINE4,
SHTTRAN.SHTTRAN_CITY,
SHTTRAN.SHTTRAN_STAT_CODE,
SHTTRAN.SHTTRAN_ZIP,
SHTTRAN.SHTTRAN_NATN_CODE,
SHTTRAN.SHTTRAN_DETC_DETAIL_CODE,
SHTTRAN.SHTTRAN_DETC_AMOUNT,
SHTTRAN.SHTTRAN_DETC_DESC,
SHTTRAN.SHTTRAN_REQUEST_DATE,
SHTTRAN.SHTTRAN_PRINT_DATE,
SHTTRAN.SHTTRAN_ACTIVITY_DATE,
SHTTRAN.SHTTRAN_ERROR_IND,
SHTTRAN.SHTTRAN_PRINTER,
SHTTRAN.SHTTRAN_SESSIONID,
SHTTRAN.SHTTRAN_TPRT_CODE,
SHTTRAN.SHTTRAN_NO_COPIES,
SHTTRAN.SHTTRAN_OFFICIAL_IND,
SHTTRAN.SHTTRAN_TERM_CODE_DETC,
SHTTRAN.SHTTRAN_TERM_CODE_IN_PRG,
SHTTRAN.SHTTRAN_EDI_SENT_DATE,
SHTTRAN.SHTTRAN_EDI_STATUS_DATE,
SHTTRAN.SHTTRAN_EDIS_CODE,
SHTTRAN.SHTTRAN_EDI_REQUEST_NUM,
SHTTRAN.SHTTRAN_SBGI_CODE,
SHTTRAN.SHTTRAN_WPYO_CODE,
SHTTRAN.SHTTRAN_SENT_DATE,
SHTTRAN.SHTTRAN_HOLD_GRDE_IND,
SHTTRAN.SHTTRAN_HOLD_DEGR_IND,
SHTTRAN.SHTTRAN_WPYO_RECEIPT_NUMBER,
SHTTRAN.SHTTRAN_PHONE_AREA,
SHTTRAN.SHTTRAN_PHONE_NUMBER,
SHTTRAN.SHTTRAN_PHONE_EXT,
SHTTRAN.SHTTRAN_INTL_ACCESS,
SHTTRAN.SHTTRAN_CTRY_CODE_PHONE,
SUBSTR(SB_STVWPYO.F_GET_DESCRIPTION (SHTTRAN.SHTTRAN_WPYO_CODE),1,30),
SHTTRAN.SHTTRAN_WSSO_CODE,
SUBSTR(SB_STVWSSO.F_GET_DESCRIPTION (SHTTRAN.SHTTRAN_WSSO_CODE),1,30)
FROM   SPRIDEN,
       SHTTRAN
WHERE  SHTTRAN.SHTTRAN_PIDM       =  SPRIDEN.SPRIDEN_PIDM
AND    SPRIDEN.SPRIDEN_CHANGE_IND IS NULL
AND    SPRIDEN.SPRIDEN_ENTITY_IND =  'P'"
"BANINST1","SHVTRAN","Transcript Request Status View","SELECT
SHTTRAN_PIDM,
SHTTRAN_ID,
SPRIDEN_LAST_NAME,
SPRIDEN_FIRST_NAME,
SPRIDEN_MI,
SHTTRAN_USER,
SHTTRAN_SEQ_NO,
SHTTRAN_TYPE,
SHTTRAN_TERM,
SHTTRAN_REQUEST_DATE,
SHTTRAN_PRINT_DATE,
SHTTRAN_ERROR_IND
FROM   SPRIDEN,
       SHTTRAN
WHERE  SHTTRAN_PIDM = SPRIDEN_PIDM
AND    SPRIDEN_CHANGE_IND IS NULL
AND    SPRIDEN_ENTITY_IND = 'P'
 "
"BANINST1","SHVTERM","This is a view of the shvter1 view to join in descriptions for the coded fields.","select
  shvter1_term_code,
  substr(f_get_desc_fnc('STVTERM',shvter1_term_code,30),1,30),
  shvter1_pidm,
  shvter1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',shvter1_levl_code,30),1,30),
  shvter1_id,
  shvter1_name,
  shvter1_ssn,
  shvter1_birth_date,
  shvter1_citz_code,
  substr(decode(shvter1_citz_code,null,null,
    f_get_desc_fnc('STVCITZ',shvter1_citz_code,30)),1,30),
  shvter1_ethn_code,
  substr(decode(shvter1_ethn_code,null,null,
    f_get_desc_fnc('STVETHN',shvter1_ethn_code,30)),1,30),
  shvter1_sex,
  shvter1_chrt_code,
  substr(decode(shvter1_chrt_code,null,null,
    f_get_desc_fnc('STVCHRT',shvter1_chrt_code,30)),1,30),
  shvter1_degc_code,
  substr(f_get_desc_fnc('STVDEGC',shvter1_degc_code,30),1,30),
  shvter1_majr_code_1,
  substr(f_get_desc_fnc('STVMAJR',shvter1_majr_code_1,30),1,30),
  shvter1_ests_code,
  substr(f_get_desc_fnc('STVESTS',shvter1_ests_code,30),1,30),
  shvter1_hours_attempted,
  shvter1_hours_earned,
  shvter1_hours_earned_transfer,
  shvter1_hours_earned_cum,
  shvter1_tuition_amt,
  shvter1_housing_amt,
  shvter1_dining_amt,
  shvter1_fees_amt_req,
  shvter1_fees_amt_opt,
  shvter1_other_charges,
  shvter1_aidy_code,
  substr(f_finaid_get_desc('ROBINST',shvter1_aidy_code,30),1,30),
  shvter1_inst_grant_amt,
  shvter1_state_grant_amt,
  shvter1_seog_amt,
  shvter1_pell_amt,
  shvter1_other_grant_amt,
  shvter1_inst_loan_amt,
  shvter1_perk_loan_amt,
  shvter1_staf_loan_amt,
  shvter1_other_loan_amt,
  shvter1_fws_amt,
  shvter1_gws_amt,
  shvter1_activity_date
from shvter1
 "
"BANINST1","SHVTER1","This is a view to retrieve Academic History data on a term by term basis for the Enrollment Management Product.","select
  shrttrm_term_code,
  shrttrm_pidm,
  x.sgbstdn_levl_code,
  spriden_id,
  substr(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  spbpers_ssn,
  spbpers_birth_date,
  spbpers_citz_code,
  spbpers_ethn_code,
  spbpers_sex,
  sgrchrt_chrt_code,
  x.sgbstdn_degc_code_1,
  x.sgbstdn_majr_code_1,
  to_char('',''),
  f_tgpa_fnc
    (shrttrm_pidm, shrttrm_term_code, x.sgbstdn_levl_code, 'I','HATT'),
  f_tgpa_fnc
    (shrttrm_pidm, shrttrm_term_code, x.sgbstdn_levl_code, 'I','HERN'),
  f_tgpa_fnc
    (shrttrm_pidm, shrttrm_term_code, x.sgbstdn_levl_code, 'T','HERN'),
  f_cum_tgpa_fnc
    (shrttrm_pidm, shrttrm_term_code, x.sgbstdn_levl_code, null, 'I','HERN'),
  f_cat_term_fnc
    (shrttrm_pidm, 'TUI', shrttrm_term_code),
  f_cat_term_fnc
    (shrttrm_pidm, 'HOU', shrttrm_term_code),
  f_cat_term_fnc
    (shrttrm_pidm, 'MEA', shrttrm_term_code),
  f_req_term_fnc
    (shrttrm_pidm, shrttrm_term_code),
  f_opt_term_fnc
    (shrttrm_pidm, shrttrm_term_code),
  f_other_term_fnc
    (shrttrm_pidm, shrttrm_term_code),
  stvterm_fa_proc_yr,
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'I','G',null,shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'S','G',null,shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'F','G','SEOG',shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'F','G','PELL',shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'O','G',null,shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'I','L',null,shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'F','L','PERK',shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'F','L','STFD',shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'O','L',null,shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'F','W',null,shrttrm_term_code),
  f_fa_amt_term_fnc
    (shrttrm_pidm,stvterm_fa_proc_yr,'I','W',null,shrttrm_term_code),
  sysdate
from spriden, spbpers, sgbstdn x,
     stvterm, sgrchrt, shrttrm
where spriden_change_ind is null
  and spriden_pidm = shrttrm_pidm
  and stvterm_code = shrttrm_term_code
  and x.sgbstdn_pidm = shrttrm_pidm
  and x.sgbstdn_term_code_eff =
      (select max(y.sgbstdn_term_code_eff)
         from sgbstdn y
        where y.sgbstdn_pidm = shrttrm_pidm
          and y.sgbstdn_term_code_eff <= shrttrm_term_code)
  and spbpers_pidm(+) = shrttrm_pidm
  and sgrchrt.rowid(+) =
    f_sgrchrt_rowid_fnc(shrttrm_pidm, shrttrm_term_code)
 "
"BANINST1","SHVTEOS","eTranscript Transcript Order Status History View.","SELECT TEOS.SHRTEOS_ORDER_ID,
          TEOS.SHRTEOS_ETST_CODE,
          TEOS.SHRTEOS_ETST_DATE,
          TEOS.SHRTEOS_USER_ID,
          TEOS.SHRTEOS_ACTIVITY_DATE,
          TEOS.SHRTEOS_SURROGATE_ID,
          TEOS.SHRTEOS_PIDM,
          TEOS.ROWID,
          IDEN.SPRIDEN_ID ""ID"",
          IDEN.SPRIDEN_FIRST_NAME ""FIRST_NAME"",
          IDEN.SPRIDEN_MI ""MIDDLE_NAME"",
          IDEN.SPRIDEN_LAST_NAME ""LAST_NAME""
     FROM SHRTEOS TEOS, SPRIDEN IDEN
    WHERE     TEOS.SHRTEOS_PIDM = IDEN.SPRIDEN_PIDM
          AND IDEN.SPRIDEN_CHANGE_IND IS NULL
   UNION
   SELECT TEOS1.SHRTEOS_ORDER_ID,
          TEOS1.SHRTEOS_ETST_CODE,
          TEOS1.SHRTEOS_ETST_DATE,
          TEOS1.SHRTEOS_USER_ID,
          TEOS1.SHRTEOS_ACTIVITY_DATE,
          TEOS1.SHRTEOS_SURROGATE_ID,
          TEOS1.SHRTEOS_PIDM,
          TEOS1.ROWID,
          NULL ""ID"",
          TEOT.SHBTEOT_FIRST_NAME ""FIRST_NAME"",
          TEOT.SHBTEOT_MIDDLE_NAME ""MIDDLE_NAME"",
          TEOT.SHBTEOT_LAST_NAME ""LAST_NAME""
     FROM SHRTEOS TEOS1,
          SHBTEOT TEOT
    WHERE TEOS1.SHRTEOS_ORDER_ID = TEOT.SHBTEOT_ORDER_ID
      AND TEOS1.SHRTEOS_PIDM IS NULL
"
"BANINST1","SHVSUM2","","select
 a.shrlgpa_pidm,
 a.shrlgpa_levl_code,
 substr(f_applied_for_degree(a.shrlgpa_pidm),1,1),
 substr(f_graduated_from_institution(a.shrlgpa_pidm),1,1),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'SUF'),1,20),
 TO_DATE(goksels.f_name_bio_value(a.shrlgpa_pidm,'BDATE'),g$_date.get_nls_date_format),
 TO_NUMBER(goksels.f_name_bio_value(a.shrlgpa_pidm,'AGE')),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'SEX'),1,1),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'ETHN'),1,2),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'LGCY'),1,1),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'DEAD'),1,1),
 TO_DATE(goksels.f_name_bio_value(a.shrlgpa_pidm,'DDATE'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'CONF'),1,1),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(a.shrlgpa_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
 TO_NUMBER(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'SEQ')),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'CCODE'),1,6),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'SCODE'),1,2),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'LCODE'),1,2),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'CCODE1'),1,2),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'MCODE1'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'MMCODE1'),1,4),
 TO_DATE(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'ADATE'),G$_DATE.GET_NLS_DATE_FORMAT||' HH24:MI:SS'),
 TO_DATE(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'GDATE'),G$_DATE.GET_NLS_DATE_FORMAT||' HH24:MI:SS'),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'ACB'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'MM12'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'TCS'),1,6),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'MC12'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'CC'),1,3),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'TCG'),1,6),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'AC'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'GC'),1,3),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'A'),1,33),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,1,'TCC'),1,6),
 TO_NUMBER(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'SEQ')),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'CCODE'),1,6),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'SCODE'),1,2),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'LCODE'),1,2),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'CCODE1'),1,2),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'MCODE1'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'MMCODE1'),1,4),
 TO_DATE(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'ADATE'),G$_DATE.GET_NLS_DATE_FORMAT||' HH24:MI:SS'),
 TO_DATE(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'GDATE'),G$_DATE.GET_NLS_DATE_FORMAT||' HH24:MI:SS'),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'ACB'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'MM12'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'TCS'),1,6),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'MC12'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'CC'),1,3),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'TCG'),1,6),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'AC'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'GC'),1,3),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'A'),1,33),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,2,'TCC'),1,6),
 TO_NUMBER(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'SEQ')),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'CCODE'),1,6),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'SCODE'),1,2),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'LCODE'),1,2),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'CCODE1'),1,2),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'MCODE1'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'MMCODE1'),1,4),
 TO_DATE(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'ADATE'),G$_DATE.GET_NLS_DATE_FORMAT||' HH24:MI:SS'),
 TO_DATE(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'GDATE'),G$_DATE.GET_NLS_DATE_FORMAT||' HH24:MI:SS'),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'ACB'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'MM12'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'TCS'),1,6),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'MC12'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'CC'),1,3),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'TCG'),1,6),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'AC'),1,4),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'GC'),1,3),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'A'),1,33),
 SUBSTR(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,3,'TCC'),1,6),
 NVL(shksels.f_shrdgmr_value(a.shrlgpa_pidm,a.shrlgpa_levl_code,4,'CHECK'),'N'),
 f_return_by_gpar_value(a.shrlgpa_pidm, '', a.shrlgpa_levl_code, '', 'GPA',
                                         a.shrlgpa_gpa),
 a.shrlgpa_hours_attempted,
 a.shrlgpa_hours_earned,
 a.shrlgpa_hours_passed,
 a.shrlgpa_gpa_hours,
 f_return_by_gpar_value(a.shrlgpa_pidm, '', a.shrlgpa_levl_code, '', 'QP',
                                         a.shrlgpa_quality_points),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','I','V','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','I','HA','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','I','HE','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','I','HP','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','I','H','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'QP','I','V','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','T','V','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','T','HA','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','T','HE','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','T','HP','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'GPA','T','H','','')),
 TO_NUMBER(shksels.f_shrlgpa_value(a.shrlgpa_pidm, a.shrlgpa_levl_code, 'QP','T','V','','')),
 substr(f_concat_most_recent_tgpa(a.shrlgpa_pidm,a.shrlgpa_levl_code,'O',''),1,84),
 substr(f_concat_most_recent_tgpa(a.shrlgpa_pidm,a.shrlgpa_levl_code,'I',''),1,84),
 substr(f_concat_most_recent_tgpa(a.shrlgpa_pidm,a.shrlgpa_levl_code,'T',''),1,84),
 substr(shksels.f_shrttrm_value(a.shrlgpa_pidm,'','M','TC'),1,6),
 substr(shksels.f_shrttrm_value(a.shrlgpa_pidm,'','M','CET'),1,2),
 TO_DATE(shksels.f_shrttrm_value(a.shrlgpa_pidm,'','M','DET')),
 substr(shksels.f_shrttrm_value(a.shrlgpa_pidm,'','M','AC'),1,2),
 TO_DATE(shksels.f_shrttrm_value(a.shrlgpa_pidm,'','M','AD')),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'MREC2'),1,5),
 TO_DATE(goksels.f_name_bio_value(a.shrlgpa_pidm,'MREC1'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(a.shrlgpa_pidm,'MREETHN'),1,7),
 soklibs.f_get_race(a.shrlgpa_pidm)
 from
     shrlgpa a
 where a.shrlgpa_gpa_type_ind = 'O'"
"BANINST1","SHVSUM1","","select
 pidm_key,
 levl_code_key,
 applied_for_degree_ind,
 graduated_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 ethn_code,
 lgcy_code,
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 stat_code1,
 cnty_code1,
 zip1,
 natn_code1,
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 stat_code2,
 cnty_code2,
 zip2,
 natn_code2,
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 degree_seq_no1,
 degc_code1,
 degs_code1,
 levl_code_degree1,
 coll_code_degree1,
 majr_code1_degree1,
 majr_code_minor1_degree1,
 degree_application_date1,
 degree_graduation_date1,
 acyr_code_bulletin1,
 majr_code_minor1_2_degree1,
 term_code_sturec1,
 majr_code1_2_degree1,
 camp_code1,
 term_code_graduation1,
 acyr_code1,
 grst_code1,
 grad_authorized_adds_chgs1,
 term_code_completed1,
 degree_seq_no2,
 degc_code2,
 degs_code2,
 levl_code_degree2,
 coll_code_degree2,
 majr_code1_degree2,
 majr_code_minor1_degree2,
 degree_application_date2,
 degree_graduation_date2,
 acyr_code_bulletin2,
 majr_code_minor1_2_degree2,
 term_code_sturec2,
 majr_code1_2_degree2,
 camp_code2,
 term_code_graduation2,
 acyr_code2,
 grst_code2,
 grad_authorized_adds_chgs2,
 term_code_completed2,
 degree_seq_no3,
 degc_code3,
 degs_code3,
 levl_code_degree3,
 coll_code_degree3,
 majr_code1_degree3,
 majr_code_minor1_degree3,
 degree_application_date3,
 degree_graduation_date3,
 acyr_code_bulletin3,
 majr_code_minor1_2_degree3,
 term_code_sturec3,
 majr_code1_2_degree3,
 camp_code3,
 term_code_graduation3,
 acyr_code3,
 grst_code3,
 grad_authorized_adds_chgs3,
 term_code_completed3,
 additional_degrees_ind,
 overall_gpa,
 overall_hours_attempted,
 overall_hours_earned,
 overall_hours_passed,
 overall_gpa_hours,
 overall_quality_points,
 institution_gpa,
 institution_hours_attempted,
 institution_hours_earned,
 institution_hours_passed,
 institution_gpa_hours,
 institution_quality_points,
 transfer_gpa,
 transfer_hours_attempted,
 transfer_hours_earned,
 transfer_hours_passed,
 transfer_gpa_hours,
 transfer_quality_points,
 to_number(substr(f_split_fields(term_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,6),1,23),'99999999999999D999999999'),
 term_code_most_recent,
 astd_code_most_recent,
 astd_date_most_recent,
 deans_list_code_most_recent,
 deans_list_date_most_recent,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 mre_race_data
from shvsum2"
"BANINST1","SHVSEEK","BANNER Reporting view to retrieve persons that are seeking degrees and do not having any existing awarded or pending degrees","select spriden_pidm, spriden_last_name, spriden_first_name, spriden_id,
       trunc(shrdgmr_grad_date), stvdegc_code, stvdegc_desc,
       stvterm_code, stvterm_desc, trunc(shrdgmr_appl_date),
       to_char(shrdgmr_grad_date, 'YYYY'), stvlevl_code, stvlevl_desc
  from spriden, shrdgmr, stvterm, stvdegc,
       stvlevl, stvdegs
 where spriden_change_ind is null
   and spriden_entity_ind = 'P'
   and shrdgmr_degc_code = stvdegc_code
   and shrdgmr_degs_code = stvdegs_code
   and (((stvdegs_award_status_ind <> 'A') and
        (stvdegs_award_status_ind <> 'P'))
    or  (stvdegs_award_status_ind is null))
   and spriden_pidm = shrdgmr_pidm
   and shrdgmr_term_code_grad = stvterm_code
   and shrdgmr_levl_code = stvlevl_code
 "
"BANINST1","SHVPEND","BANNER Reporting view to retrieve persons with pending degrees","select spriden.spriden_pidm, spriden.spriden_last_name, spriden.spriden_first_name, spriden.spriden_id,
       trunc(shrdgmr.shrdgmr_grad_date), stvdegc.stvdegc_code, stvdegc.stvdegc_desc,
       shrdgmr.shrdgmr_term_code_grad, substr(gb_stvterm.f_get_description(shrdgmr.shrdgmr_term_code_grad),1,30), trunc(shrdgmr.shrdgmr_appl_date),
       to_char(shrdgmr.shrdgmr_grad_date, 'YYYY'), stvlevl.stvlevl_code, stvlevl.stvlevl_desc
  from spriden, shrdgmr, stvdegc,
       stvlevl, stvdegs
 where spriden.spriden_change_ind is null
   and spriden.spriden_entity_ind = 'P'
   and shrdgmr.shrdgmr_degc_code = stvdegc.stvdegc_code
   and shrdgmr.shrdgmr_degs_code = stvdegs.stvdegs_code
   and stvdegs.stvdegs_award_status_ind = 'P'
   and spriden.spriden_pidm = shrdgmr.shrdgmr_pidm
   and shrdgmr.shrdgmr_levl_code = stvlevl.stvlevl_code"
"BANINST1","SHVIPED","IPED ethnic code report view","SELECT SFBETRM_PIDM, SFBETRM_TERM_CODE, SGBSTDN_LEVL_CODE,
       SUBSTR(STVMAJR_CIPC_CODE,1,4),
       substr(goksels.f_name_bio_value(SFBETRM_PIDM,'SEX'),1,1) SPBPERS_SEX,
       substr(goksels.f_name_bio_value(SFBETRM_PIDM,'ETHN'),1,2) SPBPERS_ETHN_CODE,
       NVL(SGBSTDN_FULL_PART_IND,'F'),
       SGBSTDN_STYP_CODE, STVDEGC_ACAT_CODE,
       (SELECT SUM(SHRTGPA_HOURS_EARNED)
          FROM SHRTGPA
         WHERE SHRTGPA_PIDM = SFBETRM_PIDM
           AND SHRTGPA_TERM_CODE <= SFBETRM_TERM_CODE
           AND (SHRTGPA_LEVL_CODE =
                 (SELECT SGBSTDN_LEVL_CODE FROM SGBSTDN
                   WHERE SGBSTDN_PIDM = SFBETRM_PIDM
                     AND SGBSTDN_TERM_CODE_EFF =
                         (SELECT MAX(SGBSTDN_TERM_CODE_EFF) FROM SGBSTDN
                           WHERE SGBSTDN_PIDM = SFBETRM_PIDM
                             AND SGBSTDN_TERM_CODE_EFF <= SFBETRM_TERM_CODE
                         )
                 )
                 OR SHRTGPA_LEVL_CODE IS NULL)
       ),
       (SELECT MIN(X.SHRTCKN_TERM_CODE)
          FROM SHRTCKN X
         WHERE X.SHRTCKN_PIDM = SFBETRM_PIDM
           AND ( X.SHRTCKN_TERM_CODE||X.SHRTCKN_SEQ_NO =
                 ( SELECT MIN(SHRTCKN_TERM_CODE||SHRTCKN_SEQ_NO) FROM SHRTCKN
                    WHERE SHRTCKN_PIDM = SFBETRM_PIDM
                 )
                 OR X.SHRTCKN_SEQ_NO IS NULL
               )
       )
FROM STVMAJR, STVDEGC, SGBSTDN, SFBETRM
WHERE STVDEGC_CODE = SGBSTDN_DEGC_CODE_1
AND STVMAJR_CODE = SGBSTDN_MAJR_CODE_1
AND SGBSTDN_PIDM = SFBETRM_PIDM
AND SGBSTDN_TERM_CODE_EFF =
    (SELECT MAX(SGBSTDN_TERM_CODE_EFF) FROM SGBSTDN
     WHERE SGBSTDN_PIDM = SFBETRM_PIDM
     AND   SGBSTDN_TERM_CODE_EFF <= SFBETRM_TERM_CODE)
AND SFBETRM_ESTS_CODE IN
    (SELECT STVESTS_CODE FROM STVESTS
     WHERE STVESTS_CODE = SFBETRM_ESTS_CODE
     AND   STVESTS_EFF_HEADCOUNT = 'Y')
 "
"BANINST1","SHVGCOL","View of pending grade mailer requests","SELECT SHRGCOL_PIDM,
       SHRGCOL_TERM_CODE,
       SHRGCOL_REQUEST_TYPE,
       SHRGCOL_ERROR_IND,
       SHRGCOL_PRINT_STATUS,
       TRUNC(SHRGCOL_ACTIVITY_DATE),
       SPRIDEN_ID,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI
FROM   SHRGCOL,
       SPRIDEN
WHERE  SPRIDEN_PIDM = SHRGCOL_PIDM
AND    SPRIDEN_CHANGE_IND IS NULL
AND    SPRIDEN_ENTITY_IND = 'P'
 "
"BANINST1","SHVEDIS","EDI Incoming Transcript Status View","select
  shbhead_dcmt_seqno,
  shbhead_pidm,
  substr(shriden_last_name,1,35),
  substr(decode(shriden_first_name,
      NULL,shriden_first_initial,shriden_first_name),1,60),
  substr(decode(shriden_middle_name_1,
      NULL,decode(shriden_middle_name_2,
        NULL,shriden_middle_initial_1,shriden_middle_name_2),
                                      shriden_middle_name_1),1,35),
  shbhead_sid_ssnum,
  substr(shrhdr4_inst_code,1,6),
  shbhead_activity_date,
  shredis_dsts_code,
  shredis_comp_ind,
  shredis_priority
from shrhdr4,shriden,shbhead, shredis a
where
     shbhead_dcmt_seqno = shriden_dcmt_seqno
and  shrhdr4_dcmt_seqno = shriden_dcmt_seqno
and  SHRHDR4_ENTY_CODE = 'AS'
and  a.shredis_dcmt_seqno = shriden_dcmt_seqno
and  shbhead_pidm is null
UNION
select
  shbhead_dcmt_seqno,
  spriden_pidm,
  substr(spriden_last_name,1,35),
  substr(spriden_first_name,1,60),
  substr(spriden_mi,1,35),
  spriden_id,
  substr(shrhdr4_inst_code,1,6),
  shbhead_activity_date,
  SHREDIS_DSTS_CODE,
  shredis_comp_ind,
  shredis_priority
from spriden, shrhdr4, shbhead, shredis b
where
     shbhead_pidm = spriden_pidm
and  spriden_change_ind is null
and  shbhead_dcmt_seqno = shrhdr4_dcmt_seqno
and  shrhdr4_enty_code = 'AS'
and  b.shredis_dcmt_seqno = shbhead_dcmt_seqno"
"BANINST1","SHVDTL2","","select
 shrttrm_pidm,
 shrttrm_term_code,
 shrtckn_crn,
 substr(f_applied_for_degree(shrttrm_pidm),1,1),
 substr(f_graduated_from_institution(shrttrm_pidm),1,1),
 substr(f_check_for_transfer_work(shrttrm_pidm),1,1),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'SUF'),1,20),
 TO_DATE(goksels.f_name_bio_value(shrttrm_pidm,'BDATE'),G$_DATE.GET_NLS_DATE_FORMAT ),
 TO_NUMBER(goksels.f_name_bio_value(shrttrm_pidm,'AGE')),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'SEX'),1,1),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'ETHN'),1,2),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'LGCY'),1,1),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'DEAD'),1,1),
 TO_DATE(goksels.f_name_bio_value(shrttrm_pidm,'DDATE'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'CONF'),1,1),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(shrttrm_pidm,'HISTADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
 shrtckn_seq_no,
 substr(shksels.f_shrtckl_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no),1,2),
 shrtckn_coll_code,
 shrtckn_dept_code,
 shrtckn_divs_code,
 shrtckn_subj_code,
 shrtckn_crse_numb,
 shrtckn_seq_numb,
 shrtckn_crse_title,
 TO_NUMBER(shksels.f_shrtckg_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no,1,'CH')),
 SUBSTR(shksels.f_shrtckg_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no,1,'MC'),1,1),
 SUBSTR(shksels.f_shrtckg_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no,1,'GC'),1,6),
 shrtckn_repeat_course_ind,
 SUBSTR(shksels.f_shrattr_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no,1),1,4),
 SUBSTR(shksels.f_shrattr_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no,2),1,4),
 SUBSTR(shksels.f_shrattr_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no,3),1,4),
 SUBSTR(shksels.f_shrattr_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no,4),1,4),
 SUBSTR(shksels.f_shrattr_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no,5),1,4),
 substr(f_student_check_for_more
     ('HISTATTR',shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no,'HISTATTR'),1,1),
 substr(f_concat_as_of_cum_gpa
    (shrttrm_pidm,shrttrm_term_code,shksels.f_shrtckl_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no),'O',''),1,84),
 substr(f_concat_as_of_cum_gpa
     (shrttrm_pidm,shrttrm_term_code,shksels.f_shrtckl_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no),'I',''),1,84),
 substr(f_concat_as_of_cum_gpa
     (shrttrm_pidm,shrttrm_term_code,shksels.f_shrtckl_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no),'T',''),1,84),
 substr(f_concat_term_gpa
    (shrttrm_pidm,shrttrm_term_code,shksels.f_shrtckl_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no),'O',''),1,84),
 substr(f_concat_term_gpa
     (shrttrm_pidm,shrttrm_term_code,shksels.f_shrtckl_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no),'I',''),1,84),
 substr(f_concat_term_gpa
    (shrttrm_pidm,shrttrm_term_code,shksels.f_shrtckl_value(shrtckn_pidm,shrtckn_term_code,shrtckn_seq_no),'T',''),1,84),
 shrttrm_astd_code_end_of_term,
 shrttrm_astd_date_end_of_term,
 shrttrm_astd_code_dl,
 shrttrm_astd_date_dl,
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'MREC2'),1,1),
 TO_DATE(goksels.f_name_bio_value(shrttrm_pidm,'MREC1'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(shrttrm_pidm,'MREETHN'),1,1),
 soklibs.f_get_race(shrttrm_pidm)
from
     shrtckn,
     shrttrm
where
  shrtckn_pidm = shrttrm_pidm
  and shrtckn_term_code = shrttrm_term_code"
"BANINST1","SHVDTL1","","select
 pidm_key,
 term_code_key,
 crn_key,
 applied_for_degree_ind,
 graduated_ind,
 transfer_work_exists_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 ethn_code,
 lgcy_code,
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 stat_code1,
 cnty_code1,
 zip1,
 natn_code1,
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 stat_code2,
 cnty_code2,
 zip2,
 natn_code2,
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 sequence_number,
 levl_code,
 coll_code,
 dept_code,
 divs_code,
 subj_code,
 crse_number,
 seq_number,
 course_title,
 credit_hours,
 gmod_code,
 grde_code_final,
 repeat_course_ind,
 attr_code1,
 attr_code2,
 attr_code3,
 attr_code4,
 attr_code5,
 additional_attributes_ind,
 to_number(substr(f_split_fields(levl_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,6),1,23),'99999999999999D999999999'),
 astd_code,
 astd_date,
 deans_list_code,
 deans_list_date,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 mre_race_data
from shvdtl2"
"BANINST1","SHVDEAN","View of Deans List by term","SELECT SPRIDEN_LAST_NAME, SPRIDEN_FIRST_NAME, SPRIDEN_MI, SPRIDEN_ID,
       SHRTTRM_TERM_CODE, SHRTTRM_ASTD_CODE_DL,
       SHRTTRM_ASTD_DATE_DL,
       SGBSTDN_TERM_CODE_EFF,SHRTTRM_PIDM
FROM   SPRIDEN,
       SGBSTDN,
       SHRTTRM A,
       STVASTD
where  SPRIDEN_PIDM = SGBSTDN_PIDM
AND    SGBSTDN_PIDM = SHRTTRM_PIDM
AND    SHRTTRM_ASTD_CODE_DL = STVASTD_CODE
AND    STVASTD_DEANS_LIST_IND = 'Y'
AND    SPRIDEN_CHANGE_IND IS NULL
AND    SPRIDEN_ENTITY_IND = 'P'
AND    SGBSTDN_TERM_CODE_EFF =
       (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
        FROM   SGBSTDN
        WHERE  SGBSTDN_PIDM = A.SHRTTRM_PIDM
        AND    SGBSTDN_TERM_CODE_EFF <= A.SHRTTRM_TERM_CODE)"
"BANINST1","SHVCOMM","Committee Member Query View","(SELECT SHRCOMM_PIDM,
        SHRCOMM_COMT_CODE,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME|| ', ' ||
        SPRIDEN_FIRST_NAME|| ' ' ||
        SPRIDEN_MI,
        SHRCOMM_PIDM_MEMBER,
        SHRCOMM_FROM_DATE,
        SHRCOMM_TO_DATE,
        SHRCOMM_COMS_CODE,
        SHRCOMM_COMF_CODE,
        SHRCOMM_COLL_CODE,
        SHRCOMM_DEPT_CODE,
        SHRCOMM_DICD_CODE
	FROM SPRIDEN, SHRCOMM
        WHERE SPRIDEN_PIDM = SHRCOMM_PIDM_MEMBER
        AND   SPRIDEN_CHANGE_IND IS NULL)
 "
"BANINST1","SHVCOMI","Committee Query View","(SELECT SHBCOMI_PIDM,
        SHBCOMI_COMT_CODE,
        SHBCOMI_COLL_CODE,
        SHBCOMI_DEPT_CODE,
        SHBCOMI_DICD_CODE,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME|| DECODE(SPRIDEN_LAST_NAME,NULL,NULL,', ') ||
        SPRIDEN_FIRST_NAME|| ' ' ||
        SPRIDEN_MI,
        SHBCOMI_INITIATED_DATE,
        SHBCOMI_DISSOLVED_IND,
        SHBCOMI_DISSOLVED_DATE,
        SHBCOMI_COMS_CODE
	FROM SPRIDEN, SHBCOMI
        WHERE SPRIDEN_PIDM  = SHBCOMI_PIDM
        AND   SPRIDEN_CHANGE_IND IS NULL
UNION ALL
SELECT  NULL,
        SHBCOMI_COMT_CODE,
        SHBCOMI_COLL_CODE,
        SHBCOMI_DEPT_CODE,
        SHBCOMI_DICD_CODE,
        NULL,
        NULL,
        SHBCOMI_INITIATED_DATE,
        SHBCOMI_DISSOLVED_IND,
        SHBCOMI_DISSOLVED_DATE,
        SHBCOMI_COMS_CODE
	FROM  SHBCOMI
 WHERE  SHBCOMI_PIDM IS NULL)"
"BANINST1","SHVCCUR","This view lists outcome curriculum. ","select
  SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
  , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR.ROWID
 , decode( SOBCTRL_CURRENT_OUTCOME_CDE, 'Y',
        DECODE(SOBCTRL_OUTCOME_BY_TERM_IND,'Y',
           DECODE(NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind,
              'YY',
              DENSE_RANK()
              OVER(PARTITION BY SORLCUR_PIDM,
                   SORLCUR_LMOD_CODE,
                   SORLCUR_KEY_SEQNO ORDER BY
                   NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind DESC,
                   SORLCUR_PRIORITY_NO),
              0),
            DECODE(NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind,
              'YY',
              DENSE_RANK()
              OVER(PARTITION BY SORLCUR_PIDM,
                   SORLCUR_LMOD_CODE,
                   SORLCUR_KEY_SEQNO   ORDER BY
                  NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind DESC,
                  SORLCUR_TERM_CODE DESC,
                  SORLCUR_PRIORITY_NO),
              0)),
               SOKCCUR.f_order(sorlcur_pidm,
                               sorlcur_lmod_code,
                               sorlcur_seqno,
                               shrdgmr_term_code_sturec,
                               shrdgmr_seq_no )
              )
, sobcact_active_ind
, SHRDGMR.ROWID
, SHRDGMR_TERM_CODE_STUREC
, SHRDGMR_DEGS_CODE
, SHRDGMR_APPL_DATE
, SHRDGMR_GRAD_DATE
, SHRDGMR_ACYR_CODE_BULLETIN
, SHRDGMR_TERM_CODE_GRAD
, SHRDGMR_ACYR_CODE
, SHRDGMR_GRST_CODE
, SHRDGMR_FEE_IND
, SHRDGMR_FEE_DATE
, SHRDGMR_AUTHORIZED
, SHRDGMR_TERM_CODE_COMPLETED
, SHRDGMR_DEGC_CODE_DUAL
, SHRDGMR_LEVL_CODE_DUAL
, SHRDGMR_DEPT_CODE_DUAL
, SHRDGMR_COLL_CODE_DUAL
, SHRDGMR_MAJR_CODE_DUAL
, SORLCUR_USER_ID_UPDATE
, SORLCUR_ACTIVITY_DATE_UPDATE
, SORLCUR_GAPP_SEQNO
 , SORLCUR_CURRENT_CDE
 , SHRDGMR_STSP_KEY_SEQUENCE
from  shrdgmr,  sorlcur ,sobcact, sobctrl
where shrdgmr_seq_no           = sorlcur_key_seqno
and sobcact_cact_code        = sorlcur_cact_code
and shrdgmr_pidm             = sorlcur_pidm
and sorlcur_lmod_code        =
 ( Select sb_curriculum_str.f_outcome from dual)
and sorlcur_pidm > 0  "
"BANINST1","SHVAWRD","BANNER Reporting view to retrieve persons with awarded degrees","SELECT spriden.spriden_pidm,
       spriden.spriden_last_name,
       spriden.spriden_first_name,
       spriden.spriden_id,
       trunc(shrdgmr.shrdgmr_grad_date),
       stvdegc.stvdegc_code,
       stvdegc.stvdegc_desc,
       shrdgmr.shrdgmr_term_code_grad,
       substr(gb_stvterm.f_get_description(shrdgmr.shrdgmr_term_code_grad),1,30),
       trunc(shrdgmr.shrdgmr_appl_date),
       to_char(shrdgmr.shrdgmr_grad_date, 'YYYY'),
       stvlevl.stvlevl_code,
       stvlevl.stvlevl_desc
  FROM spriden, shrdgmr, stvdegc, stvlevl, stvdegs
 WHERE spriden.spriden_change_ind IS NULL
   AND spriden.spriden_entity_ind = 'P'
   AND shrdgmr.shrdgmr_degc_code = stvdegc.stvdegc_code
   AND shrdgmr.shrdgmr_degs_code = stvdegs.stvdegs_code
   AND stvdegs.stvdegs_award_status_ind = 'A'
   AND spriden.spriden_pidm = shrdgmr.shrdgmr_pidm
   AND shrdgmr.shrdgmr_levl_code = stvlevl.stvlevl_code"
"BANINST1","SHVACUR","This view lists outcome curriculum for an outcome and 2 majors, 2 minors and 6 concentrations. ","select
  SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR.ROWID
 , decode( SOBCTRL_CURRENT_OUTCOME_CDE, 'Y',
        DECODE(SOBCTRL_OUTCOME_BY_TERM_IND,'Y',
           DECODE(NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind,
              'YY',
              DENSE_RANK()
              OVER(PARTITION BY SORLCUR_PIDM,
                   SORLCUR_LMOD_CODE,
                   SORLCUR_KEY_SEQNO ORDER BY
                   NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind DESC,
                   SORLCUR_PRIORITY_NO),
              0),
            DECODE(NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind,
              'YY',
              DENSE_RANK()
              OVER(PARTITION BY SORLCUR_PIDM,
                   SORLCUR_LMOD_CODE,
                   SORLCUR_KEY_SEQNO   ORDER BY
                  NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind DESC,
                  SORLCUR_TERM_CODE DESC,
                  SORLCUR_PRIORITY_NO),
              0)),
               SOKCCUR.f_order(sorlcur_pidm,
                               sorlcur_lmod_code,
                               sorlcur_seqno,
                               shrdgmr_term_code_sturec,
                               shrdgmr_seq_no )
              )
  ,sobcact_active_ind
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'MAJR'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'DEPT'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'MAJR'),1,4)
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'DEPT'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'CRUL') )
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'MAJR'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'CRUL') )
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'ACON') ,1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'MAJR'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'ACON'),1,4)
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'ACON'),1,4)
 , SHRDGMR.rowid
 , SHRDGMR_TERM_CODE_STUREC
 , SHRDGMR_DEGS_CODE
 , SHRDGMR_APPL_DATE
 , SHRDGMR_GRAD_DATE
 , SHRDGMR_ACYR_CODE_BULLETIN
 , SHRDGMR_TERM_CODE_GRAD
 , SHRDGMR_ACYR_CODE
 , SHRDGMR_GRST_CODE
 , SHRDGMR_FEE_IND
 , SHRDGMR_FEE_DATE
 , SHRDGMR_AUTHORIZED
 , SHRDGMR_TERM_CODE_COMPLETED
 , SHRDGMR_DEGC_CODE_DUAL
 , SHRDGMR_LEVL_CODE_DUAL
 , SHRDGMR_DEPT_CODE_DUAL
 , SHRDGMR_COLL_CODE_DUAL
 , SHRDGMR_MAJR_CODE_DUAL
 , SORLCUR_USER_ID_UPDATE
, SORLCUR_ACTIVITY_DATE_UPDATE
, SORLCUR_GAPP_SEQNO
 , SORLCUR_CURRENT_CDE
 , SHRDGMR_STSP_KEY_SEQUENCE
from  shrdgmr,  sorlcur, sobcact,sobctrl
where  shrdgmr_seq_no           = sorlcur_key_seqno
and sobcact_cact_code        = sorlcur_cact_code
and shrdgmr_pidm             = sorlcur_pidm
and sorlcur_lmod_code        =
( Select sb_curriculum_str.f_outcome from dual)
and sorlcur_pidm > 0  "
"BANINST1","SHVACST","View of students in academic difficulty","SELECT SPRIDEN_LAST_NAME, SPRIDEN_FIRST_NAME, SPRIDEN_MI, SPRIDEN_ID,
       SHRTTRM_TERM_CODE, SHRTTRM_ASTD_CODE_END_OF_TERM,
       SHRTTRM_ASTD_DATE_END_OF_TERM,
       shrttrm_prev_code, shrttrm_prev_date,
       shrttrm_cast_code, shrttrm_cast_date,
       SGBSTDN_TERM_CODE_EFF,SHRTTRM_PIDM
FROM   SPRIDEN,
       SGBSTDN,
       SHRTTRM A
WHERE  SPRIDEN_PIDM = SGBSTDN_PIDM
AND    SGBSTDN_PIDM = SHRTTRM_PIDM
AND    SPRIDEN_CHANGE_IND IS NULL
AND    SPRIDEN_ENTITY_IND = 'P'
AND    SGBSTDN_TERM_CODE_EFF =
       (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
        FROM   SGBSTDN
        WHERE  SGBSTDN_PIDM = A.SHRTTRM_PIDM
        AND    SGBSTDN_TERM_CODE_EFF <= A.SHRTTRM_TERM_CODE)"
"BANINST1","SGVTEND","This view lists general student data along with the end term. ","select
  SGBSTDN_PIDM
 , SGBSTDN_TERM_CODE_EFF
 ,  nvl( lead(sgbstdn_term_code_eff,1)
      over (partition by sgbstdn_pidm order by sgbstdn_term_code_eff)   ,'999999')
 , SGBSTDN_SITE_CODE
 , SGBSTDN_RATE_CODE
 , SGBSTDN_STYP_CODE
 , SGBSTDN_LEAV_CODE
 , SGBSTDN_LEAV_FROM_DATE
 , SGBSTDN_LEAV_TO_DATE
 , SGBSTDN_EXP_GRAD_DATE
 , SGBSTDN_TERM_CODE_GRAD
 , SGBSTDN_ACYR_CODE
 , SGBSTDN_APRN_CODE
 , SGBSTDN_ASTD_CODE
 , SGBSTDN_BLCK_CODE
 , SGBSTDN_BSKL_CODE
 , SGBSTDN_CAPL_CODE
 , SGBSTDN_CAST_CODE
 , SGBSTDN_COLL_CODE_DUAL
 , SGBSTDN_DEGC_CODE_DUAL
 , SGBSTDN_DEPT_CODE_DUAL
 , SGBSTDN_EDLV_CODE
 , SGBSTDN_EGOL_CODE
 , SGBSTDN_EMEX_CODE
 , SGBSTDN_FULL_PART_IND
 , SGBSTDN_GAIN_CODE
 , SGBSTDN_GRAD_CREDIT_APPR_IND
 , SGBSTDN_INCM_CODE
 , SGBSTDN_LEVL_CODE_DUAL
 , SGBSTDN_MAJR_CODE_DUAL
 , SGBSTDN_ORSN_CODE
 , SGBSTDN_PRAC_CODE
 , SGBSTDN_PREV_CODE
 , SGBSTDN_RESD_CODE
 , SGBSTDN_SESS_CODE
 , SGBSTDN_STST_CODE
 , SGBSTDN_TERM_CODE_ASTD
 , SGBSTDN_TERM_CODE_CAST
 , SGBSTDN_TERM_CODE_PREV
 , SGBSTDN_TRCN_CODE
 , SGBSTDN_VOED_CODE
 , SGBSTDN_USER_ID
 , SGBSTDN_ACTIVITY_DATE
 , SGBSTDN.SGBSTDN_SCPC_CODE
 , SGBSTDN.ROWID
from sgbstdn
"
"BANINST1","SGVSTSP","This view lists the study path for  learners. ","select
 SGRSTSP_PIDM
 , SGRSTSP_TERM_CODE_EFF
 , SGRSTSP_KEY_SEQNO
 , SGRSTSP_STSP_CODE
 , stvstsp_enroll_ind
 , SGRSTSP_ACTIVITY_DATE
 , SGRSTSP_DATA_ORIGIN
 , SGRSTSP_USER_ID
 , sb_studypath_name.f_learner_study_path_name(
       sgrstsp_pidm, sgrstsp_term_code_eff, sgrstsp_key_seqno)
 , SGRSTSP_FULL_PART_IND
 , SGRSTSP_SESS_CODE
 , SGRSTSP_RESD_CODE
 , SGRSTSP_ORSN_CODE
 , SGRSTSP_PRAC_CODE
 , SGRSTSP_CAPL_CODE
 , SGRSTSP_EDLV_CODE
 , SGRSTSP_INCM_CODE
 , SGRSTSP_EMEX_CODE
 , SGRSTSP_APRN_CODE
 , SGRSTSP_TRCN_CODE
 , SGRSTSP_GAIN_CODE
 , SGRSTSP_VOED_CODE
 , SGRSTSP_BLCK_CODE
 , SGRSTSP_EGOL_CODE
 , SGRSTSP_BSKL_CODE
 , SGRSTSP_ASTD_CODE
 , SGRSTSP_PREV_CODE
 , SGRSTSP_CAST_CODE
 from stvstsp, sgrstsp
 where stvstsp_code = sgrstsp_stsp_code
 order by sgrstsp_pidm, sgrstsp_term_code_eff, sgrstsp_key_seqno"
"BANINST1","SGVSTNE","BANNER Reporting view to retrieve students that are not enrolled","select spriden_pidm, spriden_last_name, spriden_first_name, spriden_id,
       stvterm_code, stvterm_desc, stvstst_code, stvstst_desc,stvstst_reg_ind
  from stvstst, spriden, sgbstdn x, stvterm
 where spriden_pidm = sgbstdn_pidm
   and x.sgbstdn_term_code_eff =
       (select max(y.sgbstdn_term_code_eff) from sgbstdn y
         where y.sgbstdn_pidm = x.sgbstdn_pidm
           and y.sgbstdn_term_code_eff <= stvterm_code)
   and x.sgbstdn_pidm not in
       (select sfbetrm_pidm from sfbetrm, stvests
         where sfbetrm_term_code = stvterm_code
           and sfbetrm_ests_code = stvests_code
           and stvests_eff_headcount = 'Y')
   and spriden_change_ind is null
   and spriden_entity_ind = 'P'
   and x.sgbstdn_stst_code = stvstst_code
 "
"BANINST1","SGVSTHD","BANNER Reporting view to retrieve students that have a hold","select spriden.spriden_pidm,
       spriden.spriden_last_name,
       spriden.spriden_first_name,
       spriden.spriden_id,
       trunc(sprhold.sprhold_from_date),
       trunc(sprhold.sprhold_to_date),
       stvhldd.stvhldd_code,
       stvhldd.stvhldd_desc,
       sprhold.sprhold_user,
       sprhold.sprhold_reason,
       nvl(sprhold.sprhold_amount_owed, 0),
       sprhold.sprhold_orig_code,
       substr(gb_stvorig.f_get_description(sprhold.sprhold_orig_code),1,30),
       sprhold.sprhold_release_ind,
       stvterm.stvterm_code,
       stvterm.stvterm_desc,
       stvhldd.stvhldd_reg_hold_ind,
       stvhldd.stvhldd_trans_hold_ind,
       stvhldd.stvhldd_grad_hold_ind,
       stvhldd.stvhldd_grade_hold_ind,
       stvhldd.stvhldd_ar_hold_ind,
       stvhldd.stvhldd_env_hold_ind
  from spriden, stvhldd, stvests, sfbetrm, sprhold, stvterm
 where spriden.spriden_change_ind is null
   and spriden.spriden_entity_ind = 'P'
   and spriden.spriden_pidm = sprhold.sprhold_pidm
   and sprhold.sprhold_hldd_code = stvhldd.stvhldd_code
   and sprhold.sprhold_pidm = sfbetrm.sfbetrm_pidm
   and sfbetrm.sfbetrm_term_code = stvterm.stvterm_code
   and sfbetrm.sfbetrm_ests_code = stvests.stvests_code
   and stvests.stvests_eff_headcount = 'Y'
   and ((trunc(sprhold.sprhold_from_date) <= trunc(sysdate)) and
       (trunc(sprhold.sprhold_to_date) > trunc(sysdate)))"
"BANINST1","SGVSTEN","BANNER Reporting view to retrieve enrolled students","select spriden_pidm, spriden_last_name, spriden_first_name, spriden_id,
       stvterm_code, stvterm_desc
from spriden, stvests, sfbetrm, stvterm
where spriden_pidm = sfbetrm_pidm
  and sfbetrm_term_code = stvterm_code
  and sfbetrm_ests_code = stvests_code
  and stvests_eff_headcount = 'Y'
  and spriden_change_ind is null
  and spriden_entity_ind = 'P'
 "
"BANINST1","SGVSTDN","ENROLLED STUDENT VIEW","SELECT SFBETRM_TERM_CODE,
       substr(gb_stvterm.f_get_description(SFBETRM_TERM_CODE),1,30),
       S.SPRIDEN_ID,
       SUBSTR(S.SPRIDEN_LAST_NAME || ', ' || S.SPRIDEN_FIRST_NAME ||
              ' ' || SUBSTR(S.SPRIDEN_MI,1,1),1,25),
       S.SPRIDEN_LAST_NAME,
       S.SPRIDEN_FIRST_NAME,
       S.SPRIDEN_MI,
       SGBSTDN_PIDM,
       SGBSTDN_STST_CODE,
       substr(sb_stvstst.f_get_description(sgbstdn_stst_code),1,30),
       SGBSTDN_LEVL_CODE,
       substr(gb_stvlevl.f_get_description(sgbstdn_levl_code),1,30),
       SGBSTDN_STYP_CODE,
       substr(sb_stvstyp.f_get_description(sgbstdn_styp_code),1,30),
       NVL(SGBSTDN_ASTD_CODE,substr(shksels.f_shrttrm_value(sgbstdn_pidm,sfbetrm_term_code,'','CET'),1,2)),
       substr(NVL(sb_stvastd.f_get_description(sgbstdn_astd_code),sb_stvastd.f_get_description(shksels.f_shrttrm_value(sgbstdn_pidm,sfbetrm_term_code,'','CET'))),1,30),
       STVCLAS_CODE,
       STVCLAS_DESC,
       NVL(TO_NUMBER(shksels.f_shrlgpa_value(A.SGBSTDN_PIDM, A.SGBSTDN_LEVL_CODE, 'GPA','O','HA','','')), 0),
       NVL(TO_NUMBER(shksels.f_shrlgpa_value(A.SGBSTDN_PIDM, A.SGBSTDN_LEVL_CODE, 'GPA','O','HE','','')), 0) ,
       TO_NUMBER(shksels.f_shrlgpa_value(A.SGBSTDN_PIDM, A.SGBSTDN_LEVL_CODE, 'GPA','O','GPA','','')),
       SGBSTDN_CAMP_CODE,
       substr(gb_stvcamp.f_get_description(sgbstdn_camp_code),1,30),
       SGBSTDN_RESD_CODE,
       substr(sb_stvresd.f_get_description(sgbstdn_resd_code),1,30),
       SGBSTDN_COLL_CODE_1,
       substr(gb_stvcoll.f_get_description(sgbstdn_coll_code_1),1,30),
       SGBSTDN_DEGC_CODE_1,
       substr(gb_stvdegc.f_get_description(sgbstdn_degc_code_1),1,30),
       SGBSTDN_MAJR_CODE_1,
       substr(gb_stvmajr.f_get_description(sgbstdn_majr_code_1),1,30),
       substr(sgksels.f_primary_advisor(A.SGBSTDN_PIDM,SFBETRM_TERM_CODE,'ID'),1,9),
       DECODE(sgksels.f_primary_advisor(A.SGBSTDN_PIDM,SFBETRM_TERM_CODE,'ID'),NULL,NULL,SUBSTR((sgksels.f_primary_advisor(A.SGBSTDN_PIDM,SFBETRM_TERM_CODE,'FIRST') || ' ' ||  sgksels.f_primary_advisor(A.SGBSTDN_PIDM,SFBETRM_TERM_CODE,'LAST')),1,25)),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'SEX'),1,1),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'SSN'),1,15),
       TO_DATE(goksels.f_name_bio_value(SGBSTDN_PIDM, 'BDATE'), G$_DATE.GET_NLS_DATE_FORMAT),
       to_number(goksels.f_name_bio_value(SGBSTDN_PIDM, 'AGE')),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'LGCY'),1,1),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'LGCYD'),1,30),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'ETHN'),1,2),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'ETHND'),1,30),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'MRTL'),1,1),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'MRTLD'),1,30),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'RELG'),1,2),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'RELGD'),1,30),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'CITZ'),1,2),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'CITZD'),1,30),
       SUBSTR(goksels.f_name_bio_value(SGBSTDN_PIDM, 'CONF'),1,1),
       NVL(sgbstdn_prev_code,substr(shksels.f_shrttrm_value(sgbstdn_pidm,sfbetrm_term_code,'','PEC'),1,2)),
       substr(NVL(sb_stvprev.f_get_description(sgbstdn_prev_code),sb_stvprev.f_get_description(shksels.f_shrttrm_value(sgbstdn_pidm,sfbetrm_term_code,'','PEC'))),1,30),
       NVL(sgbstdn_cast_code,substr(shksels.f_shrttrm_value(sgbstdn_pidm,sfbetrm_term_code,'','CASC'),1,2)),
       substr(NVL(sb_stvcast.f_get_description(sgbstdn_cast_code),sb_stvcast.f_get_description(shksels.f_shrttrm_value(sgbstdn_pidm,sfbetrm_term_code,'','CASC'))),1,30),
       SGBSTDN_SCPC_CODE,
       substr(sb_stvscpc.f_get_description(sgbstdn_scpc_code),1,30)
  FROM
       STVCLAS,
       SPRIDEN S,
       SGBSTDN A,
       SFBETRM
WHERE
  STVCLAS_CODE = SGKCLAS.F_CLASS_CODE(SFBETRM_PIDM, SGBSTDN_LEVL_CODE, SFBETRM_TERM_CODE)
  AND  S.SPRIDEN_PIDM = A.SGBSTDN_PIDM
  AND  S.SPRIDEN_CHANGE_IND IS NULL
  AND A.SGBSTDN_PIDM = SFBETRM_PIDM
  AND A.SGBSTDN_TERM_CODE_EFF = sb_learner.f_query_current(SFBETRM_PIDM,SFBETRM_TERM_CODE)
  AND SFBETRM_PIDM > 0
  AND  NOT EXISTS (SELECT 'X' FROM SPBPERS
                   WHERE  SPBPERS_PIDM  = SGBSTDN_PIDM
                     AND  SPBPERS_DEAD_IND='Y')"
"BANINST1","SGVSTD2","","select
 a.sgbstdn_pidm,
 stvterm_code,
 substr(f_enrolled_this_term(a.sgbstdn_pidm,stvterm_code),1,1),
 substr(f_registered_this_term(a.sgbstdn_pidm,stvterm_code),1,1),
 substr(f_meal_this_term(a.sgbstdn_pidm, stvterm_code),1,1),
 substr(f_hous_this_term(a.sgbstdn_pidm, stvterm_code),1,1),
 substr(f_latest_term_fnc(a.sgbstdn_pidm),1,6),
 substr(f_applied_for_degree(a.sgbstdn_pidm),1,1),
 substr(f_graduated_from_institution(a.sgbstdn_pidm),1,1),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'SUF'),1,20),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'LSUF'),1,20),
 TO_DATE(goksels.f_name_bio_value(a.sgbstdn_pidm,'BDATE'),g$_date.get_nls_date_format),
 TO_NUMBER(goksels.f_name_bio_value(a.sgbstdn_pidm,'AGE')),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'SEX'),1,1),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'ETHN'),1,2),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'LGCY'),1,1),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'DEAD'),1,1),
 TO_DATE(goksels.f_name_bio_value(a.sgbstdn_pidm,'DDATE'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'CONF'),1,1),
 a.sgbstdn_full_part_ind,
 substr(f_class_calc_fnc(a.sgbstdn_pidm,a.sgbstdn_levl_code,stvterm_code),1,2),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'HN','A',NULL),1,10),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'S4','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'HN','A',NULL),1,10),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'S4','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(a.sgbstdn_pidm,'STDNADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PC'),1,4),
 a.sgbstdn_term_code_eff,
 a.sgbstdn_stst_code,
 a.sgbstdn_levl_code,
 a.sgbstdn_styp_code,
 a.sgbstdn_term_code_matric,
 a.sgbstdn_term_code_admit,
 a.sgbstdn_camp_code,
 a.sgbstdn_sess_code,
 a.sgbstdn_resd_code,
 a.sgbstdn_rate_code,
 a.sgbstdn_edlv_code,
 a.sgbstdn_admt_code,
 a.sgbstdn_trcn_code,
 a.sgbstdn_blck_code,
 a.sgbstdn_site_code,
 a.sgbstdn_egol_code,
 a.sgbstdn_coll_code_1,
 a.sgbstdn_degc_code_1,
 a.sgbstdn_majr_code_1,
 a.sgbstdn_majr_code_1_2,
 a.sgbstdn_majr_code_minr_1,
 a.sgbstdn_majr_code_minr_1_2,
 a.sgbstdn_majr_code_conc_1,
 a.sgbstdn_majr_code_conc_1_2,
 a.sgbstdn_majr_code_conc_1_3,
 a.sgbstdn_majr_code_conc_121,
 a.sgbstdn_majr_code_conc_122,
 a.sgbstdn_majr_code_conc_123,
 a.sgbstdn_dept_code,
 a.sgbstdn_dept_code_2,
 a.sgbstdn_grad_credit_appr_ind,
 a.sgbstdn_leav_code,
 a.sgbstdn_leav_from_date,
 a.sgbstdn_leav_to_date,
 substr(f_astd_end_of_term(a.sgbstdn_pidm, stvterm_code),1,2),
 a.sgbstdn_astd_code,
 a.sgbstdn_term_code_astd,
 a.sgbstdn_term_code_grad,
 a.sgbstdn_acyr_code,
 a.sgbstdn_exp_grad_date,
 substr(f_concat_sgradvr(a.sgbstdn_pidm, stvterm_code),1,202),
 substr(f_concat_sgrchrt(a.sgbstdn_pidm, stvterm_code),1,69),
 substr(f_student_check_for_more
    ('STDNCHRT',a.sgbstdn_pidm, stvterm_code,null,'STDNCHRT'),1,1),
 substr(f_concat_sgrsprt(a.sgbstdn_pidm, stvterm_code),1,34),
 substr(f_student_check_for_more
    ('STDNSPRT',a.sgbstdn_pidm, stvterm_code,null,'STDNSPRT'),1,1),
 substr(f_concat_as_of_cum_gpa
     (a.sgbstdn_pidm,stvterm_code,a.sgbstdn_levl_code,'O',
      a.sgbstdn_camp_code),1,84),
 substr(f_concat_as_of_cum_gpa
     (a.sgbstdn_pidm,stvterm_code,a.sgbstdn_levl_code,'I',
      a.sgbstdn_camp_code),1,84),
 substr(f_concat_as_of_cum_gpa
     (a.sgbstdn_pidm,stvterm_code,a.sgbstdn_levl_code,'T',
      a.sgbstdn_camp_code),1,84),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,1,'H'),1,2),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,1,'FD')),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,1,'TD')),
 TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,1,'AO')),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,1,'R'),1,30),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,2,'H'),1,2),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,2,'FD')),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,2,'TD')),
 TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,2,'AO')),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,2,'R'),1,30),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,3,'H'),1,2),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,3,'FD')),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,3,'TD')),
 TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,3,'AO')),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,3,'R'),1,30),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,4,'H'),1,2),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,4,'FD')),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,4,'TD')),
 TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,4,'AO')),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,4,'R'),1,30),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,5,'H'),1,2),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,5,'FD')),
 TO_DATE(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,5,'TD')),
 TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,5,'AO')),
 substr(soklibs.f_sprhold_value('STDNHOLD',a.sgbstdn_pidm,5,'R'),1,30),
 substr(f_student_check_for_more
    ('HOLDS',a.sgbstdn_pidm, null,null,'STDNHOLD'),1,1),
 substr(f_concat_sprmedi(a.sgbstdn_pidm),1,24),
 substr(f_student_check_for_more
    ('STDNMEDI',a.sgbstdn_pidm, null,null,'MEDICAL'),1,1),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',1,'PL'),1,60),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',1,'PF'),1,60),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',1,'PI'),1,60),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',1,'PS'),1,60),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',1,'RC'),1,1),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',2,'PL'),1,60),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',2,'PF'),1,60),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',2,'PI'),1,60),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',2,'PS'),1,60),
 substr(soklibs.f_sorfolk_value(a.sgbstdn_pidm,'STDNRELT',2,'RC'),1,1),
 f_account_balance(sgbstdn_pidm),
 f_amount_due(sgbstdn_pidm),
 f_memo_balance(sgbstdn_pidm),
 f_deposit_balance(sgbstdn_pidm),
 f_oldest_effective_date(sgbstdn_pidm),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'MREC2'),1,5),
 TO_DATE(goksels.f_name_bio_value(a.sgbstdn_pidm,'MREC1'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(a.sgbstdn_pidm,'MREETHN'),1,7),
 soklibs.f_get_race(a.sgbstdn_pidm)
from
   sgbstdn a, stvterm
where a.sgbstdn_term_code_eff = sb_learner.f_query_current(a.sgbstdn_pidm,stvterm_code)"
"BANINST1","SGVSTD1","","select
 pidm_key,
 term_code_key,
 enrolled_ind,
 registered_ind,
 meal_plan_ind,
 housing_ind,
 term_code_last_attended,
 applied_for_degree_ind,
 graduated_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_name,
 middle_initial,
 name_prefix,
 name_suffix,
 surname_prefix,
 birth_date,
 age,
 gender,
 ethn_code,
 lgcy_code,
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 full_part_time_ind,
 clas_code,
 house_number1,
 street1_line1,
 street1_line2,
 street1_line3,
 street1_line4,
 city1,
 state1,
 zip1,
 cnty_code1,
 natn_code1,
 atyp_code1,
 phone_area_code1,
 phone_number1,
 tele_code1,
 phone_ctry_cde1,
 house_number2,
 street2_line1,
 street2_line2,
 street2_line3,
 street2_line4,
 city2,
 state2,
 zip2,
 cnty_code2,
 natn_code2,
 atyp_code2,
 phone_area_code2,
 phone_number2,
 tele_code2,
 phone_ctry_cde2,
 term_code_effective,
 stst_code,
 levl_code,
 styp_code,
 term_code_matric,
 term_code_admit,
 camp_code,
 sess_code,
 resd_code,
 substr(soklibs.f_get_stvresd_in_state_ind(resd_code),1,1),
 rate_code,
 edlv_code,
 admt_code,
 trcn_code,
 blck_code,
 site_code,
 egol_code,
 coll_code,
 degc_code,
 majr_code,
 majr_code_1_2,
 majr_code_minor_1,
 majr_code_minor_1_2,
 majr_code_concentration_1,
 majr_code_concentration_1_2,
 majr_code_concentration_1_3,
 majr_code_concentration_2_1,
 majr_code_concentration_2_2,
 majr_code_concentration_2_3,
 dept_code1,
 dept_code2,
 graduate_credit_elig_ind,
 leav_code,
 leav_from_date,
 leav_to_date,
 astd_code_end_of_term,
 astd_code_overriden,
 term_code_astd_overriden,
 term_code_intended_graduation,
 acyr_code_intended_graduation,
 expected_graduation_date,
 substr(f_split_fields(advisor_data,1),1,6),
 substr(f_split_fields(advisor_data,2),1,60),
 substr(f_split_fields(advisor_data,3),1,60),
 substr(f_split_fields(advisor_data,4),1,60),
 substr(f_split_fields(advisor_data,5),1,4),
 substr(f_split_fields(advisor_data,6),1,1),
 substr(f_split_fields(advisor_data,7),1,6),
 substr(f_split_fields(advisor_data,8),1,60),
 substr(f_split_fields(advisor_data,9),1,60),
 substr(f_split_fields(advisor_data,10),1,60),
 substr(f_split_fields(advisor_data,11),1,4),
 substr(f_split_fields(advisor_data,12),1,1),
 substr(f_split_fields(cohort_data,1),1,6),
 substr(f_split_fields(cohort_data,2),1,10),
 substr(f_split_fields(cohort_data,3),1,4),
 substr(f_split_fields(cohort_data,4),1,6),
 substr(f_split_fields(cohort_data,5),1,10),
 substr(f_split_fields(cohort_data,6),1,4),
 substr(f_split_fields(cohort_data,7),1,6),
 substr(f_split_fields(cohort_data,8),1,10),
 substr(f_split_fields(cohort_data,9),1,4),
 additional_cohorts_ind,
 substr(f_split_fields(sport_data,1),1,8),
 substr(f_split_fields(sport_data,2),1,2),
 substr(f_split_fields(sport_data,3),1,2),
 substr(f_split_fields(sport_data,4),1,1),
 substr(f_split_fields(sport_data,5),1,8),
 substr(f_split_fields(sport_data,6),1,2),
 substr(f_split_fields(sport_data,7),1,2),
 substr(f_split_fields(sport_data,8),1,1),
 additional_sports_ind,
 to_number(substr(f_split_fields(levl_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,6),1,23),'99999999999999D999999999'),
 hldd_code1,
 hold_from_date1,
 hold_to_date1,
 hold_amount_owed1,
 hold_reason1,
 hldd_code2,
 hold_from_date2,
 hold_to_date2,
 hold_amount_owed2,
 hold_reason2,
 hldd_code3,
 hold_from_date3,
 hold_to_date3,
 hold_amount_owed3,
 hold_reason3,
 hldd_code4,
 hold_from_date4,
 hold_to_date4,
 hold_amount_owed4,
 hold_reason4,
 hldd_code5,
 hold_from_date5,
 hold_to_date5,
 hold_amount_owed5,
 hold_reason5,
 additional_holds_ind,
 substr(f_split_fields(medical_data,1),1,2),
 substr(f_split_fields(medical_data,2),1,1),
 substr(f_split_fields(medical_data,3),1,2),
 substr(f_split_fields(medical_data,4),1,2),
 substr(f_split_fields(medical_data,5),1,1),
 substr(f_split_fields(medical_data,6),1,2),
 substr(f_split_fields(medical_data,7),1,2),
 substr(f_split_fields(medical_data,8),1,1),
 substr(f_split_fields(medical_data,9),1,2),
 additional_medical_data_ind,
 parent_last_name1,
 parent_first_name1,
 parent_middle_name1,
 parent_surname_prefix1,
 relt_code1,
 parent_last_name2,
 parent_first_name2,
 parent_middle_name2,
 parent_surname_prefix2,
 relt_code2,
 ar_account_balance,
 ar_amount_due,
 ar_memo_balance,
 ar_deposit_balance,
 ar_oldest_effective_date,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 mre_race_data
from  sgvstd2"
"BANINST1","SGVSATT","ENROLLED STUDENT ATTRIBUTE VIEW","(SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       A.SGRSATT_ATTS_CODE,
       STVATTS.STVATTS_DESC
FROM   SGRSATT A,
       STVATTS,
       SFBETRM
WHERE  A.SGRSATT_PIDM = SFBETRM.SFBETRM_PIDM
  AND  A.SGRSATT_ATTS_CODE = STVATTS.STVATTS_CODE
  AND  A.SGRSATT_TERM_CODE_EFF  =
      (SELECT MAX(B.SGRSATT_TERM_CODE_EFF)
       FROM   SGRSATT B
       WHERE  B.SGRSATT_PIDM = A.SGRSATT_PIDM
         AND  B.SGRSATT_TERM_CODE_EFF <= SFBETRM.SFBETRM_TERM_CODE)
UNION ALL
SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       NULL,
       NULL
FROM   SGRSATT A,
       SFBETRM
WHERE  A.SGRSATT_PIDM = SFBETRM.SFBETRM_PIDM
  AND  A.SGRSATT_ATTS_CODE IS NULL
  AND  A.SGRSATT_TERM_CODE_EFF  =
      (SELECT MAX(B.SGRSATT_TERM_CODE_EFF)
       FROM   SGRSATT B
       WHERE  B.SGRSATT_PIDM = A.SGRSATT_PIDM
         AND  B.SGRSATT_TERM_CODE_EFF <= SFBETRM.SFBETRM_TERM_CODE))
UNION
SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       NULL,
       NULL
FROM   SFBETRM
WHERE  NOT EXISTS (SELECT 'X'
                   FROM   SGRSATT C
                   WHERE  C.SGRSATT_PIDM = SFBETRM.SFBETRM_PIDM)
UNION
SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       NULL,
       NULL
FROM   SGRSATT,
       SFBETRM
WHERE  SGRSATT.SGRSATT_PIDM = SFBETRM.SFBETRM_PIDM
  AND  NOT EXISTS
          (SELECT 'X'
           FROM   SGRSATT D
           WHERE  D.SGRSATT_PIDM = SFBETRM.SFBETRM_PIDM
             AND  D.SGRSATT_TERM_CODE_EFF <= SFBETRM.SFBETRM_TERM_CODE)"
"BANINST1","SGVSACT","ENROLLED STUDENT ACTIVITY VIEW","SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       SGRSACT.SGRSACT_ACTC_CODE,
       STVACTC.STVACTC_DESC
  FROM STVACTC,
       SGRSACT,
       SFBETRM
 WHERE STVACTC.STVACTC_CODE = SGRSACT_ACTC_CODE
   AND SGRSACT.SGRSACT_PIDM = SFBETRM.SFBETRM_PIDM
   AND (SGRSACT.SGRSACT_TERM_CODE = SFBETRM_TERM_CODE OR SGRSACT.SGRSACT_TERM_CODE IS NULL)
UNION ALL
SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       NULL,
       NULL
  FROM SFBETRM
 WHERE NOT EXISTS
 (SELECT 'X' FROM SGRSACT WHERE SGRSACT_PIDM = SFBETRM.SFBETRM_PIDM)"
"BANINST1","SGVLEAV","Leave Data from SGBSTDN for BANNERQuest","select
 sgbstdn_pidm, sgbstdn_leav_code, sgbstdn_leav_from_date, sgbstdn_leav_to_date
from sgbstdn
 "
"BANINST1","SGVISPT","View for Athletic Compliance to gather all sports data for a pidm","SELECT  x.sgrsprt_pidm,
        substr(gb_common.f_get_id(x.sgrsprt_pidm),1,9),
        f_format_name(x.sgrsprt_pidm,'LFMI'),
	x.sgrsprt_term_code,
	x.sgrsprt_actc_code,
	x.sgrsprt_sael_code,
	x.sgrsprt_elig_code,
	x.sgrsprt_spst_code,
	x.sgrsprt_athl_aid_ind,
	c.sgbstdn_stst_code,
	NVL(c.sgbstdn_astd_code,substr(shksels.f_shrttrm_value(c.sgbstdn_pidm,c.sgbstdn_term_code_eff,'','CET'),1,2)),
	y.sgrathc_season_used_ind,
	y.sgrathc_current_ind,
	y.sgrathc_seq_no,
	y.sgrathc_user_id,
	y.sgrathc_activity_date,
	y.sgrathc_sare_code,
	y.sgrathc_seasons_available,
	y.sgrathc_elig_begin_term_code,
	y.sgrathc_elig_end_term_code
FROM   sgrsprt x, sgbstdn c, sgrathc y
WHERE  y.sgrathc_pidm >0
       AND  x.sgrsprt_pidm = y.sgrathc_pidm
       AND  x.sgrsprt_term_code = y.sgrathc_term_code
       AND  x.sgrsprt_actc_code = y.sgrathc_actc_code
  and ((c.sgbstdn_term_code_eff =  (select max(d.sgbstdn_term_code_eff)
                                       from   sgbstdn d
                                       where  d.sgbstdn_pidm = x.sgrsprt_pidm
                                       and    d.sgbstdn_term_code_eff <= x.sgrsprt_term_code)
      and c.sgbstdn_pidm = x.sgrsprt_pidm))
UNION
SELECT  x.sgrsprt_pidm,
        substr(gb_common.f_get_id(x.sgrsprt_pidm),1,9),
        f_format_name(x.sgrsprt_pidm,'LFMI'),
	x.sgrsprt_term_code,
	x.sgrsprt_actc_code,
	x.sgrsprt_sael_code,
	x.sgrsprt_elig_code,
	x.sgrsprt_spst_code,
	x.sgrsprt_athl_aid_ind,
	c.sgbstdn_stst_code,
	NVL(c.sgbstdn_astd_code,substr(shksels.f_shrttrm_value(c.sgbstdn_pidm,c.sgbstdn_term_code_eff,'','CET'),1,2)),
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL
FROM   sgrsprt x, sgbstdn c
WHERE  (NOT EXISTS (select 'x' from sgrathc d where
             x.sgrsprt_pidm = d.sgrathc_pidm
       AND x.sgrsprt_term_code = d.sgrathc_term_code
       AND x.sgrsprt_actc_code = d.sgrathc_actc_code))
  and ((c.sgbstdn_term_code_eff =  (select max(d.sgbstdn_term_code_eff)
                                       from   sgbstdn d
                                       where  d.sgbstdn_pidm = x.sgrsprt_pidm
                                       and    d.sgbstdn_term_code_eff <= x.sgrsprt_term_code)
      and c.sgbstdn_pidm = x.sgrsprt_pidm))
UNION
SELECT  x.sgrsprt_pidm,
        substr(gb_common.f_get_id(x.sgrsprt_pidm),1,9),
        f_format_name(x.sgrsprt_pidm,'LFMI'),
	x.sgrsprt_term_code,
	x.sgrsprt_actc_code,
	x.sgrsprt_sael_code,
	x.sgrsprt_elig_code,
	x.sgrsprt_spst_code,
	x.sgrsprt_athl_aid_ind,
	NULL,
	NULL,
	y.sgrathc_season_used_ind,
	y.sgrathc_current_ind,
	y.sgrathc_seq_no,
	y.sgrathc_user_id,
	y.sgrathc_activity_date,
	y.sgrathc_sare_code,
	y.sgrathc_seasons_available,
	y.sgrathc_elig_begin_term_code,
	y.sgrathc_elig_end_term_code
FROM   sgrsprt x, sgrathc y
WHERE  (y.sgrathc_pidm >0
       AND  x.sgrsprt_pidm = y.sgrathc_pidm
       AND  x.sgrsprt_term_code = y.sgrathc_term_code
       AND  x.sgrsprt_actc_code = y.sgrathc_actc_code
       )
  AND (NOT EXISTS (select 'x' from sgbstdn c where
             ((c.sgbstdn_term_code_eff =  (select max(d.sgbstdn_term_code_eff)
                                       from   sgbstdn d
                                       where  d.sgbstdn_pidm = x.sgrsprt_pidm
                                       and    d.sgbstdn_term_code_eff <= x.sgrsprt_term_code)
      and c.sgbstdn_pidm = x.sgrsprt_pidm))  ))
UNION
SELECT  x.sgrsprt_pidm,
        substr(gb_common.f_get_id(x.sgrsprt_pidm),1,9),
        f_format_name(x.sgrsprt_pidm,'LFMI'),
	x.sgrsprt_term_code,
	x.sgrsprt_actc_code,
	x.sgrsprt_sael_code,
	x.sgrsprt_elig_code,
	x.sgrsprt_spst_code,
	x.sgrsprt_athl_aid_ind,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL
FROM   sgrsprt x
WHERE  (NOT EXISTS (select 'x' from sgrathc d where
             x.sgrsprt_pidm = d.sgrathc_pidm
       AND x.sgrsprt_term_code = d.sgrathc_term_code
       AND x.sgrsprt_actc_code = d.sgrathc_actc_code))
  AND (NOT EXISTS (select 'x' from sgbstdn c where
             ((c.sgbstdn_term_code_eff =  (select max(d.sgbstdn_term_code_eff)
                                       from   sgbstdn d
                                       where  d.sgbstdn_pidm = x.sgrsprt_pidm
                                       and    d.sgbstdn_term_code_eff <= x.sgrsprt_term_code)
      and c.sgbstdn_pidm = x.sgrsprt_pidm))  ))
  ORDER BY  sgrsprt_pidm, sgrsprt_term_code, sgrsprt_actc_code "
"BANINST1","SGVCLSS","Class Calculation View","select distinct spriden_pidm,
       stvlevl_code,
       stvterm_code,
       stvclas_code,
       stvclas_desc
from   stvclas,
       spriden,
       stvlevl,
       stvterm
where  stvclas_code = sgkclas.f_class_code(spriden_pidm, stvlevl_code, stvterm_code)
and    spriden_change_ind is null
 "
"BANINST1","SGVCLSR","BANNERQuest Student view for class codes","SELECT stvterm_code,
       sgbstdn_pidm,
       sgbstdn_levl_code,
       stvlevl_desc,
       stvclas_code,
       stvclas_desc,
       TO_NUMBER(NVL(shksels.f_shrlgpa_value(sgbstdn_pidm,sgbstdn_levl_code,'GPA','O','HA','',''), 0)),
       TO_NUMBER(NVL(shksels.f_shrlgpa_value(sgbstdn_pidm,sgbstdn_levl_code,'GPA','O','HE','',''), 0)),
       TO_NUMBER(NVL(shksels.f_shrlgpa_value(sgbstdn_pidm,sgbstdn_levl_code,'GPA','O','H','',''), 0)),
       TO_NUMBER(NVL(shksels.f_shrlgpa_value(sgbstdn_pidm,sgbstdn_levl_code,'GPA','O','QP','',''), 0)),
       TO_NUMBER(NVL(shksels.f_shrlgpa_value(sgbstdn_pidm,sgbstdn_levl_code,'GPA','O','GPA','',''),0)),
       TO_NUMBER(NVL(shksels.f_shrlgpa_value(sgbstdn_pidm,sgbstdn_levl_code,'GPA','O','HP','',''), 0))
  FROM stvlevl,  sgbstdn b, stvterm , stvclas
 WHERE stvclas_code =
       sgkclas.f_class_code(b.sgbstdn_pidm,b.sgbstdn_levl_code,stvterm_code)
   AND stvlevl_code = b.sgbstdn_levl_code
   AND b.sgbstdn_term_code_eff =
       (SELECT MAX(a.sgbstdn_term_code_eff)
          FROM sgbstdn a
         WHERE a.sgbstdn_pidm = b.sgbstdn_pidm
           AND a.sgbstdn_term_code_eff <= stvterm_code)"
"BANINST1","SGVCLAS","ENROLLED STUDENT CLASS VIEW","SELECT SFBETRM_TERM_CODE,
       SGBSTDN_PIDM,
       SGBSTDN_LEVL_CODE,
       STVLEVL_DESC,
       STVCLAS_CODE,
       STVCLAS_DESC,
       to_number(NVL(SHKSELS.F_SHRLGPA_VALUE(SGBSTDN_PIDM,SGBSTDN_LEVL_CODE,'GPA','O','HA','',''), 0)),
       to_number(NVL(SHKSELS.F_SHRLGPA_VALUE(SGBSTDN_PIDM,SGBSTDN_LEVL_CODE,'GPA','O','HE','',''), 0)),
       to_number(NVL(SHKSELS.F_SHRLGPA_VALUE(SGBSTDN_PIDM,SGBSTDN_LEVL_CODE,'GPA','O','H','',''), 0)),
       to_number(NVL(SHKSELS.F_SHRLGPA_VALUE(SGBSTDN_PIDM,SGBSTDN_LEVL_CODE,'GPA','O','QP','',''), 0)),
       to_number(SHKSELS.F_SHRLGPA_VALUE(SGBSTDN_PIDM,SGBSTDN_LEVL_CODE,'GPA','O','GPA','','')),
       to_number(NVL(SHKSELS.F_SHRLGPA_VALUE(SGBSTDN_PIDM,SGBSTDN_LEVL_CODE,'GPA','O','HP','',''), 0))
  FROM STVLEVL, SGBSTDN, SFBETRM, STVCLAS
 WHERE STVCLAS_CODE =
       SGKCLAS.F_CLASS_CODE(SFBETRM_PIDM,SGBSTDN_LEVL_CODE,SFBETRM_TERM_CODE)
   AND STVLEVL_CODE = SGBSTDN_LEVL_CODE
   AND SGBSTDN_PIDM = SFBETRM_PIDM
   AND SGBSTDN_TERM_CODE_EFF =
       (SELECT MAX(A.SGBSTDN_TERM_CODE_EFF)
          FROM SGBSTDN A
         WHERE A.SGBSTDN_PIDM = SFBETRM_PIDM
           AND A.SGBSTDN_TERM_CODE_EFF <= SFBETRM_TERM_CODE)"
"BANINST1","SGVCHRT","ENROLLED STUDENT COHORT VIEW","(
SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       A.SGRCHRT_CHRT_CODE,
       STVCHRT.STVCHRT_DESC
FROM   STVCHRT  ,
       SGRCHRT A,
       SFBETRM
WHERE  STVCHRT.STVCHRT_CODE = A.SGRCHRT_CHRT_CODE
  AND  A.SGRCHRT_PIDM = SFBETRM.SFBETRM_PIDM
  AND  A.SGRCHRT_TERM_CODE_EFF  =
      (SELECT MAX(B.SGRCHRT_TERM_CODE_EFF)
       FROM   SGRCHRT B
       WHERE  B.SGRCHRT_PIDM = A.SGRCHRT_PIDM
         AND  B.SGRCHRT_TERM_CODE_EFF <= SFBETRM.SFBETRM_TERM_CODE
         AND  B.SGRCHRT_ACTIVE_IND IS NULL)
  AND  A.SGRCHRT_ACTIVE_IND IS NULL
UNION ALL
SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       A.SGRCHRT_CHRT_CODE,
       null
FROM   SGRCHRT A,
       SFBETRM
WHERE  A.SGRCHRT_CHRT_CODE IS NULL
  AND  A.SGRCHRT_PIDM = SFBETRM.SFBETRM_PIDM
  AND  A.SGRCHRT_TERM_CODE_EFF  =
      (SELECT MAX(B.SGRCHRT_TERM_CODE_EFF)
       FROM   SGRCHRT B
       WHERE  B.SGRCHRT_PIDM = A.SGRCHRT_PIDM
         AND  B.SGRCHRT_TERM_CODE_EFF <= SFBETRM.SFBETRM_TERM_CODE
         AND  B.SGRCHRT_ACTIVE_IND IS NULL)
  AND  A.SGRCHRT_ACTIVE_IND IS NULL
)
UNION
SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       '',
       ''
FROM   SFBETRM
WHERE  NOT EXISTS (SELECT 'X'
                   FROM   SGRCHRT C
                   WHERE  C.SGRCHRT_PIDM = SFBETRM.SFBETRM_PIDM)
UNION
SELECT SFBETRM.SFBETRM_PIDM,
       SFBETRM.SFBETRM_TERM_CODE,
       '',
       ''
FROM   SGRCHRT,
       SFBETRM
WHERE  SGRCHRT.SGRCHRT_PIDM = SFBETRM.SFBETRM_PIDM
  AND  NOT EXISTS
          (SELECT 'X'
           FROM   SGRCHRT D
           WHERE  D.SGRCHRT_PIDM = SFBETRM.SFBETRM_PIDM
             AND  D.SGRCHRT_TERM_CODE_EFF <= SFBETRM.SFBETRM_TERM_CODE)"
"BANINST1","SGVCCUR","This view lists curriculum for a learner. ","SELECT
   SGVTEND_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_ROLL_IND
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_TERM_CODE_MATRIC
 , SORLCUR_TERM_CODE_ADMIT
 , SORLCUR_ADMT_CODE
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR_ROLLED_SEQNO
 , SORLCUR.ROWID
 ,  SOKCCUR.f_learner_order (sorlcur_pidm,sorlcur_seqno,sgvtend_term_code_eff)
 , (Select sobcact_active_ind from sobcact where sobcact_cact_code = sorlcur_cact_code)
 , SGVTEND_ROWID
 , SGVTEND_STYP_CODE
 , SGVTEND_TERM_CODE_EFF
 , NVL(SORLCUR_SITE_CODE , SGVTEND_SITE_CODE)
 , NVL(SORLCUR_RATE_CODE , SGVTEND_RATE_CODE)
 , SORLCUR_STYP_CODE
 , NVL(SORLCUR_LEAV_CODE , SGVTEND_LEAV_CODE)
 , NVL(SORLCUR_LEAV_FROM_DATE , SGVTEND_LEAV_FROM_DATE)
 , NVL(SORLCUR_LEAV_TO_DATE , SGVTEND_LEAV_TO_DATE)
 , NVL(SORLCUR_EXP_GRAD_DATE ,SGVTEND_EXP_GRAD_DATE)
 , NVL(SORLCUR_TERM_CODE_GRAD , SGVTEND_TERM_CODE_GRAD)
 , NVL(SORLCUR_ACYR_CODE , SGVTEND_ACYR_CODE)
 , SORLCUR_APPL_KEY_SEQNO
 , SORLCUR_APPL_SEQNO
 , SGVTEND_ACYR_CODE
 , SGVTEND_APRN_CODE
 , SGVTEND_ASTD_CODE
 , SGVTEND_BLCK_CODE
 , SGVTEND_BSKL_CODE
 , SGVTEND_CAPL_CODE
 , SGVTEND_CAST_CODE
 , SGVTEND_COLL_CODE_DUAL
 , SGVTEND_DEGC_CODE_DUAL
 , SGVTEND_DEPT_CODE_DUAL
 , SGVTEND_EDLV_CODE
 , SGVTEND_EGOL_CODE
 , SGVTEND_EMEX_CODE
 , SGVTEND_EXP_GRAD_DATE
 , SGVTEND_FULL_PART_IND
 , SGVTEND_GAIN_CODE
 , SGVTEND_GRAD_CREDIT_APPR_IND
 , SGVTEND_INCM_CODE
 , SGVTEND_LEAV_CODE
 , SGVTEND_LEAV_FROM_DATE
 , SGVTEND_LEAV_TO_DATE
 , SGVTEND_LEVL_CODE_DUAL
 , SGVTEND_MAJR_CODE_DUAL
 , SGVTEND_ORSN_CODE
 , SGVTEND_PRAC_CODE
 , SGVTEND_PREV_CODE
 , SGVTEND_RESD_CODE
 , SGVTEND_SESS_CODE
 , SGVTEND_SITE_CODE
 , SGVTEND_STST_CODE
 , SGVTEND_STYP_CODE
 , SGVTEND_RATE_CODE
 , SGVTEND_TERM_CODE_ASTD
 , SGVTEND_TERM_CODE_CAST
 , SGVTEND_TERM_CODE_GRAD
 , SGVTEND_TERM_CODE_PREV
 , SGVTEND_TRCN_CODE
 , SGVTEND_VOED_CODE
 , SORLCUR_USER_ID_UPDATE
 , SORLCUR_ACTIVITY_DATE_UPDATE
 , SORLCUR_GAPP_SEQNO
 , SORLCUR_CURRENT_CDE
 , SGVTEND_TERM_CODE_END
 , SGVTEND_SCPC_CODE
FROM  sorlcur , sgvtend
WHERE    sorlcur_lmod_code =
   ( Select sb_curriculum_str.f_learner from dual )
  And sorlcur_term_code <  sgvtend_term_code_end
  And sorlcur_pidm =  sgvtend_pidm
  And sgvtend_pidm > 0
"
"BANINST1","SGVATPT","View for Athletic Compliance to gather all terms for a pidm","SELECT DISTINCT sgrsprt_pidm,
                sgrsprt_term_code
FROM   sgrsprt"
"BANINST1","SGVASSI","Assistantship/Fellowship/Internship Query View","(SELECT SGRASSI.SGRASSI_PIDM,
        SGRASSI.SGRASSI_TERM_CODE_EFF,
        SGRASSI.SGRASSI_CATEGORY,
        SGRASSI.SGRASSI_GTYP_CODE,
        SPRIDEN.SPRIDEN_ID,
        SPRIDEN.SPRIDEN_LAST_NAME|| DECODE(SPRIDEN.SPRIDEN_LAST_NAME,NULL,NULL,', ') ||
        SPRIDEN.SPRIDEN_FIRST_NAME|| ' ' ||
        SPRIDEN.SPRIDEN_MI,
        SGRASSI.SGRASSI_SOFF_CODE,
        SGRASSI.SGRASSI_STIPEND,
        SGRASSI.SGRASSI_FTE_VALUE,
        SGRASSI.SGRASSI_MIN_CRSE_LOAD,
        SGRASSI.SGRASSI_MAX_CRSE_LOAD,
        SGRASSI.SGRASSI_REQUIRED_HRS,
        SGRASSI.SGRASSI_GSTA_CODE,
        SGRASSI.SGRASSI_GSTA_DATE,
        SGRASSI.SGRASSI_PROGRAM,
        SGRASSI.SGRASSI_TERM_CODE_CTLG,
        SGRASSI.SGRASSI_DEGC_CODE,
        SGRASSI.SGRASSI_LEVL_CODE,
        SGRASSI.SGRASSI_COLL_CODE,
        SGRASSI.SGRASSI_DEPT_CODE,
        SGRASSI.SGRASSI_MAJR_CODE,
        SGRASSI.SGRASSI_PIDM_SUPERVISOR
	FROM SPRIDEN, SGRASSI
        WHERE SPRIDEN.SPRIDEN_PIDM  = SGRASSI.SGRASSI_PIDM
        AND   SPRIDEN.SPRIDEN_CHANGE_IND IS NULL)"
"BANINST1","SGVADRS","ENROLLED STUDENT ADDRESS HIERARCHY VIEW","SELECT SFBETRM_PIDM,
       SFBETRM_TERM_CODE,
       SPRADDR_ATYP_CODE,
       (SELECT STVATYP_DESC FROM stvatyp WHERE stvatyp_code = spraddr_atyp_code),
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       (SELECT STVSTAT_DESC FROM stvstat WHERE stvstat_code = spraddr_stat_code),
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       (SELECT STVCNTY_DESC FROM stvcnty WHERE stvcnty_code = spraddr_cnty_code),
       SPRADDR_NATN_CODE,
       (SELECT STVNATN_NATION FROM stvnatn WHERE stvnatn_code = spraddr_natn_code)
FROM   SPRADDR X,
       SFBETRM,
       GURFCLR Y
WHERE X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   SYSDATE BETWEEN X.SPRADDR_FROM_DATE
                     AND X.SPRADDR_TO_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   SYSDATE >= X.SPRADDR_FROM_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   SYSDATE <= X.SPRADDR_TO_DATE))
   AND   X.SPRADDR_PIDM (+) = SFBETRM_PIDM
   AND   Y.GURFCLR_SESSION  =TO_CHAR(USERENV('SESSIONID'))
   AND (Y.GURFCLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
          (SELECT MIN(C.GURFCLR_VALUE_ATYP),
		  SUBSTR(MIN(C.GURFCLR_VALUE_ATYP),2,2)
       	     FROM SPRADDR,
	          GURFCLR C
            WHERE C.GURFCLR_SESSION = Y.GURFCLR_SESSION
	      AND SPRADDR_PIDM = X.SPRADDR_PIDM
	      AND SPRADDR_ATYP_CODE = SUBSTR(C.GURFCLR_VALUE_ATYP,2,2)
	      AND SPRADDR_STATUS_IND IS NULL
	      AND ((SPRADDR_TO_DATE IS NULL
	      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
	      AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   SYSDATE BETWEEN SPRADDR_FROM_DATE
                                AND SPRADDR_TO_DATE)
               OR  (SPRADDR_FROM_DATE IS NOT NULL
	      AND   SPRADDR_TO_DATE IS NULL
              AND   SYSDATE  >= SPRADDR_FROM_DATE)
               OR  (SPRADDR_FROM_DATE IS NULL
	      AND   SPRADDR_TO_DATE IS NOT NULL
              AND   SYSDATE <= SPRADDR_TO_DATE)))"
"BANINST1","SGVACUR","This view lists curriculum for a learner and 2 majors, 2 minors and 6 concentrations. ","SELECT
   SGVTEND_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_ROLL_IND
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_TERM_CODE_MATRIC
 , SORLCUR_TERM_CODE_ADMIT
 , SORLCUR_ADMT_CODE
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR_ROLLED_SEQNO
 , SORLCUR.ROWID
  ,  SOKCCUR.f_learner_order (sorlcur_pidm,sorlcur_seqno,sgvtend_term_code_eff)
 , (Select sobcact_active_ind from sobcact where sobcact_cact_code = sorlcur_cact_code)
 , SGVTEND.ROWID
 , SGVTEND_TERM_CODE_EFF
 , SGVTEND_STYP_CODE
 , NVL(SORLCUR_SITE_CODE , SGVTEND_SITE_CODE)
 , NVL(SORLCUR_RATE_CODE , SGVTEND_RATE_CODE)
 , SORLCUR_STYP_CODE
 , NVL(SORLCUR_LEAV_CODE , SGVTEND_LEAV_CODE)
 , NVL(SORLCUR_LEAV_FROM_DATE , SGVTEND_LEAV_FROM_DATE)
 , NVL(SORLCUR_LEAV_TO_DATE , SGVTEND_LEAV_TO_DATE)
 , NVL(SORLCUR_EXP_GRAD_DATE ,SGVTEND_EXP_GRAD_DATE)
 , NVL(SORLCUR_TERM_CODE_GRAD , SGVTEND_TERM_CODE_GRAD)
 , NVL(SORLCUR_ACYR_CODE , SGVTEND_ACYR_CODE)
 , SORLCUR_APPL_KEY_SEQNO
 , SORLCUR_APPL_SEQNO
  ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'MAJR'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'DEPT'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'MAJR'),1,4)
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'DEPT'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'CRUL') )
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'MAJR'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'CRUL') )
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'ACON') ,1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'MAJR'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'ACON'),1,4)
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'ACON'),1,4)
 , SGVTEND_ACYR_CODE
 , SGVTEND_APRN_CODE
 , SGVTEND_ASTD_CODE
 , SGVTEND_BLCK_CODE
 , SGVTEND_BSKL_CODE
 , SGVTEND_CAPL_CODE
 , SGVTEND_CAST_CODE
 , SGVTEND_COLL_CODE_DUAL
 , SGVTEND_DEGC_CODE_DUAL
 , SGVTEND_DEPT_CODE_DUAL
 , SGVTEND_EDLV_CODE
 , SGVTEND_EGOL_CODE
 , SGVTEND_EMEX_CODE
 , SGVTEND_EXP_GRAD_DATE
 , SGVTEND_FULL_PART_IND
 , SGVTEND_GAIN_CODE
 , SGVTEND_GRAD_CREDIT_APPR_IND
 , SGVTEND_INCM_CODE
 , SGVTEND_LEAV_CODE
 , SGVTEND_LEAV_FROM_DATE
 , SGVTEND_LEAV_TO_DATE
 , SGVTEND_LEVL_CODE_DUAL
 , SGVTEND_MAJR_CODE_DUAL
 , SGVTEND_ORSN_CODE
 , SGVTEND_PRAC_CODE
 , SGVTEND_PREV_CODE
 , SGVTEND_RESD_CODE
 , SGVTEND_SESS_CODE
 , SGVTEND_SITE_CODE
 , SGVTEND_STST_CODE
 , SGVTEND_STYP_CODE
 , SGVTEND_RATE_CODE
 , SGVTEND_TERM_CODE_ASTD
 , SGVTEND_TERM_CODE_CAST
 , SGVTEND_TERM_CODE_GRAD
 , SGVTEND_TERM_CODE_PREV
 , SGVTEND_TRCN_CODE
 , SGVTEND_VOED_CODE
 , SORLCUR_USER_ID_UPDATE
 , SORLCUR_ACTIVITY_DATE_UPDATE
 , SORLCUR_GAPP_SEQNO
 , SORLCUR_CURRENT_CDE
 , SGVTEND_TERM_CODE_END
FROM  sorlcur , sgvtend
WHERE     sorlcur_lmod_code =
  ( Select sb_curriculum_str.f_learner from dual)
  And sorlcur_term_code <  sgvtend_term_code_end
  And sorlcur_pidm =  sgvtend_pidm
  And sgvtend_pidm > 0
"
"BANINST1","SFVTSEC","Section Grouped Meeting Data View for Voice Response","SELECT 	'0',
	SSBSECT.SSBSECT_TERM_CODE,
	SSBSECT.SSBSECT_PTRM_CODE,
	SSBSECT.SSBSECT_CRN,
	SSBSECT.SSBSECT_SUBJ_CODE,
	SSBSECT.SSBSECT_CRSE_NUMB,
	SSBSECT.SSBSECT_SEQ_NUMB,
	SSBSECT.SSBSECT_SSTS_CODE,
	SSBSECT.SSBSECT_SCHD_CODE,
	SSBSECT.SSBSECT_CAMP_CODE,
	SSBSECT.SSBSECT_LINK_IDENT,
	SSBSECT.SSBSECT_SEATS_AVAIL,
	SSBSECT.SSBSECT_PTRM_START_DATE,
	SSBSECT.SSBSECT_PTRM_END_DATE,
	NULL,
	NULL,
  NVL(SSBSECT.SSBSECT_WAIT_COUNT,0),
  SSBSECT.SSBSECT_VOICE_AVAIL
	FROM SSBSECT
        WHERE  NOT EXISTS (SELECT 'X' FROM SSRMEET
                           WHERE  SSRMEET.SSRMEET_TERM_CODE = SSBSECT.SSBSECT_TERM_CODE
                              AND SSRMEET.SSRMEET_CRN       = SSBSECT.SSBSECT_CRN)
UNION ALL
SELECT 	NVL(SSRMEET.SSRMEET_CRN||SSRMEET.SSRMEET_BLDG_CODE||
            SSRMEET.SSRMEET_ROOM_CODE,'0'),
	SSBSECT.SSBSECT_TERM_CODE,
	SSBSECT.SSBSECT_PTRM_CODE,
	SSBSECT.SSBSECT_CRN,
	SSBSECT.SSBSECT_SUBJ_CODE,
	SSBSECT.SSBSECT_CRSE_NUMB,
	SSBSECT.SSBSECT_SEQ_NUMB,
	SSBSECT.SSBSECT_SSTS_CODE,
	SSBSECT.SSBSECT_SCHD_CODE,
	SSBSECT.SSBSECT_CAMP_CODE,
	SSBSECT.SSBSECT_LINK_IDENT,
	SSBSECT.SSBSECT_SEATS_AVAIL,
	SSBSECT.SSBSECT_PTRM_START_DATE,
	SSBSECT.SSBSECT_PTRM_END_DATE,
	SSRMEET.SSRMEET_BEGIN_TIME,
	SSRMEET.SSRMEET_END_TIME,
        NVL(SSBSECT.SSBSECT_WAIT_COUNT,0),
        SSBSECT.SSBSECT_VOICE_AVAIL
	FROM SSRMEET, SSBSECT
        WHERE SSRMEET.SSRMEET_TERM_CODE = SSBSECT.SSBSECT_TERM_CODE
          AND SSRMEET.SSRMEET_CRN       = SSBSECT.SSBSECT_CRN"
"BANINST1","SFVTMST","This view lists time status and the highest date for the time status within the NSC reporting time periods. ","select  sfbetrm_pidm,
        sfbetrm_term_code,
        sfbetrm_tmst_code,
        sfbetrm_tmst_date,
        stvterm_start_DATE  ,
        stvterm_start_DATE,
        '',
        '',
        ''
  FROM stvterm, sfbetrm
  WHERE    stvterm_code = sfbetrm_term_code
  and not exists ( select 1 from sfrtctl
                where sfrtctl_term_code = sfbetrm.sfbetrm_term_code)
union all
  select sfbetrm_pidm,
        sfbetrm_term_code,
        sfrthst_tmst_code,
        sfrthst_tmst_date,
        stvterm_start_DATE  ,
        sfrtctl_rprt_date ,
        sfrtctl_branch_cde,
        SFRTCTL_RPRT_STANDARD_IND,
        SFRTCTL_INST_FICE
  from stvterm, sfrtctl,  sfrthst, sfbetrm
  WHERE   stvterm_code = sfbetrm_term_code
  and sfrtctl_term_code = sfbetrm_term_code
  and sfrthst_pidm = sfbetrm_pidm
  and sfrthst_term_code = sfbetrm_term_code
  and sfrthst_tmst_date = ( select max(m.sfrthst_tmst_date)
       from sfrthst m
       where m.sfrthst_pidm = sfbetrm.sfbetrm_pidm
       and m.sfrthst_term_code = sfbetrm.sfbetrm_term_code
       and trunc( m.sfrthst_tmst_date) <= trunc(sfrtctl.sfrtctl_rprt_date)) "
"BANINST1","SFVTMSS","This view lists time status and the highest date for the time status within the SFRSSCR reporting time periods. ","select  sfbetrm_pidm,
        sfbetrm_term_code,
        sfbetrm_tmst_code,
        sfbetrm_tmst_date,
        stvterm_start_DATE  ,
        stvterm_start_DATE ,
        ''
  FROM stvterm, sfbetrm
  WHERE    stvterm_code = sfbetrm_term_code
  and not exists ( select 1 from sfrsctl
                where sfrsctl_term_code = sfbetrm.sfbetrm_term_code)
union all
  select sfbetrm_pidm,
        sfbetrm_term_code,
        sfrthst_tmst_code,
        sfrthst_tmst_date,
        stvterm_start_DATE  ,
        sfrsctl_submittal_date ,
        sfrsctl_process_name
  from stvterm, sfrsctl,  sfrthst, sfbetrm
  WHERE   stvterm_code = sfbetrm_term_code
  and sfrsctl_term_code = sfbetrm_term_code
  and sfrthst_pidm = sfbetrm_pidm
  and sfrthst_term_code = sfbetrm_term_code
  and sfrthst_tmst_date = ( select max(m.sfrthst_tmst_date)
       from sfrthst m
       where m.sfrthst_pidm = sfbetrm.sfbetrm_pidm
       and m.sfrthst_term_code = sfbetrm.sfbetrm_term_code
       and trunc( m.sfrthst_tmst_date) <= trunc(sfrsctl.SFRSCTL_SUBMITTAL_DATE)) "
"BANINST1","SFVTFAN","","SELECT TBRACCD_TERM_CODE,
       TBRACCD_CRN,
       SSBSECT_SUBJ_CODE,
       SSBSECT_CRSE_NUMB,
       SSBSECT_SEQ_NUMB,
       TBRACCD_DETAIL_CODE,
       TBBDETC_DCAT_CODE,
       A.SGBSTDN_ADMT_CODE,
       A.SGBSTDN_DEGC_CODE_1,
       SFRSTCR_LEVL_CODE,
       SFRSTCR_RSTS_CODE,
       NVL(SSBSECT_CRSE_TITLE,SCBCRSE_TITLE),
       DECODE(SPRIDEN_LAST_NAME,NULL,NULL,
       SPRIDEN_LAST_NAME||', '||
       SPRIDEN_FIRST_NAME||' '||
       SPRIDEN_MI),
       TBRACCD_TRAN_NUMBER,
       TBRACCD_AMOUNT
FROM   SFRSTCR, SPRIDEN, SGBSTDN A,
       SCBCRSE, TBBDETC, SSBSECT, SIRASGN,
       TBRACCD
WHERE  SSBSECT_TERM_CODE = TBRACCD_TERM_CODE
  AND  SSBSECT_CRN = TBRACCD_CRN
  AND  TBBDETC_DETAIL_CODE = TBRACCD_DETAIL_CODE
  AND  TBRACCD_CRN IS NOT NULL
  AND  SCBCRSE_SUBJ_CODE = SSBSECT_SUBJ_CODE
  AND  SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB
  AND  SFRSTCR_PIDM = TBRACCD_PIDM
  AND  SFRSTCR_TERM_CODE = TBRACCD_TERM_CODE
  AND  SFRSTCR_CRN = TBRACCD_CRN
  AND  A.SGBSTDN_PIDM = TBRACCD_PIDM
  AND  SPRIDEN_PIDM = SIRASGN_PIDM
  AND  SSBSECT_TERM_CODE = SIRASGN_TERM_CODE
  AND  SSBSECT_CRN = SIRASGN_CRN
  AND  SIRASGN_PRIMARY_IND = 'Y'
  AND  SPRIDEN_CHANGE_IND IS NULL
  AND  A.SGBSTDN_TERM_CODE_EFF =
       (SELECT MAX(B.SGBSTDN_TERM_CODE_EFF)
        FROM   SGBSTDN B
        WHERE  B.SGBSTDN_PIDM = TBRACCD_PIDM
        AND    B.SGBSTDN_TERM_CODE_EFF <= TBRACCD_TERM_CODE)
UNION ALL
SELECT TBRACCD_TERM_CODE,
       TBRACCD_CRN,
       SSBSECT_SUBJ_CODE,
       SSBSECT_CRSE_NUMB,
       SSBSECT_SEQ_NUMB,
       TBRACCD_DETAIL_CODE,
       TBBDETC_DCAT_CODE,
       A.SGBSTDN_ADMT_CODE,
       A.SGBSTDN_DEGC_CODE_1,
       NULL,
       NULL,
       NVL(SSBSECT_CRSE_TITLE,SCBCRSE_TITLE),
       DECODE(SPRIDEN_LAST_NAME,NULL,NULL,
       SPRIDEN_LAST_NAME||', '||
       SPRIDEN_FIRST_NAME||' '||
       SPRIDEN_MI),
       TBRACCD_TRAN_NUMBER,
       TBRACCD_AMOUNT
FROM   SPRIDEN, SGBSTDN A,
       SCBCRSE, TBBDETC, SSBSECT, SIRASGN,
       TBRACCD
WHERE  SSBSECT_TERM_CODE = TBRACCD_TERM_CODE
  AND  SSBSECT_CRN = TBRACCD_CRN
  AND  TBBDETC_DETAIL_CODE = TBRACCD_DETAIL_CODE
  AND  TBRACCD_CRN IS NOT NULL
  AND  SCBCRSE_SUBJ_CODE = SSBSECT_SUBJ_CODE
  AND  SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB
  AND  A.SGBSTDN_PIDM = TBRACCD_PIDM
  AND  SPRIDEN_PIDM = SIRASGN_PIDM
  AND  SSBSECT_TERM_CODE = SIRASGN_TERM_CODE
  AND  SSBSECT_CRN = SIRASGN_CRN
  AND  SIRASGN_PRIMARY_IND = 'Y'
  AND  SPRIDEN_CHANGE_IND IS NULL
  AND  A.SGBSTDN_TERM_CODE_EFF =
       (SELECT MAX(B.SGBSTDN_TERM_CODE_EFF)
        FROM   SGBSTDN B
        WHERE  B.SGBSTDN_PIDM = TBRACCD_PIDM
        AND    B.SGBSTDN_TERM_CODE_EFF <= TBRACCD_TERM_CODE)
  AND  NOT EXISTS(SELECT 'X' FROM SFRSTCR
                  WHERE  SFRSTCR.SFRSTCR_PIDM       = TBRACCD.TBRACCD_PIDM
                    AND  SFRSTCR.SFRSTCR_TERM_CODE  = TBRACCD.TBRACCD_TERM_CODE
                    AND  SFRSTCR.SFRSTCR_CRN        = TBRACCD.TBRACCD_CRN)"
"BANINST1","SFVSTUM","Student Section Grouped Meeting Data View","SELECT '0',
          SFRSTCR.SFRSTCR_PIDM, SFRSTCR.SFRSTCR_TERM_CODE,
          SSBSECT.SSBSECT_PTRM_CODE, SSBSECT.SSBSECT_CRN,
          SSBSECT.SSBSECT_SUBJ_CODE, SSBSECT.SSBSECT_CRSE_NUMB,
          SSBSECT.SSBSECT_SEQ_NUMB, SSBSECT.SSBSECT_SSTS_CODE,
          SSBSECT.SSBSECT_SCHD_CODE, SSBSECT.SSBSECT_CAMP_CODE,
          SSBSECT.SSBSECT_LINK_IDENT, SSBSECT.SSBSECT_SEATS_AVAIL,
          NULL, NULL,
          NULL, NULL,
          NULL, NULL,
          SFRSTCR.SFRSTCR_CREDIT_HR, SFRSTCR.SFRSTCR_BILL_HR,
          SFRSTCR.SFRSTCR_RSTS_CODE, SFRSTCR.SFRSTCR_ERROR_FLAG,
          NVL (SSBSECT.SSBSECT_WAIT_COUNT, 0),
          SUBSTR((SELECT SSRXLST_XLST_GROUP
                  FROM   SSRXLST
                  WHERE  SSRXLST_TERM_CODE=SFRSTCR.SFRSTCR_TERM_CODE
                    AND  SSRXLST_CRN      =SFRSTCR.SFRSTCR_CRN),1,2) SSRXLST_XLST_GROUP,
          NULL, NULL,
          NULL, NULL,
          NULL, NULL,
          NULL, NULL,
          NULL, SFRSTCR.SFRSTCR_STSP_KEY_SEQUENCE
     FROM SSBSECT, SFRSTCR
      WHERE SSBSECT.SSBSECT_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
      AND SSBSECT.SSBSECT_CRN = SFRSTCR.SFRSTCR_CRN
      AND ( ( SFRSTCR.SFRSTCR_ERROR_FLAG <> 'D'
         AND SFRSTCR.SFRSTCR_ERROR_FLAG <> 'F')
         OR SFRSTCR.SFRSTCR_ERROR_FLAG IS NULL)
     AND NOT EXISTS (SELECT 'X' FROM SSRMEET
       WHERE SSRMEET.SSRMEET_TERM_CODE= SFRSTCR.SFRSTCR_TERM_CODE
       AND SSRMEET.SSRMEET_CRN= SFRSTCR.SFRSTCR_CRN)
 UNION ALL
 SELECT NVL (
             SSRMEET.SSRMEET_CRN || SSRMEET.SSRMEET_BLDG_CODE ||
                SSRMEET.SSRMEET_ROOM_CODE,
             '0'
          ),
          SFRSTCR.SFRSTCR_PIDM, SFRSTCR.SFRSTCR_TERM_CODE,
          SSBSECT.SSBSECT_PTRM_CODE, SSBSECT.SSBSECT_CRN,
          SSBSECT.SSBSECT_SUBJ_CODE, SSBSECT.SSBSECT_CRSE_NUMB,
          SSBSECT.SSBSECT_SEQ_NUMB, SSBSECT.SSBSECT_SSTS_CODE,
          SSBSECT.SSBSECT_SCHD_CODE, SSBSECT.SSBSECT_CAMP_CODE,
          SSBSECT.SSBSECT_LINK_IDENT, SSBSECT.SSBSECT_SEATS_AVAIL,
          SSRMEET.SSRMEET_START_DATE, SSRMEET.SSRMEET_END_DATE,
          SSRMEET.SSRMEET_BEGIN_TIME, SSRMEET.SSRMEET_END_TIME,
          SSRMEET.SSRMEET_BLDG_CODE, SSRMEET.SSRMEET_ROOM_CODE,
          SFRSTCR.SFRSTCR_CREDIT_HR, SFRSTCR.SFRSTCR_BILL_HR,
          SFRSTCR.SFRSTCR_RSTS_CODE, SFRSTCR.SFRSTCR_ERROR_FLAG,
          NVL (SSBSECT.SSBSECT_WAIT_COUNT, 0),
          SUBSTR((SELECT SSRXLST_XLST_GROUP
                  FROM   SSRXLST
                  WHERE  SSRXLST_TERM_CODE=SFRSTCR.SFRSTCR_TERM_CODE
                    AND  SSRXLST_CRN      =SFRSTCR.SFRSTCR_CRN),1,2) SSRXLST_XLST_GROUP,
          SSRMEET.SSRMEET_MON_DAY, SSRMEET.SSRMEET_TUE_DAY,
          SSRMEET.SSRMEET_WED_DAY, SSRMEET.SSRMEET_THU_DAY,
          SSRMEET.SSRMEET_FRI_DAY, SSRMEET.SSRMEET_SAT_DAY,
          SSRMEET.SSRMEET_SUN_DAY, SSRMEET.SSRMEET_CATAGORY,
          SSRMEET.SSRMEET_MTYP_CODE,
          SFRSTCR.SFRSTCR_STSP_KEY_SEQUENCE
     FROM SSRMEET, SSBSECT, SFRSTCR
    WHERE SSBSECT.SSBSECT_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
      AND SSBSECT.SSBSECT_CRN = SFRSTCR.SFRSTCR_CRN
      AND SSRMEET.SSRMEET_TERM_CODE  = SFRSTCR.SFRSTCR_TERM_CODE
      AND SSRMEET.SSRMEET_CRN  = SFRSTCR.SFRSTCR_CRN
      AND (
                (
                       SFRSTCR.SFRSTCR_ERROR_FLAG <> 'D'
                   AND SFRSTCR.SFRSTCR_ERROR_FLAG <> 'F'
                )
             OR SFRSTCR.SFRSTCR_ERROR_FLAG IS NULL
          )
"
"BANINST1","SFVSTTM","Student Section Grouped Meeting Data View","SELECT NVL(SSRMEET.SSRMEET_CRN || SSRMEET.SSRMEET_BLDG_CODE ||
           SSRMEET.SSRMEET_ROOM_CODE,
           '0'),
       SFTREGS.SFTREGS_PIDM,
       SFTREGS.SFTREGS_TERM_CODE,
       SSBSECT.SSBSECT_PTRM_CODE,
       SSBSECT.SSBSECT_CRN,
       SSBSECT.SSBSECT_SUBJ_CODE,
       SSBSECT.SSBSECT_CRSE_NUMB,
       SSBSECT.SSBSECT_SEQ_NUMB,
       SSBSECT.SSBSECT_SSTS_CODE,
       SSBSECT.SSBSECT_SCHD_CODE,
       SSBSECT.SSBSECT_CAMP_CODE,
       SSBSECT.SSBSECT_LINK_IDENT,
       SSBSECT.SSBSECT_SEATS_AVAIL,
       SSRMEET.SSRMEET_START_DATE,
       SSRMEET.SSRMEET_END_DATE,
       SSRMEET.SSRMEET_BEGIN_TIME,
       SSRMEET.SSRMEET_END_TIME,
       SSRMEET.SSRMEET_BLDG_CODE,
       SSRMEET.SSRMEET_ROOM_CODE,
       SFTREGS.SFTREGS_CREDIT_HR,
       SFTREGS.SFTREGS_BILL_HR,
       SFTREGS.SFTREGS_RSTS_CODE,
       SFTREGS.SFTREGS_ERROR_FLAG,
       NVL(SSBSECT.SSBSECT_WAIT_COUNT, 0),
       SUBSTR(SSKSELS.F_GET_SSRXLST_GROUP(SFTREGS.SFTREGS_TERM_CODE,
                                   SFTREGS.SFTREGS_CRN),1,2),
       SSRMEET.SSRMEET_MON_DAY,
       SSRMEET.SSRMEET_TUE_DAY,
       SSRMEET.SSRMEET_WED_DAY,
       SSRMEET.SSRMEET_THU_DAY,
       SSRMEET.SSRMEET_FRI_DAY,
       SSRMEET.SSRMEET_SAT_DAY,
       SSRMEET.SSRMEET_SUN_DAY,
       SSRMEET.SSRMEET_CATAGORY
  FROM SSBSECT, SSRMEET, SFTREGS
 WHERE SSBSECT.SSBSECT_TERM_CODE = SFTREGS.SFTREGS_TERM_CODE
   AND SSBSECT.SSBSECT_CRN = SFTREGS.SFTREGS_CRN
   AND SSRMEET.SSRMEET_TERM_CODE = SFTREGS.SFTREGS_TERM_CODE
   AND SSRMEET.SSRMEET_CRN = SFTREGS.SFTREGS_CRN
   AND ((SFTREGS.SFTREGS_ERROR_FLAG <> 'D' AND
       SFTREGS.SFTREGS_ERROR_FLAG <> 'F') OR
       SFTREGS.SFTREGS_ERROR_FLAG IS NULL)
UNION ALL
SELECT '0',
       SFTREGS.SFTREGS_PIDM,
       SFTREGS.SFTREGS_TERM_CODE,
       SSBSECT.SSBSECT_PTRM_CODE,
       SSBSECT.SSBSECT_CRN,
       SSBSECT.SSBSECT_SUBJ_CODE,
       SSBSECT.SSBSECT_CRSE_NUMB,
       SSBSECT.SSBSECT_SEQ_NUMB,
       SSBSECT.SSBSECT_SSTS_CODE,
       SSBSECT.SSBSECT_SCHD_CODE,
       SSBSECT.SSBSECT_CAMP_CODE,
       SSBSECT.SSBSECT_LINK_IDENT,
       SSBSECT.SSBSECT_SEATS_AVAIL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       SFTREGS.SFTREGS_CREDIT_HR,
       SFTREGS.SFTREGS_BILL_HR,
       SFTREGS.SFTREGS_RSTS_CODE,
       SFTREGS.SFTREGS_ERROR_FLAG,
       NVL(SSBSECT.SSBSECT_WAIT_COUNT, 0),
       SUBSTR(SSKSELS.F_GET_SSRXLST_GROUP(SFTREGS.SFTREGS_TERM_CODE,
                                   SFTREGS.SFTREGS_CRN),1,2),
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL
  FROM SSBSECT, SFTREGS
 WHERE SSBSECT.SSBSECT_TERM_CODE = SFTREGS.SFTREGS_TERM_CODE
   AND SSBSECT.SSBSECT_CRN = SFTREGS.SFTREGS_CRN
   AND ((SFTREGS.SFTREGS_ERROR_FLAG <> 'D' AND
       SFTREGS.SFTREGS_ERROR_FLAG <> 'F') OR
       SFTREGS.SFTREGS_ERROR_FLAG IS NULL)
   AND NOT EXISTS
 (SELECT 1
          FROM SSRMEET
         WHERE SSRMEET.SSRMEET_TERM_CODE = SFTREGS.SFTREGS_TERM_CODE
           AND SSRMEET.SSRMEET_CRN = SFTREGS.SFTREGS_CRN)"
"BANINST1","SFVSTMS","Student Section Grouped Meeting Data with Multiple Instructors View","SELECT NVL (
             SSRMEET.SSRMEET_CRN || SSRMEET.SSRMEET_BLDG_CODE ||
                SSRMEET.SSRMEET_ROOM_CODE,
             '0'
          ),
          SFRSTCR.SFRSTCR_PIDM, SFRSTCR.SFRSTCR_TERM_CODE,
          SSBSECT.SSBSECT_PTRM_CODE, SFRSTCR.SFRSTCR_LEVL_CODE,
          SSBSECT.SSBSECT_CRN, NULL, NULL, NULL, NULL, NULL,
          SSBSECT.SSBSECT_GRADABLE_IND,
          SSBSECT.SSBSECT_CREDIT_HRS,
          SFRSTCR.SFRSTCR_GRDE_CODE,
          SSBSECT.SSBSECT_SUBJ_CODE, SSBSECT.SSBSECT_CRSE_NUMB,
          SSBSECT.SSBSECT_CRSE_TITLE,
          SSBSECT.SSBSECT_SEQ_NUMB, SSBSECT.SSBSECT_SSTS_CODE,
          SSBSECT.SSBSECT_SCHD_CODE, SFRSTCR.SFRSTCR_CAMP_CODE,
          SSBSECT.SSBSECT_LINK_IDENT, SSBSECT.SSBSECT_SEATS_AVAIL,
          SSBSECT.SSBSECT_INSM_CODE,
          nvl(aa.SFRAREG_START_DATE,ssbsect_ptrm_start_date),
          nvl(bb.SFRAREG_COMPLETION_DATE,ssbsect_ptrm_end_date),
          SSRMEET.SSRMEET_START_DATE, SSRMEET.SSRMEET_END_DATE,
          SSRMEET.SSRMEET_BEGIN_TIME, SSRMEET.SSRMEET_END_TIME,
          SSRMEET.SSRMEET_BLDG_CODE, SSRMEET.SSRMEET_ROOM_CODE,
          SFRSTCR.SFRSTCR_CREDIT_HR, SFRSTCR.SFRSTCR_BILL_HR,
          SFRSTCR.SFRSTCR_RSTS_CODE, SFRSTCR.SFRSTCR_ERROR_FLAG,
          SFRSTCR.SFRSTCR_ADD_DATE,
          NVL (SSBSECT.SSBSECT_WAIT_COUNT, 0), SSRXLST.SSRXLST_XLST_GROUP,
          SSRMEET.SSRMEET_MON_DAY, SSRMEET.SSRMEET_TUE_DAY,
          SSRMEET.SSRMEET_WED_DAY, SSRMEET.SSRMEET_THU_DAY,
          SSRMEET.SSRMEET_FRI_DAY, SSRMEET.SSRMEET_SAT_DAY,
          SSRMEET.SSRMEET_SUN_DAY, SSRMEET.SSRMEET_CATAGORY,
          SSRMEET.SSRMEET_MTYP_CODE,SFRSTCR.SFRSTCR_RSTS_DATE,
          SFRSTCR.SFRSTCR_STSP_KEY_SEQUENCE
     FROM SSRXLST, SSRMEET, SFRAREG aa, SFRAREG bb,
          STVRSTS, SSBSECT, SFRSTCR
    WHERE SSBSECT.SSBSECT_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
      AND SSBSECT.SSBSECT_CRN = SFRSTCR.SFRSTCR_CRN
      AND STVRSTS_CODE = SFRSTCR_RSTS_CODE
      AND NVL(STVRSTS_SB_PRINT_IND,'N') = 'Y'
      AND SFRSTCR.SFRSTCR_PIDM = aa.sfrareg_pidm(+)
      AND SFRSTCR.SFRSTCR_CRN = aa.sfrareg_crn(+)
      AND SFRSTCR.SFRSTCR_TERM_CODE = aa.sfrareg_term_code(+)
      AND aa.SFRAREG_EXTENSION_NUMBER(+) = 0
      AND SFRSTCR.SFRSTCR_PIDM = bb.sfrareg_pidm(+)
      AND SFRSTCR.SFRSTCR_CRN = bb.sfrareg_crn(+)
      AND SFRSTCR.SFRSTCR_TERM_CODE = bb.sfrareg_term_code(+)
      AND nvl(bb.SFRAREG_EXTENSION_NUMBER,999) =
          (SELECT nvl(MAX(cc.SFRAREG_EXTENSION_NUMBER),999)
             FROM STVRSTS xx, SFRAREG cc
            WHERE cc.SFRAREG_PIDM = SFRSTCR.SFRSTCR_PIDM
              AND cc.SFRAREG_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
              AND cc.SFRAREG_CRN = SFRSTCR.SFRSTCR_CRN
              AND cc.SFRAREG_RSTS_CODE = xx.STVRSTS_CODE
              AND (
                    SFRSTCR_PTRM_CODE IS NOT NULL
                    OR
                    (
                      SFRSTCR_PTRM_CODE IS NULL
                      AND xx.STVRSTS_WITHDRAW_IND = 'N'
                    )
                  )
          )
      AND SSRXLST.SSRXLST_TERM_CODE (+) = SFRSTCR.SFRSTCR_TERM_CODE
      AND SSRXLST.SSRXLST_CRN (+) = SFRSTCR.SFRSTCR_CRN
      AND SSRMEET.SSRMEET_TERM_CODE (+) = SFRSTCR.SFRSTCR_TERM_CODE
      AND SSRMEET.SSRMEET_CRN (+) = SFRSTCR.SFRSTCR_CRN
      AND (
             NOT EXISTS
                 (SELECT 'x' FROM SIRASGN
                   WHERE SIRASGN_CRN = SFRSTCR_CRN
                     AND SIRASGN_TERM_CODE = SFRSTCR_TERM_CODE
                     AND SIRASGN_CATEGORY = SSRMEET_CATAGORY)
          )
UNION
   SELECT NVL (
             SSRMEET.SSRMEET_CRN || SSRMEET.SSRMEET_BLDG_CODE ||
                SSRMEET.SSRMEET_ROOM_CODE,
             '0'
          ),
          SFRSTCR.SFRSTCR_PIDM, SFRSTCR.SFRSTCR_TERM_CODE,
          SSBSECT.SSBSECT_PTRM_CODE, SFRSTCR.SFRSTCR_LEVL_CODE,
          SSBSECT.SSBSECT_CRN, SIRASGN.SIRASGN_PIDM,
          SPRIDEN_LAST_NAME,
          SPRIDEN_FIRST_NAME,
          SPRIDEN_MI ,
          SIRASGN.SIRASGN_PRIMARY_IND,
          SSBSECT.SSBSECT_GRADABLE_IND,
          SSBSECT.SSBSECT_CREDIT_HRS,
          SFRSTCR.SFRSTCR_GRDE_CODE,
          SSBSECT.SSBSECT_SUBJ_CODE, SSBSECT.SSBSECT_CRSE_NUMB,
          SSBSECT.SSBSECT_CRSE_TITLE,
          SSBSECT.SSBSECT_SEQ_NUMB, SSBSECT.SSBSECT_SSTS_CODE,
          SSBSECT.SSBSECT_SCHD_CODE, SFRSTCR.SFRSTCR_CAMP_CODE,
          SSBSECT.SSBSECT_LINK_IDENT, SSBSECT.SSBSECT_SEATS_AVAIL,
          SSBSECT.SSBSECT_INSM_CODE,
          nvl(aa.SFRAREG_START_DATE,ssbsect_ptrm_start_date),
          nvl(bb.SFRAREG_COMPLETION_DATE,ssbsect_ptrm_end_date),
          SSRMEET.SSRMEET_START_DATE, SSRMEET.SSRMEET_END_DATE,
          SSRMEET.SSRMEET_BEGIN_TIME, SSRMEET.SSRMEET_END_TIME,
          SSRMEET.SSRMEET_BLDG_CODE, SSRMEET.SSRMEET_ROOM_CODE,
          SFRSTCR.SFRSTCR_CREDIT_HR, SFRSTCR.SFRSTCR_BILL_HR,
          SFRSTCR.SFRSTCR_RSTS_CODE, SFRSTCR.SFRSTCR_ERROR_FLAG,
          SFRSTCR.SFRSTCR_ADD_DATE,
          NVL (SSBSECT.SSBSECT_WAIT_COUNT, 0), SSRXLST.SSRXLST_XLST_GROUP,
          SSRMEET.SSRMEET_MON_DAY, SSRMEET.SSRMEET_TUE_DAY,
          SSRMEET.SSRMEET_WED_DAY, SSRMEET.SSRMEET_THU_DAY,
          SSRMEET.SSRMEET_FRI_DAY, SSRMEET.SSRMEET_SAT_DAY,
          SSRMEET.SSRMEET_SUN_DAY, SSRMEET.SSRMEET_CATAGORY,
          SSRMEET.SSRMEET_MTYP_CODE,SFRSTCR.SFRSTCR_RSTS_DATE,
          SFRSTCR.SFRSTCR_STSP_KEY_SEQUENCE
     FROM SSRXLST, SSRMEET, SFRAREG aa, SFRAREG bb, SPRIDEN, SIRASGN,
          STVRSTS, SSBSECT, SFRSTCR
    WHERE SSBSECT.SSBSECT_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
      AND SSBSECT.SSBSECT_CRN = SFRSTCR.SFRSTCR_CRN
      AND SIRASGN.SIRASGN_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
      AND SIRASGN.SIRASGN_CRN = SFRSTCR.SFRSTCR_CRN
      AND STVRSTS_CODE = SFRSTCR_RSTS_CODE
      AND NVL(STVRSTS_SB_PRINT_IND,'N') = 'Y'
      AND SPRIDEN_PIDM = SIRASGN.SIRASGN_PIDM
      AND SPRIDEN_CHANGE_IND IS NULL
      AND SFRSTCR.SFRSTCR_PIDM = aa.sfrareg_pidm(+)
      AND SFRSTCR.SFRSTCR_CRN = aa.sfrareg_crn(+)
      AND SFRSTCR.SFRSTCR_TERM_CODE = aa.sfrareg_term_code(+)
      AND aa.SFRAREG_EXTENSION_NUMBER(+) = 0
      AND SFRSTCR.SFRSTCR_PIDM = bb.sfrareg_pidm(+)
      AND SFRSTCR.SFRSTCR_CRN = bb.sfrareg_crn(+)
      AND SFRSTCR.SFRSTCR_TERM_CODE = bb.sfrareg_term_code(+)
      AND nvl(bb.SFRAREG_EXTENSION_NUMBER,999) =
          (SELECT nvl(MAX(cc.SFRAREG_EXTENSION_NUMBER),999)
             FROM STVRSTS xx, SFRAREG cc
            WHERE cc.SFRAREG_PIDM = SFRSTCR.SFRSTCR_PIDM
              AND cc.SFRAREG_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
              AND cc.SFRAREG_CRN = SFRSTCR.SFRSTCR_CRN
              AND cc.SFRAREG_RSTS_CODE = xx.STVRSTS_CODE
              AND (
                    SFRSTCR_PTRM_CODE IS NOT NULL
                    OR
                    (
                      SFRSTCR_PTRM_CODE IS NULL
                      AND xx.STVRSTS_WITHDRAW_IND = 'N'
                    )
                  )
          )
      AND SSRXLST.SSRXLST_TERM_CODE (+) = SFRSTCR.SFRSTCR_TERM_CODE
      AND SSRXLST.SSRXLST_CRN (+) = SFRSTCR.SFRSTCR_CRN
      AND SSRMEET.SSRMEET_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
      AND SSRMEET.SSRMEET_CRN = SFRSTCR.SFRSTCR_CRN
      AND SIRASGN_TERM_CODE = SFRSTCR_TERM_CODE
      AND SIRASGN_CRN = SFRSTCR_CRN
      AND SSRMEET_CATAGORY = SIRASGN_CATEGORY
"
"BANINST1","SFVSTDN","Enrollment Summary Data View","SELECT SFBETRM.SFBETRM_TERM_CODE,
       SFBETRM.SFBETRM_ESTS_CODE,
       SGBSTDN.SGBSTDN_LEVL_CODE,
       SGBSTDN.SGBSTDN_COLL_CODE_1,
       SGBSTDN.SGBSTDN_MAJR_CODE_1,
       SGBSTDN.SGBSTDN_CAMP_CODE,
       SGBSTDN.SGBSTDN_FULL_PART_IND,
       SGBSTDN.SGBSTDN_SESS_CODE,
       SGBSTDN.SGBSTDN_RESD_CODE,
       SPBPERS.SPBPERS_SEX,
       SPBPERS.SPBPERS_ETHN_CODE,
       SFBETRM.SFBETRM_PIDM
  FROM SPBPERS, SGBSTDN, SFBETRM
 WHERE SPBPERS.SPBPERS_PIDM = SFBETRM.SFBETRM_PIDM
   AND SGBSTDN.SGBSTDN_PIDM = SFBETRM.SFBETRM_PIDM
   AND SGBSTDN.SGBSTDN_TERM_CODE_EFF =
       (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
          FROM SGBSTDN
         WHERE SGBSTDN_PIDM = SFBETRM.SFBETRM_PIDM
           AND SGBSTDN_TERM_CODE_EFF <= SFBETRM.SFBETRM_TERM_CODE)
UNION ALL
SELECT SFBETRM.SFBETRM_TERM_CODE,
       SFBETRM.SFBETRM_ESTS_CODE,
       SGBSTDN.SGBSTDN_LEVL_CODE,
       SGBSTDN.SGBSTDN_COLL_CODE_1,
       SGBSTDN.SGBSTDN_MAJR_CODE_1,
       SGBSTDN.SGBSTDN_CAMP_CODE,
       SGBSTDN.SGBSTDN_FULL_PART_IND,
       SGBSTDN.SGBSTDN_SESS_CODE,
       SGBSTDN.SGBSTDN_RESD_CODE,
       NULL,
       NULL,
       SFBETRM.SFBETRM_PIDM
  FROM SGBSTDN, SFBETRM
 WHERE SGBSTDN.SGBSTDN_PIDM = SFBETRM.SFBETRM_PIDM
   AND SGBSTDN.SGBSTDN_TERM_CODE_EFF =
       (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
          FROM SGBSTDN
         WHERE SGBSTDN_PIDM = SFBETRM.SFBETRM_PIDM
           AND SGBSTDN_TERM_CODE_EFF <= SFBETRM.SFBETRM_TERM_CODE)
   AND NOT EXISTS
 (SELECT 'X'
          FROM SPBPERS
         WHERE SPBPERS.SPBPERS_PIDM = SFBETRM.SFBETRM_PIDM)
 ORDER BY 1,12"
"BANINST1","SFVSTC2","","select
 sfbetrm_pidm,
 sfbetrm_term_code,
 sfrstcr_crn,
 substr(f_enrolled_this_term(sfbetrm_pidm, sfbetrm_term_code),1,1),
 substr(f_registered_this_term(sfbetrm_pidm, sfbetrm_term_code),1,1),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SUF'),1,20),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'LSUF'),1,60),
 TO_DATE(goksels.f_name_bio_value(sfbetrm_pidm,'BDATE'),g$_date.get_nls_date_format),
 TO_NUMBER(goksels.f_name_bio_value(sfbetrm_pidm,'AGE')),
	SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SEX'),1,1),
	SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'ETHN'),1,2),
	SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'LGCY'),1,1),
	SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'DEAD'),1,1),
	TO_DATE(goksels.f_name_bio_value(sfbetrm_pidm,'DDATE'),g$_date.get_nls_date_format),
	SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'CONF'),1,1),
 a.sgbstdn_full_part_ind,
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'HN','A',NULL),1,10),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'S4','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'HN','A',NULL),1,10),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'S4','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PC'),1,4),
 a.sgbstdn_stst_code,
 a.sgbstdn_levl_code,
 a.sgbstdn_styp_code,
 a.sgbstdn_camp_code,
 a.sgbstdn_resd_code,
 a.sgbstdn_coll_code_1,
 a.sgbstdn_degc_code_1,
 a.sgbstdn_majr_code_1,
 a.sgbstdn_majr_code_1_2,
 substr(f_class_calc_fnc
     (sfbetrm_pidm, a.sgbstdn_levl_code, sfbetrm_term_code),1,2),
 a.sgbstdn_rate_code,
 substr(f_concat_sgradvr(sfbetrm_pidm, sfbetrm_term_code),1,202),
 sfbetrm_ests_code,
 sfbetrm_ar_ind,
 sfbetrm_assessment_date,
 sfbetrm_add_date,
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'TOTAL', 'CREDIT'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'NONCEU', 'CREDIT'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'CEU', 'CREDIT'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'TOTAL', 'BILL'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'NONCEU', 'BILL'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'CEU', 'BILL'),
 substr(f_concat_term_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'O',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_term_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'I',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_term_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'T',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_prev_term_gpa(sfbetrm_pidm,sfbetrm_term_code,'O',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_prev_term_gpa(sfbetrm_pidm,sfbetrm_term_code,'I',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_prev_term_gpa(sfbetrm_pidm,sfbetrm_term_code,'T',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_as_of_cum_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'O',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_as_of_cum_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'I',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_as_of_cum_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'T',
        a.sgbstdn_camp_code),1,84),
 SUBSTR(shksels.f_shrttrm_value(sfbetrm_pidm,sfbetrm_term_code,'N','AC'),1,2),
 TO_DATE(shksels.f_shrttrm_value(sfbetrm_pidm,sfbetrm_term_code,'N','AD')),
 SUBSTR(shksels.f_shrttrm_value(sfbetrm_pidm,sfbetrm_term_code,'N','CET'),1,2),
 TO_DATE(shksels.f_shrttrm_value(sfbetrm_pidm,sfbetrm_term_code,'N','DET')),
 decode(a.sgbstdn_astd_code,null,'N','Y'),
 sfrstcr_reg_seq,
 sfrstcr_ptrm_code,
 sfrstcr_rsts_code,
 sfrstcr_rsts_date,
 sfrstcr_appr_received_ind,
 sfrstcr_error_flag,
 ssbsect_subj_code,
 ssbsect_crse_numb,
 nvl(ssbsect_crse_title, l.scbcrse_title),
 ssbsect_seq_numb,
 sfrstcr_bill_hr,
 sfrstcr_credit_hr,
 sfrstcr_attend_hr,
 sfrstcr_gmod_code,
 sfrstcr_grde_code,
 sfrstcr_grde_code_mid,
 sfrstcr_grde_date,
 SUBSTR(shksels.f_shrgrde_value(sfrstcr_grde_code,sfrstcr_term_code,sfrstcr_levl_code,'TC'),1,6),
 TO_NUMBER(shksels.f_shrgrde_value(sfrstcr_grde_code,sfrstcr_term_code,sfrstcr_levl_code,'QP')),
 SUBSTR(shksels.f_shrgrde_value(sfrstcr_grde_code,sfrstcr_term_code,sfrstcr_levl_code,'TI'),1,1),
 sfrstcr_add_date,
 sfrstcr_levl_code,
 sfrstcr_camp_code,
 SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( sfrstcr_crn, sfrstcr_term_code, 'Y',''),  'ID'), 1,9),
 SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( sfrstcr_crn, sfrstcr_term_code, 'Y',''), 'LSUF'), 1,60),
 NVL(SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( sfrstcr_crn, sfrstcr_term_code, 'Y',''),  'LAST'), 1,60),'STAFF'),
 SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( sfrstcr_crn, sfrstcr_term_code, 'Y',''),  'FIRST'), 1,60),
 SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( sfrstcr_crn, sfrstcr_term_code, 'Y',''), 'MI'), 1,60),
 SUBSTR( goksels.f_name_bio_value( ssksels.f_section_instructor( sfrstcr_crn, sfrstcr_term_code, 'Y',''), 'M'), 1,1),
 sfrstcr_user,
 to_number(Sfkwlat.f_wl_notification_value(sfrstcr_term_code, sfbetrm_pidm, sfrstcr_crn, 'WL_PRIORITY')) ,
 substr( Sfkwlat.f_wl_notification_value(sfrstcr_term_code , sfbetrm_pidm, sfrstcr_crn, 'START_DATE'),1,24),
 substr( Sfkwlat.f_wl_notification_value(sfrstcr_term_code , sfbetrm_pidm, sfrstcr_crn, 'END_DATE'),1,24),
 substr(Sfkwlat.f_wl_notification_value(sfrstcr_term_code , sfbetrm_pidm, sfrstcr_crn, 'CONF_STAT'),1,1),
 SUBSTR( Sfkwlat.f_email_value(sfbetrm_pidm, 'ADDRESS'), 1,128),
 SUBSTR( Sfkwlat.f_email_value(sfbetrm_pidm, 'CODE'),  1,4),
 SUBSTR(Gb_gtvemal.f_get_description(substr(Sfkwlat.f_email_value(sfbetrm_pidm, 'CODE'), 1,4)  ), 1,60)  ,
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'MREC2'),1,5),
 TO_DATE(goksels.f_name_bio_value(sfbetrm_pidm,'MREC1'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'MREETHN'),1,7),
 soklibs.f_get_race(sfbetrm_pidm)
from sgbstdn a,
     scbcrse l, ssbsect,
     sfrstcr, sfbetrm
where a.sgbstdn_pidm = sfbetrm_pidm
  and a.sgbstdn_term_code_eff = sb_learner.f_query_current(sfbetrm_pidm,sfbetrm_term_code)
  and sfrstcr_pidm = sfbetrm_pidm
  and sfrstcr_term_code = sfbetrm_term_code
  and ssbsect_crn = sfrstcr_crn
  and ssbsect_term_code = sfrstcr_term_code
  and l.scbcrse_subj_code = ssbsect_subj_code
  and l.scbcrse_crse_numb = ssbsect_crse_numb
  and l.scbcrse_eff_term = scksels.f_get_scbcrse_max_term_code(ssbsect_subj_code,ssbsect_crse_numb,sfrstcr_term_code)"
"BANINST1","SFVSTC1","","select
 pidm_key,
 term_code_key,
 crn_key,
 enrolled_ind,
 registered_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_name,
 middle_initial,
 name_prefix,
 name_suffix,
 surname_prefix,
 birth_date,
 age,
 gender,
 ethn_code,
 lgcy_code,
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 full_part_time_ind,
 house_number1,
 street1_line1,
 street1_line2,
 street1_line3,
 street1_line4,
 city1,
 stat_code1,
 cnty_code1,
 zip1,
 natn_code1,
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 phone_ctry_cde1,
 house_number2,
 street2_line1,
 street2_line2,
 street2_line3,
 street2_line4,
 city2,
 stat_code2,
 cnty_code2,
 zip2,
 natn_code2,
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 phone_ctry_cde2,
 stst_code,
 levl_code,
 styp_code,
 camp_code,
 resd_code,
 coll_code,
 degc_code,
 majr_code1,
 majr_code2,
 clas_code,
 rate_code,
 substr(f_split_fields(advisor_data,1),1,6),
 substr(f_split_fields(advisor_data,2),1,60),
 substr(f_split_fields(advisor_data,3),1,60),
 substr(f_split_fields(advisor_data,4),1,60),
 substr(f_split_fields(advisor_data,5),1,4),
 substr(f_split_fields(advisor_data,6),1,1),
 substr(f_split_fields(advisor_data,7),1,6),
 substr(f_split_fields(advisor_data,8),1,60),
 substr(f_split_fields(advisor_data,9),1,60),
 substr(f_split_fields(advisor_data,10),1,60),
 substr(f_split_fields(advisor_data,11),1,4),
 substr(f_split_fields(advisor_data,12),1,1),
 ests_code,
 enrollment_ar_ind,
 assessment_date,
 enrollment_add_date,
 total_credit_hours,
 total_non_ceu_credit_hours,
 total_ceu_credit_hours,
 total_billing_hours,
 total_non_ceu_billing_hours,
 total_ceu_billing_hours,
 to_number(substr(f_split_fields(term_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,6),1,23),'99999999999999D999999999'),
 deans_list_code,
 deans_list_date,
 astd_code_end_of_term,
 astd_date_end_of_term,
 astd_code_override_ind,
 registration_sequence_number,
 ptrm_code,
 rsts_code,
 registration_status_date,
 special_approval_ind,
 registration_error_flag,
 subj_code,
 course_number,
 course_title,
 section_number,
 section_billing_hours,
 section_credit_hours,
 hours_attended,
 gmod_code,
 grde_code,
 grde_code_mid_term,
 final_grade_date,
 final_grade_term_code_eff,
 final_grade_quality_points,
 final_grade_traditional_ind,
 section_add_date,
 levl_code_section,
 camp_code_section,
 instructor_id,
 instructor_surname_prefix,
 instructor_last_name,
 instructor_first_name,
 instructor_middle_name,
 instructor_middle_initial,
 registration_user_id,
 waitlist_priority,
 deadline_start_time,
 deadline_end_time,
 reg_conf_status,
 email_address,
 email_type,
 email_type_description ,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 mre_race_data
from sfvstc2"
"BANINST1","SFVSECM","Section Grouped Meeting Data View","SELECT 	'0',
	SSBSECT.SSBSECT_TERM_CODE,
	SSBSECT.SSBSECT_PTRM_CODE,
	SSBSECT.SSBSECT_CRN,
	SSBSECT.SSBSECT_SUBJ_CODE,
	SSBSECT.SSBSECT_CRSE_NUMB,
	SSBSECT.SSBSECT_SEQ_NUMB,
	SSBSECT.SSBSECT_SSTS_CODE,
	SSBSECT.SSBSECT_SCHD_CODE,
	SSBSECT.SSBSECT_CAMP_CODE,
	SSBSECT.SSBSECT_LINK_IDENT,
	SSBSECT.SSBSECT_SEATS_AVAIL,
  NULL,
	NULL,
	NULL,
	NULL,
  NVL(SSBSECT.SSBSECT_WAIT_COUNT,0),
  SUBSTR((SELECT SSRXLST_XLST_GROUP
          FROM   SSRXLST
          WHERE  SSRXLST_TERM_CODE=SSBSECT.SSBSECT_TERM_CODE
            AND  SSRXLST_CRN      =SSBSECT.SSBSECT_CRN),1,2) SSRXLST_XLST_GROUP
	FROM SSBSECT
        WHERE NOT EXISTS (SELECT 'X' FROM SSRMEET
                          WHERE SSRMEET.SSRMEET_TERM_CODE = SSBSECT.SSBSECT_TERM_CODE
                            AND SSRMEET.SSRMEET_CRN       = SSBSECT.SSBSECT_CRN)
UNION ALL
SELECT 	NVL(SSRMEET.SSRMEET_CRN||SSRMEET.SSRMEET_BLDG_CODE||
            SSRMEET.SSRMEET_ROOM_CODE,'0'),
	SSBSECT.SSBSECT_TERM_CODE,
	SSBSECT.SSBSECT_PTRM_CODE,
	SSBSECT.SSBSECT_CRN,
	SSBSECT.SSBSECT_SUBJ_CODE,
	SSBSECT.SSBSECT_CRSE_NUMB,
	SSBSECT.SSBSECT_SEQ_NUMB,
	SSBSECT.SSBSECT_SSTS_CODE,
	SSBSECT.SSBSECT_SCHD_CODE,
	SSBSECT.SSBSECT_CAMP_CODE,
	SSBSECT.SSBSECT_LINK_IDENT,
	SSBSECT.SSBSECT_SEATS_AVAIL,
	SSRMEET.SSRMEET_START_DATE,
	SSRMEET.SSRMEET_END_DATE,
	SSRMEET.SSRMEET_BEGIN_TIME,
	SSRMEET.SSRMEET_END_TIME,
  NVL(SSBSECT.SSBSECT_WAIT_COUNT,0),
  SUBSTR((SELECT SSRXLST_XLST_GROUP
          FROM   SSRXLST
          WHERE  SSRXLST_TERM_CODE=SSBSECT.SSBSECT_TERM_CODE
            AND  SSRXLST_CRN      =SSBSECT.SSBSECT_CRN),1,2) SSRXLST_XLST_GROUP
	FROM SSRMEET, SSBSECT
        WHERE SSRMEET.SSRMEET_TERM_CODE = SSBSECT.SSBSECT_TERM_CODE
          AND SSRMEET.SSRMEET_CRN       = SSBSECT.SSBSECT_CRN
"
"BANINST1","SFVSCPR","View student centric period registration","SELECT SFRSTCR_PIDM,
       SOBSCPS_CODE,
       SFRSTCR_TERM_CODE,
       SFRSTCR_CRN,
       SFRSTCR_PTRM_CODE,
       SSBSECT_SUBJ_CODE,
       SSBSECT_CRSE_NUMB,
       SFRSTCR_LEVL_CODE,
       SFRSTCR_RSTS_CODE,
       NVL(SFRSTCR_CREDIT_HR, 0),
       NVL(SFRSTCR_BILL_HR, 0),
       DECODE(NVL(STVRSTS_ATTEMPT_HR_IND,'N'),'Y',
              NVL(SFRSTCR_CREDIT_HR_HOLD, 0),0),
       DECODE(NVL(STVRSTS_INCL_TMST_IND,'N'),'Y',
              NVL(SFRSTCR_CREDIT_HR_HOLD, 0),0),
       SFRSTCR_GRDE_CODE,
       DECODE(SFRSTCR_GRDE_DATE, NULL, 'N', 'Y'),
       SFRSTCR_STSP_KEY_SEQUENCE,
       DECODE(NVL(STVLEVL_CEU_IND,'N'),'Y',
              NVL(SFRSTCR_CREDIT_HR, 0),0),
       DECODE(NVL(STVLEVL_CEU_IND,'N'),'N',
              NVL(SFRSTCR_CREDIT_HR, 0),0)
FROM   SSBSECT,
       SCBCRSE,
       SFRSTCR,
       SGBSTDN,
       STVLEVL,
       STVRSTS,
       STVSCPC,
       SOBSCPS,
       SORSCPT
WHERE SFRSTCR_TERM_CODE = SSBSECT_TERM_CODE
   AND SFRSTCR_CRN = SSBSECT_CRN
   AND SCBCRSE_SUBJ_CODE = SSBSECT_SUBJ_CODE
   AND SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB
   AND SCBCRSE_EFF_TERM =
       (SELECT MAX(X.SCBCRSE_EFF_TERM)
          FROM SCBCRSE X
         WHERE X.SCBCRSE_SUBJ_CODE = SSBSECT_SUBJ_CODE
           AND X.SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB
           AND X.SCBCRSE_EFF_TERM <= SSBSECT_TERM_CODE)
   AND SGBSTDN_PIDM = SFRSTCR_PIDM
   AND SGBSTDN_TERM_CODE_EFF =
       (SELECT MAX(Y.SGBSTDN_TERM_CODE_EFF)
          FROM SGBSTDN Y
         WHERE Y.SGBSTDN_PIDM = SFRSTCR_PIDM
           AND Y.SGBSTDN_TERM_CODE_EFF <= SFRSTCR_TERM_CODE)
   AND STVLEVL_CODE = SFRSTCR_LEVL_CODE
   AND STVRSTS_CODE = SFRSTCR_RSTS_CODE
   AND STVSCPC_CODE = SOBSCPS_SCPC_CODE
   AND SOBSCPS_SCPC_CODE = SGBSTDN_SCPC_CODE
   AND SORSCPT_SCPS_CODE = SOBSCPS_CODE
   AND SORSCPT_TERM_CODE = SFRSTCR_TERM_CODE"
"BANINST1","SFVRHST","View Registration History and Extension Information.","SELECT SFRSTCR_PIDM,
       SFRSTCR_TERM_CODE,
       SFRSTCR_CRN,
       SFRSTCR_PTRM_CODE,
       SSBSECT_SUBJ_CODE,
       SSBSECT_CRSE_NUMB,
       SSBSECT_SEQ_NUMB,
       NVL(SSBSECT_CRSE_TITLE,SCBCRSE_TITLE),
       SSBSECT_SAPR_CODE,
       SFRSTCR_APPR_OVER,
       SFRSTCR_LEVL_CODE,
       SFRSTCR_RSTS_CODE,
       SFRSTCR_GRDE_CODE_MID,
       SFRSTCR_GRDE_CODE,
       DECODE(SFRSTCR_GRDE_DATE, NULL,'N', 'Y'),
       SSBSECT_NUMBER_OF_EXTENSIONS,
       SFRSTCR_STSP_KEY_SEQUENCE,
       SSBSECT_OVERRIDE_DUR_IND
  FROM SSBSECT,
       SCBCRSE,
       SFRSTCR
 WHERE SFRSTCR_TERM_CODE = SSBSECT_TERM_CODE
   AND SFRSTCR_CRN = SSBSECT_CRN
   AND SCBCRSE_SUBJ_CODE = SSBSECT_SUBJ_CODE
   AND SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB
   AND SCBCRSE_EFF_TERM =
   ( SELECT MAX(X.SCBCRSE_EFF_TERM) FROM SCBCRSE X
     WHERE X.SCBCRSE_SUBJ_CODE = SSBSECT_SUBJ_CODE
       AND X.SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB
       AND X.SCBCRSE_EFF_TERM <= SSBSECT_TERM_CODE )"
"BANINST1","SFVRGRP","Registration Grouped Time Slots View","SELECT SFBWCTL.SFBWCTL_TERM_CODE,
	SFBWCTL.SFBWCTL_RGRP_CODE,
	SFBWCTL.SFBWCTL_PRIORITY,
	SFRWCTL.SFRWCTL_BEGIN_DATE,
	SFRWCTL.SFRWCTL_END_DATE,
        SFRWCTL.SFRWCTL_HOUR_BEGIN,
        SFRWCTL.SFRWCTL_HOUR_END
	FROM SFRWCTL, SFBWCTL
        WHERE SFRWCTL.SFRWCTL_TERM_CODE = SFBWCTL.SFBWCTL_TERM_CODE
        AND   SFRWCTL.SFRWCTL_PRIORITY  = SFBWCTL.SFBWCTL_PRIORITY

 "
"BANINST1","SFVRGCP2","Read only view to select gtvsdax used in identifying CAPP requirements for structured registration.","select
substr(nvl((select gtvsdax_external_code from gtvsdax
           where gtvsdax_internal_code = 'AREASELECT'
           and rownum = 1
           and gtvsdax_internal_code_group = 'REGPROJSTRUCT' ), 'A' ),1,1)  name_priority ,
substr(nvl((select gtvsdax_external_code from gtvsdax
           where gtvsdax_internal_code = 'CLASS' and GTVSDAX_INTERNAL_CODE_SEQNO = 1
           and rownum = 1
           and gtvsdax_internal_code_group = 'REGPROJSTRUCT' ), '01' ),1,2)  first_year ,
substr(nvl((select gtvsdax_external_code from gtvsdax
           where gtvsdax_internal_code = 'CLASS' and GTVSDAX_INTERNAL_CODE_SEQNO = 2
           and rownum = 1
           and gtvsdax_internal_code_group = 'REGPROJSTRUCT' ), '02' ),1,2)  second_year ,
substr(nvl((select gtvsdax_external_code from gtvsdax
           where gtvsdax_internal_code = 'CLASS' and GTVSDAX_INTERNAL_CODE_SEQNO = 3
           and rownum = 1
           and gtvsdax_internal_code_group = 'REGPROJSTRUCT' ), '03' ),1,2)  third_year ,
substr(nvl((select gtvsdax_external_code from gtvsdax
           where gtvsdax_internal_code = 'CLASS' and GTVSDAX_INTERNAL_CODE_SEQNO = 4
           and rownum = 1
           and gtvsdax_internal_code_group = 'REGPROJSTRUCT' ), '04' ),1,2)  fourth_year
from dual"
"BANINST1","SFVRGCP1","Read only view to select student data and program requirements for structured registration.","SELECT  sovcltp.sovcltp_stvterm_code,
        sovcltp.sovcltp_term_code,
        sovcltp.sovcltp_PIDM ,
        sovcltp.sovcltp_clas_code,
        NVL( sovcltp.sovcltp_PROGRAM,'NOPROG' ),
        sovcltp.sovcltp_levl_code,
        sovcltp.sovcltp_coll_code,
        sovcltp.sovcltp_degc_code,
        sovcltp.sovcltp_camp_code ,
        sovcltp.sovcltp_seqno ,
        sovcltp.sovcltp_priority_no,
        sovcltp.sovcltp_key_seqno,
        nvl(sovcltp.sovcltp_term_code_ctlg,sovcltp.sovcltp_stvterm_code),
        smralib.smralib_area  ,
        substr(replace( to_char(nvl(smrpaap_area_priority,0),999) , ' ','0')   || ',A', 1,6) ,
        smbpgen.smbpgen_captive_ind,
        smralib.smralib_dynamic_ind,
        smbpgen.smbpgen_registration_model_cde
   FROM   smbagen, smrpaap,   smralib , smbpgen,  sovcltp
   WHERE  sovcltp_LMOD_CODE  = (select SB_CURRICULUM_STR.F_LEARNER from dual)
   and smbagen_area =  smrpaap_area
   and smbagen_active_ind = 'Y'
   and smbagen_term_code_eff =   ( select max(a.smbagen_term_code_eff)
                                           from smbagen a
                                           where a.smbagen_area = smbagen.smbagen_area
                                           and a.smbagen_term_code_eff <=   nvl(sovcltp.sovcltp_term_code_ctlg,sovcltp.sovcltp_stvterm_code))
   and smrpaap_program = smbpgen_program
   and smrpaap_area = smralib_area
   and smrpaap_term_code_eff = ( select max(a.smrpaap_term_code_eff)
                                         from smrpaap a
                                         where a.smrpaap_program = smbpgen.smbpgen_program
                                         and a.smrpaap_term_code_eff <= nvl(sovcltp.sovcltp_term_code_ctlg,sovcltp.sovcltp_stvterm_code) )
   AND smbpgen_active_ind = 'Y'
   and smbpgen_program =  NVL( sovcltp.sovcltp_PROGRAM,'NOPROG' )
   and smbpgen_term_code_eff = ( select max(a.smbpgen_term_code_eff)
                              from smbpgen a
                              where a.smbpgen_program = smbpgen.smbpgen_program
                              and a.smbpgen_term_code_eff <=  nvl(sovcltp.sovcltp_term_code_ctlg,sovcltp.sovcltp_stvterm_code))
UNION ALL
   SELECT  sovcltp.sovcltp_stvterm_code,
        sovcltp.sovcltp_term_code,
        sovcltp.sovcltp_PIDM ,
        sovcltp.sovcltp_clas_code,
        NVL( sovcltp.sovcltp_PROGRAM,'NOPROG' ),
        sovcltp.sovcltp_levl_code,
        sovcltp.sovcltp_coll_code,
        sovcltp.sovcltp_degc_code,
        sovcltp.sovcltp_camp_code ,
        sovcltp.sovcltp_seqno ,
        sovcltp.sovcltp_priority_no,
        sovcltp.sovcltp_key_seqno,
        nvl(sovcltp.sovcltp_term_code_ctlg,sovcltp.sovcltp_stvterm_code) ,
        smralib.smralib_area  ,
        '9999,N' ,
        smbpgen.smbpgen_captive_ind,
        smralib.smralib_dynamic_ind,
        smbpgen.smbpgen_registration_model_cde
   FROM   smbagen,  smralib , smbpgen,  sovcltp
   WHERE   sovcltp_LMOD_CODE       = (select SB_CURRICULUM_STR.F_LEARNER from dual)
   AND smbpgen_captive_ind = 'N'
   and smralib_dynamic_ind = 'Y'
   and smbagen_area = smralib_area
   and smbagen_active_ind = 'Y'
   and smbagen_term_code_eff =   ( select max(a.smbagen_term_code_eff)
                                   from smbagen a
                                   where a.smbagen_area = smbagen.smbagen_area
                                   and a.smbagen_term_code_eff <=   nvl(sovcltp.sovcltp_term_code_ctlg,sovcltp.sovcltp_stvterm_code))
   AND smralib_area not in ( select a.smrpaap_area
                             from smrpaap a
                             where  a.smrpaap_area = smralib.smralib_area
                             and a.smrpaap_program = smbpgen.smbpgen_program
                             and a.smrpaap_term_code_eff = ( select max(m.smrpaap_term_code_eff)
                                                         from smrpaap m
                                                         where m.smrpaap_program = smbpgen.smbpgen_program
                                                         and m.smrpaap_term_code_eff <= nvl(sovcltp.sovcltp_term_code_ctlg,sovcltp.sovcltp_stvterm_code) ))
   AND smbpgen_active_ind = 'Y'
   and smbpgen_program =  NVL( sovcltp.sovcltp_PROGRAM,'NOPROG' )
   and smbpgen_term_code_eff = ( select max(a.smbpgen_term_code_eff)
                                 from smbpgen a
                                 where a.smbpgen_program = smbpgen.smbpgen_program
                                 and a.smbpgen_term_code_eff <=  nvl(sovcltp.sovcltp_term_code_ctlg,sovcltp.sovcltp_stvterm_code))"
"BANINST1","SFVRGCP","Read only view to select areas configured for the student curriculum based on CAPP program requirements.","select sfvrgcp1_stvterm_code,
   sfvrgcp1_term_code,
   sfvrgcp1_pidm,
   sfvrgcp1_clas_code,
   sfvrgcp1_program,
   sfvrgcp1_levl_code,
   sfvrgcp1_coll_code,
   sfvrgcp1_degc_code,
   sfvrgcp1_camp_code,
   sfvrgcp1_lcur_seqno,
   sfvrgcp1_lcur_priority_no,
   sfvrgcp1_key_seqno,
   sfvrgcp1_term_code_ctlg ,
   sfvrgcp1_area ,
   substr(sfvrgcp1_area_priority,1,4) ,
   sfvrgcp1_captive_indicator,
   substr(sfvrgcp1_area_priority,6,1) ,
   case area.sfvrgcp2_area_name_priority
     when 'N' then
        case
          when  sfvrgcp1_area like '%' || area.sfvrgcp2_first_year_class
              and sfvrgcp1_clas_code = area.sfvrgcp2_first_year_class
                then 'Y'
          when sfvrgcp1_area like '%' || area.sfvrgcp2_second_year_class
              and sfvrgcp1_clas_code = area.sfvrgcp2_second_year_class
               then'Y'
          when sfvrgcp1_area like '%' || area.sfvrgcp2_third_year_class
               and sfvrgcp1_clas_code = area.sfvrgcp2_third_year_class
                then'Y'
          when sfvrgcp1_area like '%' || area.sfvrgcp2_fourth_year_class
               and sfvrgcp1_clas_code = area.sfvrgcp2_fourth_year_class
                then'Y'
          else 'N'
          end
     when 'P'  then
          case
             when to_number(substr(sfvrgcp1_area_priority,1,4)) = 1 and sfvrgcp1_clas_code = area.sfvrgcp2_first_year_class
               then  'Y'
             when to_number(substr(sfvrgcp1_area_priority,1,4)) = 2 and sfvrgcp1_clas_code = area.sfvrgcp2_second_year_class
               then 'Y'
             when to_number(substr(sfvrgcp1_area_priority,1,4)) = 3 and sfvrgcp1_clas_code = area.sfvrgcp2_third_year_class
                then'Y'
             when to_number(substr(sfvrgcp1_area_priority,1,4)) = 4 and sfvrgcp1_clas_code = area.sfvrgcp2_fourth_year_class
               then 'Y'
             else 'N'
          end
      when 'A' then
           'Y'
      else 'N'
    end ,
   sfvrgcp1_reg_model_code
 from  sfvrgcp2 area  ,  sfvrgcp1   "
"BANINST1","SFVREGD","View Student Registered and Drop-Deleted Courses For Fee Assessment.","SELECT SFRSTCR_TERM_CODE,
       SFRSTCR_PIDM,
       SFRSTCR_CRN,
       SFRSTCR_LEVL_CODE,
       SFRSTCR_CAMP_CODE,
       SFRSTCR_PTRM_CODE,
       SFRSTCR_RSTS_CODE,
       SFRSTCR_RSTS_DATE,
       SFRSTCR_CREDIT_HR,
       SFRSTCR_BILL_HR,
       SFRSTCR_WAIV_HR,
       SFRSTCR_GMOD_CODE,
       RS.SSBSECT_INSM_CODE,
       RS.SSBSECT_SCHD_CODE,
       R.STVRSTS_WITHDRAW_IND,
       R.STVRSTS_INCL_ASSESS,
       SFRSTCR_ACTIVITY_DATE
FROM   STVRSTS R,
       SFRSTCR,
       SSBSECT RS
WHERE  R.STVRSTS_CODE = SFRSTCR_RSTS_CODE
AND    RS.SSBSECT_TERM_CODE = SFRSTCR_TERM_CODE
AND    RS.SSBSECT_CRN  = SFRSTCR_CRN
UNION
SELECT SFRREGD_TERM_CODE,
       SFRREGD_PIDM,
       SFRREGD_CRN,
       SFRREGD_LEVL_CODE,
       SFRREGD_CAMP_CODE,
       SFRREGD_PTRM_CODE,
       SFRREGD_RSTS_CODE,
       SFRREGD_RSTS_DATE,
       SFRREGD_CREDIT_HR,
       SFRREGD_BILL_HR,
       SFRREGD_WAIV_HR,
       SFRREGD_GMOD_CODE,
       DS.SSBSECT_INSM_CODE,
       DS.SSBSECT_SCHD_CODE,
       D.STVRSTS_WITHDRAW_IND,
       D.STVRSTS_INCL_ASSESS,
       SFRREGD_ACTIVITY_DATE
FROM   STVRSTS D,
       SFRREGD,
       SSBSECT DS
WHERE  D.STVRSTS_CODE = SFRREGD_RSTS_CODE
AND    DS.SSBSECT_TERM_CODE = SFRREGD_TERM_CODE
AND    DS.SSBSECT_CRN  = SFRREGD_CRN
 "
"BANINST1","SFVRCRS","BANNER Reporting view to retrieve registered credit hours for a student","select spriden_pidm, spriden_last_name, spriden_first_name, spriden_id,
       sum(decode(stvlevl_ceu_ind,'Y',0,nvl(sfrstcr_credit_hr,0))),
       sum(decode(stvlevl_ceu_ind,'Y',nvl(sfrstcr_credit_hr,0),0)),
       sum(nvl(sfrstcr.sfrstcr_credit_hr, 0)),
       stvterm_code, stvterm_desc
  from spriden, sfrstcr, stvlevl, stvterm
 where spriden_pidm = sfrstcr_pidm
   and sfrstcr_term_code = stvterm_code
   and sfrstcr_levl_code = stvlevl_code
   and spriden_change_ind is null
   and spriden_entity_ind = 'P'
 group by spriden_pidm, spriden_last_name, spriden_first_name, spriden_id,
          stvterm_code, stvterm_desc
 "
"BANINST1","SFVFDBK","Faculty Feedback detail view.","SELECT
    sfbffsc_term_code     session_term,
    stvterm_code          term_description,
    sfbffsc_description   session_desc,
    s.spriden_id          student_id,
    s.spriden_first_name  student_first_name,
    s.spriden_last_name   student_last_name,
    sfrffst_crn           crn,
    f.spriden_id          faculty_id,
    f.spriden_first_name  faculty_first_name,
    f.spriden_last_name   faculty_last_name,
    sfrffst_status_cde    status_cde,
    sfrffst_activity_date comment_date,
    sfrffbk_activity_date feedback_date,
    stvffva_code          feedback_code,
    stvffva_desc          feedback_desc,
    stvffva_type          feedback_type,
    sfrffst_grde_code     estimated_grade,
    sfrffst_comments      feedback_comments,
    sfrffst_student_pidm  student_pidm,
    sfrffst_faculty_pidm  faculty_pidm,
    sfbffsc_surrogate_id  session_id,
    sfrffst_surrogate_id  grade_id,
    sfrffbk_surrogate_id  feedback_id
    FROM sfbffsc
         JOIN stvterm
           ON stvterm_code = sfbffsc_term_code
         LEFT OUTER JOIN sfrffst
           ON sfrffst_sfbffsc_id = sfbffsc_surrogate_id
         LEFT OUTER JOIN sfrffbk
           ON sfrffbk_sfrffst_id = sfrffst_surrogate_id
         LEFT OUTER JOIN stvffva
           ON sfrffbk_stvffva_id = stvffva_surrogate_id
         LEFT OUTER JOIN spriden s
           ON s.spriden_pidm = sfrffst_student_pidm
          AND s.spriden_change_ind IS NULL
         LEFT OUTER JOIN spriden f
           ON f.spriden_pidm = sfrffst_faculty_pidm
          AND f.spriden_change_ind IS NULL"
"BANINST1","SFVFAUD","View Registration Fee Assessment Audit Table.","SELECT
    SFRFAUD_PIDM
   , SFRFAUD_TERM_CODE
   , SFRFAUD_SESSIONID
   , SFRFAUD_SEQNO
   , SFRFAUD_ASSESS_RFND_PENLTY_CDE
   , SFRFAUD_DCAT_CODE
   , SFRFAUD_DETL_CODE
   , SFRFAUD_CHARGE
   , SFRFAUD_ASSESS_BY_COURSE_IND
   , SFRFAUD_ASSESSMENT_SOURCE
   , SFRFAUD_USER_ID
   , SFRFAUD_ACTIVITY_DATE
   , TRUNC(SFRFAUD_ACTIVITY_DATE)
   , TO_CHAR(SFRFAUD_ACTIVITY_DATE,'HH:MI:SS AM')
   , SFRFAUD_RGFE_SEQNO
   , SFRFAUD_RGFE_TYPE
   , SFRFAUD_CRN
   , SFRFAUD_RSTS_CODE
   , SFRFAUD_RSTS_DATE
   , SFRFAUD_ESTS_CODE
   , SFRFAUD_ESTS_DATE
   , SFRFAUD_REFUND_SOURCE_TABLE
   , SFRFAUD_REG_BILL_HR
   , SFRFAUD_RULE_LIABLE_BILL_HRS
   , SFRFAUD_RULE_LIABLE_STUD_HRS
   , SFRFAUD_TOT_PER_CRED_CHARGE
   , SFRFAUD_FLAT_FEE_AMOUNT
   , SFRFAUD_CRSE_OVERLOAD_HRS
   , SFRFAUD_CRSE_OVERLOAD_CHARGE
   , SFRFAUD_ACCD_TRAN_NUMBER
   , SFRFAUD_NOTE
   , SFRFAUD_RGFE_PER_CRED_CHARGE
   , SFRFAUD_RGFE_FLAT_FEE_AMOUNT
   , SFRFAUD_RGFE_FROM_FLAT_HRS
   , SFRFAUD_RGFE_TO_FLAT_HRS
   , SFRFAUD_RGFE_CRSE_OL_START_HR
   , SFRFAUD_RGFE_RULE_VALUE
   , SFRFAUD_LCUR_SEQNO
   , SFRFAUD_RGFE_RULE_VALUE_2
FROM SFRFAUD"
"BANINST1","SFVETR2","","select
 sfbetrm_pidm,
 sfbetrm_term_code,
 substr(f_enrolled_this_term(sfbetrm_pidm, sfbetrm_term_code),1,1),
 substr(f_registered_this_term(sfbetrm_pidm, sfbetrm_term_code),1,1),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'ID'),1,9),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SSN'),1,15),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'LAST'),1,60),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'FIRST'),1,60),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'MI'),1,60),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'M'),1,1),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'PRE'),1,20),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SUF'),1,20),
 TO_DATE(goksels.f_name_bio_value(sfbetrm_pidm,'BDATE'),g$_date.get_nls_date_format),
 TO_NUMBER(goksels.f_name_bio_value(sfbetrm_pidm,'AGE')),
SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'SEX'),1,1),
SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'ETHN'),1,2),
SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'LGCY'),1,1),
SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'DEAD'),1,1),
TO_DATE(goksels.f_name_bio_value(sfbetrm_pidm,'DDATE'),g$_date.get_nls_date_format),
SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'CONF'),1,1),
 a.sgbstdn_full_part_ind,
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
 SUBSTR(goksels.f_address_telephone_value(sfbetrm_pidm,'ENRLADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
 a.sgbstdn_stst_code,
 a.sgbstdn_levl_code,
 a.sgbstdn_styp_code,
 a.sgbstdn_camp_code,
 a.sgbstdn_resd_code,
 a.sgbstdn_coll_code_1,
 a.sgbstdn_degc_code_1,
 a.sgbstdn_majr_code_1,
 a.sgbstdn_majr_code_1_2,
 substr(f_class_calc_fnc
     (sfbetrm_pidm, a.sgbstdn_levl_code, sfbetrm_term_code),1,2),
 a.sgbstdn_rate_code,
 substr(f_concat_sgradvr(sfbetrm_pidm, sfbetrm_term_code),1,182),
 sfbetrm_ests_code,
 sfbetrm_ar_ind,
 sfbetrm_assessment_date,
 sfbetrm_add_date,
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'TOTAL', 'CREDIT'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'NONCEU', 'CREDIT'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'CEU', 'CREDIT'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'TOTAL', 'BILL'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'NONCEU', 'BILL'),
 f_calc_registration_hours(sfbetrm_pidm, sfbetrm_term_code, 'CEU', 'BILL'),
 substr(f_concat_term_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'O',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_term_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'I',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_term_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'T',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_prev_term_gpa(sfbetrm_pidm,sfbetrm_term_code,'O',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_prev_term_gpa(sfbetrm_pidm,sfbetrm_term_code,'I',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_prev_term_gpa(sfbetrm_pidm,sfbetrm_term_code,'T',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_as_of_cum_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'O',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_as_of_cum_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'I',
        a.sgbstdn_camp_code),1,84),
 substr(f_concat_as_of_cum_gpa
     (sfbetrm_pidm,sfbetrm_term_code,a.sgbstdn_levl_code,'T',
        a.sgbstdn_camp_code),1,84),
 SUBSTR(shksels.f_shrttrm_value(sfbetrm_pidm,sfbetrm_term_code,'E','AC'),1,2),
 TO_DATE(shksels.f_shrttrm_value(sfbetrm_pidm,sfbetrm_term_code,'E','AD')),
 SUBSTR(shksels.f_shrttrm_value(sfbetrm_pidm,sfbetrm_term_code,'E','CET'),1,2),
 TO_DATE(shksels.f_shrttrm_value(sfbetrm_pidm,sfbetrm_term_code,'E','DET')),
 decode(a.sgbstdn_astd_code,null,'N','Y'),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'MREC2'),1,5),
 TO_DATE(goksels.f_name_bio_value(sfbetrm_pidm,'MREC1'),g$_date.get_nls_date_format),
 SUBSTR(goksels.f_name_bio_value(sfbetrm_pidm,'MREETHN'),1,7),
 soklibs.f_get_race(sfbetrm_pidm)
from sgbstdn a,
     sfbetrm
where a.sgbstdn_pidm = sfbetrm_pidm
  and a.sgbstdn_term_code_eff = sb_learner.f_query_current(sfbetrm_pidm,sfbetrm_term_code)"
"BANINST1","SFVETR1","","select
 pidm_key,
 term_code_key,
 enrolled_ind,
 registered_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 ethn_code,
 lgcy_code,
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 full_part_time_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 stat_code1,
 cnty_code1,
 zip1,
 natn_code1,
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 stat_code2,
 cnty_code2,
 zip2,
 natn_code2,
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 stst_code,
 levl_code,
 styp_code,
 camp_code,
 resd_code,
 coll_code,
 degc_code,
 majr_code1,
 majr_code2,
 clas_code,
 rate_code,
 substr(f_split_fields(advisor_data,1),1,6),
 substr(f_split_fields(advisor_data,2),1,60),
 substr(f_split_fields(advisor_data,3),1,15),
 substr(f_split_fields(advisor_data,4),1,4),
 substr(f_split_fields(advisor_data,5),1,1),
 substr(f_split_fields(advisor_data,6),1,6),
 substr(f_split_fields(advisor_data,7),1,60),
 substr(f_split_fields(advisor_data,8),1,15),
 substr(f_split_fields(advisor_data,9),1,4),
 substr(f_split_fields(advisor_data,10),1,1),
 ests_code,
 enrollment_ar_ind,
 assessment_date,
 enrollment_add_date,
 total_credit_hours,
 total_non_ceu_credit_hours,
 total_ceu_credit_hours,
 total_billing_hours,
 total_non_ceu_billing_hours,
 total_ceu_billing_hours,
 to_number(substr(f_split_fields(term_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(term_gpa_data3,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(prev_gpa_data3,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data1,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data2,6),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,1),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,2),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,3),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,4),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields(levl_gpa_data3,6),1,23),'99999999999999D999999999'),
 deans_list_code,
 deans_list_date,
 astd_code_end_of_term,
 astd_date_end_of_term,
 astd_code_override_ind,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 mre_race_data
from sfvetr2"
"BANINST1","SFVENRL","Enrollment Verification Request View","(SELECT	SFRENRL_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SFRENRL_TERM_CODE,
        SFRENRL_SEQ_NO,
        SFRENRL_REQUEST_DATE,
        SFRENRL_PRINT_DATE,
        SFRENRL_USER,
        SFRENRL_EPRT_CODE,
        SFRENRL_EMPL_CODE,
        SFRENRL_IDNO,
        SFRENRL_ADDR_NAME,
        SFRENRL_STREET1,
        SFRENRL_STREET2,
        SFRENRL_STREET3,
        SFRENRL_CITY,
        SFRENRL_STAT_CODE,
        SFRENRL_ZIP,
        SFRENRL_PRINTER,
        SFRENRL_ACTIVITY_DATE,
        SFRENRL_ACYR_CODE,
        SFRENRL_NATN_CODE,
        SFRENRL_NUMBER_COPIES,
        aa.SFRAREG_START_DATE,
        bb.SFRAREG_COMPLETION_DATE,
        SFRENRL_SENT_DATE,
	SFRENRL_FAX_AREA,
	SFRENRL_FAX_NUMBER,
	SFRENRL_WSSO_CODE,
	SFRENRL_WPYO_CODE
   FROM SFRAREG aa, SFRAREG bb, SPRIDEN, SFRSTCR, SFRENRL
        WHERE SPRIDEN_PIDM = SFRENRL_PIDM
        AND SPRIDEN_CHANGE_IND IS NULL
        AND aa.SFRAREG_PIDM = SFRSTCR_PIDM
        AND aa.SFRAREG_TERM_CODE = SFRSTCR_TERM_CODE
        AND aa.SFRAREG_CRN = SFRSTCR_CRN
        AND aa.SFRAREG_EXTENSION_NUMBER = 0
        AND bb.SFRAREG_PIDM = SFRSTCR_PIDM
        AND bb.SFRAREG_TERM_CODE = SFRSTCR_TERM_CODE
        AND bb.SFRAREG_CRN  = SFRSTCR_CRN
        AND bb.SFRAREG_EXTENSION_NUMBER =
            (SELECT MAX(cc.SFRAREG_EXTENSION_NUMBER)
               FROM STVRSTS, SFRAREG cc
              WHERE STVRSTS_CODE = cc.SFRAREG_RSTS_CODE
                AND STVRSTS_WITHDRAW_IND = 'N'
                AND cc.SFRAREG_PIDM = SFRSTCR_PIDM
                AND cc.SFRAREG_TERM_CODE = SFRSTCR_TERM_CODE
                AND cc.SFRAREG_CRN = SFRSTCR_CRN)
        AND SFRSTCR_TERM_CODE =  SFRENRL_TERM_CODE
        AND SFRSTCR_PIDM = SFRENRL_PIDM
        AND SFRENRL_USER > ' '           /* Force use of PK Index */
        AND SFRENRL_SEQ_NO > 0           /* Force use of PK Index */
        AND SFRENRL_TERM_CODE > ' '      /* Force use of PK Index */
        AND SFRENRL_PIDM > 0             /* Force use of PK Index */
UNION
 SELECT	SFRENRL_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SFRENRL_TERM_CODE,
        SFRENRL_SEQ_NO,
        SFRENRL_REQUEST_DATE,
        SFRENRL_PRINT_DATE,
        SFRENRL_USER,
        SFRENRL_EPRT_CODE,
        SFRENRL_EMPL_CODE,
        SFRENRL_IDNO,
        SFRENRL_ADDR_NAME,
        SFRENRL_STREET1,
        SFRENRL_STREET2,
        SFRENRL_STREET3,
        SFRENRL_CITY,
        SFRENRL_STAT_CODE,
        SFRENRL_ZIP,
        SFRENRL_PRINTER,
        SFRENRL_ACTIVITY_DATE,
        SFRENRL_ACYR_CODE,
        SFRENRL_NATN_CODE,
        SFRENRL_NUMBER_COPIES,
        SSBSECT_PTRM_START_DATE,
        SSBSECT_PTRM_END_DATE ,
        SFRENRL_SENT_DATE,
        SFRENRL_FAX_AREA,
        SFRENRL_FAX_NUMBER,
	SFRENRL_WSSO_CODE,
	SFRENRL_WPYO_CODE
   FROM SPRIDEN, SSBSECT, SFRSTCR,  SFRENRL
        WHERE SPRIDEN_PIDM = SFRENRL_PIDM
        AND SPRIDEN_CHANGE_IND IS NULL
        AND SSBSECT_TERM_CODE = SFRSTCR_TERM_CODE
        AND SSBSECT_CRN = SFRSTCR_CRN
        AND SFRSTCR_TERM_CODE =  SFRENRL_TERM_CODE
        AND SFRSTCR_PIDM = SFRENRL_PIDM
        AND SFRENRL_USER > ' '           /* Force use of PK Index */
        AND SFRENRL_SEQ_NO > 0           /* Force use of PK Index */
        AND SFRENRL_TERM_CODE > ' '      /* Force use of PK Index */
        AND SFRENRL_PIDM > 0             /* Force use of PK Index */
UNION
 SELECT	SFRENRL_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SFRENRL_TERM_CODE,
        SFRENRL_SEQ_NO,
        SFRENRL_REQUEST_DATE,
        SFRENRL_PRINT_DATE,
        SFRENRL_USER,
        SFRENRL_EPRT_CODE,
        SFRENRL_EMPL_CODE,
        SFRENRL_IDNO,
        SFRENRL_ADDR_NAME,
        SFRENRL_STREET1,
        SFRENRL_STREET2,
        SFRENRL_STREET3,
        SFRENRL_CITY,
        SFRENRL_STAT_CODE,
        SFRENRL_ZIP,
        SFRENRL_PRINTER,
        SFRENRL_ACTIVITY_DATE,
        SFRENRL_ACYR_CODE,
        SFRENRL_NATN_CODE,
        SFRENRL_NUMBER_COPIES,
        NULL,
        NULL,
        SFRENRL_SENT_DATE,
	SFRENRL_FAX_AREA,
	SFRENRL_FAX_NUMBER,
	SFRENRL_WSSO_CODE,
	SFRENRL_WPYO_CODE
   FROM SPRIDEN, SHRTTRM, SFRENRL
        WHERE SPRIDEN_PIDM = SFRENRL_PIDM
        AND SPRIDEN_CHANGE_IND IS NULL
        AND SHRTTRM_TERM_CODE =  SFRENRL_TERM_CODE
        AND SHRTTRM_PIDM = SFRENRL_PIDM
        AND  ( NOT EXISTS
           ( SELECT 'X' FROM
             SFRSTCR
             WHERE SFRSTCR_PIDM = SFRENRL_PIDM
             AND SFRSTCR_TERM_CODE = SFRENRL_TERM_CODE))
        AND  ( NOT EXISTS
             ( SELECT 'X' FROM
               SFBETRM
               WHERE SFBETRM_PIDM = SFRENRL_PIDM
               AND SFBETRM_TERM_CODE = SFRENRL_TERM_CODE))
        AND SFRENRL_USER > ' '           /* Force use of PK Index */
        AND SFRENRL_SEQ_NO > 0           /* Force use of PK Index */
        AND SFRENRL_TERM_CODE > ' '      /* Force use of PK Index */
        AND SFRENRL_PIDM > 0             /* Force use of PK Index */
UNION
 SELECT	SFRENRL_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SFRENRL_TERM_CODE,
        SFRENRL_SEQ_NO,
        SFRENRL_REQUEST_DATE,
        SFRENRL_PRINT_DATE,
        SFRENRL_USER,
        SFRENRL_EPRT_CODE,
        SFRENRL_EMPL_CODE,
        SFRENRL_IDNO,
        SFRENRL_ADDR_NAME,
        SFRENRL_STREET1,
        SFRENRL_STREET2,
        SFRENRL_STREET3,
        SFRENRL_CITY,
        SFRENRL_STAT_CODE,
        SFRENRL_ZIP,
        SFRENRL_PRINTER,
        SFRENRL_ACTIVITY_DATE,
        SFRENRL_ACYR_CODE,
        SFRENRL_NATN_CODE,
        SFRENRL_NUMBER_COPIES,
        NULL,
        NULL,
        SFRENRL_SENT_DATE,
        SFRENRL_FAX_AREA,
        SFRENRL_FAX_NUMBER,
	SFRENRL_WSSO_CODE,
	SFRENRL_WPYO_CODE
   FROM SPRIDEN, SFBETRM, SFRENRL
        WHERE SPRIDEN_PIDM = SFRENRL_PIDM
        AND SPRIDEN_CHANGE_IND IS NULL
        AND SFBETRM_TERM_CODE =  SFRENRL_TERM_CODE
        AND SFBETRM_PIDM = SFRENRL_PIDM
        AND ( NOT EXISTS
           ( SELECT 'X' FROM
             SFRSTCR
             WHERE SFRSTCR_PIDM = SFRENRL_PIDM
             AND SFRSTCR_TERM_CODE = SFRENRL_TERM_CODE))
        AND  ( NOT EXISTS
             ( SELECT 'X' FROM
               SHRTTRM
               WHERE SHRTTRM_PIDM = SFRENRL_PIDM
               AND SHRTTRM_TERM_CODE = SFRENRL_TERM_CODE))
        AND SFRENRL_USER > ' '           /* Force use of PK Index */
        AND SFRENRL_SEQ_NO > 0           /* Force use of PK Index */
        AND SFRENRL_TERM_CODE > ' '      /* Force use of PK Index */
        AND SFRENRL_PIDM > 0             /* Force use of PK Index */
  GROUP BY
        SFRENRL_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SFRENRL_TERM_CODE,
        SFRENRL_SEQ_NO,
        SFRENRL_REQUEST_DATE,
        SFRENRL_PRINT_DATE,
        SFRENRL_USER,
        SFRENRL_EPRT_CODE,
        SFRENRL_EMPL_CODE,
        SFRENRL_IDNO,
        SFRENRL_ADDR_NAME,
        SFRENRL_STREET1,
        SFRENRL_STREET2,
        SFRENRL_STREET3,
        SFRENRL_CITY,
        SFRENRL_STAT_CODE,
        SFRENRL_ZIP,
        SFRENRL_PRINTER,
        SFRENRL_ACTIVITY_DATE,
        SFRENRL_ACYR_CODE,
        SFRENRL_NATN_CODE,
        SFRENRL_NUMBER_COPIES,
        SFRENRL_SENT_DATE,
	SFRENRL_FAX_AREA,
	SFRENRL_FAX_NUMBER,
	SFRENRL_WSSO_CODE,
	SFRENRL_WPYO_CODE  )
 "
"BANINST1","SFTREGS_V","Banner Evolution View on table SFTREGS","SELECT SFTREGS_TERM_CODE,
       SFTREGS_PIDM,
       SFTREGS_CRN,
       SFTREGS_PTRM_CODE,
       SFTREGS_RSTS_CODE,
       SFTREGS_RSTS_DATE,
       SFTREGS_ERROR_FLAG,
       SFTREGS_RMSG_CDE,
       SFTREGS_MESSAGE,
       SFTREGS_BILL_HR,
       SFTREGS_WAIV_HR,
       SFTREGS_CREDIT_HR,
       SFTREGS_BILL_HR_HOLD,
       SFTREGS_CREDIT_HR_HOLD,
       SFTREGS_GMOD_CODE,
       SFTREGS_GRDE_CODE,
       SFTREGS_GRDE_CODE_MID,
       SFTREGS_GRDE_DATE,
       SFTREGS_DUPL_OVER,
       SFTREGS_LINK_OVER,
       SFTREGS_CORQ_OVER,
       SFTREGS_PREQ_OVER,
       SFTREGS_TIME_OVER,
       SFTREGS_CAPC_OVER,
       SFTREGS_LEVL_OVER,
       SFTREGS_COLL_OVER,
       SFTREGS_MAJR_OVER,
       SFTREGS_CLAS_OVER,
       SFTREGS_APPR_OVER,
       SFTREGS_APPR_RECEIVED_IND,
       SFTREGS_ADD_DATE,
       SFTREGS_ACTIVITY_DATE,
       SFTREGS_LEVL_CODE,
       SFTREGS_CAMP_CODE,
       SFTREGS_RESERVED_KEY,
       SFTREGS_REPT_OVER,
       SFTREGS_RPTH_OVER,
       SFTREGS_TEST_OVER,
       SFTREGS_CAMP_OVER,
       SFTREGS_USER,
       SFTREGS_DEGC_OVER,
       SFTREGS_PROG_OVER,
       SFTREGS_SECT_SUBJ_CODE,
       SFTREGS_SECT_CRSE_NUMB,
       SFTREGS_SECT_SEQ_NUMB,
       SFTREGS_CRSE_CEU_IND,
       SFTREGS_VR_STATUS_TYPE,
       SFTREGS_WAIT_OVER,
       SFTREGS_REC_STAT,
       SFTREGS_GCMT_CDE,
       SFTREGS_REMOVE_IND,
       SFTREGS_START_DATE,
       SFTREGS_COMPLETION_DATE,
       SFTREGS_NUMBER_OF_UNITS,
       SFTREGS_DUNT_CODE,
       SFTREGS_SECT_SCHD_CODE,
       SFTREGS_CRSE_TITLE,
       SFTREGS_HOLD_RSTS_CODE,
       SFTREGS_HOLD_RSTS_DATE,
       SFTREGS_HOLD_RSTS_TYPE,
       SFTREGS_HOLD_CREDITS,
       SFTREGS_HOLD_GRDE_CODE,
       SFTREGS_HOLD_RMSG_CDE,
       SFTREGS_HOLD_MESSAGE,
       SFTREGS_HOLD_ERROR_FLAG,
       SFTREGS_HOLD_LEVL_CODE,
       SFTREGS_HOLD_GMOD_CODE,
       SFTREGS_ERROR_LINK,
       SFTREGS_DEPT_OVER,
       SFTREGS_ATTS_OVER,
       SFTREGS_CHRT_OVER,
       SFTREGS_MEXC_OVER,
       SFTREGS_STSP_KEY_SEQUENCE
  FROM SFTREGS"
"BANINST1","SEVSSER","Support Services Query View","(SELECT  SPRIDEN_PIDM,
                     SERDTGL_TERM_CODE_EFF,
                     SPRIDEN_ID,
                     SPRIDEN_LAST_NAME,
                     SPRIDEN_FIRST_NAME,
                     SPRIDEN_MI
	FROM SPRIDEN, SERDTGL
        WHERE SPRIDEN_PIDM = SERDTGL_PIDM
        AND   SPRIDEN_CHANGE_IND IS NULL
        AND   SPRIDEN_ENTITY_IND = 'P'
        UNION
        SELECT  SPRIDEN_PIDM,
                SERDTND_TERM_CODE_EFF,
                SPRIDEN_ID,
                SPRIDEN_LAST_NAME,
                SPRIDEN_FIRST_NAME,
                SPRIDEN_MI
	FROM SPRIDEN, SERDTND
        WHERE SPRIDEN_PIDM = SERDTND_PIDM
        AND   SPRIDEN_CHANGE_IND IS NULL
        AND   SPRIDEN_ENTITY_IND = 'P'
        UNION
        SELECT  SPRIDEN_PIDM,
                SERDTSR_TERM_CODE_EFF,
                SPRIDEN_ID,
                SPRIDEN_LAST_NAME,
                SPRIDEN_FIRST_NAME,
                SPRIDEN_MI
	FROM SPRIDEN, SERDTSR
        WHERE  SPRIDEN_PIDM = SERDTSR_PIDM
        AND   SPRIDEN_CHANGE_IND IS NULL
        AND   SPRIDEN_ENTITY_IND = 'P')
 "
"BANINST1","SDVCMRR","Compliance Course Requirements View","(SELECT   SDRCOLR_PIDM,
		     SDRCOLR_PROGRAM,
		     SDRCOLR_BLTN_YEAR,
                     X.SDRDPSR_AREA_CODE,
		     X.SDRDPSR_DPPR_SEQ_NO,
	             X.SDRDPSR_DPCR_SEQ_NO,
                     X.SDRDPSR_SEQ_NO,
		     X.SDRDPSR_ACTION_IND,
                     X.SDRDPSR_SUBJ_CODE,
		     X.SDRDPSR_MIN_GRDE_CODE,
		     X.SDRDPSR_FROM_CRSE_NUMB,
                     X.SDRDPSR_TO_CRSE_NUMB,
		     X.SDRDPSR_TERM_CODE_FROM,
                     X.SDRDPSR_TERM_CODE_TO,
		     X.SDRDPSR_FROM_HOURS,
                     X.SDRDPSR_TO_HOURS,
                     X.SDRDPSR_TRANSFER_IND,
		     X.SDRDPSR_ATTR_CODE
		     FROM SDRDPSR X, SDRCOLR
                     WHERE SDRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
		     AND   X.SDRDPSR_PROGRAM = SDRCOLR_PROGRAM
		     AND   X.SDRDPSR_EFFECTIVE_BLTN_YEAR =
			  (SELECT MAX(Y.SDRDPSR_EFFECTIVE_BLTN_YEAR)
			   FROM SDRDPSR Y
			   WHERE Y.SDRDPSR_PROGRAM = SDRCOLR_PROGRAM
                           AND   Y.SDRDPSR_AREA_CODE
                                 = X.SDRDPSR_AREA_CODE
                           AND   Y.SDRDPSR_DPPR_SEQ_NO
                                 = X.SDRDPSR_DPPR_SEQ_NO
                           AND   Y.SDRDPSR_DPCR_SEQ_NO
                                 = X.SDRDPSR_DPCR_SEQ_NO
			   AND   Y.SDRDPSR_EFFECTIVE_BLTN_YEAR
                           <= SDRCOLR_BLTN_YEAR)
		  UNION
	      SELECT
		     SDRSSSR_PIDM,
		     SDRSSSR_PROGRAM,
		     SDRSSSR_BLTN_YEAR,
                     SDRSSSR_AREA_CODE,
		     SDRSSSR_SSGR_SEQ_NO,
		     SDRSSSR_SSCR_SEQ_NO,
                     SDRSSSR_SEQ_NO,
		     SDRSSSR_ACTION_IND,
                     SDRSSSR_SUBJ_CODE,
		     SDRSSSR_MIN_GRDE_CODE,
		     SDRSSSR_FROM_CRSE_NUMB,
                     SDRSSSR_TO_CRSE_NUMB,
		     SDRSSSR_FROM_TERM,
                     SDRSSSR_TO_TERM,
		     SDRSSSR_FROM_HOURS,
                     SDRSSSR_TO_HOURS,
                     SDRSSSR_TRANSFER_IND,
		     SDRSSSR_ATTR_CODE
	             FROM SDRSSSR, SDRCOLR
                     WHERE SDRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
		     AND   SDRSSSR_PROGRAM = SDRCOLR_PROGRAM
		     AND   SDRSSSR_BLTN_YEAR = SDRCOLR_BLTN_YEAR
		     AND   SDRSSSR_PIDM = SDRCOLR_PIDM
		  UNION
	    SELECT   SDRSCAD_PIDM,
		     SDRSCAD_PROGRAM,
		     SDRSCAD_BLTN_YEAR,
                     SDRSCAD_AREA_CODE,
		     SDRSCAD_DPPR_SEQ_NO,
		     SDRSCAD_DPCR_SEQ_NO,
                     SDRSCAD_SEQ_NO,
		     SDRSCAD_ACTION_IND,
                     SDRSCAD_SUBJ_CODE,
		     SDRSCAD_MIN_GRDE_CODE,
		     SDRSCAD_FROM_CRSE_NUMB,
                     SDRSCAD_TO_CRSE_NUMB,
		     SDRSCAD_FROM_TERM_CODE,
                     SDRSCAD_TO_TERM_CODE,
		     SDRSCAD_FROM_HOURS,
                     SDRSCAD_TO_HOURS,
                     SDRSCAD_TRANSFER_IND,
		     SDRSCAD_ATTR_CODE
		     FROM SDRSCAD, SDRCOLR
                     WHERE SDRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
		     AND   SDRSCAD_PROGRAM = SDRCOLR_PROGRAM
		     AND   SDRSCAD_BLTN_YEAR = SDRCOLR_BLTN_YEAR
		     AND   SDRSCAD_PIDM = SDRCOLR_PIDM)
 "
"BANINST1","SDVCMPR","Compliance Group Requirement View","(SELECT  SDRCOLR_PIDM,
		    SDRCOLR_PROGRAM,
		    SDRCOLR_BLTN_YEAR,
		    X.SDRDPPR_AREA_CODE,
		    X.SDRDPPR_SEQ_NO,
                    X.SDRDPPR_CVO_NUMBER,
		    X.SDRDPPR_MAX_HOURS
		    FROM  SDRDPPR X, SDRCOLR
                    WHERE SDRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
		    AND   X.SDRDPPR_PROGRAM = SDRCOLR_PROGRAM
		    AND   X.SDRDPPR_EFFECTIVE_BLTN_YEAR =
		          (SELECT MAX(Y.SDRDPPR_EFFECTIVE_BLTN_YEAR)
			   FROM SDRDPPR Y
			   WHERE Y.SDRDPPR_PROGRAM = SDRCOLR_PROGRAM
                           AND   Y.SDRDPPR_AREA_CODE
                                 = X.SDRDPPR_AREA_CODE
			   AND   Y.SDRDPPR_EFFECTIVE_BLTN_YEAR
                                 <= SDRCOLR_BLTN_YEAR)
		 UNION
	    SELECT  SDRSSGR_PIDM,
	            SDRSSGR_PROGRAM,
	            SDRSSGR_BLTN_YEAR,
		    SDRSSGR_AREA_CODE,
		    SDRSSGR_SEQ_NO,
                    SDRSSGR_CVO_NO,
		    SDRSSGR_MAX_HOURS
		    FROM  SDRSSGR, SDRCOLR
                    WHERE SDRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
		    AND   SDRSSGR_PROGRAM = SDRCOLR_PROGRAM
		    AND   SDRSSGR_BLTN_YEAR =  SDRCOLR_BLTN_YEAR
		    AND   SDRSSGR_PIDM = SDRCOLR_PIDM)
 "
"BANINST1","SDVCMCR","Compliance Cluster Requirements View","(SELECT  SDRCOLR_PIDM,
		     SDRCOLR_PROGRAM,
		     SDRCOLR_BLTN_YEAR,
	             X.SDRDPCR_AREA_CODE,
		     X.SDRDPCR_DPPR_SEQ_NO,
                     X.SDRDPCR_SEQ_NO,
		     X.SDRDPCR_MIN_HOURS
		     FROM SDRDPCR X, SDRCOLR
                     WHERE SDRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
		     AND   X.SDRDPCR_PROGRAM = SDRCOLR_PROGRAM
		     AND   X.SDRDPCR_EFFECTIVE_BLTN_YEAR =
			  (SELECT MAX(Y.SDRDPCR_EFFECTIVE_BLTN_YEAR)
			   FROM SDRDPCR Y
			   WHERE Y.SDRDPCR_PROGRAM = SDRCOLR_PROGRAM
                           AND   Y.SDRDPCR_AREA_CODE
                                 = X.SDRDPCR_AREA_CODE
                           AND   Y.SDRDPCR_DPPR_SEQ_NO
                                 = X.SDRDPCR_DPPR_SEQ_NO
			   AND   Y.SDRDPCR_EFFECTIVE_BLTN_YEAR
                                 <= SDRCOLR_BLTN_YEAR)
		  UNION
	     SELECT  SDRSSCR_PIDM,
		     SDRSSCR_PROGRAM,
		     SDRSSCR_BLTN_YEAR,
		     SDRSSCR_AREA_CODE,
		     SDRSSCR_SSGR_SEQ_NO,
                     SDRSSCR_SEQ_NO,
		     SDRSSCR_MIN_HOURS
		     FROM SDRSSCR, SDRCOLR
                     WHERE SDRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
		     AND   SDRSSCR_PROGRAM =  SDRCOLR_PROGRAM
		     AND   SDRSSCR_BLTN_YEAR = SDRCOLR_BLTN_YEAR
		     AND   SDRSSCR_PIDM = SDRCOLR_PIDM)
 "
"BANINST1","SAVTEST","Adm. Test Score Decision View","SELECT SAVDCSN.SAVDCSN_SID,
       SAVDCSN.SAVDCSN_APDC_CODE, SAVDCSN.SAVDCSN_SARDCSN_SEQ_NO,
       SAVDCSN.SAVDCSN_TERM_CODE, SAVDCSN.SAVDCSN_PIDM,
       SAVDCSN.SAVDCSN_APPL_NO
FROM   SARADTS, SAVDCSN
WHERE  SAVDCSN.SAVDCSN_SARDCSN_SEQ_NO  = SARADTS.SARADTS_SEQ_NO
 AND   SAVDCSN.SAVDCSN_TERM_CODE = SARADTS.SARADTS_TERM_CODE
 AND   (SARADTS.SARADTS_TESC_CODE, SAVDCSN.SAVDCSN_PIDM) IN
       (SELECT SORTEST.SORTEST_TESC_CODE,SORTEST.SORTEST_PIDM
        FROM SORTEST
 WHERE ((SORTEST.SORTEST_TEST_SCORE >= NVL(SARADTS.SARADTS_MIN_TEST_SCORE,' ')
       OR SARADTS.SARADTS_MIN_TEST_SCORE IS NULL)))
 "
"BANINST1","SAVSTRG","This is a view of the contacts for admissions applicants up through the day that their admissions process was terminated.","select
  saradap_pidm,
  saradap_appl_no,
  saradap_levl_code,
  substr(f_get_desc_fnc('STVLEVL',saradap_levl_code,30),1,30),
  saradap_term_code_entry,
  substr(f_get_desc_fnc('STVTERM',saradap_term_code_entry,30),1,30),
  sorcont_ctyp_code,
  substr(f_get_desc_fnc('STVCTYP',sorcont_ctyp_code,30),1,30),
  sorcont_contact_date,
  f_count_contacts_fnc
    (saradap_pidm, sorcont_ctyp_code, sorcont_contact_date),
  sysdate
 from sorcont, saradap
where sorcont_pidm = saradap_pidm
  and trunc(sorcont_contact_date) <=
      nvl(trunc(f_adms_termination_fnc
         (saradap_pidm,saradap_term_code_entry,saradap_appl_no)),
          trunc(sorcont_contact_date))
 "
"BANINST1","SAVSGEO","High School/College and School Administrator View. Displays all SBGIs, even those without assignments.","(SELECT
          stvsbgi_code,
          stvsbgi_desc,
          stvsbgi_type_ind,
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STL1'),1,30),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STL2'),1,30),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STL3'),1,30),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'CITY'),1,20),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STAT'),1,3),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'ZIP'),1,10),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'CNTY'),1,5),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'NATN'),1,5),
          NULL,
          NULL,
          NULL,
          substr(f_epsccode (substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STAT'),1,3), substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'ZIP'),1,10),substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'CNTY'),1,5)),
            1,6),
          savadas1_pidm,
          savadas1_id,
          savadas1_last_name,
          savadas1_first_name,
          savadas1_radm_code,
          savadas1_radm_desc,
          savadas1_radm_term_eff
     FROM
          savadas1,
          stvsbgi
    WHERE
          stvsbgi_code = savadas1_sbgi_code (+)
      AND NOT EXISTS (SELECT 'X'
                        FROM gorsgeo
                       WHERE gorsgeo_sbgi_code = stvsbgi_code)
   UNION
   SELECT
          stvsbgi_code,
          stvsbgi_desc,
          stvsbgi_type_ind,
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STL1'),1,30),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STL2'),1,30),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STL3'),1,30),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'CITY'),1,20),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STAT'),1,3),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'ZIP'),1,10),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'CNTY'),1,5),
          substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'NATN'),1,5),
          gorsgeo_geor_code,
          gorsgeo_geod_code,
          gorsgeo_status_ind,
          substr(f_epsccode (substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'STAT'),1,3), substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'ZIP'),1,10),substr(SOKSELS.F_GET_SOBSBGI(stvsbgi_code,'CNTY'),1,5)),
            1,6),
          savadas1_pidm,
          savadas1_id,
          savadas1_last_name,
          savadas1_first_name,
          savadas1_radm_code,
          savadas1_radm_desc,
          savadas1_radm_term_eff
     FROM
          savadas1,
          gorsgeo,
          stvsbgi
    WHERE
          stvsbgi_code = savadas1_sbgi_code (+)
      AND stvsbgi_code = gorsgeo_sbgi_code ) "
"BANINST1","SAVSEC1","This is an intermediate level view used to retrieve addmissions information for secondary school tracking.","SELECT
x.saradap_term_code_entry,
x.saradap_pidm,
x.saradap_levl_code,
x.saradap_appl_no,
x.spriden_id,
substr(x.spriden_last_name,1,23) || ', ' || substr(x.spriden_first_name,1,10),
x.saradap_admt_code,
x.saradap_apst_code,
x.saradap_degc_code_1,
x.saradap_majr_code_1,
x.saradap_full_part_ind,
x.sorhsch_sbgi_code,
x.sbgi.sobsbgi_city,
x.sbgi.sobsbgi_natn_code,
x.sbgi.sobsbgi_stat_code,
 substr(decode(x.sorhsch_sbgi_code,null,null,
      f_hsch_type_fnc(x.sorhsch_sbgi_code)),1,3),
substr(to_char(x.sorhsch_graduation_date,'YYYY'),1,4),
x.sorhsch_percentile,
x.sorhsch_class_rank,
x.sorhsch_class_size,
substr(f_inquirer_fnc
  (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_levl_code),1,1),
substr(f_prospect_fnc
  (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_levl_code),1,1),
substr(f_level_appl_fnc
  (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_levl_code),1,1),
substr(f_level_admitted_fnc
  (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_levl_code),1,1),
substr(f_paid_admissions_deposit
  (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_appl_no),1,1),
substr(f_class_fnc
  (x.saradap_pidm, x.saradap_levl_code, x.saradap_term_code_entry),1,10),
x.saradap_styp_code,
x.saradap_coll_code_1,
x.saradap_camp_code,
x.saradap_program_1
FROM
(select
  saradap_term_code_entry,
  saradap_pidm,
  saradap_levl_code,
  saradap_appl_no,
  spriden_id,
  spriden_last_name,spriden_first_name,
  saradap_admt_code,
  saradap_apst_code,
  saradap_degc_code_1,
  saradap_majr_code_1,
  saradap_full_part_ind,
  sorhsch_sbgi_code,
  (SELECT so_sobsbgi(NULL,NULL,NULL,sobsbgi_city,sobsbgi_stat_code,NULL,NULL,sobsbgi_natn_code,NULL,NULL)
     FROM sobsbgi
    WHERE   sobsbgi_sbgi_code = sorhsch_sbgi_code ) sbgi,
  substr(decode(sorhsch_sbgi_code,null,null,
      f_hsch_type_fnc(sorhsch_sbgi_code)),1,3),
  sorhsch_graduation_date,
  sorhsch_percentile,
  sorhsch_class_rank,
  sorhsch_class_size,
  saradap_styp_code,
  saradap_coll_code_1,
  saradap_camp_code,
  saradap_program_1
 from  spriden,saradap, sorhsch
where
      spriden_change_ind is null
  and spriden_pidm = sorhsch_pidm
  and saradap_pidm = sorhsch_pidm )x"
"BANINST1","SAVPCOL","Adm. Prior College Decision View","SELECT SAVDCSN.SAVDCSN_SID,
       SAVDCSN.SAVDCSN_APDC_CODE, SAVDCSN.SAVDCSN_SARDCSN_SEQ_NO,
       SAVDCSN.SAVDCSN_TERM_CODE, SAVDCSN.SAVDCSN_PIDM,
       SAVDCSN.SAVDCSN_APPL_NO
FROM  SORDEGR, SAVDCSN, SARDCSN
WHERE  (NVL(TO_NUMBER(SORDEGR.SORDEGR_GPA_TRANSFERRED),0) >=
        NVL(TO_NUMBER(SARDCSN.SARDCSN_MIN_GPA_TRANS_PC),0)
        OR TO_NUMBER(SARDCSN.SARDCSN_MIN_GPA_TRANS_PC) IS NULL)
  AND  (NVL(SORDEGR.SORDEGR_DEGC_CODE,' ') =
           NVL(SARDCSN.SARDCSN_DEGC_CODE_PC,' ')
        OR SARDCSN.SARDCSN_DEGC_CODE_PC IS NULL)
   AND SAVDCSN.SAVDCSN_APDC_CODE = SARDCSN.SARDCSN_APDC_CODE
   AND SAVDCSN.SAVDCSN_SARDCSN_SEQ_NO = SARDCSN.SARDCSN_SEQ_NO
   AND SAVDCSN.SAVDCSN_TERM_CODE = SARDCSN.SARDCSN_TERM_CODE
   AND SAVDCSN.SAVDCSN_PIDM = SORDEGR.SORDEGR_PIDM
 "
"BANINST1","SAVPCO1","This is an intermediate level view used to retrieve addmissions information for prior college tracking.","SELECT
  x.saradap_term_code_entry,
  x.saradap_pidm,
  x.saradap_levl_code,
  x.saradap_appl_no,
  x.spriden_id,
  substr(x.spriden_last_name,1,23) || ', ' || substr(x.spriden_first_name,1,10),
  x.saradap_admt_code,
  x.saradap_apst_code,
  x.saradap_degc_code_1,
  x.saradap_majr_code_1,
  x.saradap_full_part_ind,
  x.sorpcol_sbgi_code,
  x.sbgi.sobsbgi_city,
  x.sbgi.sobsbgi_natn_code,
  x.sbgi.sobsbgi_stat_code,
  substr(f_inquirer_fnc
    (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_levl_code),1,1),
  substr(f_prospect_fnc
    (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_levl_code),1,1),
  substr(f_level_appl_fnc
    (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_levl_code),1,1),
  substr(f_level_admitted_fnc
    (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_levl_code),1,1),
  substr(f_paid_admissions_deposit
    (x.saradap_pidm, x.saradap_term_code_entry, x.saradap_appl_no),1,1),
  substr(f_class_fnc
    (x.saradap_pidm, x.saradap_levl_code, x.saradap_term_code_entry),1,10),
  x.saradap_styp_code,
  x.saradap_coll_code_1,
  x.saradap_camp_code,
  x.saradap_program_1
FROM
(select
  saradap_term_code_entry,
  saradap_pidm,
  saradap_levl_code,
  saradap_appl_no,
  spriden_id,
  spriden_last_name,
  spriden_first_name,
  saradap_admt_code,
  saradap_apst_code,
  saradap_degc_code_1,
  saradap_majr_code_1,
  saradap_full_part_ind,
  sorpcol_sbgi_code,
  (SELECT so_sobsbgi(null,null,null,sobsbgi_city,sobsbgi_stat_code,null,null,sobsbgi_natn_code,null,null)
     FROM sobsbgi
    WHERE sobsbgi_sbgi_code = sorpcol_sbgi_code)sbgi,
  saradap_styp_code,
  saradap_coll_code_1,
  saradap_camp_code,
  saradap_program_1
 from  spriden,saradap, sorpcol
where
  spriden_change_ind is null
  and spriden_pidm = sorpcol_pidm
  and saradap_pidm = sorpcol_pidm)x"
"BANINST1","SAVLIFE","This view returns admissions information for an applicant throughout the life at the institution for Enrollment Management uses.","select
  savlif1_term_code,
  substr(f_get_desc_fnc('STVTERM',savlif1_term_code,30),1,30),
  savlif1_pidm,
  savlif1_levl_code,
  substr(f_get_desc_fnc('STVLEVL',savlif1_levl_code,30),1,30),
  savlif1_appl_no,
  savlif1_id,
  savlif1_name,
  savlif1_ssn,
  savlif1_birth_date,
  savlif1_ethn_code,
  substr(decode(savlif1_ethn_code,null,null,
    f_get_desc_fnc('STVETHN',savlif1_ethn_code,30)),1,30),
  savlif1_sex,
  savlif1_natn_code,
  substr(decode(savlif1_natn_code,null,null,
    f_get_desc_fnc('STVNATN',savlif1_natn_code,30)),1,30),
  savlif1_stat_code,
  substr(decode(savlif1_stat_code,null,null,
    f_get_desc_fnc('STVSTAT',savlif1_stat_code,30)),1,30),
  savlif1_citz_code,
  substr(decode(savlif1_citz_code,null,null,
    f_get_desc_fnc('STVCITZ',savlif1_citz_code,30)),1,30),
  savlif1_admt_code,
  substr(decode(savlif1_admt_code,null,null,
    f_get_desc_fnc('STVADMT',savlif1_admt_code,30)),1,30),
  savlif1_apst_code,
  substr(decode(savlif1_apst_code,null,null,
    f_get_desc_fnc('STVAPST',savlif1_apst_code,30)),1,30),
  savlif1_degc_code_1,
  substr(decode(savlif1_degc_code_1,null,null,
    f_get_desc_fnc('STVDEGC',savlif1_degc_code_1,30)),1,30),
  savlif1_appl_eval,
  savlif1_majr_code_1,
  substr(decode(savlif1_majr_code_1,null,null,
    f_get_desc_fnc('STVMAJR',savlif1_majr_code_1,30)),1,30),
  savlif1_full_part_ind,
  savlif1_sbgi_code_source,
  substr(decode(savlif1_sbgi_code_source,null,null,
    f_get_desc_fnc('STVSBGI',savlif1_sbgi_code_source,30)),1,30),
  savlif1_apdc_code_inst,
  substr(decode(savlif1_apdc_code_inst,null,null,
    f_get_desc_fnc('STVAPDC',savlif1_apdc_code_inst,30)),1,30),
  savlif1_apdc_code_stdn,
  substr(decode(savlif1_apdc_code_stdn,null,null,
    f_get_desc_fnc('STVAPDC',savlif1_apdc_code_stdn,30)),1,30),
  savlif1_sbgi_code_othr_coll,
  substr(decode(savlif1_sbgi_code_othr_coll,null,null,
    f_get_desc_fnc('STVSBGI',savlif1_sbgi_code_othr_coll,30)),1,30),
  savlif1_chrt_code,
  substr(decode(savlif1_chrt_code,null,null,
    f_get_desc_fnc('STVCHRT',savlif1_chrt_code,30)),1,30),
  savlif1_sbgi_code_hsch,
  substr(decode(savlif1_sbgi_code_hsch,null,null,
    f_get_desc_fnc('STVSBGI',savlif1_sbgi_code_hsch,30)),1,30),
  savlif1_hsch_city,
  savlif1_natn_code_hsch,
  substr(decode(savlif1_natn_code_hsch,null,null,
    f_get_desc_fnc('STVNATN',savlif1_natn_code_hsch,30)),1,30),
  savlif1_stat_code_hsch,
  substr(decode(savlif1_stat_code_hsch,null,null,
    f_get_desc_fnc('STVSTAT',savlif1_stat_code_hsch,30)),1,30),
  savlif1_hsch_type,
  savlif1_hsch_grad_year,
  savlif1_hsch_percentile,
  savlif1_hsch_rank,
  savlif1_hsch_size,
  savlif1_gpa_normalized,
  savlif1_gpa_reported,
  savlif1_aidy_code,
  substr(decode(savlif1_aidy_code,null,null,
    f_finaid_get_desc('ROBINST',savlif1_aidy_code,30)),1,30),
  savlif1_fa_applicant,
  savlif1_inst_aid_recipient,
  savlif1_inst_grant_amt,
  savlif1_state_grant_amt,
  savlif1_seog_amt,
  savlif1_pell_amt,
  savlif1_other_grant_amt,
  savlif1_inst_loan_amt,
  savlif1_perk_loan_amt,
  savlif1_staf_loan_amt,
  savlif1_other_loan_amt,
  savlif1_fws_amt,
  savlif1_gws_amt,
  decode(savlif1_inquirer,'Y','Y','N',
      decode(savlif1_prospect,'Y','Y','N',
          decode(savlif1_applicant,'Y','Y','N',
              decode(savlif1_admit,'Y','Y','N',
                  decode(savlif1_deposit,'Y','Y','N',
                      decode(savlif1_class,'FRESHMAN','Y',
                                           'SOPHOMORE','Y',
                                           'JUNIOR','Y',
                                           'SENIOR','Y',
                                           'GRADUATE','Y','N')))))),
  decode(savlif1_prospect,'Y','Y','N',
      decode(savlif1_applicant,'Y','Y','N',
          decode(savlif1_admit,'Y','Y','N',
              decode(savlif1_deposit,'Y','Y','N',
                  decode(savlif1_class,'FRESHMAN','Y',
                                       'SOPHOMORE','Y',
                                       'JUNIOR','Y',
                                       'SENIOR','Y',
                                       'GRADUATE','Y','N'))))),
  decode(savlif1_applicant,'Y','Y','N',
      decode(savlif1_admit,'Y','Y','N',
          decode(savlif1_deposit,'Y','Y','N',
              decode(savlif1_class,'FRESHMAN','Y',
                                   'SOPHOMORE','Y',
                                   'JUNIOR','Y',
                                   'SENIOR','Y',
                                   'GRADUATE','Y','N')))),
  decode(savlif1_admit,'Y','Y','N',
      decode(savlif1_deposit,'Y','Y','N',
          decode(savlif1_class,'FRESHMAN','Y',
                               'SOPHOMORE','Y',
                               'JUNIOR','Y',
                               'SENIOR','Y',
                               'GRADUATE','Y','N'))),
  decode(savlif1_deposit,'Y','Y','N',
      decode(savlif1_class,'FRESHMAN','Y',
                           'SOPHOMORE','Y',
                           'JUNIOR','Y',
                           'SENIOR','Y',
                           'GRADUATE','Y','N')),
  decode(savlif1_class,'FRESHMAN','Y',
                       'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savlif1_class,'SOPHOMORE','Y',
                       'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savlif1_class,'JUNIOR','Y',
                       'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savlif1_class,'SENIOR','Y',
                       'GRADUATE','Y','N'),
  decode(savlif1_class,'GRADUATE','Y','N'),
  savlif1_term_code_stdn,
  substr(decode(savlif1_term_code_stdn,null,null,
    f_get_desc_fnc('STVTERM',savlif1_term_code_stdn,30)),1,30),
  savlif1_act_composite,
  savlif1_sat_combined,
  savlif1_sat_math,
  savlif1_sat_verbal,
  savlif1_adms_termination_date
 from savlif1
 "
"BANINST1","SAVLIF1","This is an intermediate level view used to retrieve addmissions information for Enrollment Management.","select
  saradap_term_code_entry,
  saradap_pidm,
  saradap_levl_code,
  saradap_appl_no,
  spriden_id,
  SUBSTR(spriden_last_name,1,23) || ', ' || substr(spriden_first_name,1,10),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm, 'SSN'),1,15),
  to_date(goksels.f_name_bio_value(saradap_pidm, 'BDATE'), G$_DATE.GET_NLS_DATE_FORMAT),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm, 'ETHN'),1,2),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm, 'SEX'),1,1),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'EMGTADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'EMGTADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm, 'CITZ'),1,2),
  saradap_admt_code,
  saradap_apst_code,
  saradap_degc_code_1,
  substr(f_appl_eval_fnc
    (saradap_pidm, saradap_term_code_entry,
     saradap_appl_no,saradap_levl_code),1,1),
  saradap_majr_code_1,
  saradap_full_part_ind,
  substr(f_appl_source_fnc
    (saradap_pidm, saradap_term_code_entry, saradap_appl_no,'Y'),1,6),
  substr(f_appl_response_fnc
    (saradap_pidm, saradap_term_code_entry, saradap_appl_no,'INSTITUTE'),1,2),
  substr(f_appl_response_fnc
    (saradap_pidm, saradap_term_code_entry, saradap_appl_no,'APPLICANT'),1,2),
  saradap_sbgi_code,
  substr(f_appl_cohort_fnc
    (saradap_pidm, saradap_term_code_entry, saradap_appl_no),1,10),
  SUBSTR(soklibs.f_highschool_value(saradap_pidm,'HS','SC','.','0','.'),1,6),
  SUBSTR(soklibs.f_highschool_value(saradap_pidm,'SB','C','.','0','.'),1,50),
  SUBSTR(soklibs.f_highschool_value(saradap_pidm,'SB','NTN','.','0','.'),1,5),
  SUBSTR(soklibs.f_highschool_value(saradap_pidm,'SB','SC','.','0','.'),1,3),
  substr(f_hsch_type_fnc(
         SUBSTR(soklibs.f_highschool_value(saradap_pidm,'HS','SC','.','0','.'),1,6)
        ),1,3),  --hsch_type
  to_char(
     to_date(soklibs.f_highschool_value(saradap_pidm,'HS','GD','.','0','.'),
             G$_DATE.GET_NLS_DATE_FORMAT),
     'YYYY'), --graduation year
  TO_NUMBER(soklibs.f_highschool_value(saradap_pidm,'HS','P','.','0','.')), --sorhsch_percentile
  TO_NUMBER(soklibs.f_highschool_value(saradap_pidm,'HS','CR','.','0','.')), --sorhsch_class_rank
  TO_NUMBER(soklibs.f_highschool_value(saradap_pidm,'HS','CS','.','0','.')), --sorhsch_class_size
  f_normalized_gpa_fnc(saradap_pidm),
  SUBSTR(soklibs.f_highschool_value(saradap_pidm,'HS','GPA','.','0','.'),1,24),
  stvterm_fa_proc_yr,
  substr(f_finaid_applicant_ind
    (saradap_pidm, stvterm_fa_proc_yr,null),1,1),
  substr(f_inst_aid_fnc
    (saradap_pidm, stvterm_fa_proc_yr),1,1),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'I','G',null,'C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'S','G',null,'C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'F','G','SEOG','C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'F','G','PELL','C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'O','G',null,'C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'I','L',null,'C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'F','L','PERK','C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'F','L','STFD','C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'O','L',null,'C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'F','W',null,'C',null),
  f_fa_amt_year_fnc
    (saradap_pidm,stvterm_fa_proc_yr,'I','W',null,'C',null),
  substr(f_inquirer_fnc
    (saradap_pidm, saradap_term_code_entry, saradap_levl_code),1,1),
  substr(f_prospect_fnc
    (saradap_pidm, saradap_term_code_entry, saradap_levl_code),1,1),
  substr(f_level_appl_fnc
    (saradap_pidm, saradap_term_code_entry, saradap_levl_code),1,1),
  substr(f_level_admitted_fnc
    (saradap_pidm, saradap_term_code_entry, saradap_levl_code),1,1),
  substr(f_paid_admissions_deposit
    (saradap_pidm, saradap_term_code_entry, saradap_appl_no),1,1),
  substr(f_class_fnc
    (saradap_pidm, saradap_levl_code, saradap_term_code_entry),1,10),
  substr(f_latest_term_fnc(saradap_pidm),1,6),
  f_test_score_fnc(saradap_pidm,null,'COMPOSITE',null),
  f_test_score_fnc(saradap_pidm,null,'COMBINED',null),
  f_test_score_fnc(saradap_pidm,'SATM','HIGH','Y'),
  f_test_score_fnc(saradap_pidm,'SATV','HIGH','Y'),
  f_adms_termination_fnc
    (saradap_pidm, saradap_term_code_entry, saradap_appl_no),
  sysdate
from spriden, saradap, stvterm
where saradap_term_code_entry = stvterm_code
  and spriden_change_ind is null
  and spriden_pidm = saradap_pidm"
"BANINST1","SAVHSCH","Adm. High School Decision View","SELECT SAVDCSN.SAVDCSN_SID,
       SAVDCSN.SAVDCSN_APDC_CODE, SAVDCSN.SAVDCSN_SARDCSN_SEQ_NO,
       SAVDCSN.SAVDCSN_TERM_CODE, SAVDCSN.SAVDCSN_PIDM,
       SAVDCSN.SAVDCSN_APPL_NO
FROM   SAVDCSN, SARDCSN,  SORHSCH
WHERE (TO_NUMBER(NVL(SORHSCH.SORHSCH_PERCENTILE,0)) >=
           TO_NUMBER(NVL(SARDCSN.SARDCSN_MIN_PERCENTILE_HS,0))
        OR SARDCSN.SARDCSN_MIN_PERCENTILE_HS IS NULL)
      AND (TO_NUMBER(NVL(SORHSCH.SORHSCH_GPA,0)) >=
           TO_NUMBER(NVL(SARDCSN.SARDCSN_MIN_GPA_HS,0))
            OR SARDCSN.SARDCSN_MIN_GPA_HS IS NULL)
      AND (NVL(SORHSCH.SORHSCH_COLL_PREP_IND,' ')  >=
             NVL(SARDCSN.SARDCSN_COLL_PREP_IND_HS,' ')
           OR SARDCSN.SARDCSN_COLL_PREP_IND_HS IS NULL)
      AND (NVL(SORHSCH.SORHSCH_DPLM_CODE,' ') =
               NVL(SARDCSN.SARDCSN_DPLM_CODE_HS,' ')
           OR  SARDCSN.SARDCSN_DPLM_CODE_HS IS NULL)
      AND SAVDCSN.SAVDCSN_APDC_CODE = SARDCSN.SARDCSN_APDC_CODE
      AND SAVDCSN.SAVDCSN_SARDCSN_SEQ_NO = SARDCSN.SARDCSN_SEQ_NO
      AND SAVDCSN.SAVDCSN_TERM_CODE = SARDCSN.SARDCSN_TERM_CODE
      AND SORHSCH.SORHSCH_PIDM = SAVDCSN.SAVDCSN_PIDM
 "
"BANINST1","SAVHSBJ","Adm. High School Subject Decision View","SELECT SAVDCSN.SAVDCSN_SID,
       SAVDCSN.SAVDCSN_APDC_CODE,
       SAVDCSN.SAVDCSN_SARDCSN_SEQ_NO,
       SAVDCSN.SAVDCSN_TERM_CODE,
       SAVDCSN.SAVDCSN_PIDM,
       SAVDCSN.SAVDCSN_APPL_NO
FROM  SAVDCSN, SARADHS
WHERE SAVDCSN.SAVDCSN_SARDCSN_SEQ_NO = SARADHS.SARADHS_SEQ_NO
  AND SAVDCSN.SAVDCSN_TERM_CODE = SARADHS.SARADHS_TERM_CODE
  AND (SARADHS.SARADHS_SBJC_CODE, SAVDCSN.SAVDCSN_PIDM) IN
         (SELECT SORHSBJ.SORHSBJ_SBJC_CODE, SORHSBJ.SORHSBJ_PIDM
          FROM SORHSBJ
WHERE (TO_NUMBER(NVL(SORHSBJ.SORHSBJ_SUBJ_YEARS,0)) >=
               TO_NUMBER(NVL(SARADHS.SARADHS_SUBJ_YEARS,0))
        OR SARADHS.SARADHS_SUBJ_YEARS IS NULL)
 AND    (TO_NUMBER(NVL(SORHSBJ.SORHSBJ_SUBJ_GPA,0)) >=
               TO_NUMBER(NVL(SARADHS.SARADHS_SUBJ_GPA,0))
         OR SARADHS.SARADHS_SUBJ_GPA IS NULL)
 AND    (NVL(SORHSBJ.SORHSBJ_GRADE,' ')  <=
               NVL(SARADHS.SARADHS_GRADE,' ')
          OR SARADHS.SARADHS_GRADE IS NULL))
 "
"BANINST1","SAVHEAD","Electronic Admissions Applications","select sabstud_pidm,
	sabstud_aidm,
	spriden_id,
	spriden_last_name,
	spriden_first_name,
        spriden_mi,
	'S',
	sarhead_appl_seqno,
	sarhead_appl_comp_ind,
	sarhead_add_date,
	sarhead_appl_status_ind,
	sarhead_pers_status_ind,
	sarhead_process_ind,
	sarhead_appl_accept_ind,
	sarhead_term_code_entry,
	sarhead_wapp_code,
	sarhead_apls_code,
	sarhead_process_date,
	trunc(sarhead_add_date),
	sarhead_prev_applied_resp,
	sarhead_prev_attend_resp,
        spriden_surname_prefix
from spriden, sarhead, sabstud
where sarhead_aidm = sabstud_aidm
and sabstud_pidm = spriden_pidm
and spriden_change_ind is null
union
select 0,
	sabnstu_aidm,
	sabnstu_id,
	sarpers_last_name,
	sarpers_first_name,
        sarpers_middle_name1,
		'N',
	sarhead_appl_seqno,
	sarhead_appl_comp_ind,
	sarhead_add_date,
	sarhead_appl_status_ind,
	sarhead_pers_status_ind,
	sarhead_process_ind,
	sarhead_appl_accept_ind,
	sarhead_term_code_entry,
	sarhead_wapp_code,
	sarhead_apls_code,
	sarhead_process_date,
	trunc(sarhead_add_date),
	sarhead_prev_applied_resp,
	sarhead_prev_attend_resp,
        sarpers_surname_prefix
from sarpers, sarhead, sabnstu
where sabnstu_aidm = sarpers_aidm
and sabnstu_aidm = sarpers_aidm
and sarhead_appl_seqno = sarpers_appl_seqno
and sabnstu_aidm = sarhead_aidm
and sarpers_seqno = 1"
"BANINST1","SAVEAPS","Electronic Admissions Application Data.","SELECT
         saveap1_aidm,
         saveap1_id,
         saveap1_spriden_id,
         CAST(saveap1_pidm AS NUMBER(8)),
         saveap1_last_name,
         saveap1_first_name,
         saveap1_middle_name,
         saveap1_surname_prefix,
         saveap1_appl_seqno,
         saveap1_appl_comp_ind,
         saveap1_add_date,
         saveap1_add_date_trunc,
         saveap1_complete_date,
         saveap1_complete_date_trunc,
         saveap1_appl_status_ind,
         saveap1_pers_status_ind,
         saveap1_process_ind,
         saveap1_appl_accept_ind,
         saveap1_term_code_entry,
         stvterm_desc,
         saveap1_wapp_code,
         saveap1_wapp_desc,
         saveap1_levl_code,
         saveap1_apls_code,
         saveap1_process_date,
         saveap1_atyp_code,
         saveap1_house_number,
         saveap1_street_line1,
         saveap1_street_line2,
         saveap1_street_line3,
         saveap1_street_line4,
         saveap1_city,
         saveap1_stat_cde,
         saveap1_zip,
         saveap1_cnty_code,
         saveap1_natn_cde,
         saveap1_email,
         saveap1_tele_code,
         saveap1_area_code,
         saveap1_phone,
         saveap1_ext,
         saveap1_intl_access,
         saveap1_ctry_cde_phone,
         saveap1_major1_desc,
         saveap1_major2_desc,
         saveap1_sbgi_code,
         gb_stvsbgi.f_get_description(saveap1_sbgi_code),
         saveap1_appl_preference,
         saveap1_pin,
         saveap1_prefix
 FROM    stvterm, saveap1
 WHERE stvterm_code = saveap1_term_code_entry"
"BANINST1","SAVEAP1","Electronic Admissions Application Data 1.","SELECT
	sarhead_aidm,
	(SELECT sabnstu_id FROM sabnstu WHERE  sabnstu_aidm  = sarhead_aidm),
	SUBSTR(F_GetSpridenID(DECODE(sakpcom.f_sabiden_chk(sarhead_aidm),0,'',sakpcom.f_sabiden_chk(sarhead_aidm))),1,9),
        CAST(DECODE(sakpcom.f_sabiden_chk(sarhead_aidm),0,'',sakpcom.f_sabiden_chk(sarhead_aidm)) AS NUMBER(8)),
	SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPERS','LNAME'),1,60),
	SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPERS','FNAME'),1,35),
	SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPERS','MNAME'),1,35),
	SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPERS','SPREF'),1,35),
	sarhead_appl_seqno,
	sarhead_appl_comp_ind,
	sarhead_add_date,
	trunc(sarhead_add_date),
	sarhead_complete_date,
	trunc(sarhead_complete_date),
	sarhead_appl_status_ind,
	sarhead_pers_status_ind,
	sarhead_process_ind,
	sarhead_appl_accept_ind,
	sarhead_term_code_entry,
	sarhead_wapp_code,
	stvwapp_desc,
	stvwapp_levl_code,
	sarhead_apls_code,
	sarhead_process_date,
  SUBSTR(sakpcom.f_sorxref_val('STVATYP','',saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','LCQL'),'Y'),1,2),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','HN'),1,10),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','S1'),1,75),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','S2'),1,75),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','S3'),1,75),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','S4'),1,75),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','CITY'),1,50),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','STAT'),1,3),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','ZIP'),1,30),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','CNTY'),1,5),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARADDR','NATN'),1,5),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPHON','EMAIL'),1,128),
  SUBSTR(sakpcom.f_sorxref_val('STVTELE','',saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPHON','PQLF'),'Y'),1,4),
  SUBSTR(f_get_area_code(NVL(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPHON','PHONEP'),'*')),1,6),
  SUBSTR(f_get_phone(NVL(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPHON','PHONEP'),'*')),1,12),
  SUBSTR(f_get_extension(NVL(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPHON','PHONEP'),'*')),1,10),
  SUBSTR(f_get_intl_access_code(NVL(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPHON','PHONEP'),'*')),1,16),
  SUBSTR(f_get_ctry_code_phone(NVL(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPHON','PHONEP'),'*')),1,4),
  SUBSTR(f_get_curriculum(sarhead_aidm, sarhead_appl_seqno,1),1,60),
  SUBSTR(f_get_curriculum(sarhead_aidm, sarhead_appl_seqno,2),1,60),
  SUBSTR(NVL(SUBSTR(sakpcom.f_sorxref_val('STVSBGIH',saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARHSCH','IDQL'),saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARHSCH','IDEN'),'Y'),1,6),
  saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARHSCH','IDEN')),1,6),
  sarhead_appl_preference,
  (SELECT sabnstu_pin
   FROM   sabnstu
   WHERE  sabnstu_aidm  = sarhead_aidm),
  SUBSTR(saklibs.f_get_saveap1(sarhead_aidm,sarhead_appl_seqno,'SARPERS','PREF'),1,35)
 FROM  stvwapp,sarhead
 WHERE stvwapp_code = sarhead_wapp_code"
"BANINST1","SAVDCSN","Adm. Application Decision View","SELECT
 SABVWID_SID,
 SARADAP.ROWID,
 SARADAP.SARADAP_PIDM,
 SARADAP.SARADAP_APPL_NO,
 SARADAP.SARADAP_TERM_CODE_ENTRY,
 SARDCSN.ROWID,
 NVL(SARDCSN.SARDCSN_APDC_CODE,''),
 NVL(SARDCSN.SARDCSN_SEQ_NO,0),
 SARDCSN.SARDCSN_PRI_IND,
 SARDCSN.SARDCSN_COLL_PREP_IND_HS,
 SARDCSN.SARDCSN_MIN_GPA_HS,
 SARDCSN.SARDCSN_MIN_PERCENTILE_HS,
 SARDCSN.SARDCSN_MAX_PERCENTILE_HS,
 SARDCSN.SARDCSN_DPLM_CODE_HS,
 SARDCSN.SARDCSN_DURATION_PC,
 SARDCSN.SARDCSN_DEGC_CODE_PC,
 SARDCSN.SARDCSN_MIN_HOURS_TRANS_PC,
 SARDCSN.SARDCSN_MIN_GPA_TRANS_PC,
 SARDCSN.SARDCSN_LEVL_CODE,
 SARDCSN.SARDCSN_DEGC_CODE_1,
 SARDCSN.SARDCSN_COLL_CODE_1,
 SARDCSN.SARDCSN_CAMP_CODE,
 SARDCSN.SARDCSN_PROGRAM_1,
 SARDCSN.SARDCSN_MAJR_CODE_1,
 SARDCSN.SARDCSN_LFST_CODE_1,
 SARDCSN.SARDCSN_LEVL_CODE_2,
 SARDCSN.SARDCSN_DEGC_CODE_2,
 SARDCSN.SARDCSN_COLL_CODE_2,
 SARDCSN.SARDCSN_CAMP_CODE_2,
 SARDCSN.SARDCSN_PROGRAM_2,
 SARDCSN.SARDCSN_MAJR_CODE_2,
 SARDCSN.SARDCSN_LFST_CODE_2
FROM  SPBPERS, SARDCSN, SABVWID, SARADAP
WHERE (SARADAP_RESD_CODE = SARDCSN.SARDCSN_RESD_CODE
       OR SARDCSN.SARDCSN_RESD_CODE IS NULL)
AND   (SARADAP_ADMT_CODE = SARDCSN.SARDCSN_ADMT_CODE
       OR SARDCSN.SARDCSN_ADMT_CODE IS NULL)
AND   (SARADAP_STYP_CODE = SARDCSN.SARDCSN_STYP_CODE
       OR SARDCSN.SARDCSN_STYP_CODE IS NULL)
AND   (SARADAP_SESS_CODE = SARDCSN.SARDCSN_SESS_CODE
       OR SARDCSN.SARDCSN_SESS_CODE IS NULL)
AND   (SARADAP.SARADAP_FULL_PART_IND = SARDCSN.SARDCSN_FULL_PART_IND
       OR SARDCSN.SARDCSN_FULL_PART_IND IS NULL)
AND   SARADAP.SARADAP_TERM_CODE_ENTRY = SARDCSN.SARDCSN_TERM_CODE
AND   SARADAP.SARADAP_TERM_CODE_ENTRY = SABVWID.SABVWID_TERM_CODE
AND   SARADAP.SARADAP_APPL_NO = SABVWID.SABVWID_APPL_NO
AND   SARADAP.SARADAP_PIDM = SABVWID.SABVWID_PIDM
AND   SABVWID.SABVWID_SID = USERENV('SESSIONID')
AND   SARADAP.SARADAP_PIDM = SPBPERS.SPBPERS_PIDM
AND   (SPBPERS.SPBPERS_CITZ_CODE = SARDCSN.SARDCSN_CITZ_CODE
       OR SARDCSN.SARDCSN_CITZ_CODE IS NULL)
 UNION ALL
 SELECT
 SABVWID_SID,
 SARADAP.ROWID,
 SARADAP.SARADAP_PIDM,
 SARADAP.SARADAP_APPL_NO,
 SARADAP.SARADAP_TERM_CODE_ENTRY,
 SARDCSN.ROWID,
 NVL(SARDCSN.SARDCSN_APDC_CODE,''),
 NVL(SARDCSN.SARDCSN_SEQ_NO,0),
 SARDCSN.SARDCSN_PRI_IND,
 SARDCSN.SARDCSN_COLL_PREP_IND_HS,
 SARDCSN.SARDCSN_MIN_GPA_HS,
 SARDCSN.SARDCSN_MIN_PERCENTILE_HS,
 SARDCSN.SARDCSN_MAX_PERCENTILE_HS,
 SARDCSN.SARDCSN_DPLM_CODE_HS,
 SARDCSN.SARDCSN_DURATION_PC,
 SARDCSN.SARDCSN_DEGC_CODE_PC,
 SARDCSN.SARDCSN_MIN_HOURS_TRANS_PC,
 SARDCSN.SARDCSN_MIN_GPA_TRANS_PC,
 SARDCSN.SARDCSN_LEVL_CODE,
 SARDCSN.SARDCSN_DEGC_CODE_1,
 SARDCSN.SARDCSN_COLL_CODE_1,
 SARDCSN.SARDCSN_CAMP_CODE,
 SARDCSN.SARDCSN_PROGRAM_1,
 SARDCSN.SARDCSN_MAJR_CODE_1,
 SARDCSN.SARDCSN_LFST_CODE_1,
 SARDCSN.SARDCSN_LEVL_CODE_2,
 SARDCSN.SARDCSN_DEGC_CODE_2,
 SARDCSN.SARDCSN_COLL_CODE_2,
 SARDCSN.SARDCSN_CAMP_CODE_2,
 SARDCSN.SARDCSN_PROGRAM_2,
 SARDCSN.SARDCSN_MAJR_CODE_2,
 SARDCSN.SARDCSN_LFST_CODE_2
FROM
SARDCSN,
SABVWID,
SARADAP
WHERE
(SARADAP.SARADAP_RESD_CODE = SARDCSN.SARDCSN_RESD_CODE
       OR SARDCSN.SARDCSN_RESD_CODE IS NULL)
AND   (SARADAP.SARADAP_ADMT_CODE = SARDCSN.SARDCSN_ADMT_CODE
       OR SARDCSN.SARDCSN_ADMT_CODE IS NULL)
AND   (SARADAP.SARADAP_STYP_CODE = SARDCSN.SARDCSN_STYP_CODE
       OR SARDCSN.SARDCSN_STYP_CODE IS NULL)
AND   (SARADAP.SARADAP_SESS_CODE = SARDCSN.SARDCSN_SESS_CODE
       OR SARDCSN.SARDCSN_SESS_CODE IS NULL)
AND   (SARADAP.SARADAP_FULL_PART_IND = SARDCSN.SARDCSN_FULL_PART_IND
       OR SARDCSN.SARDCSN_FULL_PART_IND IS NULL)
AND   SARADAP.SARADAP_TERM_CODE_ENTRY = SARDCSN.SARDCSN_TERM_CODE
AND   SARADAP.SARADAP_TERM_CODE_ENTRY = SABVWID.SABVWID_TERM_CODE
AND   SARADAP.SARADAP_APPL_NO = SABVWID.SABVWID_APPL_NO
AND   SARADAP.SARADAP_PIDM = SABVWID.SABVWID_PIDM
AND   SABVWID.SABVWID_SID = USERENV('SESSIONID')
AND   NOT EXISTS (SELECT 'X' FROM SPBPERS WHERE SPBPERS_PIDM =  SARADAP.SARADAP_PIDM)
AND   SARDCSN.SARDCSN_CITZ_CODE  IS NULL"
"BANINST1","SAVCHRT","ADMISSIONS COHORT VIEW","SELECT SARADAP_PIDM,
       SARADAP_TERM_CODE_ENTRY,
       SARADAP_APPL_NO,
       SARCHRT_CHRT_CODE,
       (SELECT STVCHRT_DESC FROM STVCHRT WHERE STVCHRT_CODE = SARCHRT_CHRT_CODE)
FROM   SARCHRT,
       SARADAP
WHERE  SARCHRT_PIDM = SARADAP_PIDM
  AND  SARCHRT_TERM_CODE_ENTRY = SARADAP_TERM_CODE_ENTRY
  AND  SARCHRT_APPL_NO = SARADAP_APPL_NO
UNION ALL
SELECT b.SARADAP_PIDM,
       b.SARADAP_TERM_CODE_ENTRY,
       b.SARADAP_APPL_NO,
       NULL,
       NULL
FROM   SARADAP b
WHERE  NOT EXISTS (SELECT 'X'
			     				 FROM SARCHRT a
                   WHERE  a.SARCHRT_PIDM = b.SARADAP_PIDM
                     AND  a.SARCHRT_TERM_CODE_ENTRY = b.SARADAP_TERM_CODE_ENTRY
                     AND  a.SARCHRT_APPL_NO = b.SARADAP_APPL_NO)"
"BANINST1","SAVCCUR","This view lists current and active curriculum. ","select
  SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR_ROLLED_SEQNO
 , SORLCUR.ROWID
 , decode( SOBCTRL_CURRENT_ADM_CDE, 'Y',
           DECODE(NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind,
              'YY',
              DENSE_RANK()
              OVER(PARTITION BY SORLCUR_PIDM,
                   SORLCUR_TERM_CODE,
                   SORLCUR_LMOD_CODE,
                   SORLCUR_KEY_SEQNO ORDER BY
                   NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind DESC,
                   SORLCUR_PRIORITY_NO),
              0),
              sokccur.f_order(sorlcur_pidm,
                              sorlcur_lmod_code,
                              sorlcur_seqno,
                              saradap_term_code_entry,
                              saradap_appl_no)
              )
 , sobcact_active_ind
 , SARADAP.ROWID
 , SARADAP_APPL_DATE
 , SARADAP_APST_CODE
 , SARADAP_APST_DATE
 , SARADAP_MAINT_IND
 , SARADAP_ADMT_CODE
 , SARADAP_STYP_CODE
 , SARADAP_SITE_CODE
 , SARADAP_RESD_CODE
 , SARADAP_FULL_PART_IND
 , SARADAP_SESS_CODE
 , SARADAP_WRSN_CODE
 , SARADAP_INTV_CODE
 , SARADAP_FEE_IND
 , SARADAP_FEE_DATE
 , SARADAP_RATE_CODE
 , SARADAP_EGOL_CODE
 , SARADAP_EDLV_CODE
 , SARADAP_SBGI_CODE
 , SARADAP_RECR_CODE
 , SARADAP_RTYP_CODE
 , SARADAP_WEB_ACCT_MISC_IND
 , SARADAP_WEB_CASHIER_USER
 , SARADAP_WEB_TRANS_NO
 , SARADAP_WEB_AMOUNT
 , SARADAP_WEB_RECEIPT_NUMBER
 , SARADAP_WAIV_CODE
 , SARADAP_APPL_PREFERENCE
 , SORLCUR_USER_ID_UPDATE
, SORLCUR_ACTIVITY_DATE_UPDATE
 , SORLCUR_CURRENT_CDE
 from saradap,  sorlcur, sobcact,sobctrl
where  saradap_term_code_entry  =  sorlcur_term_code
and sobcact_cact_code        = sorlcur_cact_code
and saradap_appl_no          = sorlcur_key_seqno
and saradap_pidm             = sorlcur_pidm
and sorlcur_lmod_code        =
  ( Select sb_curriculum_str.f_admissions from dual)
and sorlcur_pidm > 0  "
"BANINST1","SAVAPDC","","SELECT SARADAP_PIDM,
       SARADAP_TERM_CODE_ENTRY,
       SARADAP_APPL_NO,
       A.SARAPPD_SEQ_NO,
       SARADAP_APST_CODE,
       STVAPST_DESC,
       A.SARAPPD_APDC_CODE,
       STVAPDC_DESC,
       STVAPDC_SIGNF_IND,
       STVAPDC_INST_ACC_IND,
       STVAPDC_STDN_ACC_IND,
       STVAPDC_APPL_INACT,
       STVAPDC_VR_ELIG_IND,
       STVAPDC_REJECT_IND,
       STVAPDC_WEB_DISP_IND,
       A.SARAPPD_USER,
       A.SARAPPD_DATA_ORIGIN
  FROM STVAPDC, SARAPPD A, STVAPST, SARADAP
 WHERE STVAPST_CODE = SARADAP_APST_CODE
   AND A.SARAPPD_PIDM = SARADAP_PIDM
   AND A.SARAPPD_TERM_CODE_ENTRY = SARADAP_TERM_CODE_ENTRY
   AND A.SARAPPD_APPL_NO = SARADAP_APPL_NO
   AND (to_char(A.SARAPPD_APDC_DATE, 'YYYYMMDD') || LPAD(A.SARAPPD_SEQ_NO,2,'0') =
       (SELECT MAX(to_char(B.SARAPPD_APDC_DATE, 'YYYYMMDD') ||
                    LPAD(B.SARAPPD_SEQ_NO,2,'0'))
           FROM SARAPPD B
          WHERE B.SARAPPD_PIDM = A.SARAPPD_PIDM
            AND B.SARAPPD_TERM_CODE_ENTRY = A.SARAPPD_TERM_CODE_ENTRY
            AND B.SARAPPD_APPL_NO = A.SARAPPD_APPL_NO) OR
       A.SARAPPD_APDC_DATE IS NULL)
   AND STVAPDC_CODE = A.SARAPPD_APDC_CODE
UNION ALL
SELECT SARADAP_PIDM,
       SARADAP_TERM_CODE_ENTRY,
       SARADAP_APPL_NO,
       NULL,
       SARADAP_APST_CODE,
       STVAPST_DESC,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL
  FROM STVAPST, SARADAP
 WHERE STVAPST_CODE = SARADAP_APST_CODE
   AND NOT EXISTS
 (SELECT 1
          FROM SARAPPD A
         WHERE A.SARAPPD_PIDM = SARADAP_PIDM
           AND A.SARAPPD_TERM_CODE_ENTRY = SARADAP_TERM_CODE_ENTRY
           AND A.SARAPPD_APPL_NO = SARADAP_APPL_NO)"
"BANINST1","SAVAMCT","AMCAS DATA - MCAT Test scores, Course Hours, and GPA data.","SELECT
         saradap_pidm,
         spriden_id,
         saradap_term_code_entry,
         saradap_styp_code,
         saradap_camp_code,
         saradap_program_1,
         saradap_coll_code_1,
         saradap_levl_code,
         saradap_degc_code_1,
         saradap_majr_code_1,
         spriden_last_name,
         spriden_first_name,
         spriden_mi,
         stvegrp_code,
         stvegrp_desc,
         sortest_tesc_code,
         sarerul_desc,
         0,
         0,
         sortest_test_score,
         NULL,
         DECODE(sarerul_egrp_code,'ATST',sortest_test_date,NULL),
         sortest_tefr_code,
         sortest_tein_code,
         sortest_release_ind,
         sortest_teac_code,
         sortest_instr_id,
         saradap_appl_date
 FROM
    sortest,
    stvegrp,
    sarerul,
    saradap,
    spriden
 WHERE spriden_pidm = saradap_pidm
 AND   spriden_change_ind IS NULL
 AND   sortest_pidm = saradap_pidm
 AND   (sortest_term_code_entry IS NULL OR
       sortest_term_code_entry = saradap_term_code_entry)
 AND   (sortest_appl_no IS NULL OR sortest_appl_no = 0 OR
       sortest_appl_no = saradap_appl_no)
 AND   sarerul_egrp_code = stvegrp_code
 AND   sarerul_egrp_code = 'ATST'
 AND   sortest_tesc_code = sarerul_value
 UNION
 SELECT
         saradap_pidm,
         spriden_id,
         saradap_term_code_entry,
         saradap_styp_code,
         saradap_camp_code,
         saradap_program_1,
         saradap_coll_code_1,
         saradap_levl_code,
         saradap_degc_code_1,
         saradap_majr_code_1,
         spriden_last_name,
         spriden_first_name,
         spriden_mi,
         stvegrp_code,
         stvegrp_desc,
         sorgpat_gpat_code,
         sarerul_desc,
         sorgpat_gpa,
         0,
         NULL,
         sorgpat_plus_minus_ind,
         DECODE(sarerul_egrp_code,'ATST',sysdate,NULL),
         NULL,
         NULL,
         NULL,
         NULL,
         NULL,
         saradap_appl_date
 FROM
    sorgpat,
    stvegrp,
    sarerul,
    saradap,
    spriden
 WHERE spriden_pidm = saradap_pidm
 AND   spriden_change_ind IS NULL
 AND   sorgpat_pidm = saradap_pidm
 AND   sorgpat_term_code_entry = saradap_term_code_entry
 AND   sorgpat_appl_number = saradap_appl_no
 AND   sarerul_egrp_code = stvegrp_code
 AND   sarerul_egrp_code = 'AGPA'
 AND   sorgpat_gpat_code = sarerul_value
 UNION
 SELECT
         saradap_pidm,
         spriden_id,
         saradap_term_code_entry,
         saradap_styp_code,
         saradap_camp_code,
         saradap_program_1,
         saradap_coll_code_1,
         saradap_levl_code,
         saradap_degc_code_1,
         saradap_majr_code_1,
         spriden_last_name,
         spriden_first_name,
         spriden_mi,
         stvegrp_code,
         stvegrp_desc,
         sorcrss_crss_code,
         sarerul_desc,
         0,
         sorcrss_hours,
         NULL,
         NULL,
         DECODE(sarerul_egrp_code,'ATST',sysdate,NULL),
         NULL,
         NULL,
         NULL,
         NULL,
         NULL,
         saradap_appl_date
 FROM
    sorcrss,
    stvegrp,
    sarerul,
    saradap,
    spriden
 WHERE spriden_pidm = saradap_pidm
 AND   spriden_change_ind IS NULL
 AND   sorcrss_pidm = saradap_pidm
 AND   sorcrss_term_code_entry = saradap_term_code_entry
 AND   sorcrss_appl_number = saradap_appl_no
 AND   sarerul_egrp_code = stvegrp_code
 AND   sarerul_egrp_code = 'ACHR'
 AND   sorcrss_crss_code = sarerul_value
 "
"BANINST1","SAVAMCD","AMCAS DATA - Demographic and Prior College Data","SELECT
         saradap_pidm,
         spriden_id,
         saradap_term_code_entry,
         saradap_styp_code,
         saradap_camp_code,
         saradap_program_1,
         saradap_coll_code_1,
         saradap_levl_code,
         saradap_degc_code_1,
         saradap_majr_code_1,
         SUBSTR(f_get_spriden_prev(saradap_pidm,'I'),1,9),
         sabsupl_agency_file_no,
         sabsupl_cycle_added,
         sabsupl_app_year_agency,
         sabsupl_cycle_changed,
         sabsupl_flag5,                               -- eval
         saradap_admt_code,                           -- early_dscn,
         sabsupl_agency_fee_waived,
         spriden_last_name,
         spriden_first_name,
         spriden_mi,
         spbpers_name_suffix,
         SUBSTR(f_get_spriden_prev(saradap_pidm,'N'),1,60),
         x.spraddr_street_line1,
         x.spraddr_city,
         x.spraddr_stat_code,
         x.spraddr_zip,
         y.sprtele_phone_area||'-'||
            SUBSTR(y.sprtele_phone_number,1,3)||'-'||
            SUBSTR(y.sprtele_phone_number,4,4),
         sabsupl_stat_code_admit,
         sabsupl_cnty_code_admit,
         SUBSTR(DECODE(sabsupl_cnty_code_admit,NULL,NULL,
            f_get_desc_fnc('STVCNTY',sabsupl_cnty_code_admit,30)),1,30),
         sabsupl_cnty_admit_rural,
         sabsupl_natn_code_admit,
         SUBSTR(DECODE(sabsupl_natn_code_admit,NULL,NULL,
            f_get_desc_fnc('STVNATN',sabsupl_natn_code_admit,30)),1,30),
         g.gorvisa_vtyp_code,
         SUBSTR(DECODE(g.gorvisa_vtyp_code,NULL,NULL,
            f_get_desc_fnc('STVVTYP',g.gorvisa_vtyp_code,30)),1,30),
         spbpers_sex,
         spbpers_birth_date,
         f_calculate_age(sysdate, spbpers_birth_date, spbpers_dead_date),
         sabsupl_stat_code_birth,
         sabsupl_city_birth,
         sabsupl_cnty_code_birth,
         SUBSTR(DECODE(sabsupl_cnty_code_birth,NULL,NULL,
            f_get_desc_fnc('STVCNTY',sabsupl_cnty_code_birth,30)),1,30),
         sabsupl_cnty_birth_rural,
         sabsupl_natn_code_birth,
         SUBSTR(DECODE(sabsupl_natn_code_birth,NULL,NULL,
            f_get_desc_fnc('STVNATN',sabsupl_natn_code_birth,30)),1,30),
         sabsupl_number_deps,
         sabsupl_ethn_code_self,
         SUBSTR(DECODE(sabsupl_ethn_code_self,NULL,NULL,
            f_get_desc_fnc('STVETHN',sabsupl_ethn_code_self,30)),1,30),
         sabsupl_esel_code,                            -- minority_app
         sabsupl_flag1,
         sabsupl_flag2,
         sabsupl_flag3,
         a.sordegr_sbgi_code,
         SUBSTR(DECODE(a.sordegr_sbgi_code,NULL,NULL,
            f_get_desc_fnc('STVSBGI',a.sordegr_sbgi_code,30)),1,30),
         SUBSTR(f_get_sobsbgi_stat(a.sordegr_sbgi_code),1,3),
         a.sordegr_egol_code,
         a.sordegr_attend_from,
         a.sordegr_attend_to,
         SUBSTR(f_get_sormajr_majr(saradap_pidm,a.sordegr_sbgi_code,
            a.sordegr_degr_seq_no),1,4),
         SUBSTR(f_get_desc_fnc('STVMAJR',
            f_get_sormajr_majr(saradap_pidm,a.sordegr_sbgi_code,
            a.sordegr_degr_seq_no),30),1,30),
         a.sordegr_degc_code,
         a.sordegr_degc_date,
         b.sordegr_sbgi_code,
         SUBSTR(DECODE(b.sordegr_sbgi_code,NULL,NULL,
            f_get_desc_fnc('STVSBGI',b.sordegr_sbgi_code,30)),1,30),
         SUBSTR(f_get_sobsbgi_stat(b.sordegr_sbgi_code),1,3),
         b.sordegr_egol_code,
         b.sordegr_attend_from,
         b.sordegr_attend_to,
         SUBSTR(f_get_sormajr_majr(saradap_pidm,b.sordegr_sbgi_code,
            b.sordegr_degr_seq_no),1,4),
         SUBSTR(f_get_desc_fnc('STVMAJR',
            f_get_sormajr_majr(saradap_pidm,b.sordegr_sbgi_code,
            b.sordegr_degr_seq_no),30),1,30),
         b.sordegr_degc_code,
         b.sordegr_degc_date,
         c.sordegr_sbgi_code,
         SUBSTR(DECODE(c.sordegr_sbgi_code,NULL,NULL,
            f_get_desc_fnc('STVSBGI',c.sordegr_sbgi_code,30)),1,30),
         SUBSTR(f_get_sobsbgi_stat(c.sordegr_sbgi_code),1,3),
         c.sordegr_egol_code,
         c.sordegr_attend_from,
         c.sordegr_attend_to,
         SUBSTR(f_get_sormajr_majr(saradap_pidm,c.sordegr_sbgi_code,
            c.sordegr_degr_seq_no),1,4),
         SUBSTR(f_get_desc_fnc('STVMAJR',
            f_get_sormajr_majr(saradap_pidm,c.sordegr_sbgi_code,
            c.sordegr_degr_seq_no),30),1,30),
         c.sordegr_degc_code,
         c.sordegr_degc_date,
         d.sordegr_sbgi_code,
         SUBSTR(DECODE(d.sordegr_sbgi_code,NULL,NULL,
            f_get_desc_fnc('STVSBGI',d.sordegr_sbgi_code,30)),1,30),
         SUBSTR(f_get_sobsbgi_stat(d.sordegr_sbgi_code),1,3),
         d.sordegr_egol_code,
         d.sordegr_attend_from,
         d.sordegr_attend_to,
         SUBSTR(f_get_sormajr_majr(saradap_pidm,d.sordegr_sbgi_code,
            d.sordegr_degr_seq_no),1,4),
         SUBSTR(f_get_desc_fnc('STVMAJR',
            f_get_sormajr_majr(saradap_pidm,d.sordegr_sbgi_code,
            d.sordegr_degr_seq_no),30),1,30),
         d.sordegr_degc_code,
         d.sordegr_degc_date,
         e.sordegr_sbgi_code,
         SUBSTR(DECODE(e.sordegr_sbgi_code,NULL,NULL,
            f_get_desc_fnc('STVSBGI',e.sordegr_sbgi_code,30)),1,30),
         SUBSTR(f_get_sobsbgi_stat(e.sordegr_sbgi_code),1,3),
         e.sordegr_egol_code,
         e.sordegr_attend_from,
         e.sordegr_attend_to,
         SUBSTR(f_get_sormajr_majr(saradap_pidm,e.sordegr_sbgi_code,
            e.sordegr_degr_seq_no),1,4),
         SUBSTR(f_get_desc_fnc('STVMAJR',
            f_get_sormajr_majr(saradap_pidm,e.sordegr_sbgi_code,
            e.sordegr_degr_seq_no),30),1,30),
         e.sordegr_degc_code,
         e.sordegr_degc_date,
         f.sordegr_sbgi_code,
         SUBSTR(DECODE(f.sordegr_sbgi_code,NULL,NULL,
            f_get_desc_fnc('STVSBGI',f.sordegr_sbgi_code,30)),1,30),
         SUBSTR(f_get_sobsbgi_stat(f.sordegr_sbgi_code),1,3),
         f.sordegr_egol_code,
         f.sordegr_attend_from,
         f.sordegr_attend_to,
         SUBSTR(f_get_sormajr_majr(saradap_pidm,f.sordegr_sbgi_code,
            f.sordegr_degr_seq_no),1,4),
         SUBSTR(f_get_desc_fnc('STVMAJR',
            f_get_sormajr_majr(saradap_pidm,f.sordegr_sbgi_code,
            f.sordegr_degr_seq_no),30),1,30),
         f.sordegr_degc_code,
         f.sordegr_degc_date,
         sabsupl_flag4,                         -- adv_info_release
         saradap_appl_date,
         sabsupl_prev_app_1,
         sabsupl_prev_app_2,
         sabsupl_prev_app_3,
         sabsupl_prev_app_4,
         goremal_email_address,
         goremal_disp_web_ind
 FROM
    goremal,
    spbpers,
    sabsupl,
    gorvisa g,
    sordegr a,
    sordegr b,
    sordegr c,
    sordegr d,
    sordegr e,
    sordegr f,
    spraddr x,
    sprtele y,
    saradap,
    spriden
 WHERE spriden_pidm = saradap_pidm
 AND   spriden_change_ind IS NULL
 AND   spbpers_pidm(+) = saradap_pidm
 AND   sabsupl_pidm(+) = saradap_pidm
 AND   g.gorvisa_pidm(+) = saradap_pidm
 AND   g.gorvisa_seq_no = ( select max(s.gorvisa_seq_no)
                            from gorvisa s
                            where s.gorvisa_pidm = g.gorvisa_pidm)
 AND   goremal_pidm(+) = saradap_pidm
 AND   goremal_status_ind(+) = 'A'
 AND   goremal_preferred_ind(+) = 'Y'
 AND   sabsupl_appl_no(+) = saradap_appl_no
 AND   a.rowid(+) = f_get_sordegr_rowid(saradap_pidm,1)
 AND   b.rowid(+) = f_get_sordegr_rowid(saradap_pidm,2)
 AND   c.rowid(+) = f_get_sordegr_rowid(saradap_pidm,3)
 AND   d.rowid(+) = f_get_sordegr_rowid(saradap_pidm,4)
 AND   e.rowid(+) = f_get_sordegr_rowid(saradap_pidm,5)
 AND   f.rowid(+) = f_get_sordegr_rowid(saradap_pidm,6)
 AND   x.rowid(+) = f_get_address_rowid(saradap_pidm, 'AMCASADDR','A',
            sysdate, 1,'S', NULL)
 AND   y.rowid(+) = f_get_address_telephone_rowid
            (saradap_pidm, 'AMCASADDR','A', sysdate, 1,'S', NULL)
 "
"BANINST1","SAVAMC2","AMCAS DATA VIEW 2- EXTRACT DATA SENT TO AMCAS","SELECT
         spriden.spriden_pidm,
	      substr(goksels.f_name_bio_value(spriden.spriden_pidm,'SSN'),1,9),
         spriden.spriden_last_name,
         spriden.spriden_first_name,
         spriden.spriden_mi,
         to_char(stvterm.stvterm_start_date,'YYYY'),
         sabsupl.sabsupl_agency_report_date,
         saradap.saradap_term_code_entry,
         savccur.savccur_levl_code,
         saradap.saradap_appl_no,
         SUBSTR(sorxref_edi_value,1,2),
         sarappd_apdc_date,
         SUBSTR(
         DECODE(a.sorxref_edi_value,'MA',TO_CHAR(stvterm.stvterm_start_date, 'MM/YYYY'),
                                    'AC',TO_CHAR(stvterm.stvterm_start_date, 'MM/YYYY'),
                                    ''),1,7),
         sabsupl.sabsupl_appl_type ,
         savccur.savccur_camp_code
 FROM
    savccur,
    spriden,
    sabsupl,
    sorxref a,
    stvterm,
    sarappd x,
    saradap
 WHERE spriden.spriden_pidm = saradap_pidm
 AND   spriden.spriden_entity_ind = 'P'
 AND   spriden.spriden_change_ind IS NULL
 AND   sabsupl.sabsupl_pidm = saradap.saradap_pidm
 AND   x.sarappd_pidm = saradap.saradap_pidm
 AND   x.sarappd_appl_no = saradap.saradap_appl_no
 AND   sabsupl.sabsupl_appl_no = saradap.saradap_appl_no
 AND   saradap.saradap_term_code_entry = stvterm.stvterm_code
 AND  (sabsupl.sabsupl_agency_report_date IS NULL
    OR x.sarappd_apdc_date >= sabsupl.sabsupl_agency_report_date )
 AND   x.sarappd_apdc_date =
    (SELECT MAX(sarappd_apdc_date)
        FROM sarappd y
        WHERE y.sarappd_pidm = x.sarappd_pidm
        AND   y.sarappd_appl_no = x.sarappd_appl_no)
 AND   x.sarappd_seq_no =
    (SELECT MAX(sarappd_seq_no)
        FROM sarappd z
        WHERE z.sarappd_pidm = x.sarappd_pidm
        AND   z.sarappd_appl_no = x.sarappd_appl_no
        AND   z.sarappd_apdc_date = x.sarappd_apdc_date)
 AND   a.sorxref_edi_qlfr  like 'AN%'
 AND   a.sorxref_xlbl_code = 'STVAPDC'
 AND   x.sarappd_apdc_code = a.sorxref_banner_value
 AND   savccur_adap_rowid = saradap.rowid
 AND   savccur.savccur_order = 1
 "
"BANINST1","SAVADRS","Admissions Address Hierarchy View","SELECT SARADAP_PIDM,
       SARADAP_TERM_CODE_ENTRY,
       SARADAP_APPL_NO,
       SPRADDR_ATYP_CODE,
       (SELECT STVATYP_DESC FROM stvatyp WHERE stvatyp_code = spraddr_atyp_code),
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       (SELECT STVSTAT_DESC FROM stvstat WHERE stvstat_code = spraddr_stat_code),
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       (SELECT STVCNTY_DESC FROM stvcnty WHERE stvcnty_code = spraddr_cnty_code),
       SPRADDR_NATN_CODE,
       (SELECT STVNATN_NATION FROM stvnatn WHERE stvnatn_code = spraddr_natn_code)
  FROM SPRADDR X,
       SARADAP,
       GURFCLR Y
 WHERE  X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   SYSDATE BETWEEN X.SPRADDR_FROM_DATE
                     AND X.SPRADDR_TO_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   SYSDATE >= X.SPRADDR_FROM_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   SYSDATE <= X.SPRADDR_TO_DATE))
   AND   X.SPRADDR_PIDM (+) = SARADAP_PIDM
   AND   Y.GURFCLR_SESSION  =TO_CHAR(USERENV('SESSIONID'))
   AND  (Y.GURFCLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
          (SELECT MIN(C.GURFCLR_VALUE_ATYP),
                                  SUBSTR(MIN(C.GURFCLR_VALUE_ATYP),2,2)
                     FROM SPRADDR,
                          GURFCLR C
            WHERE C.GURFCLR_SESSION = Y.GURFCLR_SESSION
                      AND SPRADDR_PIDM = X.SPRADDR_PIDM
                      AND SPRADDR_ATYP_CODE = SUBSTR(C.GURFCLR_VALUE_ATYP,2,2)
                      AND SPRADDR_STATUS_IND IS NULL
                      AND ((SPRADDR_TO_DATE IS NULL
                      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
                      AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   SYSDATE BETWEEN SPRADDR_FROM_DATE
                                AND SPRADDR_TO_DATE)
               OR  (SPRADDR_FROM_DATE IS NOT NULL
                      AND   SPRADDR_TO_DATE IS NULL
              AND   SYSDATE  >= SPRADDR_FROM_DATE)
               OR  (SPRADDR_FROM_DATE IS NULL
                      AND   SPRADDR_TO_DATE IS NOT NULL
              AND   SYSDATE <= SPRADDR_TO_DATE)))"
"BANINST1","SAVADMT","ADMISSIONS APPLICATION VIEW","SELECT  SARADAP_TERM_CODE_ENTRY,
        STVTERM_DESC,
        SPRIDEN_ID,
        SUBSTR(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' ||
               SUBSTR(SPRIDEN_MI,1,1),1,25),
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SARADAP_PIDM,
        SARADAP_APPL_NO,
        SARADAP_APPL_DATE,
        SARADAP_LEVL_CODE,
        SUBSTR(DECODE(SARADAP_LEVL_CODE,NULL,NULL,f_get_desc_fnc('STVLEVL',SARADAP_LEVL_CODE,30)),1,30),
        SARADAP_APST_CODE,
        STVAPST_DESC,
        SARADAP_APST_DATE,
        SAVAPDC_APDC_CODE,
        SAVAPDC_APDC_DESC,
        SAVAPDC_SIGNF_IND,
        SAVAPDC_INST_ACC_IND,
        SAVAPDC_STDN_ACC_IND,
        SAVAPDC_APPL_INACT,
        SARADAP_ADMT_CODE,
        SUBSTR(DECODE(SARADAP_ADMT_CODE,NULL,NULL,f_get_desc_fnc('STVADMT',SARADAP_ADMT_CODE,30)),1,30),
        SARADAP_STYP_CODE,
        STVSTYP_DESC,
        SARADAP_CAMP_CODE,
        SUBSTR(DECODE(SARADAP_CAMP_CODE,NULL,NULL,f_get_desc_fnc('STVCAMP',SARADAP_CAMP_CODE,30)),1,30),
        SARADAP_SITE_CODE,
        SUBSTR(DECODE(SARADAP_SITE_CODE,NULL,NULL,f_get_desc_fnc('STVSITE',SARADAP_SITE_CODE,30)),1,30),
        SARADAP_COLL_CODE_1,
        SUBSTR(DECODE(SARADAP_COLL_CODE_1,NULL,NULL,f_get_desc_fnc('STVCOLL',SARADAP_COLL_CODE_1,30)),1,30),
        SARADAP_DEGC_CODE_1,
        SUBSTR(DECODE(SARADAP_DEGC_CODE_1,NULL,NULL,f_get_desc_fnc('STVDEGC',SARADAP_DEGC_CODE_1,30)),1,30),
        SARADAP_MAJR_CODE_1,
        SUBSTR(DECODE(SARADAP_MAJR_CODE_1,NULL,NULL,f_get_desc_fnc('STVMAJR',SARADAP_MAJR_CODE_1,30)),1,30),
        SARADAP_RESD_CODE,
        STVRESD_DESC,
        SARADAP_FULL_PART_IND,
        SARADAP_SESS_CODE,
        SUBSTR(DECODE(SARADAP_SESS_CODE,NULL,NULL,f_get_desc_fnc('STVSESS',SARADAP_SESS_CODE,30)),1,30),
        SARADAP_WRSN_CODE,
        SUBSTR(DECODE(SARADAP_WRSN_CODE,NULL,NULL,f_get_desc_fnc('STVWRSN',SARADAP_WRSN_CODE,30)),1,30),
        SARADAP_INTV_CODE,
        SUBSTR(DECODE(SARADAP_INTV_CODE,NULL,NULL,f_get_desc_fnc('STVINTV',SARADAP_INTV_CODE,30)),1,30),
        SARADAP_FEE_IND,
        SARADAP_FEE_DATE,
        SARADAP_RATE_CODE,
        SUBSTR(DECODE(SARADAP_RATE_CODE,NULL,NULL,f_get_desc_fnc('STVRATE',SARADAP_RATE_CODE,30)),1,30),
        SARADAP_EGOL_CODE,
        SUBSTR(DECODE(SARADAP_EGOL_CODE,NULL,NULL,f_get_desc_fnc('STVEGOL',SARADAP_EGOL_CODE,30)),1,30),
        SARADAP_EDLV_CODE,
        SUBSTR(DECODE(SARADAP_EDLV_CODE,NULL,NULL,f_get_desc_fnc('STVEDLV',SARADAP_EDLV_CODE,30)),1,30),
        SPBPERS_SEX,
        SPBPERS_SSN,
        SPBPERS_BIRTH_DATE,
        f_calculate_age(null, spbpers_birth_date, spbpers_dead_date),
        SPBPERS_LGCY_CODE,
        SUBSTR(DECODE(SPBPERS_LGCY_CODE,NULL,NULL,f_get_desc_fnc('STVLGCY',SPBPERS_LGCY_CODE,30)),1,30),
        SPBPERS_ETHN_CODE,
        SUBSTR(DECODE(SPBPERS_ETHN_CODE,NULL,NULL,f_get_desc_fnc('STVETHN',SPBPERS_ETHN_CODE,30)),1,30),
        SPBPERS_MRTL_CODE,
        SUBSTR(DECODE(SPBPERS_MRTL_CODE,NULL,NULL,f_get_desc_fnc('STVMRTL',SPBPERS_MRTL_CODE,30)),1,30),
        SPBPERS_RELG_CODE,
        SUBSTR(DECODE(SPBPERS_RELG_CODE,NULL,NULL,f_get_desc_fnc('STVRELG',SPBPERS_RELG_CODE,30)),1,30),
        SPBPERS_CITZ_CODE,
        SUBSTR(DECODE(SPBPERS_CITZ_CODE,NULL,NULL,f_get_desc_fnc('STVCITZ',SPBPERS_CITZ_CODE,30)),1,30),
        SPBPERS_CONFID_IND
FROM    STVRESD,
        STVSTYP,
        STVTERM,
        STVAPST,
        SPBPERS,
        SPRIDEN,
        SAVAPDC,
        SARADAP
WHERE   STVRESD_CODE  = SARADAP_RESD_CODE
  AND   STVSTYP_CODE  = SARADAP_STYP_CODE
  AND   STVTERM_CODE  = SARADAP_TERM_CODE_ENTRY
  AND   STVAPST_CODE  = SARADAP_APST_CODE
  AND   SPRIDEN_PIDM = SARADAP_PIDM
  AND   SPRIDEN_CHANGE_IND IS NULL
  AND   SPBPERS_PIDM  = SARADAP_PIDM
  AND   SPBPERS_DEAD_IND  IS NULL
  AND   SAVAPDC_PIDM = SARADAP_PIDM
  AND   SAVAPDC_TERM_CODE = SARADAP_TERM_CODE_ENTRY
  AND   SAVAPDC_APPL_NO = SARADAP_APPL_NO
UNION ALL
SELECT  SARADAP_TERM_CODE_ENTRY,
        STVTERM_DESC,
        SPRIDEN_ID,
        SUBSTR(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' ||
               SUBSTR(SPRIDEN_MI,1,1),1,25),
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SARADAP_PIDM,
        SARADAP_APPL_NO,
        SARADAP_APPL_DATE,
        SARADAP_LEVL_CODE,
        SUBSTR(DECODE(SARADAP_LEVL_CODE,NULL,NULL,f_get_desc_fnc('STVLEVL',SARADAP_LEVL_CODE,30)),1,30),
        SARADAP_APST_CODE,
        STVAPST_DESC,
        SARADAP_APST_DATE,
        SAVAPDC_APDC_CODE,
        SAVAPDC_APDC_DESC,
        SAVAPDC_SIGNF_IND,
        SAVAPDC_INST_ACC_IND,
        SAVAPDC_STDN_ACC_IND,
        SAVAPDC_APPL_INACT,
        SARADAP_ADMT_CODE,
        SUBSTR(DECODE(SARADAP_ADMT_CODE,NULL,NULL,f_get_desc_fnc('STVADMT',SARADAP_ADMT_CODE,30)),1,30),
        SARADAP_STYP_CODE,
        STVSTYP_DESC,
        SARADAP_CAMP_CODE,
        SUBSTR(DECODE(SARADAP_CAMP_CODE,NULL,NULL,f_get_desc_fnc('STVCAMP',SARADAP_CAMP_CODE,30)),1,30),
        SARADAP_SITE_CODE,
        SUBSTR(DECODE(SARADAP_SITE_CODE,NULL,NULL,f_get_desc_fnc('STVSITE',SARADAP_SITE_CODE,30)),1,30),
        SARADAP_COLL_CODE_1,
        SUBSTR(DECODE(SARADAP_COLL_CODE_1,NULL,NULL,f_get_desc_fnc('STVCOLL',SARADAP_COLL_CODE_1,30)),1,30),
        SARADAP_DEGC_CODE_1,
        SUBSTR(DECODE(SARADAP_DEGC_CODE_1,NULL,NULL,f_get_desc_fnc('STVDEGC',SARADAP_DEGC_CODE_1,30)),1,30),
        SARADAP_MAJR_CODE_1,
        SUBSTR(DECODE(SARADAP_MAJR_CODE_1,NULL,NULL,f_get_desc_fnc('STVMAJR',SARADAP_MAJR_CODE_1,30)),1,30),
        SARADAP_RESD_CODE,
        STVRESD_DESC,
        SARADAP_FULL_PART_IND,
        SARADAP_SESS_CODE,
        SUBSTR(DECODE(SARADAP_SESS_CODE,NULL,NULL,f_get_desc_fnc('STVSESS',SARADAP_SESS_CODE,30)),1,30),
        SARADAP_WRSN_CODE,
        SUBSTR(DECODE(SARADAP_WRSN_CODE,NULL,NULL,f_get_desc_fnc('STVWRSN',SARADAP_WRSN_CODE,30)),1,30),
        SARADAP_INTV_CODE,
        SUBSTR(DECODE(SARADAP_INTV_CODE,NULL,NULL,f_get_desc_fnc('STVINTV',SARADAP_INTV_CODE,30)),1,30),
        SARADAP_FEE_IND,
        SARADAP_FEE_DATE,
        SARADAP_RATE_CODE,
        SUBSTR(DECODE(SARADAP_RATE_CODE,NULL,NULL,f_get_desc_fnc('STVRATE',SARADAP_RATE_CODE,30)),1,30),
        SARADAP_EGOL_CODE,
        SUBSTR(DECODE(SARADAP_EGOL_CODE,NULL,NULL,f_get_desc_fnc('STVEGOL',SARADAP_EGOL_CODE,30)),1,30),
        SARADAP_EDLV_CODE,
        SUBSTR(DECODE(SARADAP_EDLV_CODE,NULL,NULL,f_get_desc_fnc('STVEDLV',SARADAP_EDLV_CODE,30)),1,30),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL
FROM    STVRESD,
        STVSTYP,
        STVTERM,
        STVAPST,
        SPRIDEN,
        SAVAPDC,
        SARADAP
WHERE   STVRESD_CODE  = SARADAP_RESD_CODE
  AND   STVSTYP_CODE  = SARADAP_STYP_CODE
  AND   STVTERM_CODE  = SARADAP_TERM_CODE_ENTRY
  AND   STVAPST_CODE  = SARADAP_APST_CODE
  AND   SPRIDEN_PIDM = SARADAP_PIDM
  AND   SPRIDEN_CHANGE_IND IS NULL
  AND   SAVAPDC_PIDM = SARADAP_PIDM
  AND   SAVAPDC_TERM_CODE = SARADAP_TERM_CODE_ENTRY
  AND   SAVAPDC_APPL_NO = SARADAP_APPL_NO
  AND   NOT EXISTS (SELECT 'X' FROM SPBPERS
                    WHERE  SPBPERS.SPBPERS_PIDM=SARADAP.SARADAP_PIDM)
"
"BANINST1","SAVADM2","","select
  saradap_pidm,
  saradap_term_code_entry,
  saradap_appl_no,
  substr(f_adms_application_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'APPLCMPL'),1,1),
  substr(f_adms_application_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'APPLINCM'),1,1),
  substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'I','A'),1,1),
  substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'S','A'),1,1),
  substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'I','C'),1,1),
  substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'S','C'),1,1),
  substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'R','C'),1,1),
  substr(f_adms_applicant_withdrawn
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no),1,1),
  substr(f_enrolled_this_term(saradap_pidm, saradap_term_code_entry),1,1),
  substr(f_finaid_applicant_ind(saradap_pidm,null,saradap_term_code_entry),1,1),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'ID'),1,9),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'SSN'),1,15),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'LAST'),1,60),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'FIRST'),1,60),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'MI'),1,60),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'M'),1,1),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'PRE'),1,20),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'SUF'),1,20),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'LSUF'),1,60),
  TO_DATE(goksels.f_name_bio_value(saradap_pidm,'BDATE'),g$_date.get_nls_date_format),
  TO_NUMBER(goksels.f_name_bio_value(saradap_pidm,'AGE')),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'SEX'),1,1),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'ETHN'),1,2),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'LGCY'),1,1),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'DEAD'),1,1),
  TO_DATE(goksels.f_name_bio_value(saradap_pidm,'DDATE'),g$_date.get_nls_date_format),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'CONF'),1,1),
  saradap_full_part_ind,
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'HN','A',NULL),1,10),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'S1','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'S2','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'S3','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'S4','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'CITY','A',NULL),1,50),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'ST','A',NULL),1,3),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'CT','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'ZIP','A',NULL),1,30),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'NTN','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,'AT','A',NULL),1,2),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PA'),1,6),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PN'),1,12),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,NULL,'T','TC'),1,4),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,1,'S',NULL,NULL,'T','PC'),1,4),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'HN','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'S1','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'S2','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'S3','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'S4','A',NULL),1,75),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'CITY','A',NULL),1,50),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'ST','A',NULL),1,3),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'CT','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'ZIP','A',NULL),1,30),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'NTN','A',NULL),1,5),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,'AT','A',NULL),1,2),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PA'),1,6),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PN'),1,12),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,NULL,'T','TC'),1,4),
  SUBSTR(goksels.f_address_telephone_value(saradap_pidm,'ADMSADDR','A',SYSDATE,2,'S',NULL,NULL,'T','PC'),1,4),
  saradap_levl_code,
  saradap_appl_date,
  saradap_apst_code,
  saradap_apst_date,
  saradap_admt_code,
  saradap_styp_code,
  saradap_camp_code,
  saradap_site_code,
  saradap_resd_code,
  saradap_sess_code,
  saradap_wrsn_code,
  saradap_rate_code,
  saradap_egol_code,
  saradap_edlv_code,
  saradap_sbgi_code,
  saradap_recr_code,
  saradap_rtyp_code,
  saradap_coll_code_1,
  saradap_degc_code_1,
  saradap_majr_code_1,
  saradap_dept_code,
  saradap_coll_code_2,
  saradap_degc_code_2,
  saradap_majr_code_2,
  saradap_dept_code_2,
  saradap_majr_code_conc_1,
  saradap_majr_code_conc_1_2,
  substr(f_concat_sarappd
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no),1,75),
  substr(f_student_check_for_more
      ('APDC',saradap_pidm,saradap_term_code_entry,saradap_appl_no,null),1,1),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,1,'A'),1,4),
  TO_DATE(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,1,'RD')),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,1,'CV'),1,10),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,2,'A'),1,4),
  TO_DATE(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,2,'RD')),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,2,'CV'),1,10),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,3,'A'),1,4),
  TO_DATE(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,3,'RD')),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,3,'CV'),1,10),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,4,'A'),1,4),
  TO_DATE(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,4,'RD')),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,4,'CV'),1,10),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,5,'A'),1,4),
  TO_DATE(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,5,'RD')),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,5,'CV'),1,10),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,6,'A'),1,4),
  TO_DATE(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,6,'RD')),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,6,'CV'),1,10),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,7,'A'),1,4),
  TO_DATE(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,7,'RD')),
  substr(soklibs.f_sarchkl_value(saradap_pidm,saradap_term_code_entry,saradap_appl_no,7,'CV'),1,10),
  substr(f_student_check_for_more
      ('CHKL',saradap_pidm,saradap_term_code_entry,saradap_appl_no,
       'ADMSCHKL'),1,1),
  substr(f_applicant_source(
          saradap_pidm,saradap_term_code_entry,saradap_appl_no,'Y',null),1,6),
  substr(soklibs.f_highschool_value(saradap_pidm,'SC','N',saradap_term_code_entry,saradap_appl_no,'A'),1,60),
  substr(soklibs.f_highschool_value(saradap_pidm,'SC','P',saradap_term_code_entry,saradap_appl_no,'A'),1,4),
  substr(f_applicant_source(
          saradap_pidm,saradap_term_code_entry,saradap_appl_no,null,1),1,6),
  substr(f_applicant_source(
          saradap_pidm,saradap_term_code_entry,saradap_appl_no,null,2),1,6),
  substr(f_applicant_source(
          saradap_pidm,saradap_term_code_entry,saradap_appl_no,null,3),1,6),
  substr(f_student_check_for_more(
     'ASOURCES',saradap_pidm,saradap_term_code_entry,saradap_appl_no,'ADMSSRCE')
     ,1,1),
  substr(soklibs.f_sorcont_first_last('ADMSCTYP',saradap_pidm,'FIRST','C'),1,3),
  TO_DATE(soklibs.f_sorcont_first_last('ADMSCTYP',saradap_pidm,'FIRST','D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
  substr(soklibs.f_sorcont_first_last('ADMSCTYP',saradap_pidm,'LAST','C'),1,3),
  TO_DATE(soklibs.f_sorcont_first_last('ADMSCTYP',saradap_pidm,'LAST','D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
  substr(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,1,'C'),1,3),
  TO_DATE(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,1,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
  substr(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,2,'C'),1,3),
  TO_DATE(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,2,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
  substr(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,3,'C'),1,3),
  TO_DATE(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,3,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
  substr(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,4,'C'),1,3),
  TO_DATE(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,4,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
  substr(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,5,'C'),1,3),
  TO_DATE(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,5,'D'),g$_date.get_nls_date_format||' HH24:MI:SS'),
  substr(soklibs.f_sorcont_order('ADMSCTYP',saradap_pidm,0,'Y'),1,1),
  substr(f_outside_interest('ADMSINTS',saradap_pidm,1),1,2),
  substr(f_outside_interest('ADMSINTS',saradap_pidm,2),1,2),
  substr(f_outside_interest('ADMSINTS',saradap_pidm,3),1,2),
  substr(f_outside_interest('ADMSINTS',saradap_pidm,4),1,2),
  substr(f_outside_interest('ADMSINTS',saradap_pidm,5),1,2),
  substr(f_student_check_for_more(
     'INTERESTS',saradap_pidm,null,null,'ADMSINTS'),1,1),
  substr(soklibs.f_highschool_value(saradap_pidm,'HS','SC',saradap_term_code_entry,saradap_appl_no,'A'),1,6),
  substr(soklibs.f_highschool_value(saradap_pidm,'SB','HN',saradap_term_code_entry,saradap_appl_no,'A'),1,10),
  substr(soklibs.f_highschool_value(saradap_pidm,'SB','S1',saradap_term_code_entry,saradap_appl_no,'A'),1,75),
  substr(soklibs.f_highschool_value(saradap_pidm,'SB','S2',saradap_term_code_entry,saradap_appl_no,'A'),1,75),
  substr(soklibs.f_highschool_value(saradap_pidm,'SB','S3',saradap_term_code_entry,saradap_appl_no,'A'),1,75),
  substr(soklibs.f_highschool_value(saradap_pidm,'SB','S4',saradap_term_code_entry,saradap_appl_no,'A'),1,75),
  substr(soklibs.f_highschool_value(saradap_pidm,'SB','C',saradap_term_code_entry,saradap_appl_no,'A'),1,50),
  substr(soklibs.f_highschool_value(saradap_pidm,'SB','SC',saradap_term_code_entry,saradap_appl_no,'A'),1,3),
  substr(soklibs.f_highschool_value(saradap_pidm,'SB','Z',saradap_term_code_entry,saradap_appl_no,'A'),1,30),
  TO_DATE(soklibs.f_highschool_value(saradap_pidm,'HS','GD',saradap_term_code_entry,saradap_appl_no,'A')),
  TO_NUMBER(soklibs.f_highschool_value(saradap_pidm,'HS','P',saradap_term_code_entry,saradap_appl_no,'A')),
  TO_NUMBER(soklibs.f_highschool_value(saradap_pidm,'HS','CR',saradap_term_code_entry,saradap_appl_no,'A')),
  TO_NUMBER(soklibs.f_highschool_value(saradap_pidm,'HS','CS',saradap_term_code_entry,saradap_appl_no,'A')),
  substr(soklibs.f_highschool_value(saradap_pidm,'HS','GPA',saradap_term_code_entry,saradap_appl_no,'A'),1,24),
  substr(soklibs.f_highschool_value(saradap_pidm,'HS','DC',saradap_term_code_entry,saradap_appl_no,'A'),1,2),
  substr(f_concat_sorpcol(saradap_pidm),1,234),
  substr(f_student_check_for_more('PCOL',saradap_pidm,null,null,null),1,1),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',1,'C'),1,4),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',1,'S'),1,5),
  TO_DATE(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',1,'D')),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',2,'C'),1,4),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',2,'S'),1,5),
  TO_DATE(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',2,'D')),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',3,'C'),1,4),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',3,'S'),1,5),
  TO_DATE(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',3,'D')),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',4,'C'),1,4),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',4,'S'),1,5),
  TO_DATE(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',4,'D')),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',5,'C'),1,4),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',5,'S'),1,5),
  TO_DATE(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',5,'D')),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',6,'C'),1,4),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',6,'S'),1,5),
  TO_DATE(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',6,'D')),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',7,'C'),1,4),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',7,'S'),1,5),
  TO_DATE(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',7,'D')),
  substr(soklibs.f_sortest_value(saradap_pidm,'ADMSTEST',0,'Y'),1,1),
  substr(gokintl.f_gobintl_value(saradap_pidm,'B'),1,5),
  substr(gokintl.f_gobintl_value(saradap_pidm,'L'),1,5),
  substr(gokintl.f_gorvisa_value(saradap_pidm,'N'),1,18),
  substr(gokintl.f_gorvisa_value(saradap_pidm,'C'),1,2),
  substr(f_student_check_for_more
     ('HOLDS',saradap_pidm,null,null,'STDNHOLD'),1,1),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,1,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,1,'FD')),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,1,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,1,'AO')),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,1,'R'),1,30),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,2,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,2,'FD')),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,2,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,2,'AO')),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,2,'R'),1,30),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,3,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,3,'FD')),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,3,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,3,'AO')),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,3,'R'),1,30),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,4,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,4,'FD')),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,4,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,4,'AO')),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,4,'R'),1,30),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,5,'H'),1,2),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,5,'FD')),
  TO_DATE(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,5,'TD')),
  TO_NUMBER(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,5,'AO')),
  substr(soklibs.f_sprhold_value('STDNHOLD',saradap_pidm,5,'R'),1,30),
  SUBSTR(goksels.f_name_bio_value(saradap_pidm,'MREC2'),1,5),
	TO_DATE(goksels.f_name_bio_value(saradap_pidm,'MREC1'),g$_date.get_nls_date_format),
	SUBSTR(goksels.f_name_bio_value(saradap_pidm,'MREETHN'),1,7),
	soklibs.f_get_race(saradap_pidm)
from
     saradap"
"BANINST1","SAVADM1","","select
  pidm_key,
  term_code_key,
  appl_no_key,
  complete_ind,
  incomplete_ind,
  any_inst_accepted_ind,
  any_stdn_accepted_ind,
  current_inst_accepted_ind,
  current_stdn_accepted_ind,
  current_rejected_ind,
  withdrawn_ind,
  enrolled_ind,
  finaid_applicant,
  student_id,
  ssn,
  last_name,
  first_name,
  middle_name,
  middle_initial,
  name_prefix,
  name_suffix,
  surname_prefix,
  birthdate,
  age,
  gender,
  ethn_code,
  lgcy_code,
  deceased_ind,
  deceased_date,
  confidentiality_ind,
  full_part_time_ind,
  house_number1,
  street1_line1,
  street1_line2,
  street1_line3,
  street1_line4,
  city1,
  stat_code1,
  cnty_code1,
  zip_code1,
  natn_code1,
  atyp_code1,
  phone_area_code1,
  phone_number1,
  tele_code1,
  phone_ctry_cde1,
  house_number2,
  street2_line1,
  street2_line2,
  street2_line3,
  street2_line4,
  city2,
  stat_code2,
  cnty_code2,
  zip_code2,
  natn_code2,
  atyp_code2,
  phone_area_code2,
  phone_number2,
  tele_code2,
  phone_ctry_cde2,
  levl_code,
  application_date,
  application_status,
  application_status_date,
  admt_code,
  styp_code,
  camp_code,
  site_code,
  resd_code,
  substr(stksels.f_stvresd_value(resd_code,NULL),1,1),
  sess_code,
  wrsn_code,
  rate_code,
  egol_code,
  edlv_code,
  sbgi_code_other,
  recr_code,
  rtyp_code,
  coll_code1,
  degc_code1,
  majr_code1,
  dept_code1,
  coll_code2,
  degc_code2,
  majr_code2,
  dept_code2,
  majr_code1_conc1,
  majr_code1_conc2,
  substr(f_split_fields(application_decisions,1),1,2),
  to_date(f_split_fields(application_decisions,2),'DD-MON-YYYY'),
  substr(f_split_fields(application_decisions,3),1,2),
  to_date(f_split_fields(application_decisions,4),'DD-MON-YYYY'),
  substr(f_split_fields(application_decisions,5),1,2),
  to_date(f_split_fields(application_decisions,6),'DD-MON-YYYY'),
  substr(f_split_fields(application_decisions,7),1,2),
  to_date(f_split_fields(application_decisions,8),'DD-MON-YYYY'),
  substr(f_split_fields(application_decisions,9),1,2),
  to_date(f_split_fields(application_decisions,10),'DD-MON-YYYY'),
  additional_decisions,
  admr_code1,
  admr_received_date1,
  admr_required_ind1,
  admr_code2,
  admr_received_date2,
  admr_required_ind2,
  admr_code3,
  admr_received_date3,
  admr_required_ind3,
  admr_code4,
  admr_received_date4,
  admr_required_ind4,
  admr_code5,
  admr_received_date5,
  admr_required_ind5,
  admr_code6,
  admr_received_date6,
  admr_required_ind6,
  admr_code7,
  admr_received_date7,
  admr_required_ind7,
  additional_checklist_items_ind,
  sbgi_code_primary_source,
  primary_source_contact,
  ptyp_code,
  sbgi_code_source1,
  sbgi_code_source2,
  sbgi_code_source3,
  additional_sources_ind,
  first_contact,
  first_contact_date,
  latest_contact,
  latest_contact_date,
  ctyp_code1,
  ctyp_date1,
  ctyp_code2,
  ctyp_date2,
  ctyp_code3,
  ctyp_date3,
  ctyp_code4,
  ctyp_date4,
  ctyp_code5,
  ctyp_date5,
  additional_contacts_ind,
  ints_code1,
  ints_code2,
  ints_code3,
  ints_code4,
  ints_code5,
  additional_interests_ind,
  sbgi_code_high_school,
  high_school_house_number,
  high_school_street1,
  high_school_street2,
  high_school_street3,
  high_school_street4,
  high_school_city,
  high_school_state,
  high_school_zip,
  high_school_grad_date,
  high_school_percentile,
  high_school_rank,
  high_school_size,
  high_school_reported_gpa,
  dplm_code,
  substr(f_split_fields(prior_college_data,1),1,6),
  to_date(f_split_fields(prior_college_data,2),'DD-MON-YYYY'),
  to_date(f_split_fields(prior_college_data,3),'DD-MON-YYYY'),
  substr(f_split_fields(prior_college_data,4),1,6),
  substr(f_split_fields(prior_college_data,5),1,6),
  to_date(f_split_fields(prior_college_data,6),'DD-MON-YYYY'),
  to_date(f_split_fields(prior_college_data,7),'DD-MON-YYYY'),
  substr(f_split_fields(prior_college_data,8),1,6),
  substr(f_split_fields(prior_college_data,9),1,6),
  to_date(f_split_fields(prior_college_data,10),'DD-MON-YYYY'),
  to_date(f_split_fields(prior_college_data,11),'DD-MON-YYYY'),
  substr(f_split_fields(prior_college_data,12),1,6),
  substr(f_split_fields(prior_college_data,13),1,6),
  to_date(f_split_fields(prior_college_data,14),'DD-MON-YYYY'),
  to_date(f_split_fields(prior_college_data,15),'DD-MON-YYYY'),
  substr(f_split_fields(prior_college_data,16),1,6),
  substr(f_split_fields(prior_college_data,17),1,6),
  to_date(f_split_fields(prior_college_data,18),'DD-MON-YYYY'),
  to_date(f_split_fields(prior_college_data,19),'DD-MON-YYYY'),
  substr(f_split_fields(prior_college_data,20),1,6),
  substr(f_split_fields(prior_college_data,21),1,6),
  to_date(f_split_fields(prior_college_data,22),'DD-MON-YYYY'),
  to_date(f_split_fields(prior_college_data,23),'DD-MON-YYYY'),
  substr(f_split_fields(prior_college_data,24),1,6),
  additional_pcol_ind,
  test_code1,
  test_score1,
  test_date1,
  test_code2,
  test_score2,
  test_date2,
  test_code3,
  test_score3,
  test_date3,
  test_code4,
  test_score4,
  test_date4,
  test_code5,
  test_score5,
  test_date5,
  test_code6,
  test_score6,
  test_date6,
  test_code7,
  test_score7,
  test_date7,
  additional_tests_ind,
  international_birth_nation,
  international_legal_nation,
  international_visa_number,
  international_visa_type,
  additional_holds_ind,
  hldd_code1,
  hold_from_date1,
  hold_to_date1,
  hold_amount_owed1,
  hold_reason1,
  hldd_code2,
  hold_from_date2,
  hold_to_date2,
  hold_amount_owed2,
  hold_reason2,
  hldd_code3,
  hold_from_date3,
  hold_to_date3,
  hold_amount_owed3,
  hold_reason3,
  hldd_code4,
  hold_from_date4,
  hold_to_date4,
  hold_amount_owed4,
  hold_reason4,
  hldd_code5,
  hold_from_date5,
  hold_to_date5,
  hold_amount_owed5,
  hold_reason5,
  mre_confirmed_re_cde,
 	mre_confirmed_re_date,
 	mre_ethnic_cde,
 	mre_race_data
from savadm2"
"BANINST1","SAVADAS1","High School/College Administrator Assignments View. Shows SBGI assigned to the administrator.","SELECT sorarol_pidm,
          spriden_id,
          spriden_last_name,
          spriden_first_name,
          sorarol_radm_code,
          stvradm_desc,
          soradas_term_code_eff,
          stvsbgi_code,
          stvsbgi_desc,
          stvsbgi_type_ind,
          sobsbgi_street_line1,
          sobsbgi_street_line2,
          sobsbgi_street_line3,
          sobsbgi_city,
          sobsbgi_stat_code,
          sobsbgi_zip,
          sobsbgi_cnty_code,
          sobsbgi_natn_code,
          gorsgeo_geor_code,
          gorsgeo_geod_code,
          gorsgeo_status_ind,
          f_epsccode (sobsbgi_stat_code, sobsbgi_zip, sobsbgi_cnty_code)
     FROM spriden, gorsgeo, sobsbgi, stvsbgi, stvradm, soradda,
          soradas, sorarol
    WHERE spriden_pidm = sorarol_pidm
      AND spriden_change_ind IS NULL
      AND soradda_rule      = soradas_rule
      AND soradas_active_ind = 'A'
      AND soradda_arol_pidm = soradas_arol_pidm
      AND soradas_arol_pidm = sorarol_pidm
      AND soradas_radm_code = sorarol_radm_code
      AND stvradm_code = sorarol_radm_code
      AND stvsbgi_code = sobsbgi_sbgi_code (+)
      AND stvsbgi_code = gorsgeo_sbgi_code (+)
      AND (
                                  /* find out if hsch admin rule in sbgi code */
            (  soradda_adda_code = 'SORHSCH_SBGI_CODE'
               AND  stvsbgi_type_ind = 'H'
               AND  (  stvsbgi_code BETWEEN
                       soradda_from_value AND NVL (
                                                   soradda_to_value,
                                                   soradda_from_value
                                                  )
                        AND soradda_operator = '='
                     )
               AND NOT  (  stvsbgi_code BETWEEN
                           soradda_from_value AND NVL (
                                                       soradda_to_value,
                                                       soradda_from_value
                                                      )
                           AND soradda_operator = '<>'
                         )
            )
                                 /* find out if hsch admin rule in geor code */
          OR
            (  soradda_adda_code = 'GORSGEO_HSCH_GEOR_CODE'
               AND  stvsbgi_type_ind = 'H'
               AND  (  gorsgeo_geor_code BETWEEN
                       soradda_from_value AND NVL (
                                                   soradda_to_value,
                                                   soradda_from_value
                                                  )
                       AND soradda_operator = '='
                    )
               AND NOT  (  gorsgeo_geor_code BETWEEN
                           soradda_from_value AND NVL (
                                                       soradda_to_value,
                                                       soradda_from_value
                                                      )
                           AND soradda_operator = '<>'
                        )
            )
                                 /* find out if hsch admin rule in geod code */
          OR
            (  soradda_adda_code = 'GORSGEO_HSCH_GEOD_CODE'
               AND  stvsbgi_type_ind = 'H'
               AND  (  gorsgeo_geod_code BETWEEN
                       soradda_from_value AND NVL (
                                                   soradda_to_value,
                                                   soradda_from_value
                                                  )
                       AND soradda_operator = '='
                    )
               AND NOT  (  gorsgeo_geod_code BETWEEN
                           soradda_from_value AND NVL (
                                                       soradda_to_value,
                                                       soradda_from_value
                                                      )
                           AND soradda_operator = '<>'
                        )
            )
                                 /* find if hsch epsc code matches admin rule */
          OR
            (  soradda_adda_code = 'SOBSBGI_HSCH_EPSC_CODE'
               AND  stvsbgi_type_ind = 'H'
               AND  (  f_epsccode (
                       sobsbgi_stat_code,
                       sobsbgi_zip,
                       sobsbgi_cnty_code
                                  ) BETWEEN
                       soradda_from_value AND NVL (
                                                   soradda_to_value,
                                                   soradda_from_value
                                                  )
                       AND soradda_operator = '='
                    )
               AND NOT  (  f_epsccode (
                            sobsbgi_stat_code,
                            sobsbgi_zip,
                            sobsbgi_cnty_code
                                      ) BETWEEN
                            soradda_from_value AND NVL (
                                                        soradda_to_value,
                                                        soradda_from_value
                                                       )
                            AND soradda_operator = '<>'
                         )
            )
                                  /* find out if pcol admin rule in sbgi code */
          OR
            (  soradda_adda_code = 'SORPCOL_SBGI_CODE'
               AND  stvsbgi_type_ind = 'C'
               AND  (  stvsbgi_code BETWEEN
                       soradda_from_value AND NVL (
                                                   soradda_to_value,
                                                   soradda_from_value
                                                  )
                        AND soradda_operator = '='
                     )
               AND NOT  (  stvsbgi_code BETWEEN
                           soradda_from_value AND NVL (
                                                       soradda_to_value,
                                                       soradda_from_value
                                                      )
                           AND soradda_operator = '<>'
                         )
            )
                                 /* find out if pcol admin rule in geor code */
          OR
            (  soradda_adda_code = 'GORSGEO_PCOL_GEOR_CODE'
               AND  stvsbgi_type_ind = 'C'
               AND  (  gorsgeo_geor_code BETWEEN
                       soradda_from_value AND NVL (
                                                   soradda_to_value,
                                                   soradda_from_value
                                                  )
                       AND soradda_operator = '='
                    )
               AND NOT  (  gorsgeo_geor_code BETWEEN
                           soradda_from_value AND NVL (
                                                       soradda_to_value,
                                                       soradda_from_value
                                                      )
                           AND soradda_operator = '<>'
                        )
            )
                                 /* find out if pcol admin rule in geod code */
          OR
            (  soradda_adda_code = 'GORSGEO_PCOL_GEOD_CODE'
               AND  stvsbgi_type_ind = 'C'
               AND  (  gorsgeo_geod_code BETWEEN
                       soradda_from_value AND NVL (
                                                   soradda_to_value,
                                                   soradda_from_value
                                                  )
                       AND soradda_operator = '='
                    )
               AND NOT  (  gorsgeo_geod_code BETWEEN
                           soradda_from_value AND NVL (
                                                       soradda_to_value,
                                                       soradda_from_value
                                                      )
                           AND soradda_operator = '<>'
                        )
            )
                                 /* find if pcol epsc code matches admin rule */
          OR
            (  soradda_adda_code = 'SOBSBGI_PCOL_EPSC_CODE'
               AND  stvsbgi_type_ind = 'C'
               AND  (  f_epsccode (
                       sobsbgi_stat_code,
                       sobsbgi_zip,
                       sobsbgi_cnty_code
                                  ) BETWEEN
                       soradda_from_value AND NVL (
                                                   soradda_to_value,
                                                   soradda_from_value
                                                  )
                       AND soradda_operator = '='
                    )
               AND NOT  (  f_epsccode (
                            sobsbgi_stat_code,
                            sobsbgi_zip,
                            sobsbgi_cnty_code
                                      ) BETWEEN
                            soradda_from_value AND NVL (
                                                        soradda_to_value,
                                                        soradda_from_value
                                                       )
                            AND soradda_operator = '<>'
                         )
            )
          )
 GROUP BY sorarol_pidm,
          spriden_id,
          spriden_last_name,
          spriden_first_name,
          sorarol_radm_code,
          stvradm_desc,
          soradas_term_code_eff,
          stvsbgi_code,
          stvsbgi_desc,
          stvsbgi_type_ind,
          sobsbgi_street_line1,
          sobsbgi_street_line2,
          sobsbgi_street_line3,
          sobsbgi_city,
          sobsbgi_stat_code,
          sobsbgi_zip,
          sobsbgi_cnty_code,
          sobsbgi_natn_code,
          gorsgeo_geor_code,
          gorsgeo_geod_code,
          gorsgeo_status_ind,
          f_epsccode (sobsbgi_stat_code, sobsbgi_zip, sobsbgi_cnty_code)
 "
"BANINST1","SAVACUR","This view lists curriculum for an applicant and 2 majors, 2 minors and 6 concentrations. ","select
   SORLCUR_PIDM
 , SORLCUR_SEQNO
 , SORLCUR_LMOD_CODE
 , SORLCUR_TERM_CODE
 , SORLCUR_KEY_SEQNO
 , SORLCUR_PRIORITY_NO
 , SORLCUR_CACT_CODE
 , SORLCUR_USER_ID
 , SORLCUR_DATA_ORIGIN
 , SORLCUR_ACTIVITY_DATE
 , SORLCUR_LEVL_CODE
 , SORLCUR_COLL_CODE
 , SORLCUR_DEGC_CODE
 , SORLCUR_TERM_CODE_CTLG
 , SORLCUR_TERM_CODE_END
 , SORLCUR_CAMP_CODE
 , SORLCUR_PROGRAM
 , SORLCUR_START_DATE
 , SORLCUR_END_DATE
 , SORLCUR_CURR_RULE
 , SORLCUR.ROWID
 , decode( SOBCTRL_CURRENT_ADM_CDE, 'Y',
           DECODE(NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind,
              'YY',
              DENSE_RANK()
              OVER(PARTITION BY SORLCUR_PIDM,
                   SORLCUR_TERM_CODE,
                   SORLCUR_LMOD_CODE,
                   SORLCUR_KEY_SEQNO ORDER BY
                   NVL(SORLCUR_CURRENT_CDE, 'N') || sobcact_active_ind DESC,
                   SORLCUR_PRIORITY_NO),
              0),
              sokccur.f_order(sorlcur_pidm,
                              sorlcur_lmod_code,
                              sorlcur_seqno,
                              saradap_term_code_entry,
                              saradap_appl_no)
              )
  ,sobcact_active_ind
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'MAJR'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'DEPT'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 1, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'MAJR'),1,4)
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'DEPT'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_major, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 1, 'CRUL') )
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'MAJR'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_minor, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'CRUL') )
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 1, 'ACON') ,1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 2, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'MAJR'),1,4)
 ,to_number( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 3, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 4, 'ACON'),1,4)
 ,substr(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 5, 'ACON'),1,4)
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'MAJR'),1,4)
 ,to_number(SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'CRUL') )
 ,substr( SOKCCUR.f_fieldofstudy_value(sorlcur_pidm,
                        sorlcur_lmod_code,
                        sorlcur_term_code, sorlcur_key_seqno, sorlcur_seqno,
                        sb_fieldofstudy_str.f_concentration, 6, 'ACON'),1,4)
 , saradap.rowid
 , SARADAP_APPL_DATE
 , SARADAP_APST_CODE
 , SARADAP_APST_DATE
 , SARADAP_MAINT_IND
 , SARADAP_ADMT_CODE
 , SARADAP_STYP_CODE
 , SARADAP_SITE_CODE
 , SARADAP_RESD_CODE
 , SARADAP_FULL_PART_IND
 , SARADAP_SESS_CODE
 , SARADAP_WRSN_CODE
 , SARADAP_INTV_CODE
 , SARADAP_FEE_IND
 , SARADAP_FEE_DATE
 , SARADAP_RATE_CODE
 , SARADAP_EGOL_CODE
 , SARADAP_EDLV_CODE
 , SARADAP_SBGI_CODE
 , SARADAP_RECR_CODE
 , SARADAP_RTYP_CODE
 , SARADAP_WEB_ACCT_MISC_IND
 , SARADAP_WEB_CASHIER_USER
 , SARADAP_WEB_TRANS_NO
 , SARADAP_WEB_AMOUNT
 , SARADAP_WEB_RECEIPT_NUMBER
 , SARADAP_WAIV_CODE
 , SARADAP_APPL_PREFERENCE
 , SORLCUR_USER_ID_UPDATE
, SORLCUR_ACTIVITY_DATE_UPDATE
 , SORLCUR_CURRENT_CDE
 from  saradap,  sorlcur ,sobcact,sobctrl
where  saradap_term_code_entry  = sorlcur_term_code
and sobcact_cact_code        = sorlcur_cact_code
and saradap_appl_no          = sorlcur_key_seqno
and saradap_pidm             = sorlcur_pidm
and sorlcur_lmod_code        =
  ( Select sb_curriculum_str.f_admissions from dual)
and sorlcur_pidm > 0  "
"BANINST1","RVVISIR","BOGW view selecting student's current Banner financial aid ISIR application data.","SELECT RCRAPP1_PIDM,
       RCRAPP1_AIDY_CODE,
  NVL(RCRAPP1_USED_TRANS_NO,'01'),
  RCRAPP1_SEQ_NO,
  RCRAPP2_MODEL_CDE,
  RCRAPP1_INFC_CODE,
  RORSTAT_RECALC_NA_IND,
  RCRAPP2_PELL_PGI  ,
  RCRAPP1_FAM_MEMB,
  RCRAPP1_PAR_FAM_MEMB,
  RCRAPP2_C_1_AGI_TAX_INC,
  RCRAPP2_C_PAR_1_AGI_TAX_INC,
  RCRAPP2_C_1_TOT_UNTAX_INC,
  RCRAPP2_C_PAR_1_TOT_UNTAX_INC,
  RCRAPP2_C_1_TOT_INC,
  RCRAPP2_C_PAR_1_TOT_INC,
  rv_state_aid_appl_bp.f_calculate_9month_need(rcrapp1_pidm,RCRAPP1_AIDY_CODE,RCRAPP2_PELL_PGI) ,
  RCRAPP1_FED_COLL_CHOICE_1,
  RCRAPP1_FED_COLL_CHOICE_2,
  RCRAPP1_FED_COLL_CHOICE_3,
  RCRAPP3_FED_COLL_CHOICE_4,
  RCRAPP3_FED_COLL_CHOICE_5,
  RCRAPP3_FED_COLL_CHOICE_6,
  RCRAPP3_FED_COLL_CHOICE_7,
  RCRAPP3_FED_COLL_CHOICE_8,
  RCRAPP3_FED_COLL_CHOICE_9,
  RCRAPP3_FED_COLL_CHOICE_10
  FROM RCRAPP1,
  RCRAPP2,
  RCRAPP3,
  RORSTAT
  WHERE RCRAPP1_PIDM= RORSTAT_PIDM
   AND  RCRAPP1_AIDY_CODE  = RORSTAT_AIDY_CODE
   AND (   (     RCRAPP1_INFC_CODE = 'EDE'
                  AND RCRAPP3_OFFL_UNOFFL_IND = '1'
            )
          OR  (  RCRAPP1_INFC_CODE = 'CAL'
                 AND (RCRAPP3_OFFL_UNOFFL_IND = '1' OR
                       RCRAPP3_OFFL_UNOFFL_IND = '2'
                      )
               )
         )
   AND RCRAPP1_CURR_REC_IND = 'Y'
   AND RCRAPP2_AIDY_CODE = RCRAPP1_AIDY_CODE
   AND RCRAPP2_PIDM      = RCRAPP1_PIDM
  AND RCRAPP2_INFC_CODE = RCRAPP1_INFC_CODE
  AND RCRAPP2_SEQ_NO    = RCRAPP1_SEQ_NO
  AND RCRAPP3_AIDY_CODE = RCRAPP1_AIDY_CODE
  AND RCRAPP3_PIDM       = RCRAPP1_PIDM
  AND RCRAPP3_SEQ_NO     = RCRAPP1_SEQ_NO
  AND RCRAPP3_INFC_CODE  = RCRAPP1_INFC_CODE
  ORDER BY RCRAPP1_AIDY_CODE,
           RCRAPP1_PIDM
"
"BANINST1","RRVREQ1","SDA Work View.","select
 rrrareq_pidm,
 rrrareq_aidy_code,
 rrrareq_treq_code,
 substr(decode(rrrareq_treq_desc,null,
   f_finaid_get_desc('RTVTREQ',rrrareq_treq_code,60),
        rrrareq_treq_desc),1,60),
 rrrareq_sbgi_code,
 rrrareq_fund_code,
 rrrareq_period,                        -- 80900-1
 rrrtmsg_mesg_code,
 spriden_id,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 rcrapp1_ssn,
 rorstat_tgrp_code,
 rorstat_pckg_comp_date,
 rorstat_all_req_comp_date,
 rorstat_pckg_req_comp_date,
 rorstat_disb_req_comp_date,
 substr(f_unsatisfied_prom_note(rorstat_pidm,rorstat_aidy_code),1,1),
 rcrapp1_verification_prty,
 rcrapp1_verification_msg,
 rorstat_ver_complete,
 rrrareq_trst_code,
 rrrareq_sat_ind,
 rrrareq_stat_date,
 rrrareq_pckg_ind,
 rrrareq_disb_ind,
 rrrareq_memo_ind,
 rrrareq_info_access_ind,
 rrrareq_sbgi_type_ind,      -- 80500-1
 rrrareq_term_code,          -- 80900-1
 rrrareq_trk_ltr_ind         -- 80500-1
from spriden,
     rrrtmsg,
     rcrapp1,
     rorstat,
     rrrareq
where rrrareq_pidm = rorstat_pidm
  and rrrareq_aidy_code = rorstat_aidy_code
  and rrrareq_pidm = rcrapp1_pidm (+)
  and rrrareq_aidy_code = rcrapp1_aidy_code (+)
  and rcrapp1_curr_rec_ind (+) = 'Y'
  and rrrareq_pidm = spriden_pidm
  and spriden_change_ind is null
  and rrrareq_aidy_code = rrrtmsg_aidy_code (+)
  and rrrareq_treq_code = rrrtmsg_treq_code (+)"
"BANINST1","RRVAREQ_PRDS","Applicant Requirements Period View","SELECT RRRAREQ_AIDY_CODE,
                       RRRAREQ_PIDM,
                       RRRAREQ_TREQ_CODE,
                       RRRAREQ_ACTIVITY_DATE,
                       RRRAREQ_TREQ_DESC,
                       RRRAREQ_SAT_IND,
                       RRRAREQ_STAT_DATE,
                       RRRAREQ_EST_DATE,
                       RRRAREQ_TRST_CODE,
                       RRRAREQ_PCKG_IND,
                       RRRAREQ_DISB_IND,
                       RRRAREQ_FUND_CODE,
                       RRRAREQ_SYS_IND,
                       RRRAREQ_SBGI_CODE,
                       RRRAREQ_MEMO_IND,
                       RRRAREQ_USER_ID,
                       RRRAREQ_PERK_MPN_EXP_DATE,
                       RRRAREQ_SATISFIED_DATE,
                       RRRAREQ_MPN_FIRST_DISB_DATE,
                       RRRAREQ_MPN_SIGNED_DATE,
                       RRRAREQ_DATA_ORIGIN,
                       RRRAREQ_TRK_LTR_IND,
                       RRRAREQ_INFO_ACCESS_IND,
                       RRRAREQ_PERIOD,
                       ROBPRDS_SEQ_NO,
                       RRRAREQ_SBGI_TYPE_IND,
                       RRRAREQ_TERM_CODE
                  FROM ROBPRDS,
                       RRRAREQ
                 WHERE RRRAREQ_PERIOD IS NOT NULL
                   AND RRRAREQ_PERIOD = ROBPRDS_PERIOD
                 UNION
                SELECT RRRAREQ_AIDY_CODE,
                       RRRAREQ_PIDM,
                       RRRAREQ_TREQ_CODE,
                       RRRAREQ_ACTIVITY_DATE,
                       RRRAREQ_TREQ_DESC,
                       RRRAREQ_SAT_IND,
                       RRRAREQ_STAT_DATE,
                       RRRAREQ_EST_DATE,
                       RRRAREQ_TRST_CODE,
                       RRRAREQ_PCKG_IND,
                       RRRAREQ_DISB_IND,
                       RRRAREQ_FUND_CODE,
                       RRRAREQ_SYS_IND,
                       RRRAREQ_SBGI_CODE,
                       RRRAREQ_MEMO_IND,
                       RRRAREQ_USER_ID,
                       RRRAREQ_PERK_MPN_EXP_DATE,
                       RRRAREQ_SATISFIED_DATE,
                       RRRAREQ_MPN_FIRST_DISB_DATE,
                       RRRAREQ_MPN_SIGNED_DATE,
                       RRRAREQ_DATA_ORIGIN,
                       RRRAREQ_TRK_LTR_IND,
                       RRRAREQ_INFO_ACCESS_IND,
                       RRRAREQ_PERIOD,
                       NULL,
                       RRRAREQ_SBGI_TYPE_IND,
                       RRRAREQ_TERM_CODE
                  FROM RRRAREQ
                 WHERE RRRAREQ_PERIOD IS NULL"
"BANINST1","RPVTERM","Applicant Award Period View","SELECT DISTINCT RORVIEW_AIDY_CODE,                                                                            -- 81100-1
       RORVIEW_PIDM,                                                                                          -- 81100-1
       Z.RPRATRM_FUND_CODE,                                                                                   -- 81100-1
       ROBPRDS_PERIOD                                                                                         -- 81100-1
  FROM RORVIEW Y,                                                                                             -- 81100-1
       ROBPRDS,                                                                                               -- 81100-1
       RPRATRM X,                                                                                             -- 81100-1
       RPRATRM Z                                                                                              -- 81100-1
 WHERE RORVIEW_TYPE_IND       = 'R'                                                                           -- 81100-1
   AND RORVIEW_SESSION_ID     = SYS_CONTEXT('USERENV', 'SESSIONID')                                           -- 81100-1
   AND X.RPRATRM_PIDM         = RORVIEW_PIDM                                                                  -- 81100-1
   AND X.RPRATRM_PERIOD      IN (SELECT ROBPRDS_PERIOD                                                        -- 81100-1
                                   FROM ROBPRDS                                                               -- 81100-1
                                  WHERE ROBPRDS_AIDY_CODE = Y.RORVIEW_AIDY_CODE                               -- 81100-1
                                    AND ROBPRDS_PERIOD    = X.RPRATRM_PERIOD)                                 -- 81100-1
   AND X.RPRATRM_PERIOD       = ROBPRDS_PERIOD                                                                -- 81100-1
   AND EXISTS                                                                                                 -- 81100-1
        ( SELECT 'Y'                                                                                          -- 81100-1
            FROM RTVAWST,                                                                                     -- 81100-1
                 RPRAWRD                                                                                      -- 81100-1
           WHERE X.RPRATRM_AIDY_CODE   = RPRAWRD_AIDY_CODE                                                    -- 81100-1
             AND X.RPRATRM_PIDM        = RPRAWRD_PIDM                                                         -- 81100-1
             AND X.RPRATRM_FUND_CODE   = RPRAWRD_FUND_CODE                                                    -- 81100-1
             AND RPRAWRD_AWST_CODE     = RTVAWST_CODE                                                         -- 81100-1
             AND ( RTVAWST_OFFER_IND   = 'Y'                                                                  -- 81100-1
              OR   RTVAWST_ACCEPT_IND  = 'Y' )                                                                -- 81100-1
        )                                                                                                     -- 81100-1
   AND X.RPRATRM_PIDM         = Z.RPRATRM_PIDM                                                                -- 81100-1
   AND Z.RPRATRM_PERIOD      IN ( SELECT ROBPRDS_PERIOD                                                       -- 81100-1
                                    FROM ROBPRDS,                                                             -- 81100-1
                                         RPRATRM B                                                            -- 81100-1
                                   WHERE RPRATRM_PIDM = Y.RORVIEW_PIDM                                        -- 81100-1
                                     AND RPRATRM_PERIOD IN (SELECT ROBPRDS_PERIOD                             -- 81100-1
                                                              FROM ROBPRDS                                    -- 81100-1
                                                             WHERE ROBPRDS_AIDY_CODE = Y.RORVIEW_AIDY_CODE    -- 81100-1
                                                              AND ROBPRDS_PERIOD = B.RPRATRM_PERIOD)          -- 81100-1
                                     AND RPRATRM_PERIOD = ROBPRDS_PERIOD                                      -- 81100-1
                                )                                                                             -- 81100-1
   AND EXISTS                                                                                                 -- 81100-1
        ( SELECT 'Y'                                                                                          -- 81100-1
            FROM RTVAWST,                                                                                     -- 81100-1
                 RPRAWRD                                                                                      -- 81100-1
           WHERE Z.RPRATRM_AIDY_CODE   = RPRAWRD_AIDY_CODE                                                    -- 81100-1
             AND Z.RPRATRM_PIDM        = RPRAWRD_PIDM                                                         -- 81100-1
             AND Z.RPRATRM_FUND_CODE   = RPRAWRD_FUND_CODE                                                    -- 81100-1
             AND RPRAWRD_AWST_CODE     = RTVAWST_CODE                                                         -- 81100-1
             AND ( RTVAWST_OFFER_IND   = 'Y'                                                                  -- 81100-1
              OR   RTVAWST_ACCEPT_IND  = 'Y' )                                                                -- 81100-1
        )                                                                                                     -- 81100-1"
"BANINST1","RPVLTRM_PRDS","Loan Period / Loan Schedule Rules Period View","SELECT RPRLTRM_LOAN_PERIOD,
                             RPRLTRM_PERIOD,
                             ROBPRDS_SEQ_NO,
                             RPRLTRM_LOAN_PCT,
                             RPRLTRM_ACTIVITY_DATE,
                             RPRLTRM_MEMO_EXP_DATE,
                             RPRLTRM_USER_ID,
                             RPRLTRM_DATA_ORIGIN,
                             RPRLTRM_TERM_CODE
                        FROM ROBPRDS,
                             RPRLTRM
                       WHERE RPRLTRM_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RPVLDSB_PRDS","Loan Period / Disbursement Schedule Rules Period View","SELECT RPRLDSB_LOAN_PERIOD,
                             RPRLDSB_DISBURSE_DATE,
                             RPRLDSB_PERIOD,
                             ROBPRDS_SEQ_NO,
                             RPRLDSB_LOAN_PCT,
                             RPRLDSB_ACTIVITY_DATE,
                             RPRLDSB_MEMO_EXP_DAYS,
                             RPRLDSB_PN_DISB_DATE,
                             RPRLDSB_USER_ID,
                             RPRLDSB_DATA_ORIGIN,
                             RPRLDSB_TERM_CODE
                        FROM ROBPRDS,
                             RPRLDSB
                       WHERE RPRLDSB_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RPVLATR_PRDS","Loan Schedule Period View","SELECT RPRLATR_PIDM,
                             RPRLATR_FUND_CODE,
                             RPRLATR_APPL_NO,
                             RPRLATR_PERIOD,
                             ROBPRDS_SEQ_NO,
                             RPRLATR_LOAN_PCT,
                             RPRLATR_ACTIVITY_DATE,
                             RPRLATR_RECOMMEND_AMT,
                             RPRLATR_REQUEST_AMT,
                             RPRLATR_EXPECT_AMT,
                             RPRLATR_APPROVE_AMT,
                             RPRLATR_MEMO_EXP_DATE,
                             RPRLATR_CERT_HR,
                             RPRLATR_AIDY_CODE,
                             RPRLATR_DL_SEQ_NO,
                             RPRLATR_USER_ID,
                             RPRLATR_EXCLUDE_LNEX_FLAG,
                             RPRLATR_TERM_CODE
                        FROM ROBPRDS,
                             RPRLATR
                       WHERE RPRLATR_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RPVLADB_PRDS","Loan Disbursement Period View","SELECT RPRLADB_PIDM                             RPVLADB_PIDM,
         RPRLADB_FUND_CODE                        RPVLADB_FUND_CODE,
         RPRLADB_APPL_NO                          RPVLADB_APPL_NO,
         RPRLADB_DISBURSE_DATE                    RPVLADB_DISBURSE_DATE,
         RPRLADB_PERIOD                           RPVLADB_PERIOD,
         ROBPRDS_SEQ_NO                           RPVLADB_PRDS_SEQ_NO,
         RPRLADB_SEQ_NO                           RPVLADB_SEQ_NO,
         RPRLADB_LOAN_PCT                         RPVLADB_LOAN_PCT,
         RPRLADB_ACTIVITY_DATE                    RPVLADB_ACTIVITY_DATE,
         RPRLADB_FEED_IND                         RPVLADB_FEED_IND,
         RPRLADB_CHECK_AMT                        RPVLADB_CHECK_AMT,
         RPRLADB_CHECK_DATE                       RPVLADB_CHECK_DATE,
         RPRLADB_STU_RECEIVE_DATE                 RPVLADB_STU_RECEIVE_DATE,
         RPRLADB_FEED_DATE                        RPVLADB_FEED_DATE,
         RPRLADB_CHECK_RETURN_AMT                 RPVLADB_CHECK_RETURN_AMT,
         RPRLADB_CHECK_RETURN_DATE                RPVLADB_CHECK_RETURN_DATE,
         RPRLADB_TRAN_NUMBER                      RPVLADB_TRAN_NUMBER,
         RPRLADB_MEMO_EXP_DAYS                    RPVLADB_MEMO_EXP_DAYS,
         RPRLADB_DISBURSE_LOAD                    RPVLADB_DISBURSE_LOAD,
         RPRLADB_DISBURSE_LOAD_OPT                RPVLADB_DISBURSE_LOAD_OPT,
         RPRLADB_AIDY_CODE                        RPVLADB_AIDY_CODE,
         RPRLADB_DL_SEQ_NO                        RPVLADB_DL_SEQ_NO,
         RPRLADB_USER_ID                          RPVLADB_USER_ID,
         RPRLADB_DISB_STATUS                      RPVLADB_DISB_STATUS,
         RPRLADB_RECONCILE_IND                    RPVLADB_RECONCILE_IND,
         RPRLADB_RECONCILE_DATE                   RPVLADB_RECONCILE_DATE,
         RPRLADB_BATCH_NO                         RPVLADB_BATCH_NO,
         RPRLADB_CANCEL_IND                       RPVLADB_CANCEL_IND,
         RPRLADB_CANCEL_DATE                      RPVLADB_CANCEL_DATE,
         RPRLADB_REFUND_AMT                       RPVLADB_REFUND_AMT,
         RPRLADB_REFUND_DATE                      RPVLADB_REFUND_DATE,
         RPRLADB_DL_GROSS_AMT                     RPVLADB_DL_GROSS_AMT,
         RPRLADB_DL_FEE_AMT                       RPVLADB_DL_FEE_AMT,
         RPRLADB_PN_DISB_DATE                     RPVLADB_PN_DISB_DATE,
         RPRLADB_DL_DISB_NO                       RPVLADB_DL_DISB_NO,
         RPRLADB_RECON_BATCH_NO                   RPVLADB_RECON_BATCH_NO,
         RPRLADB_SERV_GROSS_AMT                   RPVLADB_SERV_GROSS_AMT,
         RPRLADB_SERV_FEE_AMT                     RPVLADB_SERV_FEE_AMT,
         RPRLADB_SERV_NET_AMT                     RPVLADB_SERV_NET_AMT,
         RPRLADB_SERV_NET_ADJ_AMT                 RPVLADB_SERV_NET_ADJ_AMT,
         RPRLADB_SERV_LOANID_ERR                  RPVLADB_SERV_LOANID_ERR,
         RPRLADB_SERV_DISBNO_ERR                  RPVLADB_SERV_DISBNO_ERR,
         RPRLADB_SERV_ACTION_ERR                  RPVLADB_SERV_ACTION_ERR,
         RPRLADB_SERV_DATE_ERR                    RPVLADB_SERV_DATE_ERR,
         RPRLADB_SERV_SEQNO_ERR                   RPVLADB_SERV_SEQNO_ERR,
         RPRLADB_REF_ID                           RPVLADB_REF_ID,
         RPRLADB_RET_LNDR_DATE                    RPVLADB_RET_LNDR_DATE,
         RPRLADB_EFT_IND                          RPVLADB_EFT_IND,
         RPRLADB_COMMENT                          RPVLADB_COMMENT,
         RPRLADB_DISB_BYPASS                      RPVLADB_DISB_BYPASS,
         RPRLADB_DL_REJECT_CODE_1                 RPVLADB_DL_REJECT_CODE_1,
         RPRLADB_DL_REJECT_CODE_2                 RPVLADB_DL_REJECT_CODE_2,
         RPRLADB_DL_REJECT_CODE_3                 RPVLADB_DL_REJECT_CODE_3,
         RPRLADB_DL_REJECT_CODE_4                 RPVLADB_DL_REJECT_CODE_4,
         RPRLADB_DL_REJECT_CODE_5                 RPVLADB_DL_REJECT_CODE_5,
         RPRLADB_DL_RECON_REJECT_1                RPVLADB_DL_RECON_REJECT_1,
         RPRLADB_DL_RECON_REJECT_2                RPVLADB_DL_RECON_REJECT_2,
         RPRLADB_DL_RECON_REJECT_3                RPVLADB_DL_RECON_REJECT_3,
         RPRLADB_DL_RECON_REJECT_4                RPVLADB_DL_RECON_REJECT_4,
         RPRLADB_DL_RECON_REJECT_5                RPVLADB_DL_RECON_REJECT_5,
         RPRLADB_DL_ACKN_DATE                     RPVLADB_DL_ACKN_DATE,
         RPRLADB_SAS_END_DATE                     RPVLADB_SAS_END_DATE,
         RPRLADB_SAS_PROCESS_DATE                 RPVLADB_SAS_PROCESS_DATE,
         RPRLADB_SCHOOL_CODE                      RPVLADB_SCHOOL_CODE,
         RPRLADB_SAS_RECORD_COUNT_SEQ             RPVLADB_SAS_RECORD_COUNT_SEQ,
         RPRLADB_FEES_PAID                        RPVLADB_FEES_PAID,
         RPRLADB_AFFIRM_FLAG                      RPVLADB_AFFIRM_FLAG,
         RPRLADB_HOLD_REL_STATUS                  RPVLADB_HOLD_REL_STATUS,
         RPRLADB_REV_DISB_AMT                     RPVLADB_REV_DISB_AMT,
         RPRLADB_PRIOR_DISB_DATE                  RPVLADB_PRIOR_DISB_DATE,
         RPRLADB_DISB_OVERRIDE_IND                RPVLADB_DISB_OVERRIDE_IND,
         RPRLADB_DL_REBATE_AMT                    RPVLADB_DL_REBATE_AMT,
         RPRLADB_SERV_REBATE_AMT                  RPVLADB_SERV_REBATE_AMT,
         RPRLADB_SERV_BOOKED_STATUS               RPVLADB_SERV_BOOKED_STATUS,
         RPRLADB_SERV_BOOKED_DATE                 RPVLADB_SERV_BOOKED_DATE,
         RPRLADB_EL_HOLD_REL_DATE                 RPVLADB_EL_HOLD_REL_DATE,
         RPRLADB_EL_REV_GROSS_AMT                 RPVLADB_EL_REV_GROSS_AMT,
         RPRLADB_EL_DISB_NO                       RPVLADB_EL_DISB_NO,
         RPRLADB_SERV_TRANS_TYPE                  RPVLADB_SERV_TRANS_TYPE,
         RPRLADB_REGION_CD                        RPVLADB_REGION_CD,
         RPRLADB_SCHOOL_STAT_CODE                 RPVLADB_SCHOOL_STAT_CODE,
         RPRLADB_EL_SERV_GROSS_AMT                RPVLADB_EL_SERV_GROSS_AMT,
         RPRLADB_EL_SERV_ORIG_FEE                 RPVLADB_EL_SERV_ORIG_FEE,
         RPRLADB_EL_SERV_GUAR_FEE                 RPVLADB_EL_SERV_GUAR_FEE,
         RPRLADB_EL_SERV_NET_AMT                  RPVLADB_EL_SERV_NET_AMT,
         RPRLADB_EL_SERV_DISB_DATE                RPVLADB_EL_SERV_DISB_DATE,
         RPRLADB_EL_SERV_GUAR_FEE_PAID            RPVLADB_EL_SERV_GUAR_FEE_PAID,
         RPRLADB_EL_SERV_ORIG_FEE_PAID            RPVLADB_EL_SERV_ORIG_FEE_PAID,
         RPRLADB_DOCUMENT_ID                      RPVLADB_DOCUMENT_ID,
         RPRLADB_PREV_DISB_SEQ_NO                 RPVLADB_PREV_DISB_SEQ_NO,
         RPRLADB_DATA_ORIGIN                      RPVLADB_DATA_ORIGIN,
         RPRLADB_DL_EDIT_FIELD_1                  RPVLADB_DL_EDIT_FIELD_1,
         RPRLADB_DL_EDIT_FIELD_2                  RPVLADB_DL_EDIT_FIELD_2,
         RPRLADB_DL_EDIT_FIELD_3                  RPVLADB_DL_EDIT_FIELD_3,
         RPRLADB_DL_EDIT_FIELD_4                  RPVLADB_DL_EDIT_FIELD_4,
         RPRLADB_DL_EDIT_FIELD_5                  RPVLADB_DL_EDIT_FIELD_5,
         RPRLADB_EL_BOR_DIRECT_DISB_IND           RPVLADB_EL_BOR_DIRECT_DISB_IND,
         RPRLADB_EL_DIRECT_CHECK_AMT              RPVLADB_EL_DIRECT_CHECK_AMT,
         RPRLADB_EXCLUDE_LNEX_FLAG                RPVLADB_EXCLUDE_LNEX_FLAG,
         RPRLADB_TERM_CODE                        RPVLADB_TERM_CODE,
         RPRLADB_SERVICER                         RPVLADB_SERVICER,                                --81100-1
         RPRLADB_REPT_DISB_DATE                   RPVLADB_REPT_DISB_DATE,                          --81100-1
         RPRLADB_DL_AUTHORIZED_IND                RPVLADB_DL_AUTHORIZED_IND,                       --81100-1
         RPRLADB_ENROLLMENT_SCHOOL_CDE            RPVLADB_ENROLLMENT_SCHOOL_CDE,                   --81400-1
         RPRLADB_SAS_START_DATE                   RPVLADB_SAS_START_DATE                           --81700-1
    FROM ROBPRDS,
         RPRLADB
   WHERE RPRLADB_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RPVFTRM","Fund Award Period Inquiry View","SELECT
       RPRATRM_AIDY_CODE,
       RPRATRM_FUND_CODE,
       RPRATRM_PERIOD,                                               -- 80900-1
       ROBPRDS_SEQ_NO,                                               -- 80900-1
       RPRATRM_TERM_CODE,
       SPRIDEN_ID,
       SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
       RPRATRM_OFFER_AMT,
       RPRATRM_ACCEPT_AMT,
       RPRATRM_CANCEL_AMT,
       RPRATRM_DECLINE_AMT,
       RPRATRM_MEMO_AMT,
       RPRATRM_AUTHORIZE_AMT,
       RPRATRM_PAID_AMT
  FROM ROBPRDS,                                                      -- 80900-1
       SPRIDEN,                                                      -- 80900-1
       RPRATRM
 WHERE RPRATRM_PERIOD = ROBPRDS_PERIOD                               -- 80900-1
   AND SPRIDEN_PIDM = RPRATRM_PIDM                                   -- 80900-1
   AND NVL(SPRIDEN_ENTITY_IND,'P') = 'P'
   AND SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","RPVFDRS","ADDRESS HIERARCHY VIEW for VAX/FOCUS","SELECT SPRADDR_PIDM,
       SPRADDR_ATYP_CODE,
       STVATYP_DESC,
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       STVSTAT_DESC,
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       STVCNTY_DESC,
       SPRADDR_NATN_CODE,
       STVNATN_NATION
  FROM STVATYP,
       STVNATN,
       STVSTAT,
       STVCNTY,
       SPRADDR X,
       SPRCOLR Y
 WHERE STVATYP_CODE (+) = SPRADDR_ATYP_CODE
   AND STVNATN_CODE (+) = SPRADDR_NATN_CODE
   AND STVSTAT_CODE (+) = SPRADDR_STAT_CODE
   AND STVCNTY_CODE (+) = SPRADDR_CNTY_CODE
   AND X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   SYSDATE BETWEEN X.SPRADDR_FROM_DATE
                     AND X.SPRADDR_TO_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
           AND   SYSDATE >= X.SPRADDR_FROM_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   SYSDATE <= X.SPRADDR_TO_DATE))
   AND   Y.SPRCOLR_SESSIONID =
        (SELECT USERENV('terminal')
         FROM   gubinst
         WHERE  EXISTS (SELECT 'X' FROM SPRCOLR A
                        WHERE  A.SPRCOLR_SESSIONID =
                               USERENV('terminal'))
         UNION
         SELECT '003'
         FROM   gubinst
         WHERE  NOT EXISTS (SELECT 'X' FROM SPRCOLR B
                            WHERE  B.SPRCOLR_SESSIONID =
                                   USERENV('terminal')))
   AND (Y.SPRCOLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
          (SELECT MIN(C.SPRCOLR_VALUE_ATYP),
		  SUBSTR(MIN(C.SPRCOLR_VALUE_ATYP),2,2)
       	     FROM SPRADDR,
	          SPRCOLR C
            WHERE C.SPRCOLR_SESSIONID = Y.SPRCOLR_SESSIONID
	      AND SPRADDR_PIDM = X.SPRADDR_PIDM
	      AND SPRADDR_ATYP_CODE = SUBSTR(C.SPRCOLR_VALUE_ATYP,2,2)
	      AND SPRADDR_STATUS_IND IS NULL
	      AND ((SPRADDR_TO_DATE IS NULL
	      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
	      AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   SYSDATE BETWEEN SPRADDR_FROM_DATE
                                AND SPRADDR_TO_DATE)
               OR  (SPRADDR_FROM_DATE IS NOT NULL
	      AND   SPRADDR_TO_DATE IS NULL
              AND   SYSDATE  >= SPRADDR_FROM_DATE)
               OR  (SPRADDR_FROM_DATE IS NULL
	      AND   SPRADDR_TO_DATE IS NOT NULL
              AND   SYSDATE <= SPRADDR_TO_DATE)))
 "
"BANINST1","RPVFAWD","Fund Award Inquiry View","SELECT
       RPRAWRD_AIDY_CODE,
       RPRAWRD_FUND_CODE,
       SPRIDEN_ID,
       SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
       RPRAWRD_OFFER_AMT,
       RPRAWRD_ACCEPT_AMT,
       RPRAWRD_CANCEL_AMT,
       RPRAWRD_DECLINE_AMT,
       RPRAWRD_MEMO_AMT,
       RPRAWRD_AUTHORIZE_AMT,
       RPRAWRD_PAID_AMT
  FROM SPRIDEN,
       RPRAWRD
 WHERE SPRIDEN_PIDM = RPRAWRD_PIDM
   AND NVL(SPRIDEN_ENTITY_IND,'P') = 'P'
   AND SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","RPVDATE_PRDS","Enrollment Options by Enrollment Period View","SELECT RPRDATE_AIDY_CODE,
                       RPRDATE_PERIOD,
                       ROBPRDS_SEQ_NO,
                       RPRDATE_CUT_OFF_DATE,
                       RPRDATE_ACTIVITY_DATE,
                       RPRDATE_PELL_AWRD_ENRL_OPT,
                       RPRDATE_PELL_DISB_ENRL_OPT,
                       RPRDATE_PELL_ISIR_TERM_IND,
                       RPRDATE_CUT_OFF_CHG_DATE,
                       RPRDATE_DISB_ACT_ENROLL_IND,
                       RPRDATE_USER_ID,
                       RPRDATE_DATA_ORIGIN,
                       RPRDATE_TERM_CODE
                  FROM ROBPRDS,
                       RPRDATE
                 WHERE RPRDATE_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RPVCRES","Applicant Contract Resource View For Letter Generation","SELECT RPVARCO_PIDM,
       RPVARCO_AIDY_CODE,
       TBBCONT_DESC
  FROM RPVARCO,
       RPBOPTS,
       TBBCONT
 WHERE RPBOPTS_INTERFACE_3PARTY_IND = 'Y'
   AND RPVARCO_AIDY_CODE = RPBOPTS_AIDY_CODE
   AND RPVARCO_CONTRACT_PIDM = TBBCONT_PIDM
   AND RPVARCO_RESOURCE_NUMBER = TBBCONT_CONTRACT_NUMBER
   AND RPVARCO_TERM_CODE = TBBCONT_TERM_CODE
 "
"BANINST1","RPVAWY2","SDA Work View.","select
 rprawrd_pidm,
 rprawrd_aidy_code,
 rprawrd_fund_code,
 rfrbase_fund_title,
 spriden_id,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 spbpers_name_prefix,
 spbpers_name_suffix,
 substr(f_get_ssn(rprawrd_pidm, rprawrd_aidy_code),1,9),
 spbpers_birth_date,
 f_calculate_age(null,spbpers_birth_date, spbpers_dead_date),
 spbpers_sex,
 spbpers_ethn_code,
 spbpers_citz_code,
 spbpers_mrtl_code,
 --8120002-1 soklibs.f_get_race(rprawrd_pidm),    --81200-1
 --8120002-1 spbpers_ethn_cde,                    --81200-1
 x.spraddr_atyp_code,
 x.spraddr_street_line1,
 x.spraddr_street_line2,
 x.spraddr_street_line3,
 x.spraddr_city,
 x.spraddr_stat_code,
 x.spraddr_zip,
 x.spraddr_cnty_code,
 x.spraddr_natn_code,
 decode(v.sprtele_unlist_ind,'Y', '***',v.sprtele_phone_area),
 decode(v.sprtele_unlist_ind,'Y', '*******',v.sprtele_phone_number),
 decode(v.sprtele_unlist_ind,'Y', '****',v.sprtele_tele_code),
 y.spraddr_atyp_code,
 y.spraddr_street_line1,
 y.spraddr_street_line2,
 y.spraddr_street_line3,
 y.spraddr_city,
 y.spraddr_stat_code,
 y.spraddr_zip,
 y.spraddr_cnty_code,
 y.spraddr_natn_code,
 decode(w.sprtele_unlist_ind,'Y', '***',w.sprtele_phone_area),
 decode(w.sprtele_unlist_ind,'Y', '*******',w.sprtele_phone_number),
 decode(w.sprtele_unlist_ind,'Y', '****',w.sprtele_tele_code),
 a.saradap_term_code_entry,
 a.saradap_appl_no,
 a.saradap_levl_code,
 a.saradap_appl_date,
 a.saradap_admt_code,
 a.saradap_styp_code,
 a.saradap_coll_code_1,
 a.saradap_degc_code_1,
 a.saradap_majr_code_1,
 a.saradap_resd_code,
 substr(f_adms_application_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'APPLCMPL')
       ,1,1),
 substr(f_adms_application_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'APPLINCM')
       ,1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'I','A'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'S','A'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'I','C'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'S','C'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'R','C'),1,1),
 substr(f_adms_applicant_withdrawn
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no),1,1),
 substr(f_concat_sarappd
       (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no),1,75),
 substr(f_student_check_for_more
       ('APDC',a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,
         null),1,1),
 b.sgbstdn_term_code_eff,
 b.sgbstdn_stst_code,
 b.sgbstdn_levl_code,
 b.sgbstdn_styp_code,
 b.sgbstdn_term_code_admit,
 b.sgbstdn_resd_code,
 b.sgbstdn_coll_code_1,
 b.sgbstdn_degc_code_1,
 b.sgbstdn_majr_code_1,
 substr(sgkclas.f_class_code
      (rprawrd_pidm,b.sgbstdn_levl_code,robinst_current_term_code),1,2),
 rprawrd_awst_code,
 rtvawst_desc,
 rtvawst_offer_ind,
 rtvawst_accept_ind,
 rtvawst_decline_ind,
 rtvawst_cancel_ind,
 rprawrd_awst_date,
 rprawrd_accept_amt,
 rprawrd_decline_amt,
 rprawrd_cancel_amt,
 rprawrd_offer_amt,
 rprawrd_authorize_amt,
 rprawrd_memo_amt,
 rprawrd_paid_amt,
 rfrbase_fsrc_code,
 rfrbase_ftyp_code,
 rfrbase_detail_code,
 rfrbase_fed_fund_id,
/* 60210-1 : replaced function calls with columns from new view */
/*
 f_find_fm_tfc(rprawrd_pidm, rprawrd_aidy_code),
 f_calc_fm_gross_need(rprawrd_pidm, rprawrd_aidy_code),
 f_calc_fm_unmet_need(rprawrd_pidm, rprawrd_aidy_code),
 f_calc_im_gross_need(rprawrd_pidm, rprawrd_aidy_code),
 f_calc_im_unmet_need(rprawrd_pidm, rprawrd_aidy_code),
 f_calc_im_tfc(rprawrd_pidm, rprawrd_aidy_code),
 f_calc_cost_of_ed(rprawrd_pidm, rprawrd_aidy_code),
 f_calc_total_offer(rprawrd_pidm, rprawrd_aidy_code),
 f_calc_resource(rprawrd_pidm, rprawrd_aidy_code)
*/
 rnvand0_efc_amt,
 rnvand0_gross_need,
 rnvand0_unmet_need,
 rnvand0_im_gross_need,
 rnvand0_im_unmet_need,
 rnvand0_im_efc_amt,
 rnvand0_budget_amount,
 f_calc_total_offer(rprawrd_pidm, rprawrd_aidy_code),
 rnvand0_resource_amount
/* 60210-1 end */
from rtvawst,
     rfrbase,
     robinst,
     spbpers,
     spriden,
     saradap a,
     sgbstdn b,
     spraddr x, spraddr y,
     sprtele v, sprtele w,
     rnvand0,  /* 60210-1 */
     rprawrd
where rprawrd_pidm = spriden_pidm
  and spriden_change_ind is null
  and rprawrd_pidm = spbpers_pidm(+)
--
  and a.rowid (+) = f_get_current_saradap_rowid(rprawrd_pidm, rprawrd_aidy_code)
  and a.saradap_pidm (+) = rprawrd_pidm -- 80300-1
--
  and b.rowid (+) = f_get_current_sgbstdn_rowid(rprawrd_pidm, rprawrd_aidy_code)
  and b.sgbstdn_pidm (+) = rprawrd_pidm -- 80300-1
--
  and x.rowid (+) = f_get_address_rowid(rprawrd_pidm,'FAWYADDR','A',sysdate,1,'R',null)
  and x.spraddr_pidm (+) = rprawrd_pidm -- 80300-1
--
  and y.rowid (+) = f_get_address_rowid(rprawrd_pidm,'FAWYADDR','A',sysdate,2,'R',null)
  and y.spraddr_pidm (+) = rprawrd_pidm -- 80300-1
--
  and v.rowid (+) = f_get_address_telephone_rowid(rprawrd_pidm,'FAWYADDR','A',sysdate,1,'R',null)
  and v.sprtele_pidm (+) = rprawrd_pidm -- 80300-1
--
  and w.rowid (+) = f_get_address_telephone_rowid(rprawrd_pidm,'FAWYADDR','A',sysdate,2,'R',null)
  and w.sprtele_pidm (+) = rprawrd_pidm -- 80300-1
--
and rprawrd_aidy_code = robinst_aidy_code
and rprawrd_pidm = rnvand0_pidm            /* 60210-1 */
and rprawrd_aidy_code = rnvand0_aidy_code  /* 60210-1 */
and rprawrd_fund_code = rfrbase_fund_code
and rprawrd_awst_code = rtvawst_code"
"BANINST1","RPVAWY1","SDA Work View.","select
 rpvawy2_pidm,
 rpvawy2_aidy_code,
 rpvawy2_fund_code,
 rpvawy2_fund_title,
 rpvawy2_id,
 rpvawy2_last_name,
 rpvawy2_first_name,
 rpvawy2_middle_name,
 rpvawy2_middle_intital,
 rpvawy2_name_prefix,
 rpvawy2_name_suffix,
 rpvawy2_ssn,
 rpvawy2_birth_date,
 rpvawy2_age,
 rpvawy2_sex,
 rpvawy2_ethn_code,
 rpvawy2_citz_code,
 rpvawy2_mrtl_code,
 --8120002-1 rpvawy2_race_data,          --81200-1
 --8120002-1 rpvawy2_ethn_cde,           --81200-1
 rpvawy2_atyp_code1,
 rpvawy2_street1_line1,
 rpvawy2_street1_line2,
 rpvawy2_street1_line3,
 rpvawy2_city1,
 rpvawy2_stat_code1,
 rpvawy2_zip1,
 rpvawy2_cnty_code1,
 rpvawy2_natn_code1,
 rpvawy2_phone_area1,
 rpvawy2_phone_number1,
 rpvawy2_tele_code1,
 rpvawy2_atyp_code2,
 rpvawy2_street2_line1,
 rpvawy2_street2_line2,
 rpvawy2_street2_line3,
 rpvawy2_city2,
 rpvawy2_stat_code2,
 rpvawy2_zip2,
 rpvawy2_cnty_code2,
 rpvawy2_natn_code2,
 rpvawy2_phone_area2,
 rpvawy2_phone_number2,
 rpvawy2_tele_code2,
 rpvawy2_ad_term_code_entry,
 rpvawy2_ad_appl_no,
 rpvawy2_ad_levl_code,
 rpvawy2_ad_appl_date,
 rpvawy2_ad_admt_code,
 rpvawy2_ad_styp_code,
 rpvawy2_ad_coll_code_1,
 rpvawy2_ad_degc_code_1,
 rpvawy2_ad_majr_code_1,
 rpvawy2_ad_resd_code,
 rpvawy2_ad_complete_ind,
 rpvawy2_ad_incomplete_ind,
 rpvawy2_ad_any_inst_accept_ind,
 rpvawy2_ad_any_stdn_accept_ind,
 rpvawy2_ad_cur_inst_accept_ind,
 rpvawy2_ad_cur_stdn_accept_ind,
 rpvawy2_ad_cur_rejected_ind,
 rpvawy2_ad_withdrawn_ind,
 substr(f_split_fields(rpvawy2_ad_decisions,1),1,2),
 to_date(f_split_fields(rpvawy2_ad_decisions,2),'DD-MON-YYYY'),
 substr(f_split_fields(rpvawy2_ad_decisions,3),1,2),
 to_date(f_split_fields(rpvawy2_ad_decisions,4),'DD-MON-YYYY'),
 substr(f_split_fields(rpvawy2_ad_decisions,5),1,2),
 to_date(f_split_fields(rpvawy2_ad_decisions,6),'DD-MON-YYYY'),
 substr(f_split_fields(rpvawy2_ad_decisions,7),1,2),
 to_date(f_split_fields(rpvawy2_ad_decisions,8),'DD-MON-YYYY'),
 substr(f_split_fields(rpvawy2_ad_decisions,9),1,2),
 to_date(f_split_fields(rpvawy2_ad_decisions,10),'DD-MON-YYYY'),
 rpvawy2_ad_add_decisions,
 rpvawy2_st_term_code_eff,
 rpvawy2_st_stst_code,
 rpvawy2_st_levl_code,
 rpvawy2_st_styp_code,
 rpvawy2_st_term_code_admit,
 rpvawy2_st_resd_code,
 rpvawy2_st_coll_code_1,
 rpvawy2_st_degc_code_1,
 rpvawy2_st_majr_code_1,
 rpvawy2_st_clas_code,
 rpvawy2_awst_code,
 rpvawy2_awst_desc,
 rpvawy2_offer_ind,
 rpvawy2_accept_ind,
 rpvawy2_decline_ind,
 rpvawy2_cancel_ind,
 rpvawy2_awst_date,
 rpvawy2_accept_amt,
 rpvawy2_decline_amt,
 rpvawy2_cancel_amt,
 rpvawy2_offer_amt,
 rpvawy2_authorize_amt,
 rpvawy2_memo_amt,
 rpvawy2_paid_amt,
 rpvawy2_fsrc_code,
 rpvawy2_ftyp_code,
 rpvawy2_detail_code,
 rpvawy2_fed_fund_id,
 rpvawy2_fm_tfc,
 rpvawy2_fm_gross_need,
 rpvawy2_fm_unmet_need,
 rpvawy2_im_gross_need,
 rpvawy2_im_unmet_need,
 rpvawy2_im_tfc,
 rpvawy2_cost_of_ed,
 rpvawy2_total_offer,
 rpvawy2_resource_amt
from rpvawy2"
"BANINST1","RPVAWT2","SDA Work View.","select
 rpratrm_pidm,
 rpratrm_aidy_code,
 rpratrm_period,                           -- 80900-1
 rpratrm_term_code,
 rpratrm_fund_code,
 substr(f_applied_admissions(rpratrm_pidm,rpratrm_term_code),1,1),
 substr(f_enrolled_this_term(rpratrm_pidm,rpratrm_term_code),1,1),
 substr(f_registered_this_term(rpratrm_pidm,rpratrm_term_code),1,1),
 spriden_id,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 spbpers_name_prefix,
 spbpers_name_suffix,
 substr(f_get_ssn(rpratrm_pidm, rpratrm_aidy_code),1,9),
 spbpers_birth_date,
 f_calculate_age(null,spbpers_birth_date, spbpers_dead_date),
 spbpers_sex,
 spbpers_ethn_code,
 spbpers_citz_code,
 spbpers_mrtl_code,
 --8120002-1 soklibs.f_get_race(rpratrm_pidm),           --81200-1
 --8120002-1 spbpers_ethn_cde,                           --81200-1
 x.spraddr_atyp_code,
 x.spraddr_street_line1,
 x.spraddr_street_line2,
 x.spraddr_street_line3,
 x.spraddr_city,
 x.spraddr_stat_code,
 x.spraddr_zip,
 x.spraddr_cnty_code,
 x.spraddr_natn_code,
 decode(v.sprtele_unlist_ind,'Y', '***',v.sprtele_phone_area),
 decode(v.sprtele_unlist_ind,'Y', '*******',v.sprtele_phone_number),
 decode(v.sprtele_unlist_ind,'Y', '****',v.sprtele_tele_code),
 y.spraddr_atyp_code,
 y.spraddr_street_line1,
 y.spraddr_street_line2,
 y.spraddr_street_line3,
 y.spraddr_city,
 y.spraddr_stat_code,
 y.spraddr_zip,
 y.spraddr_cnty_code,
 y.spraddr_natn_code,
 decode(w.sprtele_unlist_ind,'Y', '***',w.sprtele_phone_area),
 decode(w.sprtele_unlist_ind,'Y', '*******',w.sprtele_phone_number),
 decode(w.sprtele_unlist_ind,'Y', '****',w.sprtele_tele_code),
 a.saradap_term_code_entry,
 a.saradap_appl_no,
 a.saradap_levl_code,
 a.saradap_appl_date,
 a.saradap_admt_code,
 a.saradap_styp_code,
 a.saradap_coll_code_1,
 a.saradap_degc_code_1,
 a.saradap_majr_code_1,
 a.saradap_resd_code,
 substr(f_adms_application_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'APPLCMPL')
       ,1,1),
 substr(f_adms_application_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'APPLINCM')
       ,1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'I','A'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'S','A'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'I','C'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'S','C'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'R','C'),1,1),
 substr(f_adms_applicant_withdrawn
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no),1,1),
 substr(f_concat_sarappd
       (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no),1,75),
 substr(f_student_check_for_more
       ('APDC',a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,
         null),1,1),
 b.sgbstdn_term_code_eff,
 b.sgbstdn_stst_code,
 b.sgbstdn_levl_code,
 b.sgbstdn_styp_code,
 b.sgbstdn_term_code_admit,
 b.sgbstdn_resd_code,
 b.sgbstdn_coll_code_1,
 b.sgbstdn_degc_code_1,
 b.sgbstdn_majr_code_1,
 substr(sgkclas.f_class_code
      (rpratrm_pidm,b.sgbstdn_levl_code,rpratrm_term_code),1,2),
 rokmisc.f_calc_stud_credit_hrs
       (rpratrm_term_code, rpratrm_pidm),
 rokmisc.f_calc_stud_bill_hrs
       (rpratrm_term_code, rpratrm_pidm),
 rokmisc.f_calc_stud_adj_hrs
       (rpratrm_term_code, rpratrm_pidm),
-- 081402-1 -  rokmisc.f_calc_stud_credit_hrs
-- 081402-1 -        (rpratrm_term_code, rpratrm_pidm, 'Y'),    /* 81200-2 */
-- 081402-1 -  rokmisc.f_calc_stud_bill_hrs
-- 081402-1 -        (rpratrm_term_code, rpratrm_pidm, 'Y'),    /* 81200-2 */
-- 081402-1 -  rokmisc.f_calc_stud_adj_hrs
-- 081402-1 -        (rpratrm_term_code, rpratrm_pidm, 'Y'),    /* 81200-2 */
 rorenrl_finaid_credit_hr,
 rorenrl_finaid_bill_hr,
 rorenrl_finaid_adj_hr,
-- 081402-1 - rorenrl_fa_credit_hr_rep_chk,     /* 81200-2 */
-- 081402-1 - rorenrl_fa_bill_hr_rep_chk,       /* 81200-2 */
-- 081402-1 - rorenrl_fa_adj_hr_rep_chk,        /* 81200-2 */
 rpratrm_offer_amt,
 rpratrm_disb_final_ind,
 rpratrm_dist_pct,
 rpratrm_accept_amt,
 rpratrm_cancel_amt,
 rpratrm_authorize_amt,
 rpratrm_memo_amt,
 rpratrm_paid_amt,
 rpratrm_pckg_load_ind,
 substr(f_get_pckg_load_ind
       (rpratrm_pidm, rpratrm_aidy_code, rpratrm_term_code),1,1),
/* 60210-1 : replaced function calls with columns from new view */
/*
 f_find_fm_tfc(rpratrm_pidm, rpratrm_aidy_code),
 f_calc_fm_gross_need(rpratrm_pidm, rpratrm_aidy_code),
 f_calc_fm_unmet_need(rpratrm_pidm, rpratrm_aidy_code),
 f_calc_im_gross_need(rpratrm_pidm, rpratrm_aidy_code),
 f_calc_im_unmet_need(rpratrm_pidm, rpratrm_aidy_code),
 f_calc_im_tfc(rpratrm_pidm, rpratrm_aidy_code),
 f_calc_cost_of_ed(rpratrm_pidm, rpratrm_aidy_code),
 f_calc_total_offer(rpratrm_pidm, rpratrm_aidy_code),
 f_calc_resource(rpratrm_pidm, rpratrm_aidy_code)
*/
 rnvand0_efc_amt,
 rnvand0_gross_need,
 rnvand0_unmet_need,
 rnvand0_im_gross_need,
 rnvand0_im_unmet_need,
 rnvand0_im_efc_amt,
 rnvand0_budget_amount,
 f_calc_total_offer(rpratrm_pidm, rpratrm_aidy_code),
 rnvand0_resource_amount
/* 60210-1 end */
from rorenrl,
     spriden,
     spbpers,
     spraddr x, spraddr y,
     sprtele v, sprtele w,
     saradap a,
     sgbstdn b,
     rnvand0,  /* 60210-1 */
     rpratrm
where rorenrl_enrr_code(+) = 'STANDARD'  -- 8150001-1 add outer join
  AND rorenrl_pidm (+) = rpratrm_pidm
  and rorenrl_term_code (+) = rpratrm_term_code
  and spriden_pidm = rpratrm_pidm
  and spriden_change_ind is null
  and spbpers_pidm(+) = rpratrm_pidm
  and rpratrm_pidm = rnvand0_pidm            /* 60210-1 */
  and rpratrm_aidy_code = rnvand0_aidy_code  /* 60210-1 */
--
  and b.rowid (+) = f_get_sgbstdn_rowid(rpratrm_pidm, rpratrm_term_code)
  and b.sgbstdn_pidm (+) = rpratrm_pidm -- 80300-1
--
  and a.rowid (+) = f_get_current_saradap_rowid(rpratrm_pidm, rpratrm_aidy_code)
  and a.saradap_pidm (+) = rpratrm_pidm -- 80300-1
--
  and x.rowid (+) = f_get_address_rowid(rpratrm_pidm,'FAWTADDR','A',sysdate,1,'R',null)
  and x.spraddr_pidm (+) = rpratrm_pidm -- 80300-1
--
  and y.rowid (+) = f_get_address_rowid(rpratrm_pidm,'FAWTADDR','A',sysdate,2,'R',null)
  and y.spraddr_pidm (+) = rpratrm_pidm -- 80300-1
--
  and v.rowid (+) = f_get_address_telephone_rowid(rpratrm_pidm,'FAWTADDR','A',sysdate,1,'R',null)
  and v.sprtele_pidm (+) = rpratrm_pidm -- 80300-1
--
  and w.rowid (+) = f_get_address_telephone_rowid(rpratrm_pidm,'FAWTADDR','A',sysdate,2,'R',null)
  and w.sprtele_pidm (+) = rpratrm_pidm -- 80300-1"
"BANINST1","RPVAWT1","SDA Work View.","select
 rpvawt2_pidm,
 rpvawt2_aidy_code,
 rpvawt2_period,                 -- 80900-1
 rpvawt2_term_code,
 rpvawt2_fund_code,
 rpvawt2_applied_for_adm_ind,
 rpvawt2_enrolled_ind,
 rpvawt2_registered_ind,
 rpvawt2_id,
 rpvawt2_last_name,
 rpvawt2_first_name,
 rpvawt2_middle_name,
 rpvawt2_middle_intital,
 rpvawt2_name_prefix,
 rpvawt2_name_suffix,
 rpvawt2_ssn,
 rpvawt2_birth_date,
 rpvawt2_age,
 rpvawt2_sex,
 rpvawt2_ethn_code,
 rpvawt2_citz_code,
 rpvawt2_mrtl_code,
 --8120002-1 rpvawt2_race_data,                          --81200-1
 --8120002-1 rpvawt2_ethn_cde,                           --81200-1
 rpvawt2_atyp_code1,
 rpvawt2_street1_line1,
 rpvawt2_street1_line2,
 rpvawt2_street1_line3,
 rpvawt2_city1,
 rpvawt2_stat_code1,
 rpvawt2_zip1,
 rpvawt2_cnty_code1,
 rpvawt2_natn_code1,
 rpvawt2_phone_area1,
 rpvawt2_phone_number1,
 rpvawt2_tele_code1,
 rpvawt2_atyp_code2,
 rpvawt2_street2_line1,
 rpvawt2_street2_line2,
 rpvawt2_street2_line3,
 rpvawt2_city2,
 rpvawt2_stat_code2,
 rpvawt2_zip2,
 rpvawt2_cnty_code2,
 rpvawt2_natn_code2,
 rpvawt2_phone_area2,
 rpvawt2_phone_number2,
 rpvawt2_tele_code2,
 rpvawt2_ad_term_code_entry,
 rpvawt2_ad_appl_no,
 rpvawt2_ad_levl_code,
 rpvawt2_ad_appl_date,
 rpvawt2_ad_admt_code,
 rpvawt2_ad_styp_code,
 rpvawt2_ad_coll_code_1,
 rpvawt2_ad_degc_code_1,
 rpvawt2_ad_majr_code_1,
 rpvawt2_ad_resd_code,
 rpvawt2_ad_complete_ind,
 rpvawt2_ad_incomplete_ind,
 rpvawt2_ad_any_inst_accept_ind,
 rpvawt2_ad_any_stdn_accept_ind,
 rpvawt2_ad_cur_inst_accept_ind,
 rpvawt2_ad_cur_stdn_accept_ind,
 rpvawt2_ad_cur_rejected_ind,
 rpvawt2_ad_withdrawn_ind,
 substr(f_split_fields(rpvawt2_ad_decisions,1),1,2),
 to_date(f_split_fields(rpvawt2_ad_decisions,2),'DD-MON-YYYY'),
 substr(f_split_fields(rpvawt2_ad_decisions,3),1,2),
 to_date(f_split_fields(rpvawt2_ad_decisions,4),'DD-MON-YYYY'),
 substr(f_split_fields(rpvawt2_ad_decisions,5),1,2),
 to_date(f_split_fields(rpvawt2_ad_decisions,6),'DD-MON-YYYY'),
 substr(f_split_fields(rpvawt2_ad_decisions,7),1,2),
 to_date(f_split_fields(rpvawt2_ad_decisions,8),'DD-MON-YYYY'),
 substr(f_split_fields(rpvawt2_ad_decisions,9),1,2),
 to_date(f_split_fields(rpvawt2_ad_decisions,10),'DD-MON-YYYY'),
 rpvawt2_ad_add_decisions,
 rpvawt2_st_term_code_eff,
 rpvawt2_st_stst_code,
 rpvawt2_st_levl_code,
 rpvawt2_st_styp_code,
 rpvawt2_st_term_code_admit,
 rpvawt2_st_resd_code,
 rpvawt2_st_coll_code_1,
 rpvawt2_st_degc_code_1,
 rpvawt2_st_majr_code_1,
 rpvawt2_st_clas_code,
 rpvawt2_st_tot_crhrs,
 rpvawt2_st_tot_bill_hrs,
 rpvawt2_st_adj_crhrs,
-- 081402-1 -  rpvawt2_st_tot_crhrs_rep,           /* 81200-2 */
-- 081402-1 -  rpvawt2_st_tot_bill_hrs_rep,        /* 81200-2 */
-- 081402-1 -  rpvawt2_st_adj_crhrs_rep,           /* 81200-2 */
 rpvawt2_finaid_credit_hr,
 rpvawt2_finaid_bill_hr,
 rpvawt2_finaid_adj_hr,
-- 081402-1 - rpvawt2_finaid_cr_hr_rep_chk,       /* 81200-2 */
-- 081402-1 - rpvawt2_finaid_bill_hr_rep_chk,     /* 81200-2 */
-- 081402-1 - rpvawt2_finaid_adj_hr_rep_chk,      /* 81200-2 */
 rpvawt2_offer_amt,
 rpvawt2_disb_final_ind,
 rpvawt2_dist_pct,
 rpvawt2_accept_amt,
 rpvawt2_cancel_amt,
 rpvawt2_authorize_amt,
 rpvawt2_memo_amt,
 rpvawt2_paid_amt,
 rpvawt2_pckg_load_ind,
 rpvawt2_disburse_load_match,
 rpvawt2_fm_tfc,
 rpvawt2_fm_gross_need,
 rpvawt2_fm_unmet_need,
 rpvawt2_im_gross_need,
 rpvawt2_im_unmet_need,
 rpvawt2_im_tfc,
 rpvawt2_cost_of_ed,
 rpvawt2_total_offer,
 rpvawt2_resource_amt
from rpvawt2"
"BANINST1","RPVATRM_PRDS","Applicant Award Schedule Period View","SELECT RPRATRM_AIDY_CODE,
                       RPRATRM_PIDM,
                       RPRATRM_FUND_CODE,
                       RPRATRM_PERIOD,
                       ROBPRDS_SEQ_NO,
                       RPRATRM_OFFER_AMT,
                       RPRATRM_OFFER_DATE,
                       RPRATRM_ACTIVITY_DATE,
                       RPRATRM_DISB_FINAL_IND,
                       RPRATRM_DIST_PCT,
                       RPRATRM_MEMO_EXP_DATE,
                       RPRATRM_ORIG_OFFER_AMT,
                       RPRATRM_ORIG_OFFER_DATE,
                       RPRATRM_ACCEPT_AMT,
                       RPRATRM_ACCEPT_DATE,
                       RPRATRM_DECLINE_AMT,
                       RPRATRM_DECLINE_DATE,
                       RPRATRM_CANCEL_AMT,
                       RPRATRM_CANCEL_DATE,
                       RPRATRM_AUTHORIZE_AMT,
                       RPRATRM_AUTHORIZE_DATE,
                       RPRATRM_MEMO_AMT,
                       RPRATRM_MEMO_DATE,
                       RPRATRM_PAID_AMT,
                       RPRATRM_PAID_DATE,
                       RPRATRM_PCKG_LOAD_IND,
                       RPRATRM_NSLDS_OVRD_IND,
                       RPRATRM_PELL_AWRD_LOAD_OPT,
                       RPRATRM_LOCK_IND,
                       RPRATRM_USER_ID,
                       RPRATRM_CIP_OVERRIDE_CODE,
                       RPRATRM_DATA_ORIGIN,
                       RPRATRM_OVERRIDE_DISB_RULE,
                       RPRATRM_MAJR_OVERRIDE_CODE,
                       RPRATRM_TERM_CODE,
                       RPRATRM_AWST_CODE,      /* 081801-1 */
                       RPRATRM_AWST_DATE,      /* 081801-1 */
                       RPRATRM_OFFER_EXP_DATE  /* 081801-1 */
                  FROM ROBPRDS,
                       RPRATRM
                 WHERE RPRATRM_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RPVATRM","Applicant Award By Period View","SELECT RPVTERM_AIDY_CODE,
       RPVTERM_PIDM,
       RPVTERM_FUND_CODE,
       RPVTERM_PERIOD,                                               -- 80900-1
       NVL(X.RPRATRM_OFFER_AMT,0)
  FROM RPRATRM X,
       RPVTERM,
       RORVIEW
 WHERE X.RPRATRM_PIDM      = RPVTERM_PIDM
   AND X.RPRATRM_FUND_CODE = RPVTERM_FUND_CODE
   AND X.RPRATRM_PERIOD    = RPVTERM_PERIOD                          -- 80900-1
   AND (X.RPRATRM_OFFER_AMT > 0
    OR  (X.RPRATRM_OFFER_AMT = 0
   AND   ((X.RPRATRM_FUND_CODE IN
           (SELECT Z.RPRATRM_FUND_CODE
              FROM RPRATRM Z
             WHERE Z.RPRATRM_AIDY_CODE = X.RPRATRM_AIDY_CODE
               AND Z.RPRATRM_PIDM      = X.RPRATRM_PIDM
               AND Z.RPRATRM_FUND_CODE = X.RPRATRM_FUND_CODE
               AND Z.RPRATRM_OFFER_AMT > 0)))
   AND    (NOT EXISTS
               (SELECT 'Y'
                  FROM RPRATRM A
                 WHERE A.RPRATRM_PIDM       = X.RPRATRM_PIDM
                   AND A.RPRATRM_FUND_CODE  = X.RPRATRM_FUND_CODE
                   AND A.RPRATRM_PERIOD     = X.RPRATRM_PERIOD        -- 80900-1
                   AND A.RPRATRM_AIDY_CODE <> X.RPRATRM_AIDY_CODE
                   AND A.RPRATRM_OFFER_AMT  > 0))))
   AND X.RPRATRM_PIDM      = RORVIEW_PIDM
   AND RORVIEW_TYPE_IND    = 'R'
   AND RORVIEW_SESSION_ID  = SYS_CONTEXT('USERENV', 'SESSIONID')      -- 81000-2
UNION
SELECT RPVTERM_AIDY_CODE,
       RPVTERM_PIDM,
       RPVTERM_FUND_CODE,
       RPVTERM_PERIOD,                                               -- 80900-1
       0
  FROM RPVTERM,
       RORVIEW Y
 WHERE (RPVTERM_PIDM,
        RPVTERM_FUND_CODE,
        RPVTERM_PERIOD)                                              -- 80900-1
        NOT IN
          (SELECT RPRATRM_PIDM,
                  RPRATRM_FUND_CODE,
                  RPRATRM_PERIOD                                     -- 80900-1
             FROM RPRATRM
            WHERE RPRATRM_PIDM      = Y.RORVIEW_PIDM
              AND RPRATRM_OFFER_AMT <> 0)                            -- 81100-1
   AND RPVTERM_AIDY_CODE    = Y.RORVIEW_AIDY_CODE
   AND RPVTERM_PIDM         = Y.RORVIEW_PIDM
   AND Y.RORVIEW_TYPE_IND   = 'R'
   AND Y.RORVIEW_SESSION_ID = SYS_CONTEXT('USERENV', 'SESSIONID')    -- 81000-2"
"BANINST1","RPVARSC","Applicant Resource View","SELECT RPVAREX_AIDY_CODE,
       RPVAREX_PIDM,
       RPVAREX_TYPE_CODE,
       RPVAREX_CONTRACT_PIDM,
       RPVAREX_RESOURCE_NUMBER,
       RPVAREX_TERM_CODE,
       RPVAREX_ESTIMATED_AMT,
       RPVAREX_ACTUAL_AMT,
       RPVAREX_ACTIVITY_DATE
  FROM RPVAREX
UNION
SELECT RPVARCO_AIDY_CODE,
       RPVARCO_PIDM,
       RPVARCO_TYPE_CODE,
       RPVARCO_CONTRACT_PIDM,
       RPVARCO_RESOURCE_NUMBER,
       RPVARCO_TERM_CODE,
       RPVARCO_ESTIMATED_AMT,
       RPVARCO_ACTUAL_AMT,
       RPVARCO_ACTIVITY_DATE
  FROM RPVARCO
 "
"BANINST1","RPVARPY","Applicant Resource Payment View","SELECT STVTERM_FA_PROC_YR,
       TBBESTU_PIDM,
       TBRACCD_SRCE_CODE,
       0,
       TBBESTU_EXEMPTION_CODE,
       TBBESTU_TERM_CODE,
       TBBESTU_DEL_IND,
       TBRACCD_DETAIL_CODE,
       TBRACCD_AMOUNT,
       TBRACCD_EFFECTIVE_DATE -- 80100-1
  FROM TBRACCD,
       STVTERM,
       TBBESTU X
 WHERE TBRACCD_SRCE_CODE   = 'E'
   AND TBRACCD_DETAIL_CODE =
      (SELECT TBBEXPT_DETAIL_CODE
         FROM TBBEXPT
        WHERE X.TBBESTU_EXEMPTION_CODE = TBBEXPT_EXEMPTION_CODE
          AND X.TBBESTU_TERM_CODE      = TBBEXPT_TERM_CODE)
   AND TBRACCD_TERM_CODE   = TBBESTU_TERM_CODE
   AND TBRACCD_PIDM        = TBBESTU_PIDM
   AND STVTERM_CODE        = TBBESTU_TERM_CODE
UNION ALL -- 70800-1
SELECT STVTERM_FA_PROC_YR,
       TBBCSTU_STU_PIDM,
       TBRACCD_SRCE_CODE,
       TBBCSTU_CONTRACT_PIDM,
       LPAD(SUBSTR(TO_CHAR(TBBCSTU_CONTRACT_NUMBER),1,8),8,'0'),
       TBBCSTU_TERM_CODE,
       TBBCSTU_DEL_IND,
       TBRACCD_DETAIL_CODE,
       TBRACCD_AMOUNT,
       TBRACCD_EFFECTIVE_DATE -- 80100-1
  FROM TBRACCD,
       STVTERM,
       TBBCSTU Y
 WHERE TBRACCD_SRCE_CODE   = 'C'
   AND TBRACCD_DETAIL_CODE =
      (SELECT TBBCONT_DETAIL_PAY_CODE
         FROM TBBCONT
        WHERE Y.TBBCSTU_CONTRACT_PIDM   = TBBCONT_PIDM
          AND Y.TBBCSTU_CONTRACT_NUMBER = TBBCONT_CONTRACT_NUMBER
          AND Y.TBBCSTU_TERM_CODE       = TBBCONT_TERM_CODE)
   AND TBRACCD_CROSSREF_NUMBER = TBBCSTU_CONTRACT_NUMBER
   AND TBRACCD_CROSSREF_PIDM   = TBBCSTU_CONTRACT_PIDM
   AND TBRACCD_TERM_CODE       = TBBCSTU_TERM_CODE
   AND TBRACCD_PIDM            = TBBCSTU_STU_PIDM
   AND STVTERM_CODE            = TBBCSTU_TERM_CODE"
"BANINST1","RPVAREX","Applicant Exemption Resource View","SELECT STVTERM_FA_PROC_YR,
       TBBESTU_PIDM,
       'E',
       0,
       TBBESTU_EXEMPTION_CODE,
       TBBESTU_TERM_CODE,
       NVL(NVL(TBBESTU_MAX_STUDENT_AMOUNT, RPREXPT_ESTIMATED_AMT), 0),   -- 70800-1
       ROVESUM_AMOUNT,
       SYSDATE
  FROM ROVESUM,
       RPREXPT,
       STVTERM,
       TBBESTU,
       RORVIEW
 WHERE TBBESTU_PIDM           = ROVESUM_PIDM (+)
   AND TBBESTU_EXEMPTION_CODE = ROVESUM_EXEMPTION_CODE (+)
   AND TBBESTU_TERM_CODE      = ROVESUM_TERM_CODE (+)
   AND TBBESTU_EXEMPTION_CODE = RPREXPT_EXEMPTION_CODE (+)
   AND TBBESTU_TERM_CODE      = RPREXPT_TERM_CODE (+)
   AND STVTERM_CODE           = TBBESTU_TERM_CODE
   AND NVL(TBBESTU_DEL_IND,'X') <> 'D'
   AND NVL(RPREXPT_EXCLUDE_RESOURCE, 'N') = 'N'                          -- 70800-1
   AND TBBESTU_PIDM           = RORVIEW_PIDM
   AND RORVIEW_TYPE_IND       = 'R'
   AND RORVIEW_SESSION_ID     = TO_CHAR(USERENV('SESSIONID'))"
"BANINST1","RPVARCO","Applicant Resource View","SELECT STVTERM_FA_PROC_YR,
       TBBCSTU_STU_PIDM,
       'C',
       TBBCSTU_CONTRACT_PIDM,
       LPAD(SUBSTR(TO_CHAR(TBBCSTU_CONTRACT_NUMBER),1,8),8,'0'),
       TBBCSTU_TERM_CODE,
       NVL(NVL(TBBCSTU_MAX_STUDENT_AMOUNT, RPRCONT_ESTIMATED_AMT), 0),   -- 70800-1
       ROVCSUM_AMOUNT,
       SYSDATE
  FROM ROVCSUM,
       RPRCONT,
       STVTERM,
       TBBCSTU,
       RORVIEW
 WHERE TBBCSTU_STU_PIDM        = ROVCSUM_PIDM (+)
   AND TBBCSTU_CONTRACT_PIDM   = ROVCSUM_CONTRACT_PIDM (+)
   AND TBBCSTU_CONTRACT_NUMBER = ROVCSUM_CONTRACT_NUMBER (+)
   AND TBBCSTU_TERM_CODE       = ROVCSUM_TERM_CODE (+)
   AND TBBCSTU_CONTRACT_PIDM   = RPRCONT_CONTRACT_PIDM (+)
   AND TBBCSTU_CONTRACT_NUMBER = RPRCONT_CONTRACT_NO (+)
   AND TBBCSTU_TERM_CODE       = RPRCONT_TERM_CODE (+)
   AND STVTERM_CODE            = TBBCSTU_TERM_CODE
   AND NVL(TBBCSTU_DEL_IND,'X') <> 'D'
   AND NVL(RPRCONT_EXCLUDE_RESOURCE, 'N') = 'N'                          -- 70800-1
   AND TBBCSTU_STU_PIDM        = RORVIEW_PIDM
   AND RORVIEW_TYPE_IND        = 'R'
   AND RORVIEW_SESSION_ID      = TO_CHAR(USERENV('SESSIONID'))"
"BANINST1","RPVADSB_PRDS","Applicant Award Disbursement Period View","SELECT RPRADSB_AIDY_CODE                              RPVADSB_AIDY_CODE,
       RPRADSB_PIDM                                   RPVADSB_PIDM,
       RPRADSB_SCHEDULE_DATE                          RPVADSB_SCHEDULE_DATE,
       RPRADSB_FUND_CODE                              RPVADSB_FUND_CODE,
       RPRADSB_PERIOD                                 RPVADSB_PERIOD,
       ROBPRDS_SEQ_NO                                 RPVADSB_PRDS_SEQ_NO,
       RPRADSB_ACTIVITY_DATE                          RPVADSB_ACTIVITY_DATE,
       RPRADSB_SCHEDULE_AMT                           RPVADSB_SCHEDULE_AMT,
       RPRADSB_DISBURSE_DATE                          RPVADSB_DISBURSE_DATE,
       RPRADSB_DISBURSE_AMT                           RPVADSB_DISBURSE_AMT,
       RPRADSB_TRAN_NUMBER                            RPVADSB_TRAN_NUMBER,
       RPRADSB_DISBURSE_PCT                           RPVADSB_DISBURSE_PCT,
       RPRADSB_DISBURSE_LOAD                          RPVADSB_DISBURSE_LOAD,
       RPRADSB_DISBURSE_LOAD_OPT                      RPVADSB_DISBURSE_LOAD_OPT,
       RPRADSB_LMS_FEED_IND                           RPVADSB_LMS_FEED_IND,
       RPRADSB_PELL_CALC_DISB_AMT                     RPVADSB_PELL_CALC_DISB_AMT,
       RPRADSB_PELLC_DISB_LOAD                        RPVADSB_PELLC_DISB_LOAD,
       RPRADSB_PELLC_DISB_LOAD_OPT                    RPVADSB_PELLC_DISB_LOAD_OPT,
       RPRADSB_DISB_BATCH_NO                          RPVADSB_DISB_BATCH_NO,
       RPRADSB_DISB_REF_NO                            RPVADSB_DISB_REF_NO,
       RPRADSB_DEBIT_CR_IND                           RPVADSB_DEBIT_CR_IND,
       RPRADSB_DISB_AMT                               RPVADSB_DISB_AMT,
       RPRADSB_DISB_ACTION_CODE                       RPVADSB_DISB_ACTION_CODE,
       RPRADSB_DISB_ACK_REF_NO                        RPVADSB_DISB_ACK_REF_NO,
       RPRADSB_DISB_ACPT_DEBIT_CR_IND                 RPVADSB_DISB_ACPT_DEBIT_CR_IND,
       RPRADSB_DISB_ACPT_AMT                          RPVADSB_DISB_ACPT_AMT,
       RPRADSB_DISB_ACPT_DATE                         RPVADSB_DISB_ACPT_DATE,
       RPRADSB_YTD_AMT_PAID                           RPVADSB_YTD_AMT_PAID,
       RPRADSB_EDIT_REJ_01                            RPVADSB_EDIT_REJ_01,
       RPRADSB_EDIT_REJ_02                            RPVADSB_EDIT_REJ_02,
       RPRADSB_EDIT_REJ_03                            RPVADSB_EDIT_REJ_03,
       RPRADSB_EDIT_REJ_04                            RPVADSB_EDIT_REJ_04,
       RPRADSB_EDIT_REJ_05                            RPVADSB_EDIT_REJ_05,
       RPRADSB_EDIT_REJ_06                            RPVADSB_EDIT_REJ_06,
       RPRADSB_EDIT_REJ_07                            RPVADSB_EDIT_REJ_07,
       RPRADSB_EDIT_REJ_08                            RPVADSB_EDIT_REJ_08,
       RPRADSB_EDIT_REJ_09                            RPVADSB_EDIT_REJ_09,
       RPRADSB_EDIT_REJ_10                            RPVADSB_EDIT_REJ_10,
       RPRADSB_EDIT_REJ_11                            RPVADSB_EDIT_REJ_11,
       RPRADSB_EDIT_REJ_12                            RPVADSB_EDIT_REJ_12,
       RPRADSB_EDIT_REJ_13                            RPVADSB_EDIT_REJ_13,
       RPRADSB_EDIT_REJ_14                            RPVADSB_EDIT_REJ_14,
       RPRADSB_EDIT_REJ_15                            RPVADSB_EDIT_REJ_15,
       RPRADSB_EDIT_REJ_16                            RPVADSB_EDIT_REJ_16,
       RPRADSB_EDIT_REJ_17                            RPVADSB_EDIT_REJ_17,
       RPRADSB_EDIT_REJ_18                            RPVADSB_EDIT_REJ_18,
       RPRADSB_EDIT_REJ_19                            RPVADSB_EDIT_REJ_19,
       RPRADSB_EDIT_REJ_20                            RPVADSB_EDIT_REJ_20,
       RPRADSB_EDIT_REJ_21                            RPVADSB_EDIT_REJ_21,
       RPRADSB_EDIT_REJ_22                            RPVADSB_EDIT_REJ_22,
       RPRADSB_EDIT_REJ_23                            RPVADSB_EDIT_REJ_23,
       RPRADSB_EDIT_REJ_24                            RPVADSB_EDIT_REJ_24,
       RPRADSB_EDIT_REJ_25                            RPVADSB_EDIT_REJ_25,
       RPRADSB_SHARED_SAR_ID_FLAG                     RPVADSB_SHARED_SAR_ID_FLAG,
       RPRADSB_VERIF_W_STATUS_FLAG                    RPVADSB_VERIF_W_STATUS_FLAG,
       RPRADSB_CONCUR_ENROLL_FLAG                     RPVADSB_CONCUR_ENROLL_FLAG,
       RPRADSB_POTENTIAL_OVERPMT_FLAG                 RPVADSB_POTENTIAL_OVERPMT_FLAG,
       RPRADSB_ORIG_ID                                RPVADSB_ORIG_ID,
       RPRADSB_INST_XREF                              RPVADSB_INST_XREF,
       RPRADSB_DISB_DATE_SENT                         RPVADSB_DISB_DATE_SENT,
       RPRADSB_DISB_DATE                              RPVADSB_DISB_DATE,
       RPRADSB_PAY_PD_START_DATE                      RPVADSB_PAY_PD_START_DATE,
       RPRADSB_ACPT_PAY_PD_START_DATE                 RPVADSB_ACPT_PAY_PD_START_DATE,
       RPRADSB_DISB_LOCK_IND                          RPVADSB_DISB_LOCK_IND,
       RPRADSB_PAY_PD_RPT_REG                         RPVADSB_PAY_PD_RPT_REG,
       RPRADSB_ACPT_PAY_PD_RPT_REG                    RPVADSB_ACPT_PAY_PD_RPT_REG,
       RPRADSB_ALTERNATE_PELL_IND                     RPVADSB_ALTERNATE_PELL_IND,
       RPRADSB_USER_ID                                RPVADSB_USER_ID,
       RPRADSB_DISB_SEQ_NO                            RPVADSB_DISB_SEQ_NO,
       RPRADSB_ACPT_DISB_SEQ_NO                       RPVADSB_ACPT_DISB_SEQ_NO,
       RPRADSB_DOCUMENT_ID                            RPVADSB_DOCUMENT_ID,
       RPRADSB_DISB_NET_AMT                           RPVADSB_DISB_NET_AMT,
       RPRADSB_ACPT_PREV_DISB_SEQ_NO                  RPVADSB_ACPT_PREV_DISB_SEQ_NO,
       RPRADSB_DISB_SCHED_NO_DAYS                     RPVADSB_DISB_SCHED_NO_DAYS,
       RPRADSB_SYS_IND                                RPVADSB_SYS_IND,
       RPRADSB_DATA_ORIGIN                            RPVADSB_DATA_ORIGIN,
       RPRADSB_CPS_VER_IND                            RPVADSB_CPS_VER_IND,
       RPRADSB_HIGHEST_CPS_TRAN_NO                    RPVADSB_HIGHEST_CPS_TRAN_NO,
       RPRADSB_EXCL_FROM_NET_AMT                      RPVADSB_EXCL_FROM_NET_AMT,
       RPRADSB_EDIT_FIELD_1                           RPVADSB_EDIT_FIELD_1,
       RPRADSB_EDIT_VALUE_1                           RPVADSB_EDIT_VALUE_1,
       RPRADSB_EDIT_FIELD_2                           RPVADSB_EDIT_FIELD_2,
       RPRADSB_EDIT_VALUE_2                           RPVADSB_EDIT_VALUE_2,
       RPRADSB_EDIT_FIELD_3                           RPVADSB_EDIT_FIELD_3,
       RPRADSB_EDIT_VALUE_3                           RPVADSB_EDIT_VALUE_3,
       RPRADSB_EDIT_FIELD_4                           RPVADSB_EDIT_FIELD_4,
       RPRADSB_EDIT_VALUE_4                           RPVADSB_EDIT_VALUE_4,
       RPRADSB_EDIT_FIELD_5                           RPVADSB_EDIT_FIELD_5,
       RPRADSB_EDIT_VALUE_5                           RPVADSB_EDIT_VALUE_5,
       RPRADSB_CIP_CODE                               RPVADSB_CIP_CODE,
       RPRADSB_PERCENT_ELIG_USED                      RPVADSB_PERCENT_ELIG_USED,
       RPRADSB_PELL_LEU                               RPVADSB_PELL_LEU,
       RPRADSB_TERM_CODE                              RPVADSB_TERM_CODE,
       RPRADSB_ENROLLMENT_SCHOOL_CDE                  RPVADSB_ENROLLMENT_SCHOOL_CDE    --081400-1
FROM   ROBPRDS, RPRADSB
WHERE  RPRADSB_PERIOD = ROBPRDS_PERIOD "
"BANINST1","RPVADRS","FINANCIAL AID ADDRESS HIERARCHY VIEW","SELECT SPRADDR_PIDM,
       SPRADDR_ATYP_CODE,
       STVATYP_DESC,
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       STVSTAT_DESC,
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       STVCNTY_DESC,
       SPRADDR_NATN_CODE,
       STVNATN_NATION
  FROM SPRADDR X,
       STVNATN,
       STVSTAT,
       STVCNTY,
       STVATYP,
       GURFCLR Y
 WHERE STVATYP_CODE (+) = SPRADDR_ATYP_CODE
   AND STVNATN_CODE (+) = SPRADDR_NATN_CODE
   AND STVSTAT_CODE (+) = SPRADDR_STAT_CODE
   AND STVCNTY_CODE (+) = SPRADDR_CNTY_CODE
   AND X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   SYSDATE BETWEEN X.SPRADDR_FROM_DATE
                     AND X.SPRADDR_TO_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   SYSDATE >= X.SPRADDR_FROM_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   SYSDATE <= X.SPRADDR_TO_DATE))
   AND   Y.GURFCLR_SESSION  =
        (SELECT TO_CHAR(USERENV('SESSIONID'))
         FROM   GUBINST
         WHERE  GUBINST_KEY = 'INST'
         AND    GUBINST_OPERATING_SYSTEM_IND <> 'VMS'
         AND    EXISTS (SELECT 'X'
                        FROM   GURFCLR A
                        WHERE  A.GURFCLR_SESSION =
                               TO_CHAR(USERENV('SESSIONID')))
         UNION
         SELECT '003'
         FROM   GUBINST
         WHERE  GUBINST_KEY = 'INST'
         AND    GUBINST_OPERATING_SYSTEM_IND <> 'VMS'
         AND    NOT EXISTS (SELECT 'X'
                            FROM   GURFCLR B
                            WHERE  B.GURFCLR_SESSION =
                                   TO_CHAR(USERENV('SESSIONID')))
         UNION
         SELECT USERENV('TERMINAL')
         FROM   GUBINST
         WHERE  GUBINST_KEY = 'INST'
         AND    GUBINST_OPERATING_SYSTEM_IND = 'VMS'
         AND    EXISTS (SELECT 'X'
                        FROM   GURFCLR A
                        WHERE  A.GURFCLR_SESSION =
                               USERENV('TERMINAL'))
         UNION
         SELECT '003'
         FROM   GUBINST
         WHERE  GUBINST_KEY = 'INST'
         AND    GUBINST_OPERATING_SYSTEM_IND = 'VMS'
         AND    NOT EXISTS (SELECT 'X'
                            FROM   GURFCLR B
                            WHERE  B.GURFCLR_SESSION =
                                   USERENV('TERMINAL')))
   AND (Y.GURFCLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
          (SELECT MIN(C.GURFCLR_VALUE_ATYP),
		  SUBSTR(MIN(C.GURFCLR_VALUE_ATYP),2,2)
       	     FROM SPRADDR,
	          GURFCLR C
            WHERE C.GURFCLR_SESSION = Y.GURFCLR_SESSION
	      AND SPRADDR_PIDM = X.SPRADDR_PIDM
	      AND SPRADDR_ATYP_CODE = SUBSTR(C.GURFCLR_VALUE_ATYP,2,2)
	      AND SPRADDR_STATUS_IND IS NULL
	      AND ((SPRADDR_TO_DATE IS NULL
	      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
	      AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   SYSDATE BETWEEN SPRADDR_FROM_DATE
                                AND SPRADDR_TO_DATE)
               OR  (SPRADDR_FROM_DATE IS NOT NULL
	      AND   SPRADDR_TO_DATE IS NULL
              AND   SYSDATE  >= SPRADDR_FROM_DATE)
               OR  (SPRADDR_FROM_DATE IS NULL
	      AND   SPRADDR_TO_DATE IS NOT NULL
              AND   SYSDATE <= SPRADDR_TO_DATE)))
 "
"BANINST1","RPVADDR","ADDRESS VIEW","SELECT SPRADDR_PIDM,
       SPRADDR_ATYP_CODE,
       STVATYP_DESC,
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       STVSTAT_DESC,
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       STVCNTY_DESC,
       SPRADDR_NATN_CODE,
       STVNATN_NATION
  FROM STVATYP,
       STVNATN,
       STVSTAT,
       STVCNTY,
       SPRADDR X
 WHERE STVATYP_CODE (+) = SPRADDR_ATYP_CODE
   AND STVNATN_CODE (+) = SPRADDR_NATN_CODE
   AND STVSTAT_CODE (+) = SPRADDR_STAT_CODE
   AND STVCNTY_CODE (+) = SPRADDR_CNTY_CODE
   AND X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   SYSDATE BETWEEN X.SPRADDR_FROM_DATE
                     AND X.SPRADDR_TO_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   SYSDATE >= X.SPRADDR_FROM_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   SYSDATE <= X.SPRADDR_TO_DATE))
 "
"BANINST1","ROVVETN","Veteran Certification Selection View","SELECT	SGRVETN_PIDM,
	SGRVETN_TERM_CODE_VA,
	SGRVETN_VETC_CODE,
	SGRVETN_CERT_HOURS,
	SGRVETN_CERT_DATE
FROM	SGRVETN

 "
"BANINST1","ROVTSPC","Test Percentile Selection View","SELECT  SORTSPC_PIDM,
	SORTSPC_TESC_CODE,
	SORTSPC_TEST_DATE,
	SORTSPC_TSPT_CODE,
	SORTSPC_PERCENTILE
FROM SORTSPC
"
"BANINST1","ROVTRMG","GPA by Term and Level Selection View","SELECT X.SHRTGPA_PIDM,
       X.SHRTGPA_TERM_CODE,
       X.SHRTGPA_LEVL_CODE,
       SUM(Y.SHRTGPA_HOURS_ATTEMPTED),
       SUM(Y.SHRTGPA_HOURS_EARNED),
       SUM(Y.SHRTGPA_HOURS_PASSED),
       SUM(Y.SHRTGPA_GPA_HOURS),
       SUM(Y.SHRTGPA_QUALITY_POINTS),
       TRUNC((SUM(Y.SHRTGPA_QUALITY_POINTS)
	      / DECODE(SUM(Y.SHRTGPA_GPA_HOURS)
			,0,1,SUM(Y.SHRTGPA_GPA_HOURS))),2)
  FROM SHRTGPA Y,
       SHRTGPA X,
       RORVIEW
 WHERE X.SHRTGPA_PIDM       = Y.SHRTGPA_PIDM
   AND Y.SHRTGPA_TERM_CODE <= X.SHRTGPA_TERM_CODE
   AND Y.SHRTGPA_LEVL_CODE  = X.SHRTGPA_LEVL_CODE
   AND RORVIEW_TYPE_IND     = 'T'
   AND RORVIEW_SESSION_ID   = TO_CHAR(USERENV('SESSIONID'))
   AND RORVIEW_PIDM         = X.SHRTGPA_PIDM
 GROUP BY X.SHRTGPA_PIDM,
          X.SHRTGPA_TERM_CODE,
          X.SHRTGPA_LEVL_CODE
 "
"BANINST1","ROVTPRD_PRDS","Aid Period/Period View","SELECT RORTPRD_AIDY_CODE                ROVTPRD_AIDY_CODE,
       RORTPRD_APRD_CODE                ROVTPRD_APRD_CODE,
       RORTPRD_PERIOD                   ROVTPRD_PERIOD,
       ROBPRDS_SEQ_NO                   ROVTPRD_PRDS_SEQ_NO,
       RORTPRD_ACTIVITY_DATE            ROVTPRD_ACTIVITY_DATE,
       RORTPRD_USER_ID                  ROVTPRD_USER_ID,
       RORTPRD_DATA_ORIGIN              ROVTPRD_DATA_ORIGIN,
       RORTPRD_TERM_CODE                ROVTPRD_TERM_CODE
FROM   ROBPRDS,
       RORTPRD
WHERE  RORTPRD_PERIOD = ROBPRDS_PERIOD "
"BANINST1","ROVTEST","Test Score Selection View","SELECT	SORTEST_PIDM,
	SORTEST_TESC_CODE,
	SORTEST_TEST_DATE,
	SORTEST_TEST_SCORE,
	SORTEST_TSRC_CODE,
	SORTEST_TADM_CODE
FROM	SORTEST
 "
"BANINST1","ROVTERM","Student System Term View","SELECT STVTERM_CODE,
       STVTERM_DESC,
       STVTERM_START_DATE,
       STVTERM_END_DATE,
       STVTERM_FA_PROC_YR,
       STVTERM_HOUSING_START_DATE,
       STVTERM_HOUSING_END_DATE
FROM   STVTERM
 "
"BANINST1","ROVTENR","Term Hours For Enrollment Rule View","SELECT rorstat_pidm,
                             stvterm_code,
                             rorstat_aidy_code,
                             rorenrr_enrr_code,
                             rokmisc_rules.f_calc_rule_hrs_no_rotsreg
                                             ( rorstat_aidy_code,
                                               rorstat_pidm,
                                               stvterm_code,
                                               rorenrr_enrr_code,
                                               'C'
                                             )  CREDIT_HRS,
                             rokmisc_rules.f_calc_rule_hrs_no_rotsreg
                                             ( rorstat_aidy_code,
                                               rorstat_pidm,
                                               stvterm_code,
                                               rorenrr_enrr_code,
                                               'B'
                                             )  BILLING_HRS,
                             rokmisc_rules.f_calc_rule_hrs_no_rotsreg
                                             ( rorstat_aidy_code,
                                               rorstat_pidm,
                                               stvterm_code,
                                               rorenrr_enrr_code,
                                               'A'
                                             )  ADJUSTED_HRS
                        FROM rorenrr,
                             stvterm y,
                             rorstat x
                       WHERE rorstat_aidy_code  = rorenrr_aidy_code
                         AND stvterm_code      IN ( SELECT rorprds_term_code
                                                      FROM rortprd,
                                                           rorprds
                                                     WHERE rortprd_aprd_code IN (x.rorstat_aprd_code,x.rorstat_aprd_code_pell)
                                                       and rortprd_aidy_code  = x.rorstat_aidy_code
                                                       and rortprd_period     = rorprds_period
                                                   )
                         AND EXISTS
                               ( SELECT 'Y'
                                   FROM sfrstcr
                                  WHERE sfrstcr_pidm      = x.rorstat_pidm
                                    AND sfrstcr_term_code = y.stvterm_code
                               )"
"BANINST1","ROVTAER","Term Attendance For Enrollment Rule View","SELECT rovstcr_pidm,
                             rovstcr_term_code,
                             rorenrr_aidy_code,
                             rorenrr_enrr_code,
                             rovstcr_start_date,
                             rokmisc_rules.f_calc_rule_hrs_no_rotsreg
                                             ( rorenrr_aidy_code,
                                               rovstcr_pidm,
                                               rovstcr_term_code,
                                               rorenrr_enrr_code,
                                               'C',
                                               rovstcr_start_date
                                             )  credit_hrs,
                             rokmisc_rules.f_calc_rule_hrs_no_rotsreg
                                             ( rorenrr_aidy_code,
                                               rovstcr_pidm,
                                               rovstcr_term_code,
                                               rorenrr_enrr_code,
                                               'B',
                                               rovstcr_start_date
                                             )  billing_hrs,
                             rokmisc_rules.f_calc_rule_hrs_no_rotsreg
                                             ( rorenrr_aidy_code,
                                               rovstcr_pidm,
                                               rovstcr_term_code,
                                               rorenrr_enrr_code,
                                               'A',
                                               rovstcr_start_date
                                             )  adjusted_hrs
                        FROM rorenrr,
                             rortprd x,
                             rovstcr,
                             rorstat
                       WHERE rorstat_pidm       = rovstcr_pidm
                         AND rortprd_aidy_code  = rorstat_aidy_code
                         AND rortprd_aprd_code IN (rorstat_aprd_code,rorstat_aprd_code_pell)
                         AND rovstcr_term_code IN ( SELECT rorprds_term_code
                                                      FROM rorprds
                                                     WHERE rorprds_period = x.rortprd_period
                                                  )
                         AND rorenrr_aidy_code  = rorstat_aidy_code
                    GROUP BY rovstcr_pidm,
                             rovstcr_term_code,
                             rorenrr_aidy_code,
                             rorenrr_enrr_code,
                             rovstcr_start_date"
"BANINST1","ROVSTU3","SDA Work View.","select
 rorstat_pidm,
 rorstat_aidy_code,
 rortprd_period,                       -- 80900-1
 rortprd_term_code,
 spriden_id,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 spbpers_name_prefix,
 spbpers_name_suffix,
 rcrapp1_ssn,
 spbpers_birth_date,
 f_calculate_age(null,spbpers_birth_date, spbpers_dead_date),
 spbpers_sex,
 spbpers_ethn_code,
 spbpers_citz_code,
 spbpers_mrtl_code,
 -- 8120002-1 soklibs.f_get_race(rorstat_pidm),                        --81200-1
 -- 8120002-1 spbpers_ethn_cde,                                        --81200-1
 rcrapp1_stat_code_res,
 x.spraddr_atyp_code,
 x.spraddr_street_line1,
 x.spraddr_street_line2,
 x.spraddr_street_line3,
 x.spraddr_city,
 x.spraddr_stat_code,
 x.spraddr_zip,
 x.spraddr_cnty_code,
 x.spraddr_natn_code,
 decode(v.sprtele_unlist_ind,'Y', '***',v.sprtele_phone_area),
 decode(v.sprtele_unlist_ind,'Y', '*******',v.sprtele_phone_number),
 decode(v.sprtele_unlist_ind,'Y', '****',v.sprtele_tele_code),
 y.spraddr_atyp_code,
 y.spraddr_street_line1,
 y.spraddr_street_line2,
 y.spraddr_street_line3,
 y.spraddr_city,
 y.spraddr_stat_code,
 y.spraddr_zip,
 y.spraddr_cnty_code,
 y.spraddr_natn_code,
 decode(w.sprtele_unlist_ind,'Y', '***',w.sprtele_phone_area),
 decode(w.sprtele_unlist_ind,'Y', '*******',w.sprtele_phone_number),
 decode(w.sprtele_unlist_ind,'Y', '****',w.sprtele_tele_code),
 m.sortest_tesc_code,
 m.sortest_test_date,
 m.sortest_test_score,
 n.sortest_tesc_code,
 n.sortest_test_date,
 n.sortest_test_score,
 o.sortest_tesc_code,
 o.sortest_test_date,
 o.sortest_test_score
from rortprd,
     spraddr x, spraddr y,
     sprtele v, sprtele w,
     sortest m, sortest n, sortest o,
     spriden,
     spbpers,
     rcrapp1,
     rorstat
where rorstat_aidy_code = rortprd_aidy_code (+)
  and rorstat_aprd_code = rortprd_aprd_code (+)
  and rorstat_pidm = rcrapp1_pidm (+)
  and rorstat_aidy_code = rcrapp1_aidy_code (+)
  and rcrapp1_curr_rec_ind (+) = 'Y'
  and spriden_pidm = rorstat_pidm
  and spriden_change_ind is null
  and spbpers_pidm(+) = rorstat_pidm
--
  and x.rowid (+) = f_get_address_rowid(rorstat_pidm,'FASTADDR','A',sysdate,1,'R',null)
  and x.spraddr_pidm (+) = rorstat_pidm -- 80300-1
--
  and y.rowid (+) = f_get_address_rowid(rorstat_pidm,'FASTADDR','A',sysdate,2,'R',null)
  and y.spraddr_pidm (+) = rorstat_pidm -- 80300-1
--
  and v.rowid (+) = f_get_address_telephone_rowid(rorstat_pidm,'FASTADDR','A',sysdate,1,'R',null)
  and v.sprtele_pidm (+) = rorstat_pidm -- 80300-1
--
  and w.rowid (+) = f_get_address_telephone_rowid(rorstat_pidm,'FASTADDR','A',sysdate,2,'R',null)
  and w.sprtele_pidm (+) = rorstat_pidm -- 80300-1
--
  and m.rowid (+) = f_get_sortest_rowid (rorstat_pidm,'FAPLTEST',1)
  and m.sortest_pidm (+) = rorstat_pidm -- 80300-1
--
  and n.rowid (+) = f_get_sortest_rowid (rorstat_pidm,'FAPLTEST',2)
  and n.sortest_pidm (+) = rorstat_pidm -- 80300-1
--
  and o.rowid (+) = f_get_sortest_rowid (rorstat_pidm,'FAPLTEST',3)
  and o.sortest_pidm (+) = rorstat_pidm -- 80300-1"
"BANINST1","ROVSTU2","SDA Work View.","select
 rovstu3_pidm,
 rovstu3_aidy_code,
 rovstu3_period,                   -- 80900-1
 rovstu3_term_code,
 saradap_appl_no,
 substr(f_applied_admissions(rovstu3_pidm,rovstu3_term_code),1,1),
 substr(f_enrolled_this_term(rovstu3_pidm,rovstu3_term_code),1,1),
 substr(f_registered_this_term(rovstu3_pidm,rovstu3_term_code),1,1),
 rovstu3_id,
 rovstu3_last_name,
 rovstu3_first_name,
 rovstu3_middle_name,
 rovstu3_middle_intital,
 rovstu3_name_prefix,
 rovstu3_name_suffix,
 rovstu3_ssn,
 rovstu3_birth_date,
 rovstu3_age,
 rovstu3_sex,
 rovstu3_ethn_code,
 rovstu3_citz_code,
 rovstu3_mrtl_code,
 -- 8120002-1 rovstu3_race_data,                  --81200-1
 -- 8120002-1 rovstu3_ethn_cde,                   --81200-1
 rovstu3_stat_code_res,
 rovstu3_atyp_code1,
 rovstu3_street1_line1,
 rovstu3_street1_line2,
 rovstu3_street1_line3,
 rovstu3_city1,
 rovstu3_stat_code1,
 rovstu3_zip1,
 rovstu3_cnty_code1,
 rovstu3_natn_code1,
 rovstu3_phone_area1,
 rovstu3_phone_number1,
 rovstu3_tele_code1,
 rovstu3_atyp_code2,
 rovstu3_street2_line1,
 rovstu3_street2_line2,
 rovstu3_street2_line3,
 rovstu3_city2,
 rovstu3_stat_code2,
 rovstu3_zip2,
 rovstu3_cnty_code2,
 rovstu3_natn_code2,
 rovstu3_phone_area2,
 rovstu3_phone_number2,
 rovstu3_tele_code2,
 saradap_term_code_entry,
 saradap_appl_no,
 saradap_levl_code,
 saradap_appl_date,
 saradap_apst_code,
 saradap_apst_date,
 saradap_admt_code,
 saradap_styp_code,
 saradap_coll_code_1,
 saradap_degc_code_1,
 saradap_majr_code_1,
 saradap_resd_code,
 saradap_dept_code,
 substr(f_adms_application_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'APPLCMPL')
       ,1,1),
 substr(f_adms_application_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'APPLINCM')
       ,1,1),
 substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'I','A'),1,1),
 substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'S','A'),1,1),
 substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'I','C'),1,1),
 substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'S','C'),1,1),
 substr(f_adms_check_status
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no,'R','C'),1,1),
 substr(f_adms_applicant_withdrawn
      (saradap_pidm,saradap_term_code_entry,saradap_appl_no),1,1),
 substr(f_concat_sarappd
       (saradap_pidm,saradap_term_code_entry,saradap_appl_no),1,75),
 substr(f_student_check_for_more
       ('APDC',saradap_pidm,saradap_term_code_entry,saradap_appl_no,
         null),1,1),
 rovstu3_tesc_code1,
 rovstu3_test_date1,
 rovstu3_test_score1,
 rovstu3_tesc_code2,
 rovstu3_test_date2,
 rovstu3_test_score2,
 rovstu3_tesc_code3,
 rovstu3_test_date3,
 rovstu3_test_score3,
 b.sgbstdn_term_code_eff,
 b.sgbstdn_levl_code,
 b.sgbstdn_coll_code_1,
 b.sgbstdn_degc_code_1,
 b.sgbstdn_majr_code_1,
 substr(sgkclas.f_class_code
      (rovstu3_pidm,b.sgbstdn_levl_code,rovstu3_term_code),1,2),
 b.sgbstdn_resd_code,
 b.sgbstdn_full_part_ind,
 b.sgbstdn_term_code_admit,
 b.sgbstdn_stst_code,
 b.sgbstdn_styp_code,
 b.sgbstdn_rate_code,
 b.sgbstdn_exp_grad_date,
 substr(f_concat_term_gpa
     (rovstu3_pidm,rovstu3_term_code,b.sgbstdn_levl_code,'O'),1,84),
 substr(f_concat_term_gpa
     (rovstu3_pidm,rovstu3_term_code,b.sgbstdn_levl_code,'I'),1,84),
 substr(f_concat_term_gpa
     (rovstu3_pidm,rovstu3_term_code,b.sgbstdn_levl_code,'T'),1,84),
 substr(f_concat_as_of_cum_gpa
     (rovstu3_pidm,rovstu3_term_code,b.sgbstdn_levl_code,'O'),1,84),
 substr(f_concat_as_of_cum_gpa
     (rovstu3_pidm,rovstu3_term_code,b.sgbstdn_levl_code,'I'),1,84),
 substr(f_concat_as_of_cum_gpa
     (rovstu3_pidm,rovstu3_term_code,b.sgbstdn_levl_code,'T'),1,84),
 rokmisc.f_calc_stud_credit_hrs
       (rovstu3_term_code, rovstu3_pidm),
 rokmisc.f_calc_stud_bill_hrs
       (rovstu3_term_code, rovstu3_pidm),
 rokmisc.f_calc_stud_adj_hrs
       (rovstu3_term_code, rovstu3_pidm),
 rokmisc.f_calc_stud_credit_hrs
       (rovstu3_term_code, rovstu3_pidm, 'Y'),
 rokmisc.f_calc_stud_bill_hrs
       (rovstu3_term_code, rovstu3_pidm, 'Y'),
 rokmisc.f_calc_stud_adj_hrs
       (rovstu3_term_code, rovstu3_pidm, 'Y')
from saradap,
     sgbstdn b,
     rovstu3
where rovstu3_pidm = saradap_pidm (+)
  and rovstu3_term_code = saradap_term_code_entry (+)
--
  and b.rowid (+) = f_get_sgbstdn_rowid(rovstu3_pidm, rovstu3_term_code)
  and b.sgbstdn_pidm (+) = rovstu3_pidm -- 80300-1"
"BANINST1","ROVSTU1","SDA Work View.","select
 rovstu2_pidm,
 rovstu2_aidy_code,
 rovstu2_period,          -- 80900-1
 rovstu2_term_code,
 rovstu2_appl_no,
 rovstu2_applied_for_adm_ind,
 rovstu2_enrolled_ind,
 rovstu2_registered_ind,
 rovstu2_id,
 rovstu2_last_name,
 rovstu2_first_name,
 rovstu2_middle_name,
 rovstu2_middle_intital,
 rovstu2_name_prefix,
 rovstu2_name_suffix,
 rovstu2_ssn,
 rovstu2_birth_date,
 rovstu2_age,
 rovstu2_sex,
 rovstu2_ethn_code,
 rovstu2_citz_code,
 rovstu2_mrtl_code,
 -- 8120002-1 rovstu2_race_data,                                --81200-1
 -- 8120002-1 rovstu2_ethn_cde,                                 --81200-1
 rovstu2_stat_code_res,
 rovstu2_atyp_code1,
 rovstu2_street1_line1,
 rovstu2_street1_line2,
 rovstu2_street1_line3,
 rovstu2_city1,
 rovstu2_stat_code1,
 rovstu2_zip1,
 rovstu2_cnty_code1,
 rovstu2_natn_code1,
 rovstu2_phone_area1,
 rovstu2_phone_number1,
 rovstu2_tele_code1,
 rovstu2_atyp_code2,
 rovstu2_street2_line1,
 rovstu2_street2_line2,
 rovstu2_street2_line3,
 rovstu2_city2,
 rovstu2_stat_code2,
 rovstu2_zip2,
 rovstu2_cnty_code2,
 rovstu2_natn_code2,
 rovstu2_phone_area2,
 rovstu2_phone_number2,
 rovstu2_tele_code2,
 rovstu2_ad_term_code_entry,
 rovstu2_ad_appl_no,
 rovstu2_ad_levl_code,
 rovstu2_ad_appl_date,
 rovstu2_ad_apst_code,
 rovstu2_ad_apst_date,
 rovstu2_ad_admt_code,
 rovstu2_ad_styp_code,
 rovstu2_ad_coll_code_1,
 rovstu2_ad_degc_code_1,
 rovstu2_ad_majr_code_1,
 rovstu2_ad_resd_code,
 rovstu2_ad_dept_code,
 rovstu2_ad_complete_ind,
 rovstu2_ad_incomplete_ind,
 rovstu2_ad_any_inst_accept_ind,
 rovstu2_ad_any_stdn_accept_ind,
 rovstu2_ad_cur_inst_accept_ind,
 rovstu2_ad_cur_stdn_accept_ind,
 rovstu2_ad_cur_rejected_ind,
 rovstu2_ad_withdrawn_ind,
 substr(f_split_fields(rovstu2_ad_decisions,1),1,2),
 to_date(f_split_fields(rovstu2_ad_decisions,2),'DD-MON-YYYY'),
 substr(f_split_fields(rovstu2_ad_decisions,3),1,2),
 to_date(f_split_fields(rovstu2_ad_decisions,4),'DD-MON-YYYY'),
 substr(f_split_fields(rovstu2_ad_decisions,5),1,2),
 to_date(f_split_fields(rovstu2_ad_decisions,6),'DD-MON-YYYY'),
 substr(f_split_fields(rovstu2_ad_decisions,7),1,2),
 to_date(f_split_fields(rovstu2_ad_decisions,8),'DD-MON-YYYY'),
 substr(f_split_fields(rovstu2_ad_decisions,9),1,2),
 to_date(f_split_fields(rovstu2_ad_decisions,10),'DD-MON-YYYY'),
 rovstu2_ad_add_decisions,
 rovstu2_tesc_code1,
 rovstu2_test_date1,
 rovstu2_test_score1,
 rovstu2_tesc_code2,
 rovstu2_test_date2,
 rovstu2_test_score2,
 rovstu2_tesc_code3,
 rovstu2_test_date3,
 rovstu2_test_score3,
 rovstu2_st_term_code_eff,
 rovstu2_st_levl_code,
 rovstu2_st_coll_code_1,
 rovstu2_st_degc_code_1,
 rovstu2_st_majr_code_1,
 rovstu2_st_clas_code,
 rovstu2_st_resd_code,
 rovstu2_st_full_part_ind,
 rovstu2_st_term_code_admit,
 rovstu2_st_stst_code,
 rovstu2_st_styp_code,
 rovstu2_st_rate_code,
 rovstu2_st_exp_grad_date,
 to_number(substr(f_split_fields
   (rovstu2_other_term_gpa_data,1),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_other_term_gpa_data,2),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_other_term_gpa_data,3),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_other_term_gpa_data,4),1,17),'99999999999D999999'),
 to_number(substr(f_split_fields
   (rovstu2_other_term_gpa_data,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields
   (rovstu2_other_term_gpa_data,6),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_term_gpa_data,1),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_term_gpa_data,2),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_term_gpa_data,3),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_term_gpa_data,4),1,17),'99999999999D999999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_term_gpa_data,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_term_gpa_data,6),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_term_gpa_data,1),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_term_gpa_data,2),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_term_gpa_data,3),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_term_gpa_data,4),1,17),'99999999999D999999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_term_gpa_data,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_term_gpa_data,6),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_other_levl_gpa_data,1),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_other_levl_gpa_data,2),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_other_levl_gpa_data,3),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_other_levl_gpa_data,4),1,17),'99999999999D999999'),
 to_number(substr(f_split_fields
   (rovstu2_other_levl_gpa_data,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields
   (rovstu2_other_levl_gpa_data,6),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_levl_gpa_data,1),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_levl_gpa_data,2),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_levl_gpa_data,3),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_levl_gpa_data,4),1,17),'99999999999D999999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_levl_gpa_data,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields
   (rovstu2_inst_levl_gpa_data,6),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_levl_gpa_data,1),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_levl_gpa_data,2),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_levl_gpa_data,3),1,11),'99999999D999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_levl_gpa_data,4),1,17),'99999999999D999999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_levl_gpa_data,5),1,23),'99999999999999D999999999'),
 to_number(substr(f_split_fields
   (rovstu2_tot_levl_gpa_data,6),1,11),'99999999D999'),
 rovstu2_st_tot_crhrs,
 rovstu2_st_tot_bill_hrs,
 rovstu2_st_adj_crhrs,
 rovstu2_st_adj_tot_crhrs_rep,
 rovstu2_st_tot_bill_hrs_rep,
 rovstu2_st_adj_crhrs_rep,
 d.shrdgmr_seq_no,
 d.shrdgmr_degc_code,
 d.shrdgmr_degs_code,
 d.shrdgmr_levl_code,
 d.shrdgmr_coll_code_1,
 d.shrdgmr_majr_code_1,
 d.shrdgmr_majr_code_minr_1,
 d.shrdgmr_appl_date,
 d.shrdgmr_grad_date,
 d.shrdgmr_acyr_code_bulletin,
 d.shrdgmr_majr_code_minr_1_2,
 d.shrdgmr_term_code_sturec,
 d.shrdgmr_majr_code_1_2,
 d.shrdgmr_camp_code,
 d.shrdgmr_term_code_grad,
 d.shrdgmr_acyr_code,
 d.shrdgmr_grst_code,
 d.shrdgmr_authorized,
 d.shrdgmr_term_code_completed,
 decode(e.shrdgmr_pidm,null,'N','Y')
from shrdgmr d, shrdgmr e,
     rovstu2
where d.rowid (+) = f_get_shrdgmr_rowid(rovstu2_pidm, rovstu2_st_levl_code,1)
  and d.shrdgmr_pidm (+) = rovstu2_pidm -- 80300-1
--
  and e.rowid (+) = f_get_shrdgmr_rowid(rovstu2_pidm, rovstu2_st_levl_code,2)
  and e.shrdgmr_pidm (+) = rovstu2_pidm -- 80300-1"
"BANINST1","ROVSTDN","Basic Student Selection View","SELECT	SGBSTDN_PIDM,
	SGBSTDN_TERM_CODE_EFF,
	SGBSTDN_STST_CODE,
	SGBSTDN_LEVL_CODE,
	SGBSTDN_STYP_CODE,
	SGBSTDN_TERM_CODE_MATRIC,
	SGBSTDN_TERM_CODE_ADMIT,
	SGBSTDN_EXP_GRAD_DATE,
	SGBSTDN_CAMP_CODE,
	SGBSTDN_COLL_CODE_1,
	SGBSTDN_DEGC_CODE_1,
	SGBSTDN_MAJR_CODE_1,
	SGBSTDN_MAJR_CODE_1_2,
	SGBSTDN_MAJR_CODE_MINR_1,
	SGBSTDN_MAJR_CODE_MINR_1_2,
	SGBSTDN_MAJR_CODE_CONC_1,
	SGBSTDN_MAJR_CODE_CONC_1_2,
	SGBSTDN_MAJR_CODE_CONC_1_3,
	SGBSTDN_COLL_CODE_2,
	SGBSTDN_DEGC_CODE_2,
	SGBSTDN_MAJR_CODE_2,
	SGBSTDN_MAJR_CODE_2_2,
	SGBSTDN_MAJR_CODE_MINR_2,
	SGBSTDN_MAJR_CODE_MINR_2_2,
	SGBSTDN_MAJR_CODE_CONC_2,
	SGBSTDN_MAJR_CODE_CONC_2_2,
	SGBSTDN_MAJR_CODE_CONC_2_3,
	SGBSTDN_ASTD_CODE,
	SGBSTDN_TERM_CODE_ASTD,
        SGBSTDN_RESD_CODE
FROM	SGBSTDN
 "
"BANINST1","ROVSTCR","Student Registration View","SELECT
        SFRSTCR_TERM_CODE,
        SFRSTCR_PIDM,
        SFRSTCR_CRN,
        SSBSECT_SUBJ_CODE,
        SSBSECT_CRSE_NUMB,
        SSBSECT_SEQ_NUMB,
        SFRSTCR_CLASS_SORT_KEY,
        SFRSTCR_REG_SEQ,
        SFRSTCR_PTRM_CODE,
        SFRSTCR_RSTS_CODE,
        SFRSTCR_RSTS_DATE,
        SFRSTCR_ERROR_FLAG,
        SFRSTCR_MESSAGE,
        SFRSTCR_BILL_HR,
        SFRSTCR_WAIV_HR,
        SFRSTCR_CREDIT_HR,
        SFRSTCR_BILL_HR_HOLD,
        SFRSTCR_CREDIT_HR_HOLD,
        SFRSTCR_GMOD_CODE,
        SFRSTCR_GRDE_CODE,
        SFRSTCR_GRDE_CODE_MID,
        SFRSTCR_GRDE_DATE,
        SFRSTCR_DUPL_OVER,
        SFRSTCR_LINK_OVER,
        SFRSTCR_CORQ_OVER,
        SFRSTCR_PREQ_OVER,
        SFRSTCR_TIME_OVER,
        SFRSTCR_CAPC_OVER,
        SFRSTCR_LEVL_OVER,
        SFRSTCR_COLL_OVER,
        SFRSTCR_MAJR_OVER,
        SFRSTCR_CLAS_OVER,
        SFRSTCR_APPR_OVER,
        SFRSTCR_APPR_RECEIVED_IND,
        SFRSTCR_ADD_DATE,
        SFRSTCR_ACTIVITY_DATE,
        SFRSTCR_LEVL_CODE,
        STVLEVL_CEU_IND,
        SFRSTCR_CAMP_CODE,
        SFRSTCR_RESERVED_KEY,
        SFRSTCR_ATTEND_HR,
        SFRSTCR_REPT_OVER,
        SFRSTCR_RPTH_OVER,
        SFRSTCR_TEST_OVER,
        SFRSTCR_CAMP_OVER,
        SFRSTCR_USER,
        SFRSTCR_DEGC_OVER,
        SFRSTCR_PROG_OVER,
        SFRSTCR_LAST_ATTEND,
        SFRSTCR_GCMT_CODE,
-- 081402-1 - DECODE( NVL((SELECT 'Y'
-- 081402-1 -      FROM   STVTERM, ROBINST
-- 081402-1 -      WHERE  ROBINST_AIDY_CODE = STVTERM_FA_PROC_YR
-- 081402-1 -      AND    STVTERM_CODE = SFRSTCR_TERM_CODE
-- 081402-1 -      AND    ROBINST_AIDY_END_YEAR >= 2012),
-- 081402-1 -     'N'),'Y', ROKRPTS.F_IS_REPEAT_VIOLATION(
-- 081402-1 -                         SFRSTCR_PIDM,
-- 081402-1 -                         SFRSTCR_TERM_CODE,
-- 081402-1 -                         SFRSTCR_CRN ) ,'N'),
        ROKVIEW.F_GET_CLASS_START_DATE(SFRSTCR_TERM_CODE,
                                       SFRSTCR_PIDM,
                                       SFRSTCR_CRN,
                                       SFRSTCR_PTRM_CODE),
        ROKVIEW.F_GET_CLASS_COMPLETION_DATE(SFRSTCR_TERM_CODE,
                                            SFRSTCR_PIDM,
                                            SFRSTCR_CRN,
                                            SFRSTCR_PTRM_CODE),
        SUBSTR(ROKVIEW.F_GET_EXCLUDE_SECTION_IND(SFRSTCR_TERM_CODE,
                                                 SFRSTCR_CRN),1,1),
        SUBSTR(ROKVIEW.F_GET_EXCLUDE_LEVEL_IND(SFRSTCR_TERM_CODE,
                                               SFRSTCR_PIDM,
                                               SFRSTCR_CRN),1,1)
   FROM stvlevl,
        sfrstcr LEFT OUTER JOIN ssbsect ON sfrstcr_crn       = ssbsect_crn                        -- 81501-1
                                       AND sfrstcr_term_code = ssbsect_term_code                  -- 81501-1
  WHERE SFRSTCR_LEVL_CODE = STVLEVL_CODE "
"BANINST1","ROVST18","2017-2018 Basic Student View","SELECT SGBSTDN_PIDM,
      (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2017'
       AND ROBINST_AIDY_END_YEAR = '2018' AND ROWNUM=1),
       SGBSTDN_STST_CODE,
       SGBSTDN_LEVL_CODE,
       SGBSTDN_STYP_CODE,
       SGBSTDN_TERM_CODE_MATRIC,
       SGBSTDN_TERM_CODE_ADMIT,
       SGBSTDN_EXP_GRAD_DATE,
       SGBSTDN_CAMP_CODE,
       SGBSTDN_FULL_PART_IND,
       SGBSTDN_SESS_CODE,
       SGBSTDN_RESD_CODE,
       SGBSTDN_COLL_CODE_1,
       SGBSTDN_DEGC_CODE_1,
       SGBSTDN_MAJR_CODE_1,
       SGBSTDN_MAJR_CODE_1_2,
       SGBSTDN_MAJR_CODE_MINR_1,
       SGBSTDN_MAJR_CODE_MINR_1_2,
       SGBSTDN_MAJR_CODE_CONC_1,
       SGBSTDN_MAJR_CODE_CONC_1_2,
       SGBSTDN_MAJR_CODE_CONC_1_3,
       SGBSTDN_COLL_CODE_2,
       SGBSTDN_DEGC_CODE_2,
       SGBSTDN_MAJR_CODE_2,
       SGBSTDN_MAJR_CODE_2_2,
       SGBSTDN_MAJR_CODE_MINR_2,
       SGBSTDN_MAJR_CODE_MINR_2_2,
       SGBSTDN_MAJR_CODE_CONC_2,
       SGBSTDN_MAJR_CODE_CONC_2_2,
       SGBSTDN_MAJR_CODE_CONC_2_3,
       SGBSTDN_ASTD_CODE,
       SGBSTDN_TERM_CODE_ASTD,
       SGBSTDN_ADMT_CODE,
       SGBSTDN_RATE_CODE,
       SGBSTDN_LEAV_CODE,
       SGBSTDN_LEAV_FROM_DATE,
       SGBSTDN_LEAV_TO_DATE,
       SGBSTDN_PRAC_CODE,
       SGBSTDN_GRAD_CREDIT_APPR_IND,
       SGBSTDN_CAPL_CODE,
       SGBSTDN_EDLV_CODE,
       SGBSTDN_INCM_CODE,
       SGBSTDN_ORSN_CODE
  FROM SGBSTDN X
 WHERE SGBSTDN_TERM_CODE_EFF =
	  (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
	     FROM SGBSTDN Y,
		  ROBINST
	    WHERE Y.SGBSTDN_PIDM = X.SGBSTDN_PIDM
	      AND Y.SGBSTDN_TERM_CODE_EFF <= ROBINST_CURRENT_TERM_CODE
	      AND ROBINST_AIDY_START_YEAR = '2017'
	      AND ROBINST_AIDY_END_YEAR   = '2018')"
"BANINST1","ROVST17","2016-2017 Basic Student View","SELECT SGBSTDN_PIDM,
      (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2016'
       AND ROBINST_AIDY_END_YEAR = '2017' AND ROWNUM=1),
       SGBSTDN_STST_CODE,
       SGBSTDN_LEVL_CODE,
       SGBSTDN_STYP_CODE,
       SGBSTDN_TERM_CODE_MATRIC,
       SGBSTDN_TERM_CODE_ADMIT,
       SGBSTDN_EXP_GRAD_DATE,
       SGBSTDN_CAMP_CODE,
       SGBSTDN_FULL_PART_IND,
       SGBSTDN_SESS_CODE,
       SGBSTDN_RESD_CODE,
       SGBSTDN_COLL_CODE_1,
       SGBSTDN_DEGC_CODE_1,
       SGBSTDN_MAJR_CODE_1,
       SGBSTDN_MAJR_CODE_1_2,
       SGBSTDN_MAJR_CODE_MINR_1,
       SGBSTDN_MAJR_CODE_MINR_1_2,
       SGBSTDN_MAJR_CODE_CONC_1,
       SGBSTDN_MAJR_CODE_CONC_1_2,
       SGBSTDN_MAJR_CODE_CONC_1_3,
       SGBSTDN_COLL_CODE_2,
       SGBSTDN_DEGC_CODE_2,
       SGBSTDN_MAJR_CODE_2,
       SGBSTDN_MAJR_CODE_2_2,
       SGBSTDN_MAJR_CODE_MINR_2,
       SGBSTDN_MAJR_CODE_MINR_2_2,
       SGBSTDN_MAJR_CODE_CONC_2,
       SGBSTDN_MAJR_CODE_CONC_2_2,
       SGBSTDN_MAJR_CODE_CONC_2_3,
       SGBSTDN_ASTD_CODE,
       SGBSTDN_TERM_CODE_ASTD,
       SGBSTDN_ADMT_CODE,
       SGBSTDN_RATE_CODE,
       SGBSTDN_LEAV_CODE,
       SGBSTDN_LEAV_FROM_DATE,
       SGBSTDN_LEAV_TO_DATE,
       SGBSTDN_PRAC_CODE,
       SGBSTDN_GRAD_CREDIT_APPR_IND,
       SGBSTDN_CAPL_CODE,
       SGBSTDN_EDLV_CODE,
       SGBSTDN_INCM_CODE,
       SGBSTDN_ORSN_CODE
  FROM SGBSTDN X
 WHERE SGBSTDN_TERM_CODE_EFF =
	  (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
	     FROM SGBSTDN Y,
		  ROBINST
	    WHERE Y.SGBSTDN_PIDM = X.SGBSTDN_PIDM
	      AND Y.SGBSTDN_TERM_CODE_EFF <= ROBINST_CURRENT_TERM_CODE
	      AND ROBINST_AIDY_START_YEAR = '2016'
	      AND ROBINST_AIDY_END_YEAR   = '2017')"
"BANINST1","ROVST16","2015-2016 Basic Student View","SELECT SGBSTDN_PIDM,
      (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2015'
       AND ROBINST_AIDY_END_YEAR = '2016' AND ROWNUM=1),
       SGBSTDN_STST_CODE,
       SGBSTDN_LEVL_CODE,
       SGBSTDN_STYP_CODE,
       SGBSTDN_TERM_CODE_MATRIC,
       SGBSTDN_TERM_CODE_ADMIT,
       SGBSTDN_EXP_GRAD_DATE,
       SGBSTDN_CAMP_CODE,
       SGBSTDN_FULL_PART_IND,
       SGBSTDN_SESS_CODE,
       SGBSTDN_RESD_CODE,
       SGBSTDN_COLL_CODE_1,
       SGBSTDN_DEGC_CODE_1,
       SGBSTDN_MAJR_CODE_1,
       SGBSTDN_MAJR_CODE_1_2,
       SGBSTDN_MAJR_CODE_MINR_1,
       SGBSTDN_MAJR_CODE_MINR_1_2,
       SGBSTDN_MAJR_CODE_CONC_1,
       SGBSTDN_MAJR_CODE_CONC_1_2,
       SGBSTDN_MAJR_CODE_CONC_1_3,
       SGBSTDN_COLL_CODE_2,
       SGBSTDN_DEGC_CODE_2,
       SGBSTDN_MAJR_CODE_2,
       SGBSTDN_MAJR_CODE_2_2,
       SGBSTDN_MAJR_CODE_MINR_2,
       SGBSTDN_MAJR_CODE_MINR_2_2,
       SGBSTDN_MAJR_CODE_CONC_2,
       SGBSTDN_MAJR_CODE_CONC_2_2,
       SGBSTDN_MAJR_CODE_CONC_2_3,
       SGBSTDN_ASTD_CODE,
       SGBSTDN_TERM_CODE_ASTD,
       SGBSTDN_ADMT_CODE,
       SGBSTDN_RATE_CODE,
       SGBSTDN_LEAV_CODE,
       SGBSTDN_LEAV_FROM_DATE,
       SGBSTDN_LEAV_TO_DATE,
       SGBSTDN_PRAC_CODE,
       SGBSTDN_GRAD_CREDIT_APPR_IND,
       SGBSTDN_CAPL_CODE,
       SGBSTDN_EDLV_CODE,
       SGBSTDN_INCM_CODE,
       SGBSTDN_ORSN_CODE
  FROM SGBSTDN X
 WHERE SGBSTDN_TERM_CODE_EFF =
	  (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
	     FROM SGBSTDN Y,
		  ROBINST
	    WHERE Y.SGBSTDN_PIDM = X.SGBSTDN_PIDM
	      AND Y.SGBSTDN_TERM_CODE_EFF <= ROBINST_CURRENT_TERM_CODE
	      AND ROBINST_AIDY_START_YEAR = '2015'
	      AND ROBINST_AIDY_END_YEAR   = '2016')"
"BANINST1","ROVST15","2014-2015 Basic Student View","SELECT SGBSTDN_PIDM,
      (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2014'
       AND ROBINST_AIDY_END_YEAR = '2015' AND ROWNUM=1),
       SGBSTDN_STST_CODE,
       SGBSTDN_LEVL_CODE,
       SGBSTDN_STYP_CODE,
       SGBSTDN_TERM_CODE_MATRIC,
       SGBSTDN_TERM_CODE_ADMIT,
       SGBSTDN_EXP_GRAD_DATE,
       SGBSTDN_CAMP_CODE,
       SGBSTDN_FULL_PART_IND,
       SGBSTDN_SESS_CODE,
       SGBSTDN_RESD_CODE,
       SGBSTDN_COLL_CODE_1,
       SGBSTDN_DEGC_CODE_1,
       SGBSTDN_MAJR_CODE_1,
       SGBSTDN_MAJR_CODE_1_2,
       SGBSTDN_MAJR_CODE_MINR_1,
       SGBSTDN_MAJR_CODE_MINR_1_2,
       SGBSTDN_MAJR_CODE_CONC_1,
       SGBSTDN_MAJR_CODE_CONC_1_2,
       SGBSTDN_MAJR_CODE_CONC_1_3,
       SGBSTDN_COLL_CODE_2,
       SGBSTDN_DEGC_CODE_2,
       SGBSTDN_MAJR_CODE_2,
       SGBSTDN_MAJR_CODE_2_2,
       SGBSTDN_MAJR_CODE_MINR_2,
       SGBSTDN_MAJR_CODE_MINR_2_2,
       SGBSTDN_MAJR_CODE_CONC_2,
       SGBSTDN_MAJR_CODE_CONC_2_2,
       SGBSTDN_MAJR_CODE_CONC_2_3,
       SGBSTDN_ASTD_CODE,
       SGBSTDN_TERM_CODE_ASTD,
       SGBSTDN_ADMT_CODE,
       SGBSTDN_RATE_CODE,
       SGBSTDN_LEAV_CODE,
       SGBSTDN_LEAV_FROM_DATE,
       SGBSTDN_LEAV_TO_DATE,
       SGBSTDN_PRAC_CODE,
       SGBSTDN_GRAD_CREDIT_APPR_IND,
       SGBSTDN_CAPL_CODE,
       SGBSTDN_EDLV_CODE,
       SGBSTDN_INCM_CODE,
       SGBSTDN_ORSN_CODE
  FROM SGBSTDN X
 WHERE SGBSTDN_TERM_CODE_EFF =
	  (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
	     FROM SGBSTDN Y,
		  ROBINST
	    WHERE Y.SGBSTDN_PIDM = X.SGBSTDN_PIDM
	      AND Y.SGBSTDN_TERM_CODE_EFF <= ROBINST_CURRENT_TERM_CODE
	      AND ROBINST_AIDY_START_YEAR = '2014'
	      AND ROBINST_AIDY_END_YEAR   = '2015')"
"BANINST1","ROVST14","2013-2014 Basic Student View","SELECT SGBSTDN_PIDM,
      (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2013'
       AND ROBINST_AIDY_END_YEAR = '2014' AND ROWNUM=1),
       SGBSTDN_STST_CODE,
       SGBSTDN_LEVL_CODE,
       SGBSTDN_STYP_CODE,
       SGBSTDN_TERM_CODE_MATRIC,
       SGBSTDN_TERM_CODE_ADMIT,
       SGBSTDN_EXP_GRAD_DATE,
       SGBSTDN_CAMP_CODE,
       SGBSTDN_FULL_PART_IND,
       SGBSTDN_SESS_CODE,
       SGBSTDN_RESD_CODE,
       SGBSTDN_COLL_CODE_1,
       SGBSTDN_DEGC_CODE_1,
       SGBSTDN_MAJR_CODE_1,
       SGBSTDN_MAJR_CODE_1_2,
       SGBSTDN_MAJR_CODE_MINR_1,
       SGBSTDN_MAJR_CODE_MINR_1_2,
       SGBSTDN_MAJR_CODE_CONC_1,
       SGBSTDN_MAJR_CODE_CONC_1_2,
       SGBSTDN_MAJR_CODE_CONC_1_3,
       SGBSTDN_COLL_CODE_2,
       SGBSTDN_DEGC_CODE_2,
       SGBSTDN_MAJR_CODE_2,
       SGBSTDN_MAJR_CODE_2_2,
       SGBSTDN_MAJR_CODE_MINR_2,
       SGBSTDN_MAJR_CODE_MINR_2_2,
       SGBSTDN_MAJR_CODE_CONC_2,
       SGBSTDN_MAJR_CODE_CONC_2_2,
       SGBSTDN_MAJR_CODE_CONC_2_3,
       SGBSTDN_ASTD_CODE,
       SGBSTDN_TERM_CODE_ASTD,
       SGBSTDN_ADMT_CODE,
       SGBSTDN_RATE_CODE,
       SGBSTDN_LEAV_CODE,
       SGBSTDN_LEAV_FROM_DATE,
       SGBSTDN_LEAV_TO_DATE,
       SGBSTDN_PRAC_CODE,
       SGBSTDN_GRAD_CREDIT_APPR_IND,
       SGBSTDN_CAPL_CODE,
       SGBSTDN_EDLV_CODE,
       SGBSTDN_INCM_CODE,
       SGBSTDN_ORSN_CODE
  FROM SGBSTDN X
 WHERE SGBSTDN_TERM_CODE_EFF =
	  (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
	     FROM SGBSTDN Y,
		  ROBINST
	    WHERE Y.SGBSTDN_PIDM = X.SGBSTDN_PIDM
	      AND Y.SGBSTDN_TERM_CODE_EFF <= ROBINST_CURRENT_TERM_CODE
	      AND ROBINST_AIDY_START_YEAR = '2013'
	      AND ROBINST_AIDY_END_YEAR   = '2014')"
"BANINST1","ROVST13","2012-2013 Basic Student View","SELECT SGBSTDN_PIDM,
      (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2012'
       AND ROBINST_AIDY_END_YEAR = '2013' AND ROWNUM=1),
       SGBSTDN_STST_CODE,
       SGBSTDN_LEVL_CODE,
       SGBSTDN_STYP_CODE,
       SGBSTDN_TERM_CODE_MATRIC,
       SGBSTDN_TERM_CODE_ADMIT,
       SGBSTDN_EXP_GRAD_DATE,
       SGBSTDN_CAMP_CODE,
       SGBSTDN_FULL_PART_IND,
       SGBSTDN_SESS_CODE,
       SGBSTDN_RESD_CODE,
       SGBSTDN_COLL_CODE_1,
       SGBSTDN_DEGC_CODE_1,
       SGBSTDN_MAJR_CODE_1,
       SGBSTDN_MAJR_CODE_1_2,
       SGBSTDN_MAJR_CODE_MINR_1,
       SGBSTDN_MAJR_CODE_MINR_1_2,
       SGBSTDN_MAJR_CODE_CONC_1,
       SGBSTDN_MAJR_CODE_CONC_1_2,
       SGBSTDN_MAJR_CODE_CONC_1_3,
       SGBSTDN_COLL_CODE_2,
       SGBSTDN_DEGC_CODE_2,
       SGBSTDN_MAJR_CODE_2,
       SGBSTDN_MAJR_CODE_2_2,
       SGBSTDN_MAJR_CODE_MINR_2,
       SGBSTDN_MAJR_CODE_MINR_2_2,
       SGBSTDN_MAJR_CODE_CONC_2,
       SGBSTDN_MAJR_CODE_CONC_2_2,
       SGBSTDN_MAJR_CODE_CONC_2_3,
       SGBSTDN_ASTD_CODE,
       SGBSTDN_TERM_CODE_ASTD,
       SGBSTDN_ADMT_CODE,
       SGBSTDN_RATE_CODE,
       SGBSTDN_LEAV_CODE,
       SGBSTDN_LEAV_FROM_DATE,
       SGBSTDN_LEAV_TO_DATE,
       SGBSTDN_PRAC_CODE,
       SGBSTDN_GRAD_CREDIT_APPR_IND,
       SGBSTDN_CAPL_CODE,
       SGBSTDN_EDLV_CODE,
       SGBSTDN_INCM_CODE,
       SGBSTDN_ORSN_CODE
  FROM SGBSTDN X
 WHERE SGBSTDN_TERM_CODE_EFF =
	  (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
	     FROM SGBSTDN Y,
		  ROBINST
	    WHERE Y.SGBSTDN_PIDM = X.SGBSTDN_PIDM
	      AND Y.SGBSTDN_TERM_CODE_EFF <= ROBINST_CURRENT_TERM_CODE
	      AND ROBINST_AIDY_START_YEAR = '2012'
	      AND ROBINST_AIDY_END_YEAR   = '2013')"
"BANINST1","ROVST12","2011-2012 Basic Student View","SELECT SGBSTDN_PIDM,
      (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2011'
       AND ROBINST_AIDY_END_YEAR = '2012' AND ROWNUM=1),
       SGBSTDN_STST_CODE,
       SGBSTDN_LEVL_CODE,
       SGBSTDN_STYP_CODE,
       SGBSTDN_TERM_CODE_MATRIC,
       SGBSTDN_TERM_CODE_ADMIT,
       SGBSTDN_EXP_GRAD_DATE,
       SGBSTDN_CAMP_CODE,
       SGBSTDN_FULL_PART_IND,
       SGBSTDN_SESS_CODE,
       SGBSTDN_RESD_CODE,
       SGBSTDN_COLL_CODE_1,
       SGBSTDN_DEGC_CODE_1,
       SGBSTDN_MAJR_CODE_1,
       SGBSTDN_MAJR_CODE_1_2,
       SGBSTDN_MAJR_CODE_MINR_1,
       SGBSTDN_MAJR_CODE_MINR_1_2,
       SGBSTDN_MAJR_CODE_CONC_1,
       SGBSTDN_MAJR_CODE_CONC_1_2,
       SGBSTDN_MAJR_CODE_CONC_1_3,
       SGBSTDN_COLL_CODE_2,
       SGBSTDN_DEGC_CODE_2,
       SGBSTDN_MAJR_CODE_2,
       SGBSTDN_MAJR_CODE_2_2,
       SGBSTDN_MAJR_CODE_MINR_2,
       SGBSTDN_MAJR_CODE_MINR_2_2,
       SGBSTDN_MAJR_CODE_CONC_2,
       SGBSTDN_MAJR_CODE_CONC_2_2,
       SGBSTDN_MAJR_CODE_CONC_2_3,
       SGBSTDN_ASTD_CODE,
       SGBSTDN_TERM_CODE_ASTD,
       SGBSTDN_ADMT_CODE,
       SGBSTDN_RATE_CODE,
       SGBSTDN_LEAV_CODE,
       SGBSTDN_LEAV_FROM_DATE,
       SGBSTDN_LEAV_TO_DATE,
       SGBSTDN_PRAC_CODE,
       SGBSTDN_GRAD_CREDIT_APPR_IND,
       SGBSTDN_CAPL_CODE,
       SGBSTDN_EDLV_CODE,
       SGBSTDN_INCM_CODE,
       SGBSTDN_ORSN_CODE
  FROM SGBSTDN X
 WHERE SGBSTDN_TERM_CODE_EFF =
	  (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
	     FROM SGBSTDN Y,
		  ROBINST
	    WHERE Y.SGBSTDN_PIDM = X.SGBSTDN_PIDM
	      AND Y.SGBSTDN_TERM_CODE_EFF <= ROBINST_CURRENT_TERM_CODE
	      AND ROBINST_AIDY_START_YEAR = '2011'
	      AND ROBINST_AIDY_END_YEAR   = '2012')"
"BANINST1","ROVST05","2004-2005 Basic Student View","SELECT SGBSTDN_PIDM,
       '0405',
       SGBSTDN_STST_CODE,
       SGBSTDN_LEVL_CODE,
       SGBSTDN_STYP_CODE,
       SGBSTDN_TERM_CODE_MATRIC,
       SGBSTDN_TERM_CODE_ADMIT,
       SGBSTDN_EXP_GRAD_DATE,
       SGBSTDN_CAMP_CODE,
       SGBSTDN_FULL_PART_IND,
       SGBSTDN_SESS_CODE,
       SGBSTDN_RESD_CODE,
       SGBSTDN_COLL_CODE_1,
       SGBSTDN_DEGC_CODE_1,
       SGBSTDN_MAJR_CODE_1,
       SGBSTDN_MAJR_CODE_1_2,
       SGBSTDN_MAJR_CODE_MINR_1,
       SGBSTDN_MAJR_CODE_MINR_1_2,
       SGBSTDN_MAJR_CODE_CONC_1,
       SGBSTDN_MAJR_CODE_CONC_1_2,
       SGBSTDN_MAJR_CODE_CONC_1_3,
       SGBSTDN_COLL_CODE_2,
       SGBSTDN_DEGC_CODE_2,
       SGBSTDN_MAJR_CODE_2,
       SGBSTDN_MAJR_CODE_2_2,
       SGBSTDN_MAJR_CODE_MINR_2,
       SGBSTDN_MAJR_CODE_MINR_2_2,
       SGBSTDN_MAJR_CODE_CONC_2,
       SGBSTDN_MAJR_CODE_CONC_2_2,
       SGBSTDN_MAJR_CODE_CONC_2_3,
       SGBSTDN_ASTD_CODE,
       SGBSTDN_TERM_CODE_ASTD,
       SGBSTDN_ADMT_CODE,
       SGBSTDN_RATE_CODE,
       SGBSTDN_LEAV_CODE,
       SGBSTDN_LEAV_FROM_DATE,
       SGBSTDN_LEAV_TO_DATE,
       SGBSTDN_PRAC_CODE,
       SGBSTDN_GRAD_CREDIT_APPR_IND,
       SGBSTDN_CAPL_CODE,
       SGBSTDN_EDLV_CODE,
       SGBSTDN_INCM_CODE,
       SGBSTDN_ORSN_CODE
  FROM SGBSTDN X
 WHERE SGBSTDN_TERM_CODE_EFF =
	  (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
	     FROM SGBSTDN Y,
		  ROBINST
	    WHERE Y.SGBSTDN_PIDM = X.SGBSTDN_PIDM
	      AND Y.SGBSTDN_TERM_CODE_EFF <= ROBINST_CURRENT_TERM_CODE
	      AND ROBINST_AIDY_CODE = '0405')
 "
"BANINST1","ROVSATD","Financial Aid Attend Date by Period View","SELECT rotsreg_term_code,
                             rotsreg_pidm,
                             rotsreg_start_date,
                             rorenrr_aidy_code,
                             rorenrr_enrr_code,
                             rokmisc_rules.f_calc_hrs_using_enrr
                                             ( rorenrr_aidy_code,
                                               rotsreg_term_code,
                                               rotsreg_pidm,
                                               rorenrr_enrr_code,
                                               'C',
                                               rotsreg_start_date
                                             ),
                             rokmisc_rules.f_calc_hrs_using_enrr
                                             ( rorenrr_aidy_code,
                                               rotsreg_term_code,
                                               rotsreg_pidm,
                                               rorenrr_enrr_code,
                                               'B',
                                               rotsreg_start_date
                                             ),
                             rokmisc_rules.f_calc_hrs_using_enrr
                                             ( rorenrr_aidy_code,
                                               rotsreg_term_code,
                                               rotsreg_pidm,
                                               rorenrr_enrr_code,
                                               'A',
                                               rotsreg_start_date
                                             )
                        FROM robprds,
                             rorprds,
                             rorenrr,
                             rotsreg
                       WHERE rotsreg_term_code  = rorprds_term_code
                         AND rorprds_period     = robprds_period
                         AND rorenrr_aidy_code IN (robprds_aidy_code,robprds_aidy_code_cross)
                    GROUP BY rotsreg_term_code,
                             rotsreg_pidm,
                             rotsreg_start_date,
                             rorenrr_aidy_code,
                             rorenrr_enrr_code"
"BANINST1","ROVSAPR","Max Term SAP Status View","SELECT RORSAPR_PIDM,
                             RORSAPR_TERM_CODE,
                             RORSAPR_SAPR_CODE_CALC,
                             RORSAPR_SAPR_CODE
                        FROM RORSAPR R
                       WHERE RORSAPR_TERM_CODE = ( SELECT MAX(RORSAPR_TERM_CODE)
                                                     FROM RORSAPR
                                                    WHERE RORSAPR_PIDM = R.RORSAPR_PIDM
                                                 )"
"BANINST1","ROVSA18","2017-2018 Max Term SAP Status View","SELECT RORSAPR_PIDM,
       RORSAPR_TERM_CODE,
       RORSAPR_SAPR_CODE_CALC,
       RORSAPR_SAPR_CODE,
       RORSAPR_LOCK_IND
  FROM RORSAPR R
 WHERE RORSAPR_TERM_CODE =
       (SELECT MAX(RORSAPR_TERM_CODE)
          FROM RORSAPR
         WHERE RORSAPR_PIDM = R.RORSAPR_PIDM
           AND RORSAPR_TERM_CODE <=
                (SELECT MAX(ROBINST_CURRENT_TERM_CODE)
                   FROM ROBINST
                  WHERE ROBINST_AIDY_START_YEAR = '2017'
                    AND ROBINST_AIDY_END_YEAR = '2018'
                )
       )"
"BANINST1","ROVSA17","2016-2017 Max Term SAP Status View","SELECT RORSAPR_PIDM,
       RORSAPR_TERM_CODE,
       RORSAPR_SAPR_CODE_CALC,
       RORSAPR_SAPR_CODE,
       RORSAPR_LOCK_IND
  FROM RORSAPR R
 WHERE RORSAPR_TERM_CODE =
       (SELECT MAX(RORSAPR_TERM_CODE)
          FROM RORSAPR
         WHERE RORSAPR_PIDM = R.RORSAPR_PIDM
           AND RORSAPR_TERM_CODE <=
                (SELECT MAX(ROBINST_CURRENT_TERM_CODE)
                   FROM ROBINST
                  WHERE ROBINST_AIDY_START_YEAR = '2016'
                    AND ROBINST_AIDY_END_YEAR = '2017'
                )
       )"
"BANINST1","ROVSA16","2015-2016 Max Term SAP Status View","SELECT RORSAPR_PIDM,
       RORSAPR_TERM_CODE,
       RORSAPR_SAPR_CODE_CALC,
       RORSAPR_SAPR_CODE,
       RORSAPR_LOCK_IND
  FROM RORSAPR R
 WHERE RORSAPR_TERM_CODE =
       (SELECT MAX(RORSAPR_TERM_CODE)
          FROM RORSAPR
         WHERE RORSAPR_PIDM = R.RORSAPR_PIDM
           AND RORSAPR_TERM_CODE <=
                (SELECT MAX(ROBINST_CURRENT_TERM_CODE)
                   FROM ROBINST
                  WHERE ROBINST_AIDY_START_YEAR = '2015'
                    AND ROBINST_AIDY_END_YEAR = '2016'
                )
       )"
"BANINST1","ROVSA15","2014-2015 Max Term SAP Status View","SELECT RORSAPR_PIDM,
       RORSAPR_TERM_CODE,
       RORSAPR_SAPR_CODE_CALC,
       RORSAPR_SAPR_CODE,
       RORSAPR_LOCK_IND
  FROM RORSAPR R
 WHERE RORSAPR_TERM_CODE =
       (SELECT MAX(RORSAPR_TERM_CODE)
          FROM RORSAPR
         WHERE RORSAPR_PIDM = R.RORSAPR_PIDM
           AND RORSAPR_TERM_CODE <=
                (SELECT MAX(ROBINST_CURRENT_TERM_CODE)
                   FROM ROBINST
                  WHERE ROBINST_AIDY_START_YEAR = '2014'
                    AND ROBINST_AIDY_END_YEAR = '2015'
                )
       )"
"BANINST1","ROVSA14","2013-2014 Max Term SAP Status View","SELECT RORSAPR_PIDM,
       RORSAPR_TERM_CODE,
       RORSAPR_SAPR_CODE_CALC,
       RORSAPR_SAPR_CODE,
       RORSAPR_LOCK_IND
  FROM RORSAPR R
 WHERE RORSAPR_TERM_CODE =
       (SELECT MAX(RORSAPR_TERM_CODE)
          FROM RORSAPR
         WHERE RORSAPR_PIDM = R.RORSAPR_PIDM
           AND RORSAPR_TERM_CODE <=
                (SELECT MAX(ROBINST_CURRENT_TERM_CODE)
                   FROM ROBINST
                  WHERE ROBINST_AIDY_START_YEAR = '2013'
                    AND ROBINST_AIDY_END_YEAR = '2014'
                )
       )"
"BANINST1","ROVSA13","2012-2013 Max Term SAP Status View","SELECT RORSAPR_PIDM,
       RORSAPR_TERM_CODE,
       RORSAPR_SAPR_CODE_CALC,
       RORSAPR_SAPR_CODE,
       RORSAPR_LOCK_IND
  FROM RORSAPR R
 WHERE RORSAPR_TERM_CODE =
       (SELECT MAX(RORSAPR_TERM_CODE)
          FROM RORSAPR
         WHERE RORSAPR_PIDM = R.RORSAPR_PIDM
           AND RORSAPR_TERM_CODE <=
                (SELECT MAX(ROBINST_CURRENT_TERM_CODE)
                   FROM ROBINST
                  WHERE ROBINST_AIDY_START_YEAR = '2012'
                    AND ROBINST_AIDY_END_YEAR = '2013'
                )
       )"
"BANINST1","ROVSA12","2011-2012 Max Term SAP Status View","SELECT RORSAPR_PIDM,
       RORSAPR_TERM_CODE,
       RORSAPR_SAPR_CODE_CALC,
       RORSAPR_SAPR_CODE,
       RORSAPR_LOCK_IND
  FROM RORSAPR R
 WHERE RORSAPR_TERM_CODE =
       (SELECT MAX(RORSAPR_TERM_CODE)
          FROM RORSAPR
         WHERE RORSAPR_PIDM = R.RORSAPR_PIDM
           AND RORSAPR_TERM_CODE <=
                (SELECT MAX(ROBINST_CURRENT_TERM_CODE)
                   FROM ROBINST
                  WHERE ROBINST_AIDY_START_YEAR = '2011'
                    AND ROBINST_AIDY_END_YEAR = '2012'
                )
       )"
"BANINST1","ROVSA05","2004-2005 Max Term SAP Status View","SELECT
	RORSAPR_PIDM,
	RORSAPR_TERM_CODE,
	RORSAPR_SAPR_CODE_CALC,
	RORSAPR_SAPR_CODE
FROM RORSAPR R
WHERE
RORSAPR_TERM_CODE =
       (SELECT A.ROVTERM_CODE FROM ROVTERM A
         WHERE A.ROWID =
         (
            SELECT MIN ( B.ROWID ) FROM ROVTERM B
               WHERE B.ROVTERM_START_DATE =
               (
                  SELECT MAX (C.ROVTERM_START_DATE ) FROM ROVTERM C
                     WHERE C.ROVTERM_START_DATE IN
                     (
                        SELECT D.ROVTERM_START_DATE FROM ROVTERM D
                           WHERE D.ROVTERM_CODE IN
                      ( SELECT RORSAPR_TERM_CODE FROM RORSAPR
                        WHERE RORSAPR_PIDM = R.RORSAPR_PIDM
                            AND RORSAPR_TERM_CODE <=
                               ( SELECT ROBINST_CURRENT_TERM_CODE
                                 FROM ROBINST
                                 WHERE ROBINST_AIDY_END_YEAR = '2005'
                               )
                      )
                     )
               )
         )
       )
 "
"BANINST1","ROVRASG","Housing Assignment View","SELECT SLRRASG_PIDM          ,
       SLRRASG_BLDG_CODE     ,
       SLRRASG_ROOM_NUMBER   ,
       SLRRASG_TERM_CODE     ,
       SLRRASG_RRCD_CODE     ,
       SLRRASG_BEGIN_DATE    ,
       SLRRASG_END_DATE      ,
       SLRRASG_TOTAL_DAYS    ,
       SLRRASG_TOTAL_MONTHS  ,
       SLRRASG_TOTAL_TERMS   ,
       SLRRASG_ASCD_CODE     ,
       SLRRASG_ASCD_DATE     ,
       SLBRDEF_PHONE_AREA          ,
       SLBRDEF_PHONE_NUMBER        ,
       SLBRDEF_PHONE_EXTENSION     ,
       SLRRASG_ONL_OR_BAT    ,
       SLRRASG_ACTIVITY_DATE ,
       SLRRASG_AR_IND        ,
       SLRRASG_OVERLOAD_IND  ,
       SLRRASG_ROLL_IND      ,
       SLRRASG_OVERRIDE_ERROR,
       SLRRASG_ASSESS_NEEDED
FROM   SLRRASG,
       SLBRDEF
WHERE  SLRRASG_BLDG_CODE   = SLBRDEF_BLDG_CODE
  AND  SLRRASG_ROOM_NUMBER = SLBRDEF_ROOM_NUMBER
  AND  SLBRDEF_TERM_CODE_EFF =
      (SELECT MAX(SLBRDEF_TERM_CODE_EFF)
         FROM SLBRDEF
        WHERE SLBRDEF_BLDG_CODE = SLRRASG_BLDG_CODE
          AND SLBRDEF_ROOM_NUMBER = SLRRASG_ROOM_NUMBER
          AND SLBRDEF_TERM_CODE_EFF <= SLRRASG_TERM_CODE)
 "
"BANINST1","ROVPREQ","Housing Special Attributes View","SELECT
       SLRPREQ_PIDM                ,
       SLRPREQ_TERM_CODE           ,
       SLRPREQ_RDEF_CODE           ,
       SLRPREQ_MUST_MATCH          ,
       SLRPREQ_ACTIVITY_DATE
FROM   SLRPREQ

 "
"BANINST1","ROVPENR","Period Hours For Enrollment Rule View","SELECT rovtenr_pidm,
                             rorprds_period,
                             rovtenr_aidy_code,
                             rovtenr_enrr_code,
                             SUM(rovtenr_credit_hrs),
                             SUM(rovtenr_bill_hrs),
                             SUM(rovtenr_adj_hrs)
                        FROM rorprds,
--                           rortprd,                                                                         -- 8.25-1
                             rovtenr,
                             rorstat x                                                                        -- 8.25-1
                       WHERE rorstat_pidm       = rovtenr_pidm                                                -- 8.25-1
--                       AND rortprd_aidy_code  = rorstat_aidy_code                                           -- 8.25-1
--                       AND rortprd_aprd_code IN (rorstat_aprd_code,rorstat_aprd_code_pell)                  -- 8.25-1
--                       AND rortprd_period     = rorprds_period                                              -- 8.25-1
--                       AND rovtenr_term_code  = rorprds_term_code                                           -- 8.25-1
--                       AND rovtenr_aidy_code  = rorstat_aidy_code                                           -- 8.25-1
                         AND rorprds_period   IN ( SELECT rortprd_period                                      -- 8.25-1
                                                     FROM rortprd                                             -- 8.25-1
                                                     WHERE rortprd_aidy_code  = x.rorstat_aidy_code           -- 8.25-1
                                                       AND rortprd_aprd_code IN (x.rorstat_aprd_code,         -- 8.25-1
                                                                                 x.rorstat_aprd_code_pell)    -- 8.25-1
                                                 )                                                            -- 8.25-1
                         AND rovtenr_term_code = rorprds_term_code                                            -- 8.25-1
                         AND rovtenr_aidy_code = rorstat_aidy_code                                            -- 8.25-1
                    GROUP BY rovtenr_pidm,
                             rorprds_period,
                             rovtenr_aidy_code,
                             rovtenr_enrr_code"
"BANINST1","ROVPEND","FINAID VIEW OF PENDING MAIL","SELECT
 GURMAIL_PIDM,
 GURMAIL_SYSTEM_IND,
 GURMAIL_TERM_CODE,
 GURMAIL_LETR_CODE,
 GURMAIL_MODULE_CODE,
 GURMAIL_ADMIN_IDENTIFIER,
 GURMAIL_MATL_CODE_MOD,
 GURMAIL_DATE_INIT,
 GURMAIL_DATE_PRINTED,
 GURMAIL_USER,
 GURMAIL_WAIT_DAYS,
 GURMAIL_PUB_GEN,
 GURMAIL_INIT_CODE,
 GURMAIL_ORIG_IND,
 GURMAIL_ACTIVITY_DATE
FROM GURMAIL
WHERE  GURMAIL_DATE_INIT + NVL(GURMAIL_WAIT_DAYS,0) <= SYSDATE
       and GURMAIL_DATE_PRINTED IS NULL
       and GURMAIL_SYSTEM_IND = 'R'

 "
"BANINST1","ROVPCOL","Prior College Selection View","SELECT SHRTRIT_PIDM,
       '',
       SUBSTR(TO_CHAR(SHRTRIT_SEQ_NO),1,2),
       SHRTRIT_SBGI_CODE,
       NVL(SHRTRIT_SBGI_DESC,STVSBGI_DESC),
       SUBSTR(TO_CHAR(SHRTRAM_SEQ_NO),1,2),
       SHRTRAM_LEVL_CODE,
       SHRTRAM_ATTN_PERIOD,
       '',
       '',
       SHRTRAM_DEGC_CODE,
       STVSBGI_TYPE_IND
  FROM SHRTRAM,
       SHRTRIT Y,
       STVSBGI
 WHERE SHRTRAM_TRIT_SEQ_NO (+) = SHRTRIT_SEQ_NO
   AND SHRTRAM_PIDM        (+) = SHRTRIT_PIDM
   AND SHRTRIT_SBGI_CODE       = STVSBGI_CODE (+)
UNION
SELECT SORDEGR_PIDM,
       '',
       '',
       SORDEGR_SBGI_CODE,
       STVSBGI_DESC,
       '',
       '',
       '',
       SUBSTR(TO_CHAR(SORDEGR_ATTEND_FROM,'DD-MON-YYYY'),1,11),
       SUBSTR(TO_CHAR(SORDEGR_ATTEND_TO,'DD-MON-YYYY'),1,11),
       SORDEGR_DEGC_CODE,
       STVSBGI_TYPE_IND
  FROM SORDEGR X,
       STVSBGI
 WHERE SORDEGR_SBGI_CODE = STVSBGI_CODE
UNION
SELECT SORPCOL_PIDM,
       '',
       '',
       SORPCOL_SBGI_CODE,
       STVSBGI_DESC,
       '',
       '',
       '',
       '',
       '',
       '',
       STVSBGI_TYPE_IND
  FROM SORPCOL X,
       STVSBGI
 WHERE SORPCOL_SBGI_CODE = STVSBGI_CODE
   AND NOT EXISTS (select 'X'
		     from sordegr
	            where sordegr_pidm = X.sorpcol_pidm
                      and sordegr_sbgi_code = X.sorpcol_sbgi_code)"
"BANINST1","ROVPBST","Period Budget Student View","SELECT RORSTAT_AIDY_CODE,
                             RORSTAT_PIDM,
                             RORTPRD_PERIOD,
                             SGBSTDN_STST_CODE,
                             SGBSTDN_LEVL_CODE,
                             SGBSTDN_STYP_CODE,
                             SGBSTDN_TERM_CODE_MATRIC,
                             SGBSTDN_TERM_CODE_ADMIT,
                             SGBSTDN_EXP_GRAD_DATE,
                             SGBSTDN_CAMP_CODE,
                             SGBSTDN_FULL_PART_IND,
                             SGBSTDN_SESS_CODE,
                             SGBSTDN_RESD_CODE,
                             SGBSTDN_COLL_CODE_1,
                             SGBSTDN_DEGC_CODE_1,
                             SGBSTDN_MAJR_CODE_1,
                             SGBSTDN_MAJR_CODE_MINR_1,
                             SGBSTDN_MAJR_CODE_MINR_1_2,
                             SGBSTDN_MAJR_CODE_CONC_1,
                             SGBSTDN_MAJR_CODE_CONC_1_2,
                             SGBSTDN_MAJR_CODE_CONC_1_3,
                             SGBSTDN_COLL_CODE_2,
                             SGBSTDN_DEGC_CODE_2,
                             SGBSTDN_MAJR_CODE_2,
                             SGBSTDN_MAJR_CODE_MINR_2,
                             SGBSTDN_MAJR_CODE_MINR_2_2,
                             SGBSTDN_MAJR_CODE_CONC_2,
                             SGBSTDN_MAJR_CODE_CONC_2_2,
                             SGBSTDN_MAJR_CODE_CONC_2_3,
                             SGBSTDN_ORSN_CODE,
                             SGBSTDN_PRAC_CODE,
                             SGBSTDN_ADVR_PIDM,
                             SGBSTDN_GRAD_CREDIT_APPR_IND,
                             SGBSTDN_CAPL_CODE,
                             SGBSTDN_LEAV_CODE,
                             SGBSTDN_LEAV_FROM_DATE,
                             SGBSTDN_LEAV_TO_DATE,
                             SGBSTDN_ASTD_CODE,
                             SGBSTDN_TERM_CODE_ASTD,
                             SGBSTDN_RATE_CODE,
                             SGBSTDN_MAJR_CODE_1_2,
                             SGBSTDN_MAJR_CODE_2_2,
                             SGBSTDN_EDLV_CODE,
                             SGBSTDN_INCM_CODE,
                             SGBSTDN_ADMT_CODE,
                             SGBSTDN_EMEX_CODE,
                             SGBSTDN_APRN_CODE,
                             SGBSTDN_TRCN_CODE,
                             SGBSTDN_GAIN_CODE,
                             SGBSTDN_VOED_CODE,
                             SGBSTDN_BLCK_CODE,
                             SGBSTDN_TERM_CODE_GRAD,
                             SGBSTDN_ACYR_CODE,
                             SGBSTDN_DEPT_CODE,
                             SGBSTDN_SITE_CODE,
                             SGBSTDN_DEPT_CODE_2,
                             SGBSTDN_EGOL_CODE,
                             SGBSTDN_DEGC_CODE_DUAL,
                             SGBSTDN_LEVL_CODE_DUAL,
                             SGBSTDN_DEPT_CODE_DUAL,
                             SGBSTDN_COLL_CODE_DUAL,
                             SGBSTDN_MAJR_CODE_DUAL,
                             SGBSTDN_BSKL_CODE,
                             SGBSTDN_PROGRAM_1,
                             SGBSTDN_TERM_CODE_CTLG_1,
                             SGBSTDN_DEPT_CODE_1_2,
                             SGBSTDN_MAJR_CODE_CONC_121,
                             SGBSTDN_MAJR_CODE_CONC_122,
                             SGBSTDN_MAJR_CODE_CONC_123,
                             SGBSTDN_TERM_CODE_ADMIT_2,
                             SGBSTDN_ADMT_CODE_2,
                             SGBSTDN_PROGRAM_2,
                             SGBSTDN_TERM_CODE_CTLG_2,
                             SGBSTDN_LEVL_CODE_2,
                             SGBSTDN_CAMP_CODE_2,
                             SGBSTDN_DEPT_CODE_2_2,
                             SGBSTDN_MAJR_CODE_CONC_221,
                             SGBSTDN_MAJR_CODE_CONC_222,
                             SGBSTDN_MAJR_CODE_CONC_223,
                             SGBSTDN_PREV_CODE,
                             SGBSTDN_TERM_CODE_PREV,
                             SGBSTDN_CAST_CODE,
                             SGBSTDN_TERM_CODE_CAST,
                             SGBSTDN_SCPC_CODE
                        FROM SGBSTDN,
                             RORPRDS Y,
                             RORTPRD,
                             RORSTAT X
                       WHERE RORSTAT_APRD_CODE     = RORTPRD_APRD_CODE
                         AND RORSTAT_AIDY_CODE     = RORTPRD_AIDY_CODE
                         AND RORTPRD_PERIOD        = RORPRDS_PERIOD
                         AND RORPRDS_STUDENT_IND   = 'Y'
                         AND SGBSTDN_PIDM          = RORSTAT_PIDM
                         AND SGBSTDN_TERM_CODE_EFF = ( SELECT MAX(SGBSTDN_TERM_CODE_EFF)
                                                         FROM SGBSTDN
                                                        WHERE SGBSTDN_PIDM           = X.RORSTAT_PIDM
                                                          AND SGBSTDN_TERM_CODE_EFF <= Y.RORPRDS_TERM_CODE
                                                     )"
"BANINST1","ROVPBAD","Period Budget Admissions View","SELECT rorstat_aidy_code,
                             rorstat_pidm,
                             rortprd_period,
                             saradap_term_code_entry,
                             saradap_appl_no,
                             saradap_levl_code,
                             saradap_appl_date,
                             saradap_apst_code,
                             saradap_apst_date,
                             saradap_maint_ind,
                             saradap_admt_code,
                             saradap_styp_code,
                             saradap_camp_code,
                             saradap_site_code,
                             saradap_coll_code_1,
                             saradap_degc_code_1,
                             saradap_majr_code_1,
                             saradap_coll_code_2,
                             saradap_degc_code_2,
                             saradap_majr_code_2,
                             saradap_resd_code,
                             saradap_full_part_ind,
                             saradap_sess_code,
                             saradap_wrsn_code,
                             saradap_intv_code,
                             saradap_fee_ind,
                             saradap_fee_date,
                             saradap_rate_code,
                             saradap_egol_code,
                             saradap_edlv_code,
                             saradap_majr_code_conc_1,
                             saradap_dept_code,
                             saradap_sbgi_code,
                             saradap_recr_code,
                             saradap_rtyp_code,
                             saradap_dept_code_2,
                             saradap_majr_code_conc_2,
                             saradap_program_1,
                             saradap_term_code_ctlg_1,
                             saradap_majr_code_1_2,
                             saradap_dept_code_1_2,
                             saradap_majr_code_conc_1_2,
                             saradap_majr_code_conc_1_3,
                             saradap_majr_code_conc_121,
                             saradap_majr_code_conc_122,
                             saradap_majr_code_conc_123,
                             saradap_majr_code_minr_1_1,
                             saradap_majr_code_minr_1_2,
                             saradap_program_2,
                             saradap_term_code_ctlg_2,
                             saradap_levl_code_2,
                             saradap_camp_code_2,
                             saradap_majr_code_2_2,
                             saradap_dept_code_2_2,
                             saradap_majr_code_conc_211,
                             saradap_majr_code_conc_212,
                             saradap_majr_code_conc_213,
                             saradap_majr_code_conc_221,
                             saradap_majr_code_conc_222,
                             saradap_majr_code_conc_223,
                             saradap_majr_code_minr_2_1,
                             saradap_majr_code_minr_2_2,
                             saradap_web_acct_misc_ind,
                             saradap_web_cashier_user,
                             saradap_web_trans_no,
                             saradap_web_amount,
                             saradap_web_receipt_number,
                             saradap_waiv_code,
                             saradap_appl_preference,
                             sarappd_apdc_date,
                             sarappd_apdc_code
                        FROM saradap X LEFT OUTER JOIN sarappd
                                                    ON saradap_pidm            = sarappd_pidm
                                                   AND saradap_term_code_entry = sarappd_term_code_entry
                                                   AND saradap_appl_no         = sarappd_appl_no,
                             robprds y,
                             rortprd x,
                             rorstat
                       WHERE rorstat_aprd_code        = rortprd_aprd_code
                         AND rorstat_aidy_code        = rortprd_aidy_code
                         AND rortprd_period           = robprds_period
                         AND rorstat_pidm             = saradap_pidm
                         AND saradap_term_code_entry <= ( SELECT rorprds_term_code
                                                            FROM rorprds
                                                           WHERE rorprds_student_ind = 'Y'
                                                             AND rorprds_period      = y.robprds_period
                                                        )
                         AND ( sarappd_pidm          IS NULL
                          OR   TO_CHAR(sarappd_apdc_date, 'YYYYMMDD') || sarappd_seq_no =
                                  ( SELECT MAX(TO_CHAR(sarappd_apdc_date,'YYYYMMDD') || sarappd_seq_no)
                                      FROM sarappd
                                     WHERE sarappd_term_code_entry = X.saradap_term_code_entry
                                       AND sarappd_appl_no         = X.saradap_appl_no
                                       AND sarappd_pidm            = X.saradap_pidm
                                  )
                             )"
"BANINST1","ROVMASG","Meal Assignment View","SELECT SLRMASG_PIDM                ,
       SLRMASG_TERM_CODE           ,
       SLRMASG_MRCD_CODE           ,
       SLRMASG_BEGIN_DATE          ,
       SLRMASG_END_DATE            ,
       SLRMASG_TOTAL_DAYS          ,
       SLRMASG_TOTAL_MONTHS        ,
       SLRMASG_TOTAL_TERMS         ,
       SLRMASG_MSCD_CODE           ,
       SLRMASG_MSCD_DATE           ,
       SLRMASG_ONL_OR_BAT          ,
       SLRMASG_ACTIVITY_DATE       ,
       SLRMASG_AR_IND              ,
       SLRMASG_ROLL_IND            ,
       SLRMASG_ASSESS_NEEDED
FROM   SLRMASG

 "
"BANINST1","ROVLOGM","Data Log Activity Master View","SELECT RORLOGM_ACTIVITY_DATE,
                             RORLOGM_USER_ID,
                             RORLOGM_SESSION_ID,
                             RORLOGM_SEQ_NO,
                             RORLOGM_TABLE_NAME,
                             DECODE(RORLOGM_ACTION_IND, 'I', 'INSERT',
                                                        'D', 'DELETE',
                                                        'U', 'UPDATE'),
                             RORLOGM_AIDY_CODE,
                             RORLOGM_PIDM,
                             SPRIDEN_ID,
                             RORLOGM_KEY_1,
                             RORLOGM_KEY_2,
                             RORLOGM_KEY_3,
                             RORLOGM_KEY_4,
                             RORLOGM_KEY_5,
                             RORLOGM_KEY_6 ,                                    -- 081401-1
                             RORLOGM_KEY_7 ,                                    -- 081401-1
                             RORLOGM_KEY_8 ,                                    -- 081401-1
                             RORLOGM_KEY_9 ,                                    -- 081401-1
                             RORLOGM_KEY_10,                                    -- 081401-1
                             RORLOGM_KEY_11,                                    -- 081401-1
                             RORLOGM_KEY_12                                     -- 081401-1
                        FROM RORLOGM
                        LEFT OUTER JOIN SPRIDEN                                 -- This makes RORLOGM the required table and SPRIDEN as optional
                          ON RORLOGM_PIDM = SPRIDEN_PIDM
                       WHERE SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","ROVHSCH","High School Selection View","SELECT	SORHSCH_PIDM,
	SORHSCH_SBGI_CODE,
	SORHSCH_GRADUATION_DATE,
	SORHSCH_GPA,
	SORHSCH_CLASS_RANK,
	SORHSCH_CLASS_SIZE,
	SORHSCH_PERCENTILE,
	SORHSCH_DPLM_CODE,
	SORHSCH_COLL_PREP_IND
FROM	SORHSCH

 "
"BANINST1","ROVHOLD","Student Holds View","SELECT	SPRHOLD_PIDM,
	SPRHOLD_HLDD_CODE,
	SPRHOLD_USER,
	SPRHOLD_FROM_DATE,
	SPRHOLD_TO_DATE,
	SPRHOLD_RELEASE_IND,
	SPRHOLD_REASON,
	SPRHOLD_AMOUNT_OWED,
	SPRHOLD_ORIG_CODE,
	SPRHOLD_ACTIVITY_DATE
FROM	SPRHOLD

 "
"BANINST1","ROVFAID","Financial Aid Miscellaneous View","SELECT SPRIDEN_PIDM,
       SPRIDEN_ID,
       ROBINST_AIDY_CODE,
       ROBINST_AIDY_DESC,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI,
       SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_LAST_NAME
  FROM SPRIDEN, RORSTAT, ROBINST
 WHERE SPRIDEN_PIDM = RORSTAT_PIDM
   AND SPRIDEN_ENTITY_IND = 'P'
   AND SPRIDEN_CHANGE_IND IS NULL
   AND RORSTAT_AIDY_CODE = ROBINST_AIDY_CODE"
"BANINST1","ROVFAAD","","SELECT rorstat_aidy_code,
                             rorstat_pidm,
                             rorprds_period,
                             roratnd_enrr_code,
                             roratnd_attend_date
                        FROM rortprd,
                             rorprds,
                             rorstat,
                             roratnd x
                       WHERE rorstat_pidm         = roratnd_pidm
                         AND rortprd_aidy_code    = rorstat_aidy_code
                         AND rortprd_aprd_code   IN (rorstat_aprd_code,
                                                     rorstat_aprd_code_pell)
                         AND rortprd_period       = rorprds_period
                         AND roratnd_term_code    = rorprds_term_code
                      UNION
                      SELECT rorstat_aidy_code,
                             rorstat_pidm,
                             rorprds_period,
                             rorenrl_enrr_code,
                             stvterm_start_date
                        FROM rortprd,
                             rorprds,
                             rorstat,
                             stvterm x,
                             rorenrl y
                       WHERE rorstat_pidm         = rorenrl_pidm
                         AND rortprd_aidy_code    = rorstat_aidy_code
                         AND rortprd_aprd_code   IN (rorstat_aprd_code,
                                                     rorstat_aprd_code_pell)
                         AND rortprd_period       = rorprds_period
                         AND rorenrl_term_code    = rorprds_term_code
                         AND rorenrl_term_code    = stvterm_code
                         AND NOT EXISTS
                                  ( SELECT 'Y'
                                      FROM roratnd
                                     WHERE roratnd_pidm        = y.rorenrl_pidm
                                       AND roratnd_enrr_code   = y.rorenrl_enrr_code
                                       AND roratnd_term_code   = y.rorenrl_term_code
                                  )"
"BANINST1","ROVEXPT","Billing Exemption View","SELECT	TBBEXPT_EXEMPTION_CODE,
	TBBEXPT_TERM_CODE,
	TBBEXPT_DESC,
	TBBEXPT_DETAIL_CODE
FROM	TBBEXPT
 "
"BANINST1","ROVESUM","Billing Exemption Payment Summary View","SELECT TBRACCD_PIDM,
       TBRACCD_CROSSREF_NUMBER,
       TBRACCD_TERM_CODE,
       NVL(SUM(TBRACCD_AMOUNT),0)
  FROM TBRACCD,
       RORVIEW
 WHERE TBRACCD_SRCE_CODE  = 'E'
   AND TBRACCD_PIDM       = RORVIEW_PIDM
   AND RORVIEW_TYPE_IND   = 'R'
   AND RORVIEW_SESSION_ID = USERENV('SESSIONID')
 GROUP BY TBRACCD_PIDM,
          TBRACCD_CROSSREF_NUMBER,
          TBRACCD_TERM_CODE
 "
"BANINST1","ROVDGMR","Degree and Other Formal Awards View","SELECT
       SHRDGMR_PIDM                    ,
       SHRDGMR_SEQ_NO                  ,
       SHRDGMR_DEGC_CODE               ,
       SHRDGMR_DEGS_CODE               ,
       SHRDGMR_LEVL_CODE               ,
       SHRDGMR_COLL_CODE_1             ,
       SHRDGMR_MAJR_CODE_1             ,
       SHRDGMR_MAJR_CODE_1_2           ,
       SHRDGMR_MAJR_CODE_MINR_1        ,
       SHRDGMR_MAJR_CODE_MINR_1_2      ,
       SHRDGMR_MAJR_CODE_CONC_1        ,
       SHRDGMR_MAJR_CODE_CONC_1_2      ,
       SHRDGMR_MAJR_CODE_CONC_1_3      ,
       SHRDGMR_COLL_CODE_2             ,
       SHRDGMR_MAJR_CODE_2             ,
       SHRDGMR_MAJR_CODE_2_2           ,
       SHRDGMR_MAJR_CODE_MINR_2        ,
       SHRDGMR_MAJR_CODE_MINR_2_2      ,
       SHRDGMR_MAJR_CODE_CONC_2        ,
       SHRDGMR_MAJR_CODE_CONC_2_2      ,
       SHRDGMR_MAJR_CODE_CONC_2_3      ,
       SHRDGMR_APPL_DATE               ,
       SHRDGMR_GRAD_DATE               ,
       SHRDGMR_ACYR_CODE_BULLETIN      ,
       SHRDGMR_ACTIVITY_DATE           ,
       SHRDGMR_TERM_CODE_STUREC
FROM   SHRDGMR

 "
"BANINST1","ROVDATA","Web for Executives Financial Aid Cleansing View","SELECT 'FINAID',
             'AID YEAR',
             'B',
             '',
             substr(robinst_aidy_start_year || robinst_aidy_end_year,1,8),
             '',
             robinst_aidy_desc,
             substr(robinst_aidy_desc,1,15)
        FROM robinst
 "
"BANINST1","ROVCSUM","Third Party Contract Payment Detail View","SELECT TBRACCD_PIDM,
       TBRACCD_CROSSREF_PIDM,
       TBRACCD_CROSSREF_NUMBER,
       TBRACCD_TERM_CODE,
       SUM(TBRACCD_AMOUNT)
  FROM TBRACCD,
       RORVIEW
 WHERE TBRACCD_SRCE_CODE  = 'C'
   AND TBRACCD_PIDM       = RORVIEW_PIDM
   AND RORVIEW_TYPE_IND   = 'R'
   AND RORVIEW_SESSION_ID = USERENV('SESSIONID')
 GROUP BY TBRACCD_PIDM,
          TBRACCD_CROSSREF_PIDM,
          TBRACCD_CROSSREF_NUMBER,
          TBRACCD_TERM_CODE
 "
"BANINST1","ROVCRHR_PRDS","Credit Hours Period View","SELECT RORCRHR_AIDY_CODE                   ROVCRHR_AIDY_CODE,
       RORCRHR_LEVL_CODE                   ROVCRHR_LEVL_CODE,
       RORCRHR_PERIOD                      ROVCRHR_PERIOD,
       ROBPRDS_SEQ_NO                      ROVCRHR_PRDS_SEQ_NO,
       RORCRHR_ACTIVITY_DATE               ROVCRHR_ACTIVITY_DATE,
       RORCRHR_FULL_TIME_CR_HRS            ROVCRHR_FULL_TIME_CR_HRS,
       RORCRHR_3QUARTER_CR_HRS             ROVCRHR_3QUARTER_CR_HRS,
       RORCRHR_HALF_TIME_CR_HRS            ROVCRHR_HALF_TIME_CR_HRS,
       RORCRHR_USER_ID                     ROVCRHR_USER_ID,
       RORCRHR_DATA_ORIGIN                 ROVCRHR_DATA_ORIGIN,
       RORCRHR_TERM_CODE                   ROVCRHR_TERM_CODE
FROM   ROBPRDS,
       RORCRHR
WHERE  RORCRHR_PERIOD = ROBPRDS_PERIOD "
"BANINST1","ROVCONT","Third Party Contract View","SELECT	TBBCONT_PIDM,
	SPRIDEN_ID,
	SPRIDEN_LAST_NAME,
	TBBCONT_CONTRACT_NUMBER,
	TBBCONT_TERM_CODE,
	TBBCONT_DESC,
	TBBCONT_DETAIL_PAY_CODE
FROM	TBBCONT,
	SPRIDEN
WHERE	TBBCONT_PIDM = SPRIDEN_PIDM
AND	SPRIDEN_ENTITY_IND = 'C'
AND	SPRIDEN_CHANGE_IND IS NULL
 "
"BANINST1","ROVCABP","Current Attending Hours by Period View","SELECT rorstat_aidy_code,
                             rorstat_pidm,
                             rorprds_period,
                             robprds_seq_no,
                             rorenrr_enrr_code,
                             rorenrr_system_req_ind,
                             atnd_v.ATTEND_DATE,
                             rokmisc_rules.f_calc_period_hrs_using_enrr
                                             ( rorstat_aidy_code,
                                               rorprds_period,
                                               rorstat_pidm,
                                               rorenrr_enrr_code,
                                               'C',
                                               atnd_v.ATTEND_DATE
                                             ),
                             rokmisc_rules.f_calc_period_hrs_using_enrr
                                             ( rorstat_aidy_code,
                                               rorprds_period,
                                               rorstat_pidm,
                                               rorenrr_enrr_code,
                                               'B',
                                               atnd_v.ATTEND_DATE
                                              ),
                             rokmisc_rules.f_calc_period_hrs_using_enrr
                                             ( rorstat_aidy_code,
                                               rorprds_period,
                                               rorstat_pidm,
                                               rorenrr_enrr_code,
                                               'A',
                                              atnd_v.ATTEND_DATE
                                             )
                        FROM
                             ( SELECT rotsreg_pidm         PIDM,
                                      rotsreg_term_code    TERM_CODE,
                                      rotsreg_start_date   ATTEND_DATE
                                 FROM rotsreg
                             GROUP BY rotsreg_pidm,
                                      rotsreg_term_code,
                                      rotsreg_start_date
                             ) atnd_v,
                             robprds,
                             rorprds,
                             rorenrr,
                             rorstat x
                       WHERE rorstat_pidm       = atnd_v.pidm
                         AND rorprds_period    IN ( SELECT rortprd_period
                                                      FROM rortprd
                                                     WHERE rortprd_aidy_code  = x.rorstat_aidy_code
                                                       AND rortprd_aprd_code IN (x.rorstat_aprd_code,
                                                                                 x.rorstat_aprd_code_pell)
                                                  )
                         AND rorprds_period     = robprds_period
                         AND atnd_v.term_code   = rorprds_term_code
                         AND rorstat_aidy_code  = rorenrr_aidy_code"
"BANINST1","ROVAY18","2017-2018 Admissions Applications View - Current Year Only Including Students without Decision","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2017'
        AND    ROBINST_AIDY_END_YEAR = '2018'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBINST_AIDY_START_YEAR = '2017'
                           AND ROBINST_AIDY_END_YEAR = '2018'
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD)   )
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))
   AND X.SARADAP_TERM_CODE_ENTRY IN (
      SELECT   RORPRDS_TERM_CODE FROM RORPRDS,ROBPRDS, ROBINST
        WHERE  (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR
                ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND ROBINST_AIDY_START_YEAR = '2017'
          AND ROBINST_AIDY_END_YEAR = '2018'
          AND   ROBPRDS_PERIOD = RORPRDS_PERIOD)"
"BANINST1","ROVAY17","2016-2017 Admissions Applications View - Current Year Only Including Students without Decision","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2016'
        AND    ROBINST_AIDY_END_YEAR = '2017'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBINST_AIDY_START_YEAR = '2016'
                           AND ROBINST_AIDY_END_YEAR = '2017'
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD)   )
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))
   AND X.SARADAP_TERM_CODE_ENTRY IN (
      SELECT   RORPRDS_TERM_CODE FROM RORPRDS,ROBPRDS, ROBINST
        WHERE  (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR
                ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND ROBINST_AIDY_START_YEAR = '2016'
          AND ROBINST_AIDY_END_YEAR = '2017'
          AND   ROBPRDS_PERIOD = RORPRDS_PERIOD)"
"BANINST1","ROVAY16","2015-2016 Admissions Applications View - Current Year Only Including Students without Decision","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2015'
        AND    ROBINST_AIDY_END_YEAR = '2016'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBINST_AIDY_START_YEAR = '2015'
                           AND ROBINST_AIDY_END_YEAR = '2016'
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD)   )
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))
   AND X.SARADAP_TERM_CODE_ENTRY IN (
      SELECT   RORPRDS_TERM_CODE FROM RORPRDS,ROBPRDS, ROBINST
        WHERE  (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR
                ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND ROBINST_AIDY_START_YEAR = '2015'
          AND ROBINST_AIDY_END_YEAR = '2016'
          AND   ROBPRDS_PERIOD = RORPRDS_PERIOD)"
"BANINST1","ROVAY15","2014-2015 Admissions Applications View - Current Year Only Including Students without Decision","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2014'
        AND    ROBINST_AIDY_END_YEAR = '2015'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBINST_AIDY_START_YEAR = '2014'
                           AND ROBINST_AIDY_END_YEAR = '2015'
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD)   )
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))
   AND X.SARADAP_TERM_CODE_ENTRY IN (
      SELECT   RORPRDS_TERM_CODE FROM RORPRDS,ROBPRDS, ROBINST
        WHERE  (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR
                ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND ROBINST_AIDY_START_YEAR = '2014'
          AND ROBINST_AIDY_END_YEAR = '2015'
          AND   ROBPRDS_PERIOD = RORPRDS_PERIOD)"
"BANINST1","ROVAY14","2013-2014 Admissions Applications View - Current Year Only Including Students without Decision","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2013'
        AND    ROBINST_AIDY_END_YEAR = '2014'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBINST_AIDY_START_YEAR = '2013'
                           AND ROBINST_AIDY_END_YEAR = '2014'
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD)   )
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))
   AND X.SARADAP_TERM_CODE_ENTRY IN (
      SELECT   RORPRDS_TERM_CODE FROM RORPRDS,ROBPRDS, ROBINST
        WHERE  (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR
                ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND ROBINST_AIDY_START_YEAR = '2013'
          AND ROBINST_AIDY_END_YEAR = '2014'
          AND   ROBPRDS_PERIOD = RORPRDS_PERIOD)"
"BANINST1","ROVAY13","2012-2013 Admissions Applications View - Current Year Only Including Students without Decision","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2012'
        AND    ROBINST_AIDY_END_YEAR = '2013'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBINST_AIDY_START_YEAR = '2012'
                           AND ROBINST_AIDY_END_YEAR = '2013'
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD)   )
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))
   AND X.SARADAP_TERM_CODE_ENTRY IN (
      SELECT   RORPRDS_TERM_CODE FROM RORPRDS,ROBPRDS, ROBINST
        WHERE  (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR
                ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND ROBINST_AIDY_START_YEAR = '2012'
          AND ROBINST_AIDY_END_YEAR = '2013'
          AND   ROBPRDS_PERIOD = RORPRDS_PERIOD)"
"BANINST1","ROVAY12","2011-2012 Admissions Applications View - Current Year Only Including Students without Decision","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2011'
        AND    ROBINST_AIDY_END_YEAR = '2012'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBINST_AIDY_START_YEAR = '2011'
                           AND ROBINST_AIDY_END_YEAR = '2012'
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD)   )
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))
   AND X.SARADAP_TERM_CODE_ENTRY IN (
      SELECT   RORPRDS_TERM_CODE FROM RORPRDS,ROBPRDS, ROBINST
        WHERE  (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR
                ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND ROBINST_AIDY_START_YEAR = '2011'
          AND ROBINST_AIDY_END_YEAR = '2012'
          AND   ROBPRDS_PERIOD = RORPRDS_PERIOD)"
"BANINST1","ROVAY05","2004-2005 Admissions Applications View - Current Year Only Including Students without Decision","SELECT X.SARADAP_PIDM,
       '0405',
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
		(SELECT MAX(STVTERM_CODE)
               	FROM STVTERM
              	WHERE STVTERM_FA_PROC_YR  = '0405'))
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))
-- 7100-1
-- AND S.SARAPPD_TERM_CODE_ENTRY IN (
   AND X.SARADAP_TERM_CODE_ENTRY IN (
       SELECT STVTERM_CODE FROM STVTERM WHERE STVTERM_FA_PROC_YR ='0405')"
"BANINST1","ROVAM18","2017-2018 Admissions Applications View - Current Year Only","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2017'
       AND ROBINST_AIDY_END_YEAR = '2018' AND ROWNUM=1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD') || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2017'
              AND ROBINST_AIDY_END_YEAR = '2018')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)
   AND S.SARAPPD_TERM_CODE_ENTRY IN (
       SELECT RORPRDS_TERM_CODE
         FROM RORPRDS,ROBPRDS,ROBINST
        WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND (ROBINST_AIDY_START_YEAR = '2017' AND ROBINST_AIDY_END_YEAR = '2018')
          AND  ROBPRDS_PERIOD = RORPRDS_PERIOD)
"
"BANINST1","ROVAM17","2016-2017 Admissions Applications View - Current Year Only","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2016'
       AND ROBINST_AIDY_END_YEAR = '2017' AND ROWNUM=1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD') || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2016'
              AND ROBINST_AIDY_END_YEAR = '2017')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)
   AND S.SARAPPD_TERM_CODE_ENTRY IN (
       SELECT RORPRDS_TERM_CODE
         FROM RORPRDS,ROBPRDS,ROBINST
        WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND (ROBINST_AIDY_START_YEAR = '2016' AND ROBINST_AIDY_END_YEAR = '2017')
          AND  ROBPRDS_PERIOD = RORPRDS_PERIOD)
"
"BANINST1","ROVAM16","2015-2016 Admissions Applications View - Current Year Only","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2015'
       AND ROBINST_AIDY_END_YEAR = '2016' AND ROWNUM=1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD') || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2015'
              AND ROBINST_AIDY_END_YEAR = '2016')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)
   AND S.SARAPPD_TERM_CODE_ENTRY IN (
       SELECT RORPRDS_TERM_CODE
         FROM RORPRDS,ROBPRDS,ROBINST
        WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND (ROBINST_AIDY_START_YEAR = '2015' AND ROBINST_AIDY_END_YEAR = '2016')
          AND  ROBPRDS_PERIOD = RORPRDS_PERIOD)
"
"BANINST1","ROVAM15","2014-2015 Admissions Applications View - Current Year Only","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2014'
       AND ROBINST_AIDY_END_YEAR = '2015' AND ROWNUM=1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD') || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2014'
              AND ROBINST_AIDY_END_YEAR = '2015')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)
   AND S.SARAPPD_TERM_CODE_ENTRY IN (
       SELECT RORPRDS_TERM_CODE
         FROM RORPRDS,ROBPRDS,ROBINST
        WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND (ROBINST_AIDY_START_YEAR = '2014' AND ROBINST_AIDY_END_YEAR = '2015')
          AND  ROBPRDS_PERIOD = RORPRDS_PERIOD)
"
"BANINST1","ROVAM14","2013-2014 Admissions Applications View - Current Year Only","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2013'
       AND ROBINST_AIDY_END_YEAR = '2014' AND ROWNUM=1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD') || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2013'
              AND ROBINST_AIDY_END_YEAR = '2014')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)
   AND S.SARAPPD_TERM_CODE_ENTRY IN (
       SELECT RORPRDS_TERM_CODE
         FROM RORPRDS,ROBPRDS,ROBINST
        WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND (ROBINST_AIDY_START_YEAR = '2013' AND ROBINST_AIDY_END_YEAR = '2014')
          AND  ROBPRDS_PERIOD = RORPRDS_PERIOD)
"
"BANINST1","ROVAM13","2012-2013 Admissions Applications View - Current Year Only","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2012'
       AND ROBINST_AIDY_END_YEAR = '2013' AND ROWNUM=1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD') || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2012'
              AND ROBINST_AIDY_END_YEAR = '2013')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)
   AND S.SARAPPD_TERM_CODE_ENTRY IN (
       SELECT RORPRDS_TERM_CODE
         FROM RORPRDS,ROBPRDS,ROBINST
        WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND (ROBINST_AIDY_START_YEAR = '2012' AND ROBINST_AIDY_END_YEAR = '2013')
          AND  ROBPRDS_PERIOD = RORPRDS_PERIOD)
"
"BANINST1","ROVAM12","2011-2012 Admissions Applications View - Current Year Only","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2011'
       AND ROBINST_AIDY_END_YEAR = '2012' AND ROWNUM=1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2011'
              AND ROBINST_AIDY_END_YEAR = '2012')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)
   AND S.SARAPPD_TERM_CODE_ENTRY IN (
       SELECT   RORPRDS_TERM_CODE FROM RORPRDS,ROBPRDS,ROBINST
        WHERE  (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
          AND  (ROBINST_AIDY_START_YEAR = '2011' AND ROBINST_AIDY_END_YEAR = '2012')
          AND   ROBPRDS_PERIOD = RORPRDS_PERIOD)
"
"BANINST1","ROVAM05","2004-2005 Admissions Applications View - Current Year Only","SELECT X.SARADAP_PIDM,
       '0405',
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_CODE          = '0405')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)
   AND S.SARAPPD_TERM_CODE_ENTRY IN (
       SELECT STVTERM_CODE FROM STVTERM WHERE STVTERM_FA_PROC_YR ='0405')
 "
"BANINST1","ROVALOG","Audit Log View","SELECT ROBALOG_EDE_DEL_IND,
       ROBALOG_USER_ID,
       ROBALOG_ACTIVITY_DATE,
       ROBALOG_AIDY_CODE,
       ROBALOG_PIDM,
       ROBALOG_BATCH_PROC_IND,
       ROBALOG_DATA_CDE,
       ROBALOG_FROM,
       ROBALOG_TO,
       ROBALOG_EDE_DATE_SENT,
       ROBALOG_SAR_ID,
       ROBALOG_COLL_CHOICE,
       ROBALOG_DL_LOAN_ID,
       ROBALOG_BATCH_NO,
       ROBALOG_DL_IND,
       ROBALOG_INFC_CODE,
       ROBALOG_SEQ_NO,
       ROBALOG_DL_DISB_NO,
       ROBALOG_REJECT_CODE,
       ROBALOG_CHANGE_STATUS,
       ROBALOG_EL_LOAN_ID,
       ROBALOG_EL_SEQ_NO,
       ROBALOG_EL_FUND_TYPE,
       ROBALOG_EL_RECIP_PIDM,
       ROBALOG_EL_CHANGE_TYPE,
       ROBALOG_EL_IND,
       ROBALOG_EL_ERROR_CODE_1,
       ROBALOG_EL_ERROR_CODE_2,
       ROBALOG_EL_ERROR_CODE_3,
       ROBALOG_EL_ERROR_CODE_4,
       ROBALOG_EL_ERROR_CODE_5,
       ROBALOG_EL_DISB_NO,
       A.SPRIDEN_ID,
       B.SPRIDEN_ID,
       ROBALOG_DOCUMENT_ID
  FROM ROBALOG,SPRIDEN A, SPRIDEN B
  WHERE ROBALOG_PIDM = A.SPRIDEN_PIDM (+)
  AND   ROBALOG_EL_RECIP_PIDM = B.SPRIDEN_PIDM (+)
  AND   A.SPRIDEN_CHANGE_IND IS NULL
  AND   B.SPRIDEN_CHANGE_IND IS NULL
 "
"BANINST1","ROVADAP","Admissions Application Selection View","SELECT	SARADAP_PIDM,
	SARADAP_TERM_CODE_ENTRY,
	SARADAP_APPL_NO,
	SARADAP_APPL_DATE,
	SARADAP_LEVL_CODE,
	SARADAP_APST_CODE,
	SARADAP_ADMT_CODE,
	SARADAP_STYP_CODE,
	SARADAP_CAMP_CODE,
	SARADAP_SITE_CODE,
	SARADAP_COLL_CODE_1,
	SARADAP_DEGC_CODE_1,
	SARADAP_MAJR_CODE_1,
	SARADAP_COLL_CODE_2,
	SARADAP_DEGC_CODE_2,
	SARADAP_MAJR_CODE_2,
        SARADAP_RESD_CODE
FROM	SARADAP
 "
"BANINST1","ROVAD18","2017-2018 Admissions Application View","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2017'
        AND    ROBINST_AIDY_END_YEAR = '2018'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2017'
              AND ROBINST_AIDY_END_YEAR = '2018')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)"
"BANINST1","ROVAD17","2016-2017 Admissions Application View","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2016'
        AND    ROBINST_AIDY_END_YEAR = '2017'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2016'
              AND ROBINST_AIDY_END_YEAR = '2017')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)"
"BANINST1","ROVAD16","2015-2016 Admissions Application View","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2015'
        AND    ROBINST_AIDY_END_YEAR = '2016'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2015'
              AND ROBINST_AIDY_END_YEAR = '2016')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)"
"BANINST1","ROVAD15","2014-2015 Admissions Application View","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2014'
        AND    ROBINST_AIDY_END_YEAR = '2015'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2014'
              AND ROBINST_AIDY_END_YEAR = '2015')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)"
"BANINST1","ROVAD14","2013-2014 Admissions Application View","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2013'
        AND    ROBINST_AIDY_END_YEAR = '2014'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2013'
              AND ROBINST_AIDY_END_YEAR = '2014')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)"
"BANINST1","ROVAD13","2012-2013 Admissions Application View","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2012'
        AND    ROBINST_AIDY_END_YEAR = '2013'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2012'
              AND ROBINST_AIDY_END_YEAR = '2013')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)"
"BANINST1","ROVAD12","2011-2012 Admissions Application View","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
        FROM   ROBINST
        WHERE  ROBINST_AIDY_START_YEAR = '2011'
        AND    ROBINST_AIDY_END_YEAR = '2012'
        AND    ROWNUM =1),
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_START_YEAR = '2011'
              AND ROBINST_AIDY_END_YEAR = '2012')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)"
"BANINST1","ROVAD05","2004-2005 Admissions Application View","SELECT X.SARADAP_PIDM,
       '0405',
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
             FROM SARADAP Y,
                  ROBINST
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <= ROBINST_CURRENT_TERM_CODE
              AND ROBINST_AIDY_CODE          = '0405')
   AND S.SARAPPD_PIDM            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
   AND TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)
 "
"BANINST1","ROVA218","2017-2018 Admissions Application View including students with out admissions decisions","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
          FROM ROBINST
         WHERE ROBINST_AIDY_START_YEAR = '2017'
           AND ROBINST_AIDY_END_YEAR = '2018'
           AND ROWNUM = 1) AIDY_CODE,
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD
                           AND ROBINST_AIDY_START_YEAR = '2017'
                           AND ROBINST_AIDY_END_YEAR = '2018'))
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))"
"BANINST1","ROVA217","2016-2017 Admissions Application View including students with out admissions decisions","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
          FROM ROBINST
         WHERE ROBINST_AIDY_START_YEAR = '2016'
           AND ROBINST_AIDY_END_YEAR = '2017'
           AND ROWNUM = 1) AIDY_CODE,
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD
                           AND ROBINST_AIDY_START_YEAR = '2016'
                           AND ROBINST_AIDY_END_YEAR = '2017'))
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))"
"BANINST1","ROVA216","2015-2016 Admissions Application View including students with out admissions decisions","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
          FROM ROBINST
         WHERE ROBINST_AIDY_START_YEAR = '2015'
           AND ROBINST_AIDY_END_YEAR = '2016'
           AND ROWNUM = 1) AIDY_CODE,
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD
                           AND ROBINST_AIDY_START_YEAR = '2015'
                           AND ROBINST_AIDY_END_YEAR = '2016'))
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))"
"BANINST1","ROVA215","2014-2015 Admissions Application View including students with out admissions decisions","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
          FROM ROBINST
         WHERE ROBINST_AIDY_START_YEAR = '2014'
           AND ROBINST_AIDY_END_YEAR = '2015'
           AND ROWNUM = 1) AIDY_CODE,
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD
                           AND ROBINST_AIDY_START_YEAR = '2014'
                           AND ROBINST_AIDY_END_YEAR = '2015'))
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))"
"BANINST1","ROVA214","2013-2014 Admissions Application View including students with out admissions decisions","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
          FROM ROBINST
         WHERE ROBINST_AIDY_START_YEAR = '2013'
           AND ROBINST_AIDY_END_YEAR = '2014'
           AND ROWNUM = 1) AIDY_CODE,
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD
                           AND ROBINST_AIDY_START_YEAR = '2013'
                           AND ROBINST_AIDY_END_YEAR = '2014'))
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || TO_CHAR(S.SARAPPD_SEQ_NO, '99') =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || TO_CHAR(T.SARAPPD_SEQ_NO, '99'))
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))"
"BANINST1","ROVA213","2012-2013 Admissions Application View including students with out admissions decisions","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE
          FROM ROBINST
         WHERE ROBINST_AIDY_START_YEAR = '2012'
           AND ROBINST_AIDY_END_YEAR = '2013'
           AND ROWNUM = 1) AIDY_CODE,
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD
                           AND ROBINST_AIDY_START_YEAR = '2012'
                           AND ROBINST_AIDY_END_YEAR = '2013'))
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))"
"BANINST1","ROVA212","2011-2012 Admissions Application View including students with out admissions decisions","SELECT X.SARADAP_PIDM,
       (SELECT ROBINST_AIDY_CODE FROM ROBINST WHERE ROBINST_AIDY_START_YEAR = '2011' AND ROBINST_AIDY_END_YEAR = '2012' AND ROWNUM = 1) AIDY_CODE,
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
                       (SELECT MAX(RORPRDS_TERM_CODE)
                          FROM ROBPRDS,
                               RORPRDS,
                               ROBINST
                         WHERE (ROBPRDS_AIDY_CODE = ROBINST_AIDY_CODE
                            OR ROBPRDS_AIDY_CODE_CROSS = ROBINST_AIDY_CODE)
                           AND ROBPRDS_PERIOD = RORPRDS_PERIOD
                           AND ROBINST_AIDY_START_YEAR = '2011'
                           AND ROBINST_AIDY_END_YEAR = '2012'))
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))"
"BANINST1","ROVA205","2004-2005 Admissions Application View including students with out admissions decisions","SELECT X.SARADAP_PIDM,
       '0405',
       X.SARADAP_APPL_NO,
       X.SARADAP_APPL_DATE,
       X.SARADAP_LEVL_CODE,
       X.SARADAP_APST_CODE,
       X.SARADAP_ADMT_CODE,
       X.SARADAP_STYP_CODE,
       X.SARADAP_CAMP_CODE,
       X.SARADAP_SITE_CODE,
       X.SARADAP_COLL_CODE_1,
       X.SARADAP_DEGC_CODE_1,
       X.SARADAP_MAJR_CODE_1,
       X.SARADAP_COLL_CODE_2,
       X.SARADAP_DEGC_CODE_2,
       X.SARADAP_MAJR_CODE_2,
       X.SARADAP_RATE_CODE,
       X.SARADAP_RESD_CODE,
       X.SARADAP_FULL_PART_IND,
       X.SARADAP_SESS_CODE,
       X.SARADAP_WRSN_CODE,
       X.SARADAP_APST_DATE,
       X.SARADAP_MAINT_IND,
       X.SARADAP_INTV_CODE,
       X.SARADAP_FEE_IND,
       X.SARADAP_FEE_DATE,
       X.SARADAP_EGOL_CODE,
       X.SARADAP_EDLV_CODE,
       S.SARAPPD_APDC_DATE,
       S.SARAPPD_APDC_CODE
  FROM SARAPPD S,
       SARADAP X
 WHERE (TO_CHAR(X.SARADAP_APPL_DATE,'YYYYMMDD') || X.SARADAP_TERM_CODE_ENTRY) =
          (SELECT MAX(TO_CHAR(Y.SARADAP_APPL_DATE,'YYYYMMDD')
		      || Y.SARADAP_TERM_CODE_ENTRY)
            FROM SARADAP Y
            WHERE Y.SARADAP_PIDM             = X.SARADAP_PIDM
              AND Y.SARADAP_TERM_CODE_ENTRY <=
		(SELECT MAX(STVTERM_CODE)
               	FROM STVTERM
              	WHERE STVTERM_FA_PROC_YR  = '0405'))
   AND S.SARAPPD_PIDM(+)            = X.SARADAP_PIDM
   AND S.SARAPPD_TERM_CODE_ENTRY(+) = X.SARADAP_TERM_CODE_ENTRY
   AND S.SARAPPD_APPL_NO(+)         = X.SARADAP_APPL_NO
   AND (S.SARAPPD_PIDM IS NULL OR (S.SARAPPD_PIDM IS NOT NULL AND
   TO_CHAR(S.SARAPPD_APDC_DATE,'YYYYMMDD') || S.SARAPPD_SEQ_NO =
          (SELECT MAX(TO_CHAR(T.SARAPPD_APDC_DATE,'YYYYMMDD')
                      || T.SARAPPD_SEQ_NO)
             FROM SARAPPD T
            WHERE T.SARAPPD_TERM_CODE_ENTRY = X.SARADAP_TERM_CODE_ENTRY
              AND T.SARAPPD_APPL_NO         = X.SARADAP_APPL_NO
              AND T.SARAPPD_PIDM            = X.SARADAP_PIDM)))
 "
"BANINST1","RNVTMNT","Transfer Monitoring View","SELECT
        SPRIDEN_ID,
        RNRTMNT.ROWID,
        RNRTMNT_SCHOOL_CDE,
        RNRTMNT_AIDY_CODE,
        RNRTMNT_PIDM,
        RNRTMNT_SSN,
        RNRTMNT_LAST_NAME,
        RNRTMNT_FIRST_NAME,
        RNRTMNT_BIRTH_DATE,
        RNRTMNT_ENRL_START_DATE,
        RNRTMNT_MONITOR_START_DATE,
        RNRTMNT_MONITOR_END_DATE,
        RNRTMNT_ADD_BATCH_ID,
        RNRTMNT_ALERT_RCVD_IND,
        RNRTMNT_REM_IND,
        RNRTMNT_REM_BATCH_ID,
        RNRTMNT_REQUEST_TYPE,
        RNRTMNT_FAH_RCVD_DATE,
        RNRTMNT_SCHOOL_BRANCH
   FROM SPRIDEN, RNRTMNT
  WHERE SPRIDEN_PIDM = RNRTMNT_PIDM
    AND SPRIDEN_CHANGE_IND IS NULL
    AND SPRIDEN_ENTITY_IND = 'P' "
"BANINST1","RNVSND1","Simulated Need Second Level View","SELECT RORSTAT_AIDY_CODE,
                             RORSTAT_PIDM,
                             NVL(rnkneed.f_calc_budget_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE,
                                                       SUBSTR(rnkneed.f_find_efc_ind(RORSTAT_PIDM, RORSTAT_AIDY_CODE),1,1)),0),   -- 82201-1
                             rnkneed.f_calc_resource(RORSTAT_PIDM, RORSTAT_AIDY_CODE,rnkneed.f_calc_load(RORSTAT_PIDM, RORSTAT_AIDY_CODE)),
                             rnkneed.f_calc_act_replace_efc_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE),
                             rnkneed.f_calc_act_reduce_need_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE),
                             SUBSTR(rnkneed.f_find_efc_ind(RORSTAT_PIDM, RORSTAT_AIDY_CODE),1,1),
                             NVL(rnkneed.f_calc_budget_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE,'F'),0),                               -- 82201-1
                             rnkneed.f_calc_efc(RORSTAT_PIDM, RORSTAT_AIDY_CODE),
                             rnkneed.f_calc_gross_need(RORSTAT_PIDM, RORSTAT_AIDY_CODE),
                             rnkneed.f_calc_excess_efc_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE,'S'),
                             rnkneed.f_calc_unmet_need(RORSTAT_PIDM, RORSTAT_AIDY_CODE,'S'),
                             rnkneed.f_calc_offer_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE,'S')
                        FROM RORSTAT"
"BANINST1","RNVSND0","Simulated Need View","SELECT RNVSND1_AIDY_CODE,
                             RNVSND1_PIDM,
                             RNVSND1_BUDGET_AMOUNT,
                             RNVSND1_RESOURCE_AMOUNT,
                             RNVSND1_REPLACE_EFC_AMT,
                             RNVSND1_REDUCE_NEED_AMT,
                             RNVSND1_EFC_IND,
                             RNVSND1_FM_BUDGET_AMT,
                             RNVSND1_EFC_AMT,
                             RNVSND1_GROSS_NEED,
                             RNVSND1_EXCESS_EFC_AMT,
                             RNVSND1_UNMET_NEED,
                             TO_NUMBER(DECODE(RNVSND1_EFC_IND,'F','',NVL(rnkneed.f_calc_budget_amt(RNVSND1_PIDM, RNVSND1_AIDY_CODE,'I'),0))), -- 82201-1
                             TO_NUMBER(DECODE(RNVSND1_EFC_IND,'F','',rnkneed.f_calc_im_efc(RNVSND1_PIDM, RNVSND1_AIDY_CODE))),                -- 81802-1
                             TO_NUMBER(DECODE(RNVSND1_EFC_IND,'F','',rnkneed.f_calc_im_gross_need(RNVSND1_PIDM, RNVSND1_AIDY_CODE))),         -- 81802-1
                             TO_NUMBER(DECODE(RNVSND1_EFC_IND,'F','',rnkneed.f_calc_im_excess_efc_amt(RNVSND1_PIDM, RNVSND1_AIDY_CODE,'S'))), -- 81802-1
                             TO_NUMBER(DECODE(RNVSND1_EFC_IND,'F','',rnkneed.f_calc_im_unmet_need(RNVSND1_PIDM, RNVSND1_AIDY_CODE,'S'))),     -- 81802-1
                             RNVSND1_OFFER_AMT
                        FROM RNVSND1"
"BANINST1","RNVAND1","Actual Need Second Level View","SELECT RORSTAT_AIDY_CODE,
                             RORSTAT_PIDM,
                             NVL(rnkneed.f_calc_budget_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE,
                                                       SUBSTR(rnkneed.f_find_efc_ind(RORSTAT_PIDM, RORSTAT_AIDY_CODE),1,1)),0),   -- 82201-1
                             rnkneed.f_calc_resource(RORSTAT_PIDM, RORSTAT_AIDY_CODE,rnkneed.f_calc_load(RORSTAT_PIDM, RORSTAT_AIDY_CODE)),
                             rnkneed.f_calc_act_replace_efc_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE),
                             rnkneed.f_calc_act_reduce_need_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE),
                             SUBSTR(rnkneed.f_find_efc_ind(RORSTAT_PIDM, RORSTAT_AIDY_CODE),1,1),
                             NVL(rnkneed.f_calc_budget_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE,'F'),0),                               -- 82201-1
                             rnkneed.f_calc_efc(RORSTAT_PIDM, RORSTAT_AIDY_CODE),
                             rnkneed.f_calc_gross_need(RORSTAT_PIDM, RORSTAT_AIDY_CODE),
                             rnkneed.f_calc_excess_efc_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE,'A'),
                             rnkneed.f_calc_unmet_need(RORSTAT_PIDM, RORSTAT_AIDY_CODE,'A'),
                             rnkneed.f_calc_offer_amt(RORSTAT_PIDM, RORSTAT_AIDY_CODE,'A'),
                             rnkneed.f_calc_pell_award (RORSTAT_PIDM, RORSTAT_AIDY_CODE)
                        FROM RORSTAT"
"BANINST1","RNVAND0","Actual Need View","SELECT RNVAND1_AIDY_CODE,
                             RNVAND1_PIDM,
                             RNVAND1_BUDGET_AMOUNT,
                             RNVAND1_RESOURCE_AMOUNT,
                             RNVAND1_REPLACE_EFC_AMT,
                             RNVAND1_REDUCE_NEED_AMT,
                             RNVAND1_EFC_IND,
                             RNVAND1_FM_BUDGET_AMT,
                             RNVAND1_EFC_AMT,
                             RNVAND1_GROSS_NEED,
                             RNVAND1_EXCESS_EFC_AMT,
                             RNVAND1_UNMET_NEED,
                             TO_NUMBER(DECODE(RNVAND1_EFC_IND,'F','',NVL(rnkneed.f_calc_budget_amt(RNVAND1_PIDM, RNVAND1_AIDY_CODE,'I'),0))), -- 82201-1
                             TO_NUMBER(DECODE(RNVAND1_EFC_IND,'F','',rnkneed.f_calc_im_efc(RNVAND1_PIDM, RNVAND1_AIDY_CODE))),                -- 81802-1
                             TO_NUMBER(DECODE(RNVAND1_EFC_IND,'F','',rnkneed.f_calc_im_gross_need(RNVAND1_PIDM, RNVAND1_AIDY_CODE))),         -- 81802-1
                             TO_NUMBER(DECODE(RNVAND1_EFC_IND,'F','',rnkneed.f_calc_im_excess_efc_amt(RNVAND1_PIDM, RNVAND1_AIDY_CODE,'A'))), -- 81802-1
                             TO_NUMBER(DECODE(RNVAND1_EFC_IND,'F','',rnkneed.f_calc_im_unmet_need(RNVAND1_PIDM, RNVAND1_AIDY_CODE,'A'))),     -- 81802-1
                             RNVAND1_OFFER_AMT,
                             RNVAND1_PELL_AWARD
                        FROM RNVAND1"
"BANINST1","RLVALIN","Award Loan Interface View","SELECT ""RLVALIN_PIDM"",""RLVALIN_AIDY_CODE"",""RLVALIN_FUND_CODE"",""RLVALIN_PERIOD"",""RLVALIN_BBAY_CODE"",""RLVALIN_ACCEPT_AMT"",""RLVALIN_DIFF_AMT"",""RLVALIN_AIDY_CODE_FUNDS"",""RLVALIN_BBAY_DIFF_IND"",""RLVALIN_SAYR_DIFF_IND"",""RLVALIN_FEE_CHANGE_IND""
FROM   (SELECT rpratrm_pidm rlvalin_pidm,
               NVL(rpratrm_aidy_code_funds,rpratrm_aidy_code) rlvalin_aidy_code,
               rpratrm_fund_code rlvalin_fund_code,
               rpratrm_period rlvalin_period,
               rpratrm_bbay_code rlvalin_bbay_code,
               rpratrm_accept_amt rlvalin_accept_amt,
               NVL(rpratrm_accept_amt,0)
                                 - nvl((SELECT SUM(rlrdlps_loan_amt)
                                        FROM   rlrdlps
                                        WHERE  rlrdlps_pidm = rpratrm_pidm
                                        AND    rlrdlps_fund_code = rpratrm_fund_code
                                        AND    rlrdlps_period = rpratrm_period),
                                        0) rlvalin_diff_amt,
               rpratrm_aidy_code_funds rlvalin_aidy_code_funds,
               rokdrct.f_get_bbay_diff_ind(rpratrm_pidm,
                                           rpratrm_aidy_code,
                                           rpratrm_fund_code,
                                           rpratrm_period) rlvalin_bbay_diff_ind,  -- 082300-1
               rokdrct.f_get_sayr_diff_ind(rpratrm_pidm,
                                           rpratrm_aidy_code,
                                           rpratrm_fund_code,
                                           rpratrm_period) rlvalin_sayr_diff_ind,
-- 082700-1
               rokdrct.f_get_fee_change_ind(rpratrm_pidm,
                                            rpratrm_aidy_code,
                                            rpratrm_fund_code,
                                            rpratrm_period) rlvalin_fee_change_ind
        FROM   rpratrm, rfraspc
        WHERE  (rpratrm_aidy_code_funds IS NOT NULL AND rpratrm_aidy_code_funds = rfraspc_aidy_code
                OR
                rpratrm_aidy_code_funds IS NULL AND rpratrm_aidy_code = rfraspc_aidy_code)
        AND    rpratrm_fund_code = rfraspc_fund_code
        AND    rfraspc_direct_loan_ind IS NOT NULL)
WHERE  rlvalin_diff_amt != 0
OR     rlvalin_bbay_diff_ind LIKE 'Y%'
OR     rlvalin_sayr_diff_ind LIKE 'Y%'
-- 082700-1
OR     rlvalin_fee_change_ind LIKE 'Y%'"
"BANINST1","RFVPROM_PRDS","Promissory Note Requirement Period View","SELECT RFRPROM_AIDY_CODE,
                       RFRPROM_PIDM,
                       RFRPROM_FUND_CODE,
                       RFRPROM_PERIOD,
                       NULL,
                       RFRPROM_EFF_DATE,
                       RFRPROM_SAT_IND,
                       RFRPROM_ACTIVITY_DATE,
                       RFRPROM_SAT_DATE,
                       RFRPROM_DL_SEQ_NO,
                       RFRPROM_DL_NOTE_STATUS,
                       RFRPROM_DL_PRINT_DATE,
                       RFRPROM_DL_SHIP_DATE,
                       RFRPROM_DL_BATCH_NO,
                       RFRPROM_DL_CONF_DATE,
                       RFRPROM_DL_REJ_REASON_1,
                       RFRPROM_DL_REJ_REASON_2,
                       RFRPROM_DL_REJ_REASON_3,
                       RFRPROM_DL_REJ_REASON_4,
                       RFRPROM_DL_REJ_REASON_5,
                       RFRPROM_DL_SERV_NOTE_STATUS,
                       RFRPROM_PRINT_SEQ_NO,
                       RFRPROM_DL_DOCUMENT_ID,
                       RFRPROM_USER_ID,
                       RFRPROM_DATA_ORIGIN,
                       RFRPROM_INFO_ACCESS_IND,
                       RFRPROM_TERM_CODE
                  FROM RFRPROM
                 WHERE RFRPROM_PERIOD IS NULL
                 UNION
                SELECT RFRPROM_AIDY_CODE,
                       RFRPROM_PIDM,
                       RFRPROM_FUND_CODE,
                       RFRPROM_PERIOD,
                       ROBPRDS_SEQ_NO,
                       RFRPROM_EFF_DATE,
                       RFRPROM_SAT_IND,
                       RFRPROM_ACTIVITY_DATE,
                       RFRPROM_SAT_DATE,
                       RFRPROM_DL_SEQ_NO,
                       RFRPROM_DL_NOTE_STATUS,
                       RFRPROM_DL_PRINT_DATE,
                       RFRPROM_DL_SHIP_DATE,
                       RFRPROM_DL_BATCH_NO,
                       RFRPROM_DL_CONF_DATE,
                       RFRPROM_DL_REJ_REASON_1,
                       RFRPROM_DL_REJ_REASON_2,
                       RFRPROM_DL_REJ_REASON_3,
                       RFRPROM_DL_REJ_REASON_4,
                       RFRPROM_DL_REJ_REASON_5,
                       RFRPROM_DL_SERV_NOTE_STATUS,
                       RFRPROM_PRINT_SEQ_NO,
                       RFRPROM_DL_DOCUMENT_ID,
                       RFRPROM_USER_ID,
                       RFRPROM_DATA_ORIGIN,
                       RFRPROM_INFO_ACCESS_IND,
                       RFRPROM_TERM_CODE
                  FROM ROBPRDS,
                       RFRPROM
                 WHERE RFRPROM_PERIOD IS NOT NULL
                   AND RFRPROM_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RFVDSCH_PRDS","Fund Disbursement Schedule Rules Period View","SELECT RFRDSCH_AIDY_CODE,
                       RFRDSCH_APRD_CODE,
                       RFRDSCH_FUND_CODE,
                       RFRDSCH_PERIOD,
                       ROBPRDS_SEQ_NO,
                       RFRDSCH_DISBURSE_DATE,
                       RFRDSCH_DISBURSE_PCT,
                       RFRDSCH_ACTIVITY_DATE,
                       RFRDSCH_DISB_SCHED_NO_DAYS,
                       RFRDSCH_USER_ID,
                       RFRDSCH_DATA_ORIGIN,
                       RFRDSCH_TERM_CODE
                  FROM ROBPRDS,
                       RFRDSCH
                 WHERE RFRDSCH_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RFVDLCK_PRDS","Fund Disbursement Lock Rules Period View","SELECT RFRDLCK_AIDY_CODE,
                       RFRDLCK_FUND_CODE,
                       RFRDLCK_PERIOD,
                       ROBPRDS_SEQ_NO,
                       RFRDLCK_LOCK_IND,
                       RFRDLCK_ACTIVITY_DATE,
                       RFRDLCK_USER_ID,
                       RFRDLCK_DATA_ORIGIN,
                       RFRDLCK_TERM_CODE
                  FROM ROBPRDS,
                       RFRDLCK
                 WHERE RFRDLCK_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RFVDEFD_PRDS","Default Disbursement Schedule Rules Period View","SELECT RFRDEFD_AIDY_CODE,
                       RFRDEFD_APRD_CODE,
                       RFRDEFD_PERIOD,
                       ROBPRDS_SEQ_NO,
                       RFRDEFD_DISBURSE_DATE,
                       RFRDEFD_DISBURSE_PCT,
                       RFRDEFD_ACTIVITY_DATE,
                       RFRDEFD_DISB_SCHED_NO_DAYS,
                       RFRDEFD_USER_ID,
                       RFRDEFD_DATA_ORIGIN,
                       RFRDEFD_TERM_CODE
                  FROM ROBPRDS,
                       RFRDEFD
                 WHERE RFRDEFD_PERIOD = ROBPRDS_PERIOD"
"BANINST1","RFVDEFA_PRDS","Default Award Schedule Rules Period View","SELECT RFRDEFA_AIDY_CODE                                RFVDEFA_AIDY_CODE,
	       RFRDEFA_APRD_CODE                                RFVDEFA_APRD_CODE,
	       RFRDEFA_PERIOD                                   RFVDEFA_PERIOD,
	       ROBPRDS_SEQ_NO                                   RFVDEFA_PRDS_SEQ_NO,
	       RFRDEFA_AWARD_PCT                                RFVDEFA_AWARD_PCT,
	       RFRDEFA_ACTIVITY_DATE                            RFVDEFA_ACTIVITY_DATE,
	       RFRDEFA_MEMO_EXP_DATE                            RFVDEFA_MEMO_EXP_DATE,
	       RFRDEFA_PELL_AWARD_PCT                           RFVDEFA_PELL_AWARD_PCT,
	       RFRDEFA_USER_ID                                  RFVDEFA_USER_ID,
	       RFRDEFA_DATA_ORIGIN                              RFVDEFA_DATA_ORIGIN,
	       RFRDEFA_TERM_CODE                                RFVDEFA_TERM_CODE
	FROM   ROBPRDS,
	       RFRDEFA
	WHERE  RFRDEFA_PERIOD = ROBPRDS_PERIOD "
"BANINST1","RFVASCH_PRDS","Fund Award Schedule Rules Period View","SELECT RFRASCH_AIDY_CODE                   RFVASCH_AIDY_CODE,
         RFRASCH_APRD_CODE                   RFVASCH_APRD_CODE,
         RFRASCH_FUND_CODE                   RFVASCH_FUND_CODE,
         RFRASCH_PERIOD                      RFVASCH_PERIOD,
         ROBPRDS_SEQ_NO                      RFVASCH_PRDS_SEQ_NO,
         RFRASCH_AWARD_PCT                   RFVASCH_AWARD_PCT,
         RFRASCH_ACTIVITY_DATE               RFVASCH_ACTIVITY_DATE,
         RFRASCH_MEMO_EXP_DATE               RFVASCH_MEMO_EXP_DATE,
         RFRASCH_PELL_AWARD_PCT              RFVASCH_PELL_AWARD_PCT,
         RFRASCH_USER_ID                     RFVASCH_USER_ID,
         RFRASCH_DATA_ORIGIN                 RFVASCH_DATA_ORIGIN,
         RFRASCH_TERM_CODE                   RFVASCH_TERM_CODE
  FROM   ROBPRDS,
         RFRASCH
  WHERE  RFRASCH_PERIOD = ROBPRDS_PERIOD "
"BANINST1","REVRMRR","COD Multiple Reporting Record View","SELECT REBRMRR_AIDY_CODE,
       SPRIDEN_ID,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI,
       REBRMRR_ORIG_SSN,
       REBRMRR_ORIG_INIT,
       REBRMRR_RECORD_TYPE,
       REBRMRR_ACTIVITY_DATE,
       REBRMRR_INST_PELL_ID,
       REBRMRR_PROGRAM_TYPE,
       REBRMRR_BATCH_NO,
       REBRMRR_AWARD_ID
  FROM SPRIDEN,
       RERSTID A,
       REBRMRR
 WHERE rokdrct.f_use_new_dl(rebrmrr_aidy_code) = 'N'
   AND SPRIDEN_PIDM (+) = A.RERSTID_PIDM
   AND NVL(SPRIDEN_ENTITY_IND,'P') = 'P'
   AND SPRIDEN_CHANGE_IND IS NULL
   AND (RERSTID_SEQ_NO =
         (SELECT NVL(MAX(RERSTID_SEQ_NO),0)
            FROM RERSTID B
           WHERE B.RERSTID_PIDM = A.RERSTID_PIDM
             AND B.RERSTID_IDENTIFIER_TYPE = 'S'
             AND B.RERSTID_STATUS_CDE = 'A')
        OR NOT EXISTS
         (SELECT 'X'
            FROM RERSTID C
           WHERE C.RERSTID_PIDM = A.RERSTID_PIDM
             AND C.RERSTID_IDENTIFIER_TYPE = 'S'
             AND C.RERSTID_STATUS_CDE = 'A'))
   AND REBRMRR_CURRENT_SSN = A.RERSTID_SSN (+)
   AND REBRMRR_BIRTH_DATE  = A.RERSTID_BIRTH_DATE (+)
UNION
SELECT REBRMRR_AIDY_CODE,
       SPRIDEN_ID,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI,
       REBRMRR_ORIG_SSN,
       REBRMRR_ORIG_INIT,
       REBRMRR_RECORD_TYPE,
       REBRMRR_ACTIVITY_DATE,
       REBRMRR_INST_PELL_ID,
       REBRMRR_PROGRAM_TYPE,
       REBRMRR_BATCH_NO,
       REBRMRR_AWARD_ID
  FROM SPRIDEN,
       RERCSID A,
       REBRMRR
 WHERE rokdrct.f_use_new_dl(rebrmrr_aidy_code) = 'Y'
   AND SPRIDEN_PIDM (+) = A.RERCSID_PIDM
   AND NVL(SPRIDEN_ENTITY_IND,'P') = 'P'
   AND SPRIDEN_CHANGE_IND IS NULL
   AND (RERCSID_SEQ_NO =
         (SELECT NVL(MAX(RERCSID_SEQ_NO),0)
            FROM RERCSID B
           WHERE B.RERCSID_PIDM = A.RERCSID_PIDM
             AND B.RERCSID_STATUS_CDE = 'A')
        OR NOT EXISTS
         (SELECT 'X'
            FROM RERCSID C
           WHERE C.RERCSID_PIDM = A.RERCSID_PIDM
             AND C.RERCSID_STATUS_CDE = 'A'))
   AND REBRMRR_CURRENT_SSN = A.RERCSID_SSN (+)
   AND REBRMRR_BIRTH_DATE  = A.RERCSID_BIRTH_DATE (+) "
"BANINST1","RCVAPPL","Financial Aid Applications View","SELECT RCRAPP1_AIDY_CODE,
	 RCRAPP1_PIDM,
	 RCRAPP1_INFC_CODE,
	 RCRAPP1_SEQ_NO,
	 RCRAPP1_CURR_REC_IND,
	 RCRAPP2_PELL_PGI,
	 RCRAPP4_C_INST_1_TOT_FAM_CTRB,
	 RCRAPP1_CREATOR_ID,
	 RCRAPP1_USER_ID,
	 RCRAPP1_CREATE_DATE,
	 RCRAPP1_ACTIVITY_DATE,
   RCRLDS4_CURR_REC_IND,
         RCRAPP1_USED_TRANS_NO,
         RCRAPP4_SAR_EFC,
-- 082501-1 Begin
     DECODE( 'X',
             (SELECT 'X'
                FROM ROBINST
               WHERE ROBINST_AIDY_CODE = RCRAPP1_AIDY_CODE
                 AND ROBINST_AIDY_END_YEAR >= 2017
                 AND RCRAPP1_INFC_CODE IN('ISIR','EDE','CAL')  --082700-1
             ),
             (SELECT COALESCE( RCRAPP1_FED_COLL_CHOICE_1,
                               RCRAPP1_FED_COLL_CHOICE_2,
                               RCRAPP1_FED_COLL_CHOICE_3,
                               RCRAPP3_FED_COLL_CHOICE_4,
                               RCRAPP3_FED_COLL_CHOICE_5,
                               RCRAPP3_FED_COLL_CHOICE_6,
                               RCRAPP3_FED_COLL_CHOICE_7,
                               RCRAPP3_FED_COLL_CHOICE_8,
                               RCRAPP3_FED_COLL_CHOICE_9,
                               RCRAPP3_FED_COLL_CHOICE_10 )
                FROM RCRAPP3
               WHERE RCRAPP3_AIDY_CODE = RCRAPP1_AIDY_CODE
                 AND RCRAPP3_PIDM      = RCRAPP1_PIDM
                 AND RCRAPP3_INFC_CODE = RCRAPP1_INFC_CODE
                 AND RCRAPP3_SEQ_NO    = RCRAPP1_SEQ_NO
             ),
             NULL)
-- 082501-1 End
    FROM RCRAPP1,
         RCRAPP2,
         RCRAPP4,
--80400-1
         RCRLDS4
   WHERE RCRAPP1_AIDY_CODE    = RCRAPP2_AIDY_CODE
     AND RCRAPP4_AIDY_CODE    = RCRAPP2_AIDY_CODE
--80400-1
     AND RCRLDS4_AIDY_CODE(+) = RCRAPP2_AIDY_CODE
     AND RCRAPP1_PIDM         = RCRAPP2_PIDM
     AND RCRAPP4_PIDM         = RCRAPP2_PIDM
--80400-1
     AND RCRLDS4_PIDM(+)      = RCRAPP2_PIDM
     AND RCRAPP1_INFC_CODE    = RCRAPP2_INFC_CODE
     AND RCRAPP4_INFC_CODE    = RCRAPP2_INFC_CODE
--80400-1
     AND RCRLDS4_INFC_CODE(+) = RCRAPP2_INFC_CODE
     AND RCRAPP1_SEQ_NO       = RCRAPP2_SEQ_NO
     AND RCRAPP4_SEQ_NO       = RCRAPP2_SEQ_NO
--80400-1
     AND RCRLDS4_SEQ_NO(+)    = RCRAPP2_SEQ_NO"
"BANINST1","RCVAPL2","SDA Work View.","select
 rorstat_pidm,
 rorstat_aidy_code,
 rcrapp1_infc_code,
 rcrapp1_seq_no,
 rcrapp1_curr_rec_ind,
 spriden_id,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 spbpers_name_prefix,
 spbpers_name_suffix,
 rcrapp1_ssn,
 spbpers_birth_date,
 f_calculate_age(null,spbpers_birth_date, spbpers_dead_date),
 spbpers_sex,
 spbpers_ethn_code,
 spbpers_citz_code,
 spbpers_mrtl_code,
 -- 8120002-1 soklibs.f_get_race(rorstat_pidm),                        --81200-1
 -- 8120002-1 spbpers_ethn_cde,                                        --81200-1
 rcrapp1_stat_code_res,
 x.spraddr_atyp_code,
 x.spraddr_street_line1,
 x.spraddr_street_line2,
 x.spraddr_street_line3,
 x.spraddr_city,
 x.spraddr_stat_code,
 x.spraddr_zip,
 x.spraddr_cnty_code,
 x.spraddr_natn_code,
 decode(v.sprtele_unlist_ind,'Y', '***',v.sprtele_phone_area),
 decode(v.sprtele_unlist_ind,'Y', '*******',v.sprtele_phone_number),
 decode(v.sprtele_unlist_ind,'Y', '****',v.sprtele_tele_code),
 y.spraddr_atyp_code,
 y.spraddr_street_line1,
 y.spraddr_street_line2,
 y.spraddr_street_line3,
 y.spraddr_city,
 y.spraddr_stat_code,
 y.spraddr_zip,
 y.spraddr_cnty_code,
 y.spraddr_natn_code,
 decode(w.sprtele_unlist_ind,'Y', '***',w.sprtele_phone_area),
 decode(w.sprtele_unlist_ind,'Y', '*******',w.sprtele_phone_number),
 decode(w.sprtele_unlist_ind,'Y', '****',w.sprtele_tele_code),
 a.saradap_term_code_entry,
 a.saradap_appl_no,
 a.saradap_levl_code,
 a.saradap_appl_date,
 a.saradap_admt_code,
 a.saradap_styp_code,
 a.saradap_coll_code_1,
 a.saradap_degc_code_1,
 a.saradap_majr_code_1,
 a.saradap_resd_code,
 substr(f_adms_application_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'APPLCMPL')
       ,1,1),
 substr(f_adms_application_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'APPLINCM')
       ,1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'I','A'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'S','A'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'I','C'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'S','C'),1,1),
 substr(f_adms_check_status
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,'R','C'),1,1),
 substr(f_adms_applicant_withdrawn
      (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no),1,1),
 substr(f_concat_sarappd
       (a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no),1,75),
 substr(f_student_check_for_more
       ('APDC',a.saradap_pidm,a.saradap_term_code_entry,a.saradap_appl_no,
         null),1,1),
 b.sgbstdn_term_code_eff,
 b.sgbstdn_stst_code,
 b.sgbstdn_levl_code,
 b.sgbstdn_styp_code,
 b.sgbstdn_term_code_admit,
 b.sgbstdn_resd_code,
 b.sgbstdn_coll_code_1,
 b.sgbstdn_degc_code_1,
 b.sgbstdn_majr_code_1,
 substr(sgkclas.f_class_code
      (rorstat_pidm,b.sgbstdn_levl_code,robinst_current_term_code),1,2),
 decode(rcrapp2_model_cde,'I',rcrapp1_fam_memb,
                              rcrapp1_par_fam_memb),
 decode(rcrapp2_model_cde,'I',rcrapp1_no_in_coll,
                              rcrapp1_par_no_in_coll),
 rcrapp1_yr_in_coll,
 rcrapp1_coll_cde,
-- rcrapp1_exp_enroll_status,
 rorstat_xes,                           /* 081802-1  */
 rcrapp1_par_us_inc,
 rcrapp1_us_inc,
 rcrapp1_inst_hous_cde,
 rcrapp1_cash_amt,
 rcrapp1_hme_val,
 rcrapp1_hme_dbt,
 rcrapp1_bus_farm_val,
 rcrapp1_bus_farm_dbt,
 rcrapp1_re_inv_val,
 rcrapp1_re_inv_dbt,
 rcrapp2_model_cde,
 rcrapp2_c_depend_status,
 rcrapp2_c_par_1_tot_inc,
 rcrapp2_c_par_2_tot_inc,
 rcrapp2_c_1_tot_inc,
 rcrapp2_c_2_tot_inc,
 rcrapp2_im_1_pc,
 rcrapp2_c_par_1_ctrb_fr_inc,
 rcrapp2_c_par_1_ctrb_fr_asset,
 rcrapp2_c_par_2_ctrb_fr_inc,
 rcrapp2_c_par_2_ctrb_fr_asset,
 rcrapp2_c_par_1_ctrb_offl_est,
 rcrapp2_im_1_sc,
 rcrapp2_c_1_ctrb_fr_inc,
 rcrapp2_c_1_ctrb_fr_asset,
 rcrapp2_c_2_ctrb_fr_inc,
 rcrapp2_c_2_ctrb_fr_asset,
 rcrapp2_c_1_ctrb_offl_est,
 rcrapp2_im_1_tfc,
 rcrapp2_eps_cde,
 rcrapp4_c_inst_1_tot_fam_ctrb,
 rorstat_lock_ind,
 rorstat_bgrp_code,
 rorstat_aprd_code,
 rorstat_pgrp_code,
 rorstat_tgrp_code,
 rcrapp2_c_par_1_ctrb_for_stdt,
 rcrapp2_c_1_ctrb_for_stdt,
/* 60210-1 : replaced function calls with columns from new view */
/* f_find_fm_tfc(rorstat_pidm, rorstat_aidy_code), 60210-1 */
 rnvand0_efc_amt, /* 60210-1 */
 rorstat_pckg_comp_date,
 rorstat_all_req_comp_date,
 rorstat_pckg_req_comp_date,
 rorstat_disb_req_comp_date,
/* 60210-1 : replaced function calls with columns from new view */
/* begin
 f_calc_fm_gross_need(rorstat_pidm, rorstat_aidy_code),
 f_calc_fm_unmet_need(rorstat_pidm, rorstat_aidy_code),
 f_calc_im_gross_need(rorstat_pidm, rorstat_aidy_code),
 f_calc_im_unmet_need(rorstat_pidm, rorstat_aidy_code),
 f_calc_im_tfc(rorstat_pidm, rorstat_aidy_code),
 f_calc_cost_of_ed(rorstat_pidm, rorstat_aidy_code),
 f_calc_total_offer(rorstat_pidm, rorstat_aidy_code),
 f_calc_resource(rorstat_pidm, rorstat_aidy_code), */
 rnvand0_gross_need,
 rnvand0_unmet_need,
 rnvand0_im_gross_need,
 rnvand0_im_unmet_need,
 rnvand0_im_efc_amt,
 rnvand0_budget_amount,
 f_calc_total_offer(rorstat_pidm, rorstat_aidy_code),
 rnvand0_resource_amount,
/* 60210-1 end */
 rcrapp1_verification_prty,
 rcrapp1_verification_msg,
 rorstat_ver_complete,
 e.rrrareq_treq_code,
 substr(decode(e.rrrareq_treq_desc,null,
   f_finaid_get_desc('RTVTREQ',e.rrrareq_treq_code,60),
   e.rrrareq_treq_desc),1,60),
 e.rrrareq_trst_code,
 e.rrrareq_sbgi_code,
 e.rrrareq_fund_code,
 e.rrrareq_period,                -- 80900-1
 e.rrrareq_term_code,             -- 80900-1
 e.rrrareq_sat_ind,
 e.rrrareq_stat_date,
 e.rrrareq_pckg_ind,
 e.rrrareq_disb_ind,
 e.rrrareq_memo_ind,
 e.rrrareq_sbgi_type_ind,         -- 80500-1
 substr(f_more_specific_requirements
   (rorstat_pidm, rorstat_aidy_code, e.rrrareq_treq_code, 'N'),1,1),
 f.rrrareq_treq_code,
 substr(decode(f.rrrareq_treq_desc,null,
   f_finaid_get_desc('RTVTREQ',f.rrrareq_treq_code,60),
   f.rrrareq_treq_desc),1,60),
 f.rrrareq_trst_code,
 f.rrrareq_sbgi_code,
 f.rrrareq_fund_code,
 f.rrrareq_period,                -- 80900-1
 f.rrrareq_term_code,             -- 80900-1
 f.rrrareq_sat_ind,
 f.rrrareq_stat_date,
 f.rrrareq_pckg_ind,
 f.rrrareq_disb_ind,
 f.rrrareq_memo_ind,
 f.rrrareq_sbgi_type_ind,         -- 80500-1
 substr(f_more_specific_requirements
   (rorstat_pidm, rorstat_aidy_code, f.rrrareq_treq_code, 'N'),1,1),
 g.rrrareq_treq_code,
 substr(decode(g.rrrareq_treq_desc,null,
   f_finaid_get_desc('RTVTREQ',g.rrrareq_treq_code,60),
   g.rrrareq_treq_desc),1,60),
 g.rrrareq_trst_code,
 g.rrrareq_sbgi_code,
 g.rrrareq_fund_code,
 g.rrrareq_period,                -- 80900-1
 g.rrrareq_term_code,             -- 80900-1
 g.rrrareq_sat_ind,
 g.rrrareq_stat_date,
 g.rrrareq_pckg_ind,
 g.rrrareq_disb_ind,
 g.rrrareq_memo_ind,
 g.rrrareq_sbgi_type_ind,         -- 80500-1
 substr(f_more_specific_requirements
   (rorstat_pidm, rorstat_aidy_code, g.rrrareq_treq_code, 'N'),1,1),
 substr(f_more_requirements
   (rorstat_pidm, rorstat_aidy_code, e.rrrareq_treq_code, f.rrrareq_treq_code,
    g.rrrareq_treq_code, 'N'),1,1),
 r.rbbabud_btyp_code,
 r.rbbabud_tfc_ind,
 f_calc_total_budget(rorstat_pidm, rorstat_aidy_code, r.rbbabud_btyp_code)
from rcrapp1,
     rcrapp2,
     rcrapp4,
     robinst,
     spriden,
     spbpers,
     rbbabud r,
     rrrareq e, rrrareq f, rrrareq g,
     saradap a,
     sgbstdn b,
     spraddr x, spraddr y,
     sprtele v, sprtele w,
     rnvand0,  /* 60210-1 */
     rorstat
where rorstat_pidm = rcrapp1_pidm (+)
  and rorstat_aidy_code = rcrapp1_aidy_code (+)
  and rcrapp1_curr_rec_ind (+) = 'Y'
  and rcrapp1_aidy_code = rcrapp2_aidy_code (+)
  and rcrapp1_pidm = rcrapp2_pidm (+)
  and rcrapp1_infc_code = rcrapp2_infc_code (+)
  and rcrapp1_seq_no = rcrapp2_seq_no (+)
  and rcrapp1_aidy_code = rcrapp4_aidy_code (+)
  and rcrapp1_pidm = rcrapp4_pidm (+)
  and rcrapp1_infc_code = rcrapp4_infc_code (+)
  and rcrapp1_seq_no = rcrapp4_seq_no (+)
  and rorstat_aidy_code = robinst_aidy_code
  and spriden_pidm = rorstat_pidm
  and spriden_change_ind is null
  and spbpers_pidm(+) = rorstat_pidm
  and rnvand0_pidm = rorstat_pidm            /* 60210-1 */
  and rnvand0_aidy_code = rorstat_aidy_code  /* 60210-1 */
--
  and r.rowid (+) = f_get_rbbabud_rowid(rorstat_pidm, rorstat_aidy_code)
  and r.rbbabud_pidm (+) = rorstat_pidm -- 80300-1
--
  and a.rowid (+) = f_get_current_saradap_rowid(rorstat_pidm, rorstat_aidy_code)
  and a.saradap_pidm (+) = rorstat_pidm -- 80300-1
--
  and b.rowid (+) = f_get_current_sgbstdn_rowid(rorstat_pidm, rorstat_aidy_code)
  and b.sgbstdn_pidm (+) = rorstat_pidm -- 80300-1
--
  and x.rowid (+) = f_get_address_rowid(rorstat_pidm,'FAPLADDR','A',sysdate,1,'R',null)
  and x.spraddr_pidm (+) = rorstat_pidm -- 80300-1
--
  and y.rowid (+) = f_get_address_rowid(rorstat_pidm,'FAPLADDR','A',sysdate,2,'R',null)
  and y.spraddr_pidm (+) = rorstat_pidm -- 80300-1
--
  and v.rowid (+) = f_get_address_telephone_rowid(rorstat_pidm,'FAPLADDR','A',sysdate,1,'R',null)
  and v.sprtele_pidm (+) = rorstat_pidm -- 80300-1
--
  and w.rowid (+) = f_get_address_telephone_rowid(rorstat_pidm,'FAPLADDR','A',sysdate,2,'R',null)
  and w.sprtele_pidm (+) = rorstat_pidm -- 80300-1
--
  and e.rowid (+) = f_get_rrrareq_rowid(rorstat_pidm,rorstat_aidy_code,'FAPLTREQ',1,'N')
  and e.rrrareq_pidm (+) = rorstat_pidm -- 80300-1
--
  and f.rowid (+) = f_get_rrrareq_rowid(rorstat_pidm,rorstat_aidy_code,'FAPLTREQ',2,'N')
  and f.rrrareq_pidm (+) = rorstat_pidm -- 80300-1
--
  and g.rowid (+) = f_get_rrrareq_rowid(rorstat_pidm,rorstat_aidy_code,'FAPLTREQ',3,'N')
  and g.rrrareq_pidm (+) = rorstat_pidm -- 80300-1"
"BANINST1","RCVAPL1","SDA Work View.","select
 rcvapl2_pidm,
 rcvapl2_aidy_code,
 rcvapl2_infc_code,
 rcvapl2_seq_no,
 rcvapl2_curr_rec_ind,
 rcvapl2_id,
 rcvapl2_last_name,
 rcvapl2_first_name,
 rcvapl2_middle_name,
 rcvapl2_middle_intital,
 rcvapl2_name_prefix,
 rcvapl2_name_suffix,
 rcvapl2_ssn,
 rcvapl2_birth_date,
 rcvapl2_age,
 rcvapl2_sex,
 rcvapl2_ethn_code,
 rcvapl2_citz_code,
 rcvapl2_mrtl_code,
 -- 8120002-1 rcvapl2_race_data,     --81200-1
 -- 8120002-1 rcvapl2_ethn_cde,      --81200-1
 rcvapl2_stat_code_res,
 rcvapl2_atyp_code1,
 rcvapl2_street1_line1,
 rcvapl2_street1_line2,
 rcvapl2_street1_line3,
 rcvapl2_city1,
 rcvapl2_stat_code1,
 rcvapl2_zip1,
 rcvapl2_cnty_code1,
 rcvapl2_natn_code1,
 rcvapl2_phone_area1,
 rcvapl2_phone_number1,
 rcvapl2_tele_code1,
 rcvapl2_atyp_code2,
 rcvapl2_street2_line1,
 rcvapl2_street2_line2,
 rcvapl2_street2_line3,
 rcvapl2_city2,
 rcvapl2_stat_code2,
 rcvapl2_zip2,
 rcvapl2_cnty_code2,
 rcvapl2_natn_code2,
 rcvapl2_phone_area2,
 rcvapl2_phone_number2,
 rcvapl2_tele_code2,
 rcvapl2_ad_term_code_entry,
 rcvapl2_ad_appl_no,
 rcvapl2_ad_levl_code,
 rcvapl2_ad_appl_date,
 rcvapl2_ad_admt_code,
 rcvapl2_ad_styp_code,
 rcvapl2_ad_coll_code_1,
 rcvapl2_ad_degc_code_1,
 rcvapl2_ad_majr_code_1,
 rcvapl2_ad_resd_code,
 rcvapl2_ad_complete_ind,
 rcvapl2_ad_incomplete_ind,
 rcvapl2_ad_any_inst_accept_ind,
 rcvapl2_ad_any_stdn_accept_ind,
 rcvapl2_ad_cur_inst_accept_ind,
 rcvapl2_ad_cur_stdn_accept_ind,
 rcvapl2_ad_cur_rejected_ind,
 rcvapl2_ad_withdrawn_ind,
 substr(f_split_fields(rcvapl2_ad_decisions,1),1,2),
 to_date(f_split_fields(rcvapl2_ad_decisions,2),'DD-MON-YYYY'),
 substr(f_split_fields(rcvapl2_ad_decisions,3),1,2),
 to_date(f_split_fields(rcvapl2_ad_decisions,4),'DD-MON-YYYY'),
 substr(f_split_fields(rcvapl2_ad_decisions,5),1,2),
 to_date(f_split_fields(rcvapl2_ad_decisions,6),'DD-MON-YYYY'),
 substr(f_split_fields(rcvapl2_ad_decisions,7),1,2),
 to_date(f_split_fields(rcvapl2_ad_decisions,8),'DD-MON-YYYY'),
 substr(f_split_fields(rcvapl2_ad_decisions,9),1,2),
 to_date(f_split_fields(rcvapl2_ad_decisions,10),'DD-MON-YYYY'),
 rcvapl2_ad_add_decisions,
 rcvapl2_st_term_code_eff,
 rcvapl2_st_stst_code,
 rcvapl2_st_levl_code,
 rcvapl2_st_styp_code,
 rcvapl2_st_term_code_admit,
 rcvapl2_st_resd_code,
 rcvapl2_st_coll_code_1,
 rcvapl2_st_degc_code_1,
 rcvapl2_st_majr_code_1,
 rcvapl2_st_clas_code,
 rcvapl2_fam_memb,
 rcvapl2_no_in_coll,
 rcvapl2_yr_in_coll,
 rcvapl2_coll_cde,
 rcvapl2_exp_enroll_status,
 rcvapl2_par_us_inc,
 rcvapl2_us_inc,
 rcvapl2_inst_hous_cde,
 rcvapl2_cash_amt,
 rcvapl2_hme_val,
 rcvapl2_hme_dbt,
 rcvapl2_bus_farm_val,
 rcvapl2_bus_farm_dbt,
 rcvapl2_re_inv_val,
 rcvapl2_re_inv_dbt,
 rcvapl2_model_cde,
 rcvapl2_c_depend_status,
 rcvapl2_c_par_1_tot_inc,
 rcvapl2_c_par_2_tot_inc,
 rcvapl2_c_1_tot_inc,
 rcvapl2_c_2_tot_inc,
 rcvapl2_im_1_pc,
 rcvapl2_c_par_1_ctrb_fr_inc,
 rcvapl2_c_par_1_ctrb_fr_asset,
 rcvapl2_c_par_2_ctrb_fr_inc,
 rcvapl2_c_par_2_ctrb_fr_asset,
 rcvapl2_c_par_1_ctrb_offl_est,
 rcvapl2_im_1_sc,
 rcvapl2_c_1_ctrb_fr_inc,
 rcvapl2_c_1_ctrb_fr_asset,
 rcvapl2_c_2_ctrb_fr_inc,
 rcvapl2_c_2_ctrb_fr_asset,
 rcvapl2_c_1_ctrb_offl_est,
 rcvapl2_im_1_tfc,
 rcvapl2_eps_cde,
 rcvapl2_c_inst_1_tot_fam_ctrb,
 rcvapl2_lock_ind,
 rcvapl2_bgrp_code,
 rcvapl2_aprd_code,
 rcvapl2_pgrp_code,
 rcvapl2_tgrp_code,
 rcvapl2_pc,
 rcvapl2_sc,
 rcvapl2_tfc,
 rcvapl2_pckg_comp_date,
 rcvapl2_all_req_comp_date,
 rcvapl2_pckg_req_comp_date,
 rcvapl2_disb_req_comp_date,
 rcvapl2_fm_gross_need,
 rcvapl2_fm_unmet_need,
 rcvapl2_im_gross_need,
 rcvapl2_im_unmet_need,
 rcvapl2_im_tfc,
 rcvapl2_cost_of_ed,
 rcvapl2_total_offer,
 rcvapl2_resource_amt,
 rcvapl2_verification_prty,
 rcvapl2_verification_msg,
 rcvapl2_ver_complete,
 rcvapl2_treq_code1,
 rcvapl2_treq_desc1,
 rcvapl2_trst_code1,
 rcvapl2_sbgi_code1,
 rcvapl2_fund_code1,
 rcvapl2_period1,          -- 80900-1
 rcvapl2_term_code1,       -- 80900-1
 rcvapl2_sat_ind1,
 rcvapl2_stat_date1,
 rcvapl2_pckg_ind1,
 rcvapl2_disb_ind1,
 rcvapl2_memo_ind1,
 rcvapl2_sbgi_type_ind1,   -- 80500-1
 rcvapl2_add_treq1,
 rcvapl2_treq_code2,
 rcvapl2_treq_desc2,
 rcvapl2_trst_code2,
 rcvapl2_sbgi_code2,
 rcvapl2_fund_code2,
 rcvapl2_period2,          -- 80900-1
 rcvapl2_term_code2,       -- 80900-1
 rcvapl2_sat_ind2,
 rcvapl2_stat_date2,
 rcvapl2_pckg_ind2,
 rcvapl2_disb_ind2,
 rcvapl2_memo_ind2,
 rcvapl2_sbgi_type_ind2,   -- 80500-1
 rcvapl2_add_treq2,
 rcvapl2_treq_code3,
 rcvapl2_treq_desc3,
 rcvapl2_trst_code3,
 rcvapl2_sbgi_code3,
 rcvapl2_fund_code3,
 rcvapl2_period3,          -- 80900-1
 rcvapl2_term_code3,       -- 80900-1
 rcvapl2_sat_ind3,
 rcvapl2_stat_date3,
 rcvapl2_pckg_ind3,
 rcvapl2_disb_ind3,
 rcvapl2_memo_ind3,
 rcvapl2_sbgi_type_ind3,   -- 80500-1
 rcvapl2_add_treq3,
 rcvapl2_add_requirements,
 rcvapl2_btyp_code,
 rcvapl2_btyp_tfc_ind,
 rcvapl2_btyp_total_budget,
 h.rbracmp_comp_code,
 h.rbracmp_amt,
 i.rbracmp_comp_code,
 i.rbracmp_amt,
 j.rbracmp_comp_code,
 j.rbracmp_amt,
 k.rbracmp_comp_code,
 k.rbracmp_amt,
 l.rbracmp_comp_code,
 l.rbracmp_amt,
 substr(f_more_budget_components
        (rcvapl2_pidm, rcvapl2_aidy_code, rcvapl2_btyp_code),1,1)
from rbracmp h, rbracmp i, rbracmp j,
     rbracmp k, rbracmp l,
     rcvapl2
where h.rowid (+) = f_get_rbracmp_rowid(rcvapl2_pidm,rcvapl2_aidy_code,rcvapl2_btyp_code,'FAPLBCMP',1)
  and h.rbracmp_pidm (+) = rcvapl2_pidm -- 80300-1
--
  and i.rowid (+) = f_get_rbracmp_rowid(rcvapl2_pidm,rcvapl2_aidy_code,rcvapl2_btyp_code,'FAPLBCMP',2)
  and i.rbracmp_pidm (+) = rcvapl2_pidm -- 80300-1
--
  and j.rowid (+) = f_get_rbracmp_rowid(rcvapl2_pidm,rcvapl2_aidy_code,rcvapl2_btyp_code,'FAPLBCMP',3)
  and j.rbracmp_pidm (+) = rcvapl2_pidm -- 80300-1
--
  and k.rowid (+) = f_get_rbracmp_rowid(rcvapl2_pidm,rcvapl2_aidy_code,rcvapl2_btyp_code,'FAPLBCMP',4)
  and k.rbracmp_pidm (+) = rcvapl2_pidm -- 80300-1
--
  and l.rowid (+) = f_get_rbracmp_rowid(rcvapl2_pidm,rcvapl2_aidy_code,rcvapl2_btyp_code,'FAPLBCMP',5)
  and l.rbracmp_pidm (+) = rcvapl2_pidm -- 80300-1
--"
"BANINST1","RBVSIMR","Period Budget Simulation View","SELECT RBBBRUN_RUN_NAME,
         RORSTAT_PIDM,
         SPRIDEN_ID,
         SPRIDEN_LAST_NAME
         || ', '
         || SPRIDEN_FIRST_NAME
         || ' '
         || SPRIDEN_MI,
         RNKNEED.F_CALC_PERIOD_BUDGET_AMT(RORSTAT_PIDM,
                                          RORSTAT_AIDY_CODE,
                                          'F'),
         RNKNEED.F_CALC_PERIOD_BUDGET_AMT(RORSTAT_PIDM,
                                          RORSTAT_AIDY_CODE,
                                          'I'),
         RNKNEED.F_CALC_PERIOD_BUDGET_AMT(RORSTAT_PIDM,
                                          RORSTAT_AIDY_CODE,
                                          'P'),
         RNKNEED.F_CALC_PERIOD_BUDGET_AMT(RORSTAT_PIDM,
                                          RORSTAT_AIDY_CODE,
                                          'F',
                                          RBBBRUN_RUN_NAME),
         RNKNEED.F_CALC_PERIOD_BUDGET_AMT(RORSTAT_PIDM,
                                          RORSTAT_AIDY_CODE,
                                          'I',
                                          RBBBRUN_RUN_NAME),
         RNKNEED.F_CALC_PERIOD_BUDGET_AMT(RORSTAT_PIDM,
                                          RORSTAT_AIDY_CODE,
                                          'P',
                                          RBBBRUN_RUN_NAME)
    FROM SPRIDEN,
         RORSTAT X,
         RBBBRUN Y
   WHERE SPRIDEN_PIDM      = RORSTAT_PIDM
     AND RORSTAT_AIDY_CODE = RBBBRUN_AIDY_CODE
     AND NVL (SPRIDEN_ENTITY_IND, 'P') = 'P'
     AND SPRIDEN_CHANGE_IND IS NULL
     AND EXISTS
           ( SELECT 'Y'
               FROM RBRAPBG
              WHERE RBRAPBG_AIDY_CODE = X.RORSTAT_AIDY_CODE
                AND RBRAPBG_PIDM      = X.RORSTAT_PIDM
                AND RBRAPBG_RUN_NAME  = Y.RBBBRUN_RUN_NAME
           )"
"BANINST1","RBVCOMP","Budget Inquiry View","SELECT  DISTINCT
	RBRCOMP_AIDY_CODE,
	RBRCOMP_APRD_CODE,
      	RBRCOMP_BGRP_CODE,
	RBRCOMP_BTYP_CODE
FROM	RBRCOMP

 "
"BANINST1","RBVBUD2","SDA Work View.","select
 rorstat_pidm,
 rorstat_aidy_code,
 rbbabud_btyp_code,
 spriden_id,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 substr(f_get_ssn(rorstat_pidm, rorstat_aidy_code),1,9),
 rorstat_aprd_code,
 rorstat_bgrp_code,
 rbbabud_tfc_ind,
 rtvbtyp_pell_ind,
 substr(f_rbrmixd_data(rorstat_pidm, rorstat_aidy_code, rorstat_bgrp_code),1,1),
 f_calc_total_budget(rorstat_pidm, rorstat_aidy_code, rbbabud_btyp_code)
from rtvbtyp,
     spriden,
     rorstat,
     rbbabud
where spriden_pidm = rorstat_pidm
  and spriden_change_ind is null
  and rorstat_pidm      = rbbabud_pidm
  and rorstat_aidy_code = rbbabud_aidy_code
  and rbbabud_btyp_code = rtvbtyp_code
 "
"BANINST1","RBVBUD1","SDA Work View.","select
 rbvbud2_pidm,
 rbvbud2_aidy_code,
 rbvbud2_btyp_code,
 rbracmp_comp_code,
 rbvbud2_id,
 rbvbud2_last_name,
 rbvbud2_first_name,
 rbvbud2_middle_name,
 rbvbud2_middle_intital,
 rbvbud2_ssn,
 rbvbud2_aprd_code,
 rbvbud2_bgrp_code,
 rbvbud2_tfc_ind,
 rbvbud2_pell_ind,
 rbvbud2_rbrmixd_ind,
 rbvbud2_tot_budget,
 rbracmp_amt
from rbracmp,
     rbvbud2
where rbvbud2_pidm      = rbracmp_pidm
  and rbvbud2_aidy_code = rbracmp_aidy_code
  and rbvbud2_btyp_code = rbracmp_btyp_code
 "
"BANINST1","RBVBCAT","Period Budget Category View","SELECT rbrapbt_aidy_code,
                             rbrapbt_pidm,
                             rbrapbt_period,
                             rbrapbt_pbtp_code,
                             rbrbcat_bcat_code,
                             rbrbcat_long_desc,
                             rbrbcat_print_seq_no,
                             ( SELECT NVL(SUM(rbrapbc_amt),0)
                                 FROM rbrpbcp,
                                      rbrapbc
                                WHERE rbrapbc_aidy_code = x.rbrapbt_aidy_code
                                  AND rbrapbc_pidm      = x.rbrapbt_pidm
                                  AND rbrapbc_period    = x.rbrapbt_period
                                  AND rbrapbc_pbtp_code = x.rbrapbt_pbtp_code
                                  AND rbrapbc_run_name  = x.rbrapbt_run_name
                                  AND rbrpbcp_aidy_code = rbrapbc_aidy_code
                                  AND rbrpbcp_pbcp_code = rbrapbc_pbcp_code
                                  AND rbrpbcp_bcat_code = y.rbrbcat_bcat_code
                             ) bcat_amt
                        FROM rbrbcat y,
                             rbrapbt x
                       WHERE rbrapbt_run_name   = rb_budget_run.f_actual_run
                         AND EXISTS
                               ( SELECT 'Y'
                                   FROM robinst
                                  WHERE robinst_aidy_code             = x.rbrapbt_aidy_code
                                    AND robinst_period_budget_enabled = 'Y'
                               )
                         AND rbrapbt_pbtp_code  = ( SELECT rbrpbtp_pbtp_code
                                                      FROM rbrpbtp
                                                     WHERE rbrpbtp_aidy_code = x.rbrapbt_aidy_code
                                                       AND rbrpbtp_pbtp_code = x.rbrapbt_pbtp_code
                                                       AND rbrpbtp_efc_ind   = rnkneed.f_find_efc_ind(x.rbrapbt_pidm,
                                                                                                      x.rbrapbt_aidy_code,
                                                                                                      x.rbrapbt_run_name )
                                                  )
                         AND rbrbcat_aidy_code  = rbrapbt_aidy_code
                         AND rbrbcat_bcat_code IN ( SELECT rbrpbcp_bcat_code
                                                      FROM rbrpbcp,
                                                           rbrapbc
                                                     WHERE rbrapbc_aidy_code = x.rbrapbt_aidy_code
                                                       AND rbrapbc_pidm      = x.rbrapbt_pidm
                                                       AND rbrapbc_pbtp_code = x.rbrapbt_pbtp_code
                                                       AND rbrapbc_run_name  = x.rbrapbt_run_name
                                                       AND rbrpbcp_aidy_code = rbrapbc_aidy_code
                                                       AND rbrpbcp_pbcp_code = rbrapbc_pbcp_code
                                                  )"
"BANINST1","RAVSPTM","Financial Aid Sport Aid By Period View","SELECT
  RARSPTM_PIDM,
  SPRIDEN_ID,
  SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
  RARSPTM_PERIOD,                                                    -- 80900-1
  ROBPRDS_SEQ_NO,                                                    -- 80900-1
  RARSPTM_FASP_CODE,
  RARSPTM_AATP_CODE,
  RARSPTM_POTENTIAL_AID_AMT,
  RARSPTM_ATHL_AID_TERM_AMT,
  RARSPTM_TERM_PCT,
  RARSPTM_TERM_COUNT,
  RARSPTM_SUMMER_TERM_COUNT,                                         -- 80900-1
  RARSPTM_USER_ID,                                                   -- 80900-1
  RARSPTM_ACTIVITY_DATE,                                             -- 80900-1
  RARSPTM_DATA_ORIGIN                                                -- 80900-1
FROM ROBPRDS,                                                        -- 80900-1
     SPRIDEN,                                                        -- 80900-1
     RARSPTM
WHERE SPRIDEN_PIDM = RARSPTM_PIDM
  AND NVL(SPRIDEN_ENTITY_IND,'P') = 'P'
  AND SPRIDEN_CHANGE_IND IS NULL                                     -- 80900-1
  AND ROBPRDS_PERIOD = RARSPTM_PERIOD                                -- 80900-1
"
"BANINST1","PXVRTOT","","SELECT   PERJTOT_YEAR,
                      PERJTOT_PIDM,
                      PERJTOT_EMPR_CODE,
                      PXRRERN_REPT_CODE,
                      PXRRERN_RBOX_CODE,
                      PERJTOT_MONTH,
                 SUM (PERJTOT_GRS)
                FROM  PERJTOT,
                      PXRRERN
              WHERE   PERJTOT_EARN_CODE = PXRRERN_EARN_CODE
             GROUP BY PERJTOT_YEAR,
                      PERJTOT_PIDM,
                      PERJTOT_EMPR_CODE,
                      PXRRERN_REPT_CODE,
                      PXRRERN_RBOX_CODE,
                      PERJTOT_MONTH
             UNION
             SELECT  PERDTOT_YEAR,
                     PERDTOT_PIDM,
                     PERDTOT_EMPR_CODE,
                     PXRRDED_REPT_CODE,
                     PXRRDED_RBOX_CODE,
                     PERDTOT_MONTH,
                 SUM ( DECODE (PXRRDED_AMT_IND,
                                    'E',PERDTOT_EMPL_AMT,
                                    'R',PERDTOT_EMPR_AMT,
                                        PERDTOT_APPL_GRS )
                     )
             FROM   PERDTOT,
                    PXRRDED
             WHERE  PERDTOT_BDCA_CODE = PXRRDED_BDCA_CODE
           GROUP BY PERDTOT_YEAR,
                    PERDTOT_PIDM,
                    PERDTOT_EMPR_CODE,
                    PXRRDED_REPT_CODE,
                    PXRRDED_RBOX_CODE,
                    PERDTOT_MONTH
  
 "
"BANINST1","PXVREPT","Report Box Totals View (uses PERDTOT and PERJTOT tables).","SELECT   'E',
                      PERJTOT_PIDM,
                      PXRRERN_RBOX_CODE,
                      PERJTOT_MONTH,
                      SUM (PERJTOT_GRS)
              FROM    PAYROLL.PERJTOT,
                      PAYROLL.PXRRERN,
                      PAYROLL.PPRCOLR
              WHERE   PXRRERN_EARN_CODE   =  PERJTOT_EARN_CODE
                AND   PXRRERN_REPT_CODE   =  PPRCOLR_JOB
                AND   PERJTOT_YEAR        =  PPRCOLR_PARM_NUMBER
                AND   PERJTOT_EMPR_CODE   =  PPRCOLR_VALUE_ATYP
                AND   PPRCOLR_TYPE        = 'V'
                AND   PPRCOLR_SESSIONID   =  USERENV( 'SESSIONID' )
              GROUP BY 'E',
                      PERJTOT_PIDM,
                      PXRRERN_RBOX_CODE,
                      PERJTOT_MONTH
             UNION
              SELECT  'D',
                      PERDTOT_PIDM,
                      PXRRDED_RBOX_CODE,
                      PERDTOT_MONTH,
                      SUM ( DECODE (PXRRDED_AMT_IND,
                                    'E',PERDTOT_EMPL_AMT,
                                    'R',PERDTOT_EMPR_AMT,
                                        PERDTOT_APPL_GRS )
                          )
              FROM    PAYROLL.PERDTOT,
                      PAYROLL.PXRRDED,
                      PAYROLL.PPRCOLR
              WHERE   PXRRDED_BDCA_CODE   =  PERDTOT_BDCA_CODE
                AND   PXRRDED_REPT_CODE   =  PPRCOLR_JOB
                AND   PERDTOT_YEAR        =  PPRCOLR_PARM_NUMBER
                AND   PERDTOT_EMPR_CODE   =  PPRCOLR_VALUE_ATYP
                AND   PPRCOLR_TYPE        = 'V'
                AND   PPRCOLR_SESSIONID   =  USERENV( 'SESSIONID' )
              GROUP BY 'D',
                      PERDTOT_PIDM,
                      PXRRDED_RBOX_CODE,
                      PERDTOT_MONTH

 "
"BANINST1","PXVREP2","Report Box Totals View (uses PERDTOT and PERJTOT tables).","SELECT  PERJTOT_PIDM,
               PXRRERN_RBOX_CODE,
               SUM (PERJTOT_GRS)
       FROM    PERJTOT,
               PXRRERN,
               PXRREPT
       WHERE   PXRRERN_EARN_CODE   =  PERJTOT_EARN_CODE
         AND   PXRRERN_REPT_CODE   =  PXRREPT_REPT_CODE
         AND   PERJTOT_MONTH BETWEEN PXRREPT_START_MONTH
                               AND   PXRREPT_END_MONTH
         AND   PERJTOT_EMPR_CODE   =  PXRREPT_EMPR_CODE
         AND   PERJTOT_YEAR        =  PXRREPT_YEAR
         AND   PERJTOT_PIDM        =  PXRREPT_PIDM
         AND   PXRREPT_RBOX_CODE   =  'VIEW'
         AND   PXRREPT_SESSION_ID  =  USERENV( 'SESSIONID' )
       GROUP BY PERJTOT_PIDM,
                PXRRERN_RBOX_CODE
      UNION ALL
       SELECT  PERDTOT_PIDM,
               PXRRDED_RBOX_CODE,
               SUM ( DECODE (PXRRDED_AMT_IND,
                             'E',PERDTOT_EMPL_AMT,
                             'R',PERDTOT_EMPR_AMT,
                                 PERDTOT_APPL_GRS )
                   )
       FROM    PERDTOT,
               PXRRDED,
               PXRREPT
       WHERE   PXRRDED_BDCA_CODE   =  PERDTOT_BDCA_CODE
         AND   PXRRDED_REPT_CODE   =  PXRREPT_REPT_CODE
         AND   PERDTOT_MONTH BETWEEN PXRREPT_START_MONTH
                               AND   PXRREPT_END_MONTH
         AND   PERDTOT_EMPR_CODE   =  PXRREPT_EMPR_CODE
         AND   PERDTOT_YEAR        =  PXRREPT_YEAR
         AND   PERDTOT_PIDM        =  PXRREPT_PIDM
         AND   PXRREPT_RBOX_CODE   =  'VIEW'
         AND   PXRREPT_SESSION_ID  =  USERENV( 'SESSIONID' )
       GROUP BY PERDTOT_PIDM,
                PXRRDED_RBOX_CODE

 "
"BANINST1","PVWPXML","CalPERS Detail XML View. View of detail records in PVWPXML which includes additional columns for element name in PERS XML schema.","SELECT
    pvrpdet_batch,
    pvrpdet_pers_employer_id ,
    pvrpdet_begin_date,
    pvrpdet_end_date,
    pvrpdet_program_type,
    pvrpdet_report_type,
    pvrpdet_record_type,
    pvrpdet_pidm,
    pvrpdet_trans_type ,
 (CASE
        WHEN  pvrpdet_earnings=0 AND pvrpdet_trans_type='RSC'  THEN NULL
        ELSE pvrpdet_earnings
     END),
    pvrpdet_posn ,
    pvrpdet_suff,
    pvrpdet_activity_date,
    pvrpdet_user_id ,
    pvrpdet_pers_appt_id,
    pvrpdet_pers_division_id,
    pvrpdet_special_comp_ind ,
    pvrpdet_pers_plan_sip_id,
    pvrpdet_pay_rate_type,
    pvrpdet_pay_rate ,
    pvrpdet_sched_days,
    pvrpdet_pers_sched_hrs_week ,
    pvrpdet_pretax_member_cont,
    pvrpdet_potax_member_cont ,
    pvrpdet_pretax_empr_cont ,
    pvrpdet_surv_member_cont ,
    pvrpdet_surv_spou_member_cont,
    pvrpdet_surv_chil_member_cont ,
    pvrpdet_potax_addl_member_cont,
    pvrpdet_pretax_addl_empr_cont ,
    pvrpdet_total_work_hrs,
    pvrpdet_potax_loan_payment ,
    pvrpdet_data_origin,
     (CASE pvrpdet_record_type
        WHEN  'PAY'  THEN 'n1:Payroll'
        WHEN  'SCP'  THEN 'n1:ServiceCreditPurchaseDeduction'
        WHEN  'OPR'  THEN 'n1:DeductionForOverpaymentReceivable'
        WHEN  'SIP'  THEN 'n1:SupplementalIncomePlan'
     END),
     pvrpdet.rowid,
    (CASE pvrpdet_record_type
        WHEN  'PAY'  THEN '1-PAY'
        WHEN  'SCP'  THEN '2-SCP'
        WHEN  'OPR'  THEN '3-OPR'
        WHEN  'SIP'  THEN '4-SIP'
    END),
    pvrpdet_year,
    pvrpdet_pict_code,
    pvrpdet_payno
    FROM pvrpdet"
"BANINST1","PVWPERS","CalPERS Payroll History Earnings View. Lists all earnings history records for CalPERS qualified employees or retirees.","SELECT
       phrhist_year,
       phrhist_pict_code,
       phrhist_payno,
       phrhist_pidm,
       phrhist_seq_no,
       phrhist_pers_report_ind,
       nbbposn_calif_type,
       pebempl_calif_pension_ind,
       phrjobs_posn,
       phrjobs_suff,
       nvl((select phrjobs_pers_appt_id from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),pebempl_pers_appt_id),
      (select phrjobs_pers_pay_rate_type from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       phrjobs_appt_pct,
       (select phrjobs_full_assgn_salary from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       phrjobs_salary_rate,
       (select phrjobs_pers_sched_days from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       (select phrjobs_pers_sched_hrs_week from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       (select phrjobs_pers_special_only_ind from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       (select phrjobs_pers_pay_rate_over from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       nvl(phrjobs_contract_type,nbrbjob_contract_type),
       phrjobs_effective_date,
       phrearn_earn_code,
       phrearn_amt,
       phrhist_disp,
       phrhist_event_date,
       phrhist_type_ind,
       phrhist_calc_ind,
       phrhist_adjs_seq_no,
       phrhist_adjs_date,
       phrhist_adj_by_seq_no,
       phrhist_adj_by_date,
       (select max(b.phrhist_seq_no) from phrhist b
         where b.phrhist_pidm = a.phrhist_pidm
           and b.phrhist_year = a.phrhist_year
           and b.phrhist_pict_code = a.phrhist_pict_code
           and b.phrhist_payno = a.phrhist_payno),
       phrhist_assoc_seq_no,
       (select c.phrhist_type_ind from phrhist c
         where c.phrhist_pidm = a.phrhist_pidm
           and c.phrhist_year = a.phrhist_year
           and c.phrhist_pict_code = a.phrhist_pict_code
           and c.phrhist_payno = a.phrhist_payno
           and c.phrhist_seq_no = a.phrhist_assoc_seq_no),
       (select DISTINCT 'Y' from phrhist d
         where d.phrhist_pidm = a.phrhist_pidm
           and d.phrhist_year = a.phrhist_year
           and d.phrhist_pict_code = a.phrhist_pict_code
           and d.phrhist_payno = a.phrhist_payno
           and d.phrhist_seq_no = a.phrhist_adj_by_seq_no
           and d.phrhist_type_ind = 'V'
           and a.phrhist_type_ind = 'C'
           and d.phrhist_assoc_seq_no IS NOT NULL),
       (select DISTINCT 'Y' from phrhist e
         where e.phrhist_pidm = a.phrhist_pidm
           and e.phrhist_year = a.phrhist_year
           and e.phrhist_pict_code = a.phrhist_pict_code
           and e.phrhist_payno = a.phrhist_payno
           and e.phrhist_adjs_seq_no = a.phrhist_seq_no
           and e.phrhist_type_ind IN ('J','M')
           and a.phrhist_type_ind = 'C'),
      (select phrhist_pers_report_ind from phrhist f
         where f.phrhist_pidm = a.phrhist_pidm
           and f.phrhist_year = a.phrhist_year
           and f.phrhist_pict_code = a.phrhist_pict_code
           and f.phrhist_payno = a.phrhist_payno
           and f.phrhist_seq_no = 0
           and f.phrhist_type_ind = 'C'),
       phrjobs_ecls_code,
       ptrempr_pers_employer_id,
       ptrempr_pers_division_id,
       phrearn_gen_ind,
       DECODE(ptrearn_unit_ind, 'H', phrearn_hrs, 0),
       phrearn_rate,
       phrearn_special_rate,
       ptrearn_type_ind,
       ptrearn_pensionable_hrs_ind,
       ptrearn_cash_ind,
       ptrearn_unit_ind,
       ptrearn_psct_code,
       ptrearn_special_comp_ind,
       NVL(ptrearn_prior_period_ind,'N'),
       phrearn_prior_begin_date,
       phrearn_prior_end_date,
       a.rowid
  FROM nbbposn, pebempl, phrearn, phrjobs h, nbrjobs, nbrbjob, ptrempr, phrhist a, ptrearn
 WHERE phrhist_year = phrjobs_year
   AND phrhist_pict_code = phrjobs_pict_code
   AND phrhist_payno = phrjobs_payno
   AND phrhist_pidm = phrjobs_pidm
   AND phrhist_seq_no = phrjobs_seq_no
   AND TO_NUMBER(phrhist_disp) > 50
   AND phrjobs_pidm = nbrjobs_pidm (+)
   AND phrjobs_posn = nbrjobs_posn (+)
   AND phrjobs_suff = nbrjobs_suff (+)
   AND phrjobs_effective_date = nbrjobs_effective_date (+)
   AND phrjobs_pidm = nbrbjob_pidm
   AND phrjobs_posn = nbrbjob_posn
   AND phrjobs_suff = nbrbjob_suff
   AND phrjobs_year = phrearn_year
   AND phrjobs_pict_code = phrearn_pict_code
   AND phrjobs_payno = phrearn_payno
   AND phrjobs_pidm = phrearn_pidm
   AND phrjobs_seq_no = phrearn_seq_no
   AND phrjobs_posn = phrearn_posn
   AND phrjobs_suff = phrearn_suff
   AND phrjobs_effective_date = phrearn_effective_date
   AND phrjobs_empr_code = ptrempr_code
   AND phrearn_earn_code = ptrearn_code
   AND phrhist_pidm  = pebempl_pidm
   AND phrjobs_posn = nbbposn_posn
   AND (pebempl_calif_pension_ind IN ('T','E')
       OR ( pebempl_calif_pension_ind IN ('P','B')
             AND EXISTS (SELECT 'x'
              FROM phrdedn, ptrbdca
             WHERE phrdedn_year = phrhist_year
               AND phrdedn_pict_code = phrhist_pict_code
               AND phrdedn_payno = phrhist_payno
               AND phrdedn_pidm = phrhist_pidm
               AND phrdedn_seq_no = phrhist_seq_no
               AND phrdedn_bdca_code = ptrbdca_code
               AND ptrbdca_bdty_code IN ('81', '82', '85', '86', '87', '88', '89')
               AND pv_pers_exclude.f_excl_earning_by_job(phrhist_pidm,phrjobs_posn,phrjobs_suff,phrdedn_bdca_code)='N'
               AND pv_pers_exclude.f_excl_earning_by_payid(phrhist_pidm,phrhist_pict_code,phrdedn_bdca_code)='N')
           )
        )
      "
"BANINST1","PVWPERS","This view lists all earnings history records for CalPERS qualified employees or retirees.","SELECT
       phrhist_year,
       phrhist_pict_code,
       phrhist_payno,
       phrhist_pidm,
       phrhist_seq_no,
       phrhist_pers_report_ind,
       nbbposn_calif_type,
       pebempl_calif_pension_ind,
       phrjobs_posn,
       phrjobs_suff,
       nvl((select phrjobs_pers_appt_id from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),pebempl_pers_appt_id),
      (select phrjobs_pers_pay_rate_type from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       phrjobs_appt_pct,
       (select phrjobs_full_assgn_salary from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       phrjobs_salary_rate,
       (select phrjobs_pers_sched_days from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       (select phrjobs_pers_sched_hrs_week from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       (select phrjobs_pers_special_only_ind from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       (select phrjobs_pers_pay_rate_over from phrjobs i
         where i.phrjobs_pidm = h.phrjobs_pidm
           and i.phrjobs_year = h.phrjobs_year
           and i.phrjobs_pict_code = h.phrjobs_pict_code
           and i.phrjobs_payno = h.phrjobs_payno
           and i.phrjobs_effective_date = h.phrjobs_effective_date
           and i.phrjobs_seq_no = 0
           and i.phrjobs_posn = h.phrjobs_posn
           and i.phrjobs_suff = h.phrjobs_suff),
       nvl(phrjobs_contract_type,nbrbjob_contract_type),
       phrjobs_effective_date,
       phrearn_earn_code,
       phrearn_amt,
       phrhist_disp,
       phrhist_event_date,
       phrhist_type_ind,
       phrhist_calc_ind,
       phrhist_adjs_seq_no,
       phrhist_adjs_date,
       phrhist_adj_by_seq_no,
       phrhist_adj_by_date,
       (select max(b.phrhist_seq_no) from phrhist b
         where b.phrhist_pidm = a.phrhist_pidm
           and b.phrhist_year = a.phrhist_year
           and b.phrhist_pict_code = a.phrhist_pict_code
           and b.phrhist_payno = a.phrhist_payno),
       phrhist_assoc_seq_no,
       (select c.phrhist_type_ind from phrhist c
         where c.phrhist_pidm = a.phrhist_pidm
           and c.phrhist_year = a.phrhist_year
           and c.phrhist_pict_code = a.phrhist_pict_code
           and c.phrhist_payno = a.phrhist_payno
           and c.phrhist_seq_no = a.phrhist_assoc_seq_no),
       (select DISTINCT 'Y' from phrhist d
         where d.phrhist_pidm = a.phrhist_pidm
           and d.phrhist_year = a.phrhist_year
           and d.phrhist_pict_code = a.phrhist_pict_code
           and d.phrhist_payno = a.phrhist_payno
           and d.phrhist_seq_no = a.phrhist_adj_by_seq_no
           and d.phrhist_type_ind = 'V'
           and a.phrhist_type_ind = 'C'
           and d.phrhist_assoc_seq_no IS NOT NULL),
       (select DISTINCT 'Y' from phrhist e
         where e.phrhist_pidm = a.phrhist_pidm
           and e.phrhist_year = a.phrhist_year
           and e.phrhist_pict_code = a.phrhist_pict_code
           and e.phrhist_payno = a.phrhist_payno
           and e.phrhist_adjs_seq_no = a.phrhist_seq_no
           and e.phrhist_type_ind IN ('J','M')
           and a.phrhist_type_ind = 'C'),
      (select phrhist_pers_report_ind from phrhist f
         where f.phrhist_pidm = a.phrhist_pidm
           and f.phrhist_year = a.phrhist_year
           and f.phrhist_pict_code = a.phrhist_pict_code
           and f.phrhist_payno = a.phrhist_payno
           and f.phrhist_seq_no = 0
           and f.phrhist_type_ind = 'C'),
       phrjobs_ecls_code,
       ptrempr_pers_employer_id,
       ptrempr_pers_division_id,
       phrearn_gen_ind,
       DECODE(ptrearn_unit_ind, 'H', phrearn_hrs, 0),
       phrearn_rate,
       phrearn_special_rate,
       ptrearn_type_ind,
       ptrearn_pensionable_hrs_ind,
       ptrearn_cash_ind,
       ptrearn_unit_ind,
       ptrearn_psct_code,
       ptrearn_special_comp_ind,
       NVL(ptrearn_prior_period_ind,'N'),
       phrearn_prior_begin_date,
       phrearn_prior_end_date,
       a.rowid
  FROM nbbposn, pebempl, phrearn, phrjobs h, nbrjobs, nbrbjob, ptrempr, phrhist a, ptrearn
 WHERE phrhist_year = phrjobs_year
   AND phrhist_pict_code = phrjobs_pict_code
   AND phrhist_payno = phrjobs_payno
   AND phrhist_pidm = phrjobs_pidm
   AND phrhist_seq_no = phrjobs_seq_no
   AND TO_NUMBER(phrhist_disp) > 50
   AND phrjobs_pidm = nbrjobs_pidm (+)
   AND phrjobs_posn = nbrjobs_posn (+)
   AND phrjobs_suff = nbrjobs_suff (+)
   AND phrjobs_effective_date = nbrjobs_effective_date (+)
   AND phrjobs_pidm = nbrbjob_pidm
   AND phrjobs_posn = nbrbjob_posn
   AND phrjobs_suff = nbrbjob_suff
   AND phrjobs_year = phrearn_year
   AND phrjobs_pict_code = phrearn_pict_code
   AND phrjobs_payno = phrearn_payno
   AND phrjobs_pidm = phrearn_pidm
   AND phrjobs_seq_no = phrearn_seq_no
   AND phrjobs_posn = phrearn_posn
   AND phrjobs_suff = phrearn_suff
   AND phrjobs_effective_date = phrearn_effective_date
   AND phrjobs_empr_code = ptrempr_code
   AND phrearn_earn_code = ptrearn_code
   AND phrhist_pidm  = pebempl_pidm
   AND phrjobs_posn = nbbposn_posn
   AND (pebempl_calif_pension_ind IN ('T','E')
       OR ( pebempl_calif_pension_ind IN ('P','B')
             AND EXISTS (SELECT 'x'
              FROM phrdedn, ptrbdca
             WHERE phrdedn_year = phrhist_year
               AND phrdedn_pict_code = phrhist_pict_code
               AND phrdedn_payno = phrhist_payno
               AND phrdedn_pidm = phrhist_pidm
               AND phrdedn_seq_no = phrhist_seq_no
               AND phrdedn_bdca_code = ptrbdca_code
               AND ptrbdca_bdty_code IN ('81', '82', '85', '86', '87', '88', '89')
               AND pv_pers_exclude.f_excl_earning_by_job(phrhist_pidm,phrjobs_posn,phrjobs_suff,phrdedn_bdca_code)='N'
               AND pv_pers_exclude.f_excl_earning_by_payid(phrhist_pidm,phrhist_pict_code,phrdedn_bdca_code)='N')
           )
        )
      "
"BANINST1","PVWPDET","CalPERS Payroll Data Block View. Supports data entry in PVAPERS.","SELECT
    pvrpdet_batch,
    pvbpinf_last_name,
    pvbpinf_first_name,
    pvrpdet_trans_type,
    pvrpdet_pay_rate_type,
    pvrpdet_pay_rate,
    pvrpdet_earnings,
    pvrpdet_pretax_member_cont,
    pvrpdet_pretax_empr_cont,
    pvrpdet_potax_member_cont,
    pvrpdet_begin_date,
    pvrpdet_end_date,
    pvrpdet_special_comp_ind,
    -- pvrpdet_sched_hrs,               -- AUDIT TRAIL: 8.1.2 C3SC JR 11/16/2010 comment
    pvrpdet_pers_sched_hrs_week,        -- AUDIT TRAIL: 8.1.2 C3SC JR 11/16/2010 changed
    pvrpdet_total_work_hrs,
    pvrpdet_sched_days,
    pvbpinf_middle_name,
    pvbpinf_pers_participant_id,
    pvrpdet_pers_plan_sip_id,
    pvrpdet_pers_appt_id,
    pvrpdet_pidm,
    pvrpdet_pers_division_id,
    pvrpdet_activity_date,
    pvrpdet_user_id,
    pvrpdet_program_type,
    pvrpdet_report_type,
    pvrpdet_record_type,
    pvrpdet_posn,
    pvrpdet_suff,
    pvrpdet_surv_member_cont,
    pvrpdet_surv_spou_member_cont,
    pvrpdet_surv_chil_member_cont,
    pvrpdet_potax_addl_member_cont,
    pvrpdet_pretax_addl_empr_cont,
    pvrpdet_potax_loan_payment,
    pvrpdet.rowid,
    pvbpinf.rowid,
    pvrprep.rowid,
    pvrptot.rowid,
    pvrpdet_data_origin,
    pvrpdet_pers_employer_id,    		     -- AUDIT TRAIL: 8.1.2 C3SC JR 11/16/2010 added
    pvrpdet_year,
    pvrpdet_pict_code,
    pvrpdet_payno,
    pvrpdet_empr_cost_cont               -- 8.4 C3SC CR
from    pvbpinf ,
        pvrpdet ,
        pvrprep ,
        pvrptot
where pvrpdet_batch = pvbpinf_batch
and pvrpdet_pers_employer_id = pvbpinf_pers_employer_id       -- AUDIT TRAIL: 8.1.2 C3SC JR 11/16/2010 added
and pvrpdet_program_type = pvbpinf_program_type
and pvrpdet_report_type = pvbpinf_report_type
and pvrpdet_pidm = pvbpinf_pidm
and pvrpdet_batch = pvrprep_batch
and pvrpdet_pers_employer_id = pvrprep_pers_employer_id       -- AUDIT TRAIL: 8.1.2 C3SC JR 11/16/2010 added
and pvrpdet_program_type = pvrprep_program_type
and pvrpdet_report_type = pvrprep_report_type
and pvrpdet_batch = pvrptot_batch
and pvrpdet_pers_employer_id = pvrptot_pers_employer_id       -- AUDIT TRAIL: 8.1.2 C3SC JR 11/16/2010 added
and pvrpdet_program_type = pvrptot_program_type
and pvrpdet_record_type = pvrptot_record_type                 -- AUDIT TRAIL 8.1.2 C3SC JR 03/03/2011 added
and pvrpdet_report_type = pvrptot_report_type
ORDER BY pvbpinf_last_name"
"BANINST1","PVWPDED"," View to extract CalPERS Payroll Reporting Data.","SELECT phrdedn_year,
         phrdedn_pict_code,
         phrdedn_payno,
         phrdedn_pidm,
         phrdedn_seq_no,
         phrhist_pers_report_ind,
         phrdedn_bdca_code,
         phrdedn_employee_amt,
         phrdedn_employer_amt,
         ptrbdca_pers_program_type,
         ptrbdca_pers_record_type,
         ptrbdca_pers_plan_sip_id,
         ptrempr_pers_employer_id,
         ptrempr_pers_division_id,
         pebempl_pers_appt_id,
         pebempl_calif_pension_ind,
         (select max(b.phrhist_seq_no) from phrhist b
          where b.phrhist_pidm = a.phrhist_pidm
            and b.phrhist_year = a.phrhist_year
            and b.phrhist_pict_code = a.phrhist_pict_code
            and b.phrhist_payno = a.phrhist_payno),
         phrhist_assoc_seq_no,
         (select c.phrhist_type_ind from phrhist c
           where c.phrhist_pidm = a.phrhist_pidm
             and c.phrhist_year = a.phrhist_year
             and c.phrhist_pict_code = a.phrhist_pict_code
             and c.phrhist_payno = a.phrhist_payno
             and c.phrhist_seq_no = a.phrhist_assoc_seq_no),
         phrhist_adjs_date,
         phrhist_event_date,
         phrhist_type_ind,
         a.rowid
    FROM pebempl, ptrempr, ptrbdca, phrhist a, phrdedn
   WHERE phrdedn_year = phrhist_year
     AND phrdedn_pict_code = phrhist_pict_code
     AND phrdedn_payno =  phrhist_payno
     AND phrdedn_pidm = phrhist_pidm
     AND phrdedn_seq_no = phrhist_seq_no
     AND TO_NUMBER(phrhist_disp) > 50
     AND phrdedn_bdca_code = ptrbdca_code
     AND (
      -- SCP, OPR records
          ( ptrbdca_pers_program_type = 'CPE' AND
            ptrbdca_pers_record_type IN ('SCP','OPR'))
      -- SIP records
      OR  ( ptrbdca_pers_program_type ='SP2' AND
            ptrbdca_pers_record_type ='SIP'))
      AND phrdedn_pidm  = pebempl_pidm
      AND pebempl_calif_pension_ind IN ('E','P','T','B')
      AND phrdedn_empr_code = ptrempr_code"
"BANINST1","PVWMIEJ","California MIS EJ Employee Assignment Extract View","SELECT
  pvrmdej_report_no,
  pvrmdej_eb_report_no,
  pvrmdej_pidm,
  pvrmdej_gi01,
  pvrmdej_gi03,
  pvrmdej_eb00,
  pvrmdej_ej01,
  pvrmdej_ej02,
  pvrmdej_ej03,
  SUM(pvrmdej_ej04),
  ROUND(AVG(pvrmdej_ej05),2),
  SUM(pvrmdej_ej08)
 FROM pvrmdej
 GROUP BY
  pvrmdej_report_no,
  pvrmdej_eb_report_no,
  pvrmdej_pidm,
  pvrmdej_gi01,
  pvrmdej_gi03,
  pvrmdej_eb00,
  pvrmdej_ej01,
  pvrmdej_ej02,
  pvrmdej_ej03"
"BANINST1","PVW9TOT","DE9C Totals  Record View .","SELECT
       pvw9eml_empr_code,
       pvw9eml_wgpl_code,
       pvw9eml_quarter,
       pvw9eml_year,
       count(pvw9eml_pidm),
       sum(pvw9eml_qtr_ui_total_wages),
       sum(pvw9eml_state_taxable_wages),
       sum(pvw9eml_state_income_tax),
       pv_de9c_bp.f_number_employees_month (pvw9eml_year,1,pvw9eml_quarter,pvw9eml_empr_code,pvw9eml_wgpl_code),
       pv_de9c_bp.f_number_employees_month (pvw9eml_year,2,pvw9eml_quarter,pvw9eml_empr_code,pvw9eml_wgpl_code),
       pv_de9c_bp.f_number_employees_month (pvw9eml_year,3,pvw9eml_quarter,pvw9eml_empr_code,pvw9eml_wgpl_code)
FROM   PVW9EML
GROUP BY pvw9eml_empr_code,pvw9eml_wgpl_code,pvw9eml_quarter,pvw9eml_year"
"BANINST1","PVW9EMR","DE9C Employer Record View.","Select  ptrempr_code,
        ptrempr_desc,
        ptrempr_fed_ein,
        ptrempr_address,
        ptrempr_city,
        ptrempr_stat_code,
        ptrempr_cnty_code,
        substr(ptrempr_zipc_code,-4,4),
        substr(ptrempr_zipc_code,1,5),
        ptrempr_default_ind,
        ptrempr_activity_date
from ptrempr"
"BANINST1","PVW9EML","DE9C Employee Record View.","SELECT pxrw2st_year,
       pxrw2st_quarter,
       pxrw2st_empr_code,
       pxrw2st_pidm,
       spriden_id,
       spbpers_ssn,
       NVL(pebempl_ssn_last_name,spriden_last_name),
       NVL(pebempl_ssn_first_name,spriden_first_name),
       NVL(pebempl_ssn_mi,spriden_mi),
       pvrwgpl_wgpl_code,
       perdtot_bdca_code,
       pvvwgpl_account,
       pvrwgpl_ui_wages_ind,
       pvrwgpl_pit_amounts_ind,
       pv_de9c_bp.f_qtr_ui_total_wages(perdtot_appl_grs_tot,pvrwgpl_wgpl_code,pvrwgpl_ui_wages_ind),     -- 8.3.0.2 C3SC Defect 1-12LC6OZ JR 04/10/2012 changed perdtot_appl_grs_tot instead of pxrw2st_qtr_ui_total_wages
       pv_de9c_bp.f_state_taxable_wages(perdtot_appl_grs_tot,pvrwgpl_wgpl_code,pvrwgpl_pit_amounts_ind), -- 8.3.0.2 C3SC Defect 1-12LC6OZ JR 04/10/2012 changed perdtot_appl_grs_tot instead of pxrw2st_state_taxable_wages
       pv_de9c_bp.f_state_income_tax(perdtot_empl_amt_tot,pvrwgpl_wgpl_code,pvrwgpl_pit_amounts_ind),    -- 8.3.0.2 C3SC Defect 1-12LC6OZ JR 04/10/2012 changed perdtot_empl_amt_tot instead of pxrw2st_state_income_tax
       pv_de9c_bp.f_rpt_period(pxrw2st_year, pxrw2st_quarter)
  FROM pebempl, spbpers, spriden, pvrwgpl, pvvwgpl, pxrw2st,
       (select perdtot_pidm,
               perdtot_year,
               perdtot_empr_code,
               perdtot_bdca_code,
               pv_de9c_bp.f_mnth_to_qtr(perdtot_month) perdtot_quarter,
               sum(perdtot_appl_grs) perdtot_appl_grs_tot,                       -- 8.3.0.2 C3SC Defect 1-12LC6OZ JR 04/10/2012 added
               sum(perdtot_empl_amt) perdtot_empl_amt_tot                        -- 8.3.0.2 C3SC Defect 1-12LC6OZ JR 04/10/2012 added
          from perdtot
          group by
               perdtot_pidm,
               perdtot_year,
               perdtot_empr_code,
               perdtot_bdca_code,
               pv_de9c_bp.f_mnth_to_qtr(perdtot_month))
 WHERE pxrw2st_pidm = perdtot_pidm
   AND pxrw2st_year = perdtot_year
   AND pxrw2st_quarter = perdtot_quarter
   AND pxrw2st_empr_code = perdtot_empr_code
   AND pxrw2st_stat_code = 'CA'              -- Release 8.2.3 VMST
   AND pvrwgpl_bdca_code = perdtot_bdca_code
   AND pvrwgpl_wgpl_code = pvvwgpl_code
   AND pebempl_pidm = pxrw2st_pidm
   AND pebempl_pidm = spbpers_pidm
   AND spbpers_pidm = spriden_pidm
   AND spriden_change_ind IS NULL
   AND spriden_entity_ind = 'P'"
"BANINST1","PPVSKIL","Applicant Skill Information View","SELECT  PPRSKIL_PIDM,
        PPRSKIL_SKIL_CODE,
        PTRSKIL_DESC,
        PPRSKIL_SKLV_CODE,
        PTRSKLV_DESC,
        PPRSKIL_COMMENTS,
        PPRSKIL_START_DATE,
        PPRSKIL_END_DATE,
        PPRSKIL_LAST_DATE
FROM    PPRSKIL,
        PTRSKIL,
        PTRSKLV
WHERE   PTRSKIL_CODE (+)  = PPRSKIL_SKIL_CODE
AND     PTRSKLV_CODE (+)  = PPRSKIL_SKLV_CODE
 "
"BANINST1","PPVFACD","FACULTY INFORMATION VIEW","SELECT  SIBFACD_PIDM,
        SIBFACD_1ST_APPT_DATE,
        SIBFACD_RANK_CODE,
        PTVRANK_DESC,
        SIBFACD_RANK_DATE,
        SIBFACD_DISP_CODE,
        PTVDISP_DESC,
        SIBFACD_TENR_CODE,
        PTRTENR_DESC,
        SIBFACD_TENURE_DATE,
        SIBFACD_TENURE_REV_DATE,
        SIBFACD_LAST_SABB_DATE,
        SIBFACD_NEXT_SABB_DATE,
        SIBFACD_YRS_EXP,
        SIBFACD_BIRTH_STATE,
        STVSTAT_DESC,
        DECODE(SIBFACD_AAUP_MEM_IND,'Y','Yes','N','No',NULL),
        SIBFACD_ACADEMIC_TITLE
FROM    PTRTENR,
        PTVDISP,
        PTVRANK,
        STVSTAT,
        SIBFACD
WHERE   PTRTENR_CODE (+)   = SIBFACD_TENR_CODE
AND     PTVDISP_CODE (+)   = SIBFACD_DISP_CODE
AND     PTVRANK_CODE (+)   = SIBFACD_RANK_CODE
AND     STVSTAT_CODE (+)   = SIBFACD_BIRTH_STATE
 "
"BANINST1","PPVEXPE","Applicant Experience Information View","SELECT  PPREXPE_PIDM,
        PPREXPE_POSN_TITLE,
        PPREXPE_EMTY_CODE,
        PTREMTY_DESC,
        PPREXPE_EMPR_NAME,
        PPREXPE_START_DATE,
        PPREXPE_END_DATE,
        PPREXPE_CURR_SALARY,
        PPREXPE_CURR_HOURLY,
        PPREXPE_REASON_LEFT,
        PPREXPE_EMPS_SUPERVISE,
        PPREXPE_SUPER_NAME,
        PPREXPE_CTRY_CODE_SUPER_PHONE,
        PPREXPE_SUPER_PHONE_AREA,
        PPREXPE_SUPER_PHONE_NUMBER,
        PPREXPE_SUPER_PHONE_EXT,
        PPREXPE_CONTACT_IND,
        PPREXPE_SUPER_COMMENT
FROM    PPREXPE,
        PTREMTY
WHERE   PTREMTY_CODE (+)  = PPREXPE_EMTY_CODE"
"BANINST1","PPVCERT","Applicant Certification Information View","SELECT  PPRCERT_PIDM,
        PPRCERT_CERT_CODE,
        PTRCERT_DESC,
        PPRCERT_CERT_DATE,
        PPRCERT_NEXT_CERT_DATE,
        PPRCERT_EXPIRE_DATE,
        PPRCERT_CERT_NO
FROM    PPRCERT,
        PTRCERT
WHERE   PTRCERT_CODE (+)  = PPRCERT_CERT_CODE
 "
"BANINST1","PPVADRS","Address Hierarchy View","SELECT SPRADDR_PIDM,
       SPRADDR_ATYP_CODE,
       STVATYP_DESC,
       SPRADDR_HOUSE_NUMBER,
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_STREET_LINE4,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       STVSTAT_DESC,
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       STVCNTY_DESC,
       SPRADDR_NATN_CODE,
       STVNATN_NATION
  FROM STVATYP,
       STVNATN,
       STVSTAT,
       STVCNTY,
       SPRADDR X,
       SPRCOLR Y
 WHERE STVATYP_CODE (+) = SPRADDR_ATYP_CODE
   AND STVNATN_CODE (+) = SPRADDR_NATN_CODE
   AND STVSTAT_CODE (+) = SPRADDR_STAT_CODE
   AND STVCNTY_CODE (+) = SPRADDR_CNTY_CODE
   AND X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   SYSDATE BETWEEN TO_DATE(X.SPRADDR_FROM_DATE)
                     AND TO_DATE(X.SPRADDR_TO_DATE))
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   SYSDATE >= TO_DATE(X.SPRADDR_FROM_DATE))
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   SYSDATE <= TO_DATE(X.SPRADDR_TO_DATE)))
   AND   Y.SPRCOLR_SESSIONID =
        (SELECT TO_CHAR(USERENV('SESSIONID'))
         FROM   DUAL
         WHERE  EXISTS (SELECT 'X' FROM SPRCOLR A
                        WHERE  A.SPRCOLR_SESSIONID =
                               TO_CHAR(USERENV('SESSIONID')))
         UNION
         SELECT '004'
         FROM   DUAL
         WHERE  NOT EXISTS (SELECT 'X' FROM SPRCOLR B
                            WHERE  B.SPRCOLR_SESSIONID =
                                   TO_CHAR(USERENV('SESSIONID'))))
   AND (Y.SPRCOLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
          (SELECT MIN(C.SPRCOLR_VALUE_ATYP),
		  SUBSTR(MIN(C.SPRCOLR_VALUE_ATYP),2,2)
       	     FROM SPRADDR,
	          SPRCOLR C
            WHERE C.SPRCOLR_SESSIONID = Y.SPRCOLR_SESSIONID
	      AND SPRADDR_PIDM = X.SPRADDR_PIDM
	      AND SPRADDR_ATYP_CODE = SUBSTR(C.SPRCOLR_VALUE_ATYP,2,2)
	      AND SPRADDR_STATUS_IND IS NULL
	      AND ((SPRADDR_TO_DATE IS NULL
	      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
	      AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   SYSDATE BETWEEN TO_DATE(SPRADDR_FROM_DATE)
                                AND TO_DATE(SPRADDR_TO_DATE))
               OR  (SPRADDR_FROM_DATE IS NOT NULL
	      AND   SPRADDR_TO_DATE IS NULL
              AND   SYSDATE  >= TO_DATE(SPRADDR_FROM_DATE))
               OR  (SPRADDR_FROM_DATE IS NULL
	      AND   SPRADDR_TO_DATE IS NOT NULL
              AND   SYSDATE <= TO_DATE(SPRADDR_TO_DATE))))"
"BANINST1","POVIDEN","Retrieves the current identification information for a given pidm.","SELECT spriden_pidm,
       spriden_id,
       spriden_last_name,
       spriden_first_name,
       spriden_mi,
       spriden_last_name,
       spriden_entity_ind,
       spriden_ntyp_code,
       spriden_create_user,
       spriden_create_date,
       spriden_create_fdmn_code,
       spriden_activity_date,
       spriden_user,
       spriden_data_origin
FROM   spriden
WHERE  spriden_change_ind IS NULL
"
"BANINST1","POVDATA","Web for Executives Workforce Cleansing View","SELECT 'WORKFORCE',
             'EMPLOYER',
             'B',
             null,
             ptrempr_code,
             null,
             ptrempr_desc,
             substr(ptrempr_desc,1,15)
         FROM ptrempr
UNION ALL
      SELECT 'WORKFORCE',
             'DIVISION',
             'B',
             null,
             gtvdicd_code,
             null,
             gtvdicd_desc,
             substr(gtvdicd_desc,1,15)
         FROM gtvdicd
UNION ALL
      SELECT 'WORKFORCE',
             'INS ETHNICITY',
             'B',
             null,
             stvethn_code,
             null,
             stvethn_desc,
             substr(stvethn_desc,1,15)
         FROM stvethn
UNION ALL
      SELECT 'WORKFORCE',
             'GOV ETHNICITY',
             'B',
             null,
             stvetct_code,
             null,
             stvetct_desc,
             substr(stvetct_desc,1,15)
         FROM stvetct
UNION ALL
      SELECT 'WORKFORCE',
             'EMPLOYEE CLASS',
             'B',
             null,
             ptrecls_code,
             null,
             ptrecls_long_desc,
             ptrecls_short_desc
         FROM ptrecls
UNION ALL
      SELECT 'WORKFORCE',
             'EEO SKILL',
             'B',
             null,
             ptveskl_code,
             null,
             ptveskl_desc,
             substr(ptveskl_desc,1,15)
         FROM ptveskl,
              gubinst
        WHERE ptveskl_empr_ind = gubinst_highed_govt_ind
UNION ALL
      SELECT 'WORKFORCE',
             'EMPLOYEE GROUP',
             'B',
             null,
             ptvegrp_code,
             null,
             ptvegrp_desc,
             substr(ptvegrp_desc,1,15)
         FROM ptvegrp
UNION ALL
      SELECT 'WORKFORCE',
             'DEGREE',
             'B',
             null,
             stvdegc_code,
             null,
             stvdegc_desc,
             substr(stvdegc_desc,1,15)
         FROM stvdegc
UNION ALL
      SELECT 'WORKFORCE',
             'TENURE',
             'B',
             null,
             ptrtenr_code,
             null,
             ptrtenr_desc,
             substr(ptrtenr_desc,1,15)
         FROM ptrtenr
UNION ALL
      SELECT 'WORKFORCE',
             'FACULTY RANK',
             'B',
             null,
             ptrrank_code,
             null,
             ptrrank_desc,
             substr(ptrrank_desc,1,15)
         FROM ptrrank
UNION ALL
      SELECT 'WORKFORCE',
             'MAJOR',
             'B',
             null,
             stvmajr_code,
             null,
             stvmajr_desc,
             substr(stvmajr_desc,1,15)
         FROM stvmajr
UNION ALL
      SELECT 'WORKFORCE',
             'POSITION CLASS',
             'B',
             null,
             ntrpcls_code,
             null,
             ntrpcls_desc,
             substr(ntrpcls_desc,1,15)
         FROM ntrpcls
UNION ALL
      SELECT 'WORKFORCE',
             'REQ STATUS',
             'B',
             null,
             ptrreqs_code,
             null,
             ptrreqs_desc,
             substr(ptrreqs_desc,1,15)
         FROM ptrreqs
UNION ALL
      SELECT 'WORKFORCE',
             'DEGREE LEVEL',
             'B',
             null,
             stvdlev_code,
             null,
             stvdlev_desc,
             substr(stvdlev_desc,1,15)
         FROM stvdlev
UNION ALL
      SELECT 'WORKFORCE',
             'SOURCE INS',
             'B',
             null,
             stvsbgi_code,
             null,
             stvsbgi_desc,
             substr(stvsbgi_desc,1,15)
         FROM stvsbgi
UNION ALL
      SELECT 'WORKFORCE',
             'EXPERIENCE',
             'B',
             null,
             ptremty_code,
             null,
             ptremty_desc,
             substr(ptremty_desc,1,15)
         FROM ptremty
UNION ALL
      SELECT 'WORKFORCE',
             'RECRUIT SOURCE',
             'B',
             null,
             ptvasrc_code,
             null,
             ptvasrc_desc,
             substr(ptvasrc_desc,1,15)
         FROM ptvasrc
UNION ALL
      SELECT 'WORKFORCE',
             'STATE',
             'B',
             null,
             stvstat_code,
             null,
             stvstat_desc,
             substr(stvstat_desc,1,15)
         FROM stvstat
UNION ALL
      SELECT 'WORKFORCE',
             'NATION',
             'B',
             null,
             stvnatn_code,
             null,
             stvnatn_nation,
             substr(stvnatn_nation,1,15)
         FROM stvnatn
 "
"BANINST1","PHVUPDT","History Update Process Date Stamp View","SELECT DISTINCT(TO_DATE(TO_CHAR(PHRHIST_UPDT_DATE,'DD-MON-YYYY'),'DD-MON-YYYY')),
       PHRHIST_YEAR,
       PHRHIST_PICT_CODE,
       PHRHIST_PAYNO,
       DECODE(PHRHIST_SEQ_NO,0,0,1)
FROM   PHRHIST
WHERE  PHRHIST_UPDT_DATE IS NOT NULL
 "
"BANINST1","PHVTTOT","Payroll Time Sheet Totals View","SELECT PHREARN_COAS_CODE_TS,
       PHREARN_ORGN_CODE_TS,
       PHREARN_TS_ROSTER_IND,
       NVL(SUM(DECODE(PTREARN_UNIT_IND,'H', PHREARN_HRS, 0)),0),
       NVL(SUM(DECODE(PTREARN_UNIT_IND,'U', PHREARN_HRS, 0)),0)
FROM   PHREARN,
       PTREARN,
       PPRCOLR
WHERE  PHREARN_YEAR      = PPRCOLR_VALUE_ATYP
AND    PHREARN_PICT_CODE = PPRCOLR_PARM_NUMBER
AND    PHREARN_PAYNO     = PPRCOLR_TYPE
AND    PHREARN_SEQ_NO    = 0
AND    PHREARN_EARN_CODE = PTREARN_CODE
AND    PPRCOLR_JOB       = 'PHVTTOT'
AND    PPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
GROUP BY PHREARN_COAS_CODE_TS,
         PHREARN_ORGN_CODE_TS,
         PHREARN_TS_ROSTER_IND
UNION ALL
SELECT PHRJOBS_COAS_CODE_TS,
       PHRJOBS_ORGN_CODE_TS,
       PHRJOBS_TS_ROSTER_IND,
       0,
       0
FROM   PHRJOBS,
       PPRCOLR
WHERE  PHRJOBS_YEAR      = PPRCOLR_VALUE_ATYP
AND    PHRJOBS_PICT_CODE = PPRCOLR_PARM_NUMBER
AND    PHRJOBS_PAYNO     = PPRCOLR_TYPE
AND    PHRJOBS_SEQ_NO    = 0
AND    PPRCOLR_JOB       = 'PHVTTOT'
AND    PPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
AND    (PHRJOBS_COAS_CODE_TS,
        PHRJOBS_ORGN_CODE_TS,
        PHRJOBS_TS_ROSTER_IND) NOT IN
           (SELECT PHREARN_COAS_CODE_TS,
                   PHREARN_ORGN_CODE_TS,
                   PHREARN_TS_ROSTER_IND
            FROM   PHREARN
            WHERE  PHREARN_YEAR      = PHRJOBS_YEAR
            AND    PHREARN_PICT_CODE = PHRJOBS_PICT_CODE
            AND    PHREARN_PAYNO     = PHRJOBS_PAYNO
            AND    PHREARN_SEQ_NO    = 0
            AND    PPRCOLR_JOB       = 'PHVTTOT'
            AND    PPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID')))
GROUP BY PHRJOBS_COAS_CODE_TS,
         PHRJOBS_ORGN_CODE_TS,
         PHRJOBS_TS_ROSTER_IND
 "
"BANINST1","PHVTSKY","","SELECT DISTINCT PHRJOBS_YEAR,
                PHRJOBS_PICT_CODE,
                PHRJOBS_PAYNO,
                PHRJOBS_SEQ_NO,
                PHRJOBS_COAS_CODE_TS,
                PHRJOBS_ORGN_CODE_TS,
                PHRJOBS_TS_ROSTER_IND,
                PHRJOBS_DISP,
                PTRCALN_END_DATE,
                PHRJOBS_POSN,
                PHRJOBS_SUFF,
                PHRJOBS_EFFECTIVE_DATE
         FROM   PHRJOBS,
                PPRCOLR,
                PTRCALN
        WHERE   PTRCALN_YEAR = PHRJOBS_YEAR
        AND     PTRCALN_PICT_CODE = PHRJOBS_PICT_CODE
        AND     PTRCALN_PAYNO = PHRJOBS_PAYNO
        AND     PHRJOBS_PIDM = TO_NUMBER(PPRCOLR_VALUE_ATYP)
        AND     PPRCOLR_JOB = 'PHVTSKY'
        AND     PPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
  
 "
"BANINST1","PHVTIME","","WITH JOBDETAIL AS (SELECT * FROM NBRJOBS), TIMEJOBS AS(SELECT * FROM PERJOBS)
 SELECT perjobs_seqno,
        perjobs_pidm,
        perjobs_posn,
        perjobs_suff,
        perjobs_coas_code_ts,
        perjobs_orgn_code_ts,
        NULL,
        perjobs_status_ind,
        perjobs_job_title,
        perjobs_shift,
        perjobs_ecls_code,
        perjobs_time_entry_method,
        perjobs_time_entry_type,
        perjobs_time_in_out_ind,
        perjobs_acat_code,
        perjobs_lcat_code,
        spriden_id,
        spriden_surname_prefix,
        spriden_last_name,
        spriden_first_name,
        spriden_mi,
        SUBSTR(noksecr.f_time_entry_security
                 (gobeacc_username,
                  perjobs_coas_code_ts,
                  perjobs_orgn_code_ts,
                  perjobs_ecls_code),1,1)
 FROM   gobeacc, spriden, perjobs X
 WHERE  gobeacc_pidm = pektecm.f_phvtime_user_pidm
   AND  spriden_change_ind IS NULL
   AND  spriden_pidm = perjobs_pidm
   AND  (pektecm.f_phvtime_user_role != 'A'
         OR (pektecm.f_phvtime_user_role = 'A'
             AND EXISTS (SELECT 'X'
                         FROM   perrout
                         WHERE  perrout_appr_pidm || '' =
                                   NVL(pektecm.f_phvtime_proxy_for_pidm,
                                       pektecm.f_phvtime_user_pidm)
                           AND  perrout_jobs_seqno = X.perjobs_seqno)))
   AND  perjobs_time_entry_method = NVL(pektecm.f_phvtime_time_entry_method,
                                        perjobs_time_entry_method)
   AND  perjobs_status_ind = DECODE(pektecm.f_phvtime_status_ind,
                                    NULL, perjobs_status_ind,
                                    'Z', perjobs_status_ind,
                                    pektecm.f_phvtime_status_ind)
   AND  perjobs_orgn_code_ts = NVL(pektecm.f_phvtime_orgn_code_ts,
                                   perjobs_orgn_code_ts)
   AND  NVL(perjobs_coas_code_ts,'*') = NVL(pektecm.f_phvtime_coas_code_ts,'*')
   AND  perjobs_action_ind = pektecm.f_phvtime_action_ind
   AND  perjobs_payno      = pektecm.f_phvtime_payno
   AND  perjobs_pict_code  = pektecm.f_phvtime_pict_code
   AND  perjobs_year       = pektecm.f_phvtime_year
   AND  NVL(pektecm.f_phvtime_status_ind, 'Z') != 'N'
 UNION ALL
 SELECT -1,
        nbrjobs_pidm,
        nbrjobs_posn,
        nbrjobs_suff,
        nbrjobs_coas_code_ts,
        nbrjobs_orgn_code_ts,
        nbrjobs_effective_date,
        'N',
        nbrjobs_desc,
        nbrjobs_shift,
        nbrjobs_ecls_code,
        nbrjobs_time_entry_method,
        nbrjobs_time_entry_type,
        nbrjobs_time_in_out_ind,
        NULL,
        DECODE(ptrinst_accrue_leave_method,
               'J', nbrjobs_lcat_code,
               pebempl_lcat_code),
        spriden_id,
        spriden_surname_prefix,
        spriden_last_name,
        spriden_first_name,
        spriden_mi,
        SUBSTR(noksecr.f_time_entry_security
                 (gobeacc_username,
                  nbrjobs_coas_code_ts,
                  nbrjobs_orgn_code_ts,
                  nbrjobs_ecls_code),1,1)
 FROM   ptrinst, gobeacc, spriden, pebempl, nbrbjob, nbrjobs X, ptrcaln
 WHERE  gobeacc_pidm = pektecm.f_phvtime_user_pidm
   AND  DECODE(ptrinst_accrue_leave_method,
               'J', nbrjobs_lcat_code,
               pebempl_lcat_code)
           IN (SELECT ptvlcat_code
               FROM   ptvlcat
               WHERE  (pektecm.f_phvtime_action_ind != 'R'
                       OR (pektecm.f_phvtime_action_ind = 'R'
                           AND ptvlcat_report_ind = 'P')))
   AND  spriden_change_ind IS NULL
   AND  spriden_pidm = pebempl_pidm
   AND  pebempl_pidm = nbrbjob_pidm
   AND  NOT EXISTS (SELECT 'X'
                    FROM   TIMEJOBS
                    WHERE  TIMEJOBS.perjobs_suff = X.nbrjobs_suff
                      AND  TIMEJOBS.perjobs_posn = X.nbrjobs_posn
                      AND  TIMEJOBS.perjobs_orgn_code_ts = X.nbrjobs_orgn_code_ts
                      AND  NVL(TIMEJOBS.perjobs_coas_code_ts, '*')
                                             = NVL(X.nbrjobs_coas_code_ts, '*')
                      AND  TIMEJOBS.perjobs_action_ind = pektecm.f_phvtime_action_ind
                      AND  TIMEJOBS.perjobs_payno      = ptrcaln_payno
                      AND  TIMEJOBS.perjobs_pict_code  = ptrcaln_pict_code
                      AND  TIMEJOBS.perjobs_year       = ptrcaln_year
                      AND  TIMEJOBS.perjobs_pidm       = X.nbrjobs_pidm)
   AND  nbrbjob_begin_date <= ptrcaln_end_date
   AND  (nbrbjob_end_date  >= ptrcaln_start_date
         OR nbrbjob_end_date IS NULL)
   AND  nbrbjob_pidm = nbrjobs_pidm
   AND  nbrbjob_posn = nbrjobs_posn
   AND  nbrbjob_suff = nbrjobs_suff
   AND  nbrjobs_effective_date =
          (SELECT MAX(JOBDETAIL.nbrjobs_effective_date)
           FROM   JOBDETAIL
           WHERE  JOBDETAIL.nbrjobs_effective_date <= ptrcaln_end_date
             AND  JOBDETAIL.nbrjobs_orgn_code_ts = X.nbrjobs_orgn_code_ts
             AND  NVL(JOBDETAIL.nbrjobs_coas_code_ts, '*')
                                     = NVL(X.nbrjobs_coas_code_ts, '*')
             AND  JOBDETAIL.nbrjobs_pict_code || ''
                                     = X.nbrjobs_pict_code
             AND  JOBDETAIL.nbrjobs_suff       = X.nbrjobs_suff
             AND  JOBDETAIL.nbrjobs_posn || '' = X.nbrjobs_posn
             AND  JOBDETAIL.nbrjobs_pidm       = X.nbrjobs_pidm)
   AND  NOT EXISTS (SELECT 'X'
                    FROM   JOBDETAIL
                    WHERE  JOBDETAIL.nbrjobs_effective_date > X.nbrjobs_effective_date
                      AND  JOBDETAIL.nbrjobs_effective_date <= ptrcaln_start_date
                      AND  X.nbrjobs_effective_date < ptrcaln_start_date
                      AND  JOBDETAIL.nbrjobs_suff       = X.nbrjobs_suff
                      AND  JOBDETAIL.nbrjobs_posn || '' = X.nbrjobs_posn
                      AND  JOBDETAIL.nbrjobs_pidm       = X.nbrjobs_pidm)
   AND  nbrjobs_time_entry_method = NVL(pektecm.f_phvtime_time_entry_method,
                                        nbrjobs_time_entry_method)
   AND  nbrjobs_time_entry_method <> 'P'
   AND  (nbrjobs_status IN ('A','L','B','F','P')
         OR (nbrjobs_status IN ('T','I')
             AND nbrjobs_effective_date BETWEEN ptrcaln_start_date
                                            AND ptrcaln_end_date))
   AND  nbrjobs_pict_code || '' = ptrcaln_pict_code
   AND  NVL(nbrjobs_coas_code_ts,'*') = NVL(pektecm.f_phvtime_coas_code_ts,'*')
   AND  nbrjobs_orgn_code_ts = pektecm.f_phvtime_orgn_code_ts
   AND  ptrcaln_payno        = pektecm.f_phvtime_payno
   AND  ptrcaln_pict_code    = pektecm.f_phvtime_pict_code
   AND  ptrcaln_year         = pektecm.f_phvtime_year
   AND  pektecm.f_phvtime_orgn_code_ts IS NOT NULL
   AND  pektecm.f_phvtime_action_ind IN ('T','R')
   AND  NVL(pektecm.f_phvtime_status_ind, 'N') = 'N'
 UNION ALL
 SELECT -1,
        nbrjobs_pidm,
        nbrjobs_posn,
        nbrjobs_suff,
        nbrjobs_coas_code_ts,
        nbrjobs_orgn_code_ts,
        nbrjobs_effective_date,
        'N',
        nbrjobs_desc,
        nbrjobs_shift,
        nbrjobs_ecls_code,
        nbrjobs_time_entry_method,
        nbrjobs_time_entry_type,
        nbrjobs_time_in_out_ind,
        NULL,
        DECODE(ptrinst_accrue_leave_method,
               'J', nbrjobs_lcat_code,
               pebempl_lcat_code),
        spriden_id,
        spriden_surname_prefix,
        spriden_last_name,
        spriden_first_name,
        spriden_mi,
        SUBSTR(noksecr.f_time_entry_security
                 (gobeacc_username,
                  nbrjobs_coas_code_ts,
                  nbrjobs_orgn_code_ts,
                  nbrjobs_ecls_code),1,1)
 FROM   ptrinst, gobeacc, spriden, pebempl, nbrbjob, nbrjobs X, ptrcaln
 WHERE  gobeacc_pidm = pektecm.f_phvtime_user_pidm
   AND  DECODE(ptrinst_accrue_leave_method,
               'J', nbrjobs_lcat_code,
               pebempl_lcat_code)
           IN (SELECT ptvlcat_code
               FROM   ptvlcat
               WHERE  (pektecm.f_phvtime_action_ind != 'R'
                       OR (pektecm.f_phvtime_action_ind = 'R'
                           AND ptvlcat_report_ind = 'P')))
   AND  spriden_change_ind IS NULL
   AND  spriden_pidm = pebempl_pidm
   AND  pebempl_pidm = nbrbjob_pidm
   AND  NOT EXISTS (SELECT 'X'
                    FROM   TIMEJOBS
                    WHERE  TIMEJOBS.perjobs_suff = X.nbrjobs_suff
                      AND  TIMEJOBS.perjobs_posn = X.nbrjobs_posn
                      AND  TIMEJOBS.perjobs_orgn_code_ts = X.nbrjobs_orgn_code_ts
                      AND  NVL(TIMEJOBS.perjobs_coas_code_ts, '*')
                                             = NVL(X.nbrjobs_coas_code_ts, '*')
                      AND  TIMEJOBS.perjobs_action_ind = pektecm.f_phvtime_action_ind
                      AND  TIMEJOBS.perjobs_payno      = ptrcaln_payno
                      AND  TIMEJOBS.perjobs_pict_code  = ptrcaln_pict_code
                      AND  TIMEJOBS.perjobs_year       = ptrcaln_year
                      AND  TIMEJOBS.perjobs_pidm       = X.nbrjobs_pidm)
   AND  nbrbjob_begin_date <= ptrcaln_end_date
   AND  (nbrbjob_end_date  >= ptrcaln_start_date
         OR nbrbjob_end_date IS NULL)
   AND  nbrbjob_pidm = nbrjobs_pidm
   AND  nbrbjob_posn = nbrjobs_posn
   AND  nbrbjob_suff = nbrjobs_suff
   AND  nbrjobs_effective_date =
          (SELECT MAX(JOBDETAIL.nbrjobs_effective_date)
           FROM   JOBDETAIL
           WHERE  JOBDETAIL.nbrjobs_effective_date <= ptrcaln_end_date
             AND  JOBDETAIL.nbrjobs_orgn_code_ts = X.nbrjobs_orgn_code_ts
             AND  NVL(JOBDETAIL.nbrjobs_coas_code_ts, '*')
                                     = NVL(X.nbrjobs_coas_code_ts, '*')
             AND  JOBDETAIL.nbrjobs_pict_code || ''
                                     = X.nbrjobs_pict_code
             AND  JOBDETAIL.nbrjobs_suff       = X.nbrjobs_suff
             AND  JOBDETAIL.nbrjobs_posn || '' = X.nbrjobs_posn
             AND  JOBDETAIL.nbrjobs_pidm       = X.nbrjobs_pidm)
   AND  NOT EXISTS (SELECT 'X'
                    FROM   JOBDETAIL
                    WHERE  JOBDETAIL.nbrjobs_effective_date > X.nbrjobs_effective_date
                      AND  JOBDETAIL.nbrjobs_effective_date <= ptrcaln_start_date
                      AND  X.nbrjobs_effective_date < ptrcaln_start_date
                      AND  JOBDETAIL.nbrjobs_suff       = X.nbrjobs_suff
                      AND  JOBDETAIL.nbrjobs_posn || '' = X.nbrjobs_posn
                      AND  JOBDETAIL.nbrjobs_pidm       = X.nbrjobs_pidm)
   AND  nbrjobs_time_entry_method = NVL(pektecm.f_phvtime_time_entry_method,
                                        nbrjobs_time_entry_method)
   AND  nbrjobs_time_entry_method <> 'P'
   AND  (nbrjobs_status IN ('A','L','B','F','P')
         OR (nbrjobs_status IN ('T','I')
             AND nbrjobs_effective_date BETWEEN ptrcaln_start_date
                                            AND ptrcaln_end_date))
   AND  NVL(nbrjobs_coas_code_ts,'*') = NVL(pektecm.f_phvtime_coas_code_ts,'*')
   AND  nbrjobs_pict_code    = ptrcaln_pict_code
   AND  ptrcaln_payno        = pektecm.f_phvtime_payno
   AND  ptrcaln_pict_code    = pektecm.f_phvtime_pict_code
   AND  ptrcaln_year         = pektecm.f_phvtime_year
   AND  pektecm.f_phvtime_orgn_code_ts IS NULL
   AND  pektecm.f_phvtime_action_ind IN ('T','R')
   AND  NVL(pektecm.f_phvtime_status_ind, 'N') = 'N'
 UNION ALL
 SELECT -1,
        nbrjobs_pidm,
        nbrjobs_posn,
        nbrjobs_suff,
        nbrjobs_coas_code_ts,
        nbrjobs_orgn_code_ts,
        nbrjobs_effective_date,
        'N',
        nbrjobs_desc,
        nbrjobs_shift,
        nbrjobs_ecls_code,
        nbrjobs_time_entry_method,
        nbrjobs_time_entry_type,
        nbrjobs_time_in_out_ind,
        NULL,
        DECODE(ptrinst_accrue_leave_method,
               'J', nbrjobs_lcat_code,
               pebempl_lcat_code),
        spriden_id,
        spriden_surname_prefix,
        spriden_last_name,
        spriden_first_name,
        spriden_mi,
        SUBSTR(noksecr.f_time_entry_security
                 (gobeacc_username,
                  nbrjobs_coas_code_ts,
                  nbrjobs_orgn_code_ts,
                  nbrjobs_ecls_code),1,1)
 FROM   ptrinst, gobeacc, spriden, pebempl, nbrbjob, nbrjobs X, ptrcaln
 WHERE  gobeacc_pidm = pektecm.f_phvtime_user_pidm
   AND  DECODE(ptrinst_accrue_leave_method,
               'J', nbrjobs_lcat_code,
               pebempl_lcat_code)
           IN (SELECT ptvlcat_code
               FROM   ptvlcat
               WHERE  ptvlcat_report_ind = 'L')
   AND  spriden_change_ind IS NULL
   AND  spriden_pidm = pebempl_pidm
   AND  pebempl_pidm = nbrbjob_pidm
   AND  NOT EXISTS (SELECT 'X'
                    FROM   TIMEJOBS
                    WHERE  TIMEJOBS.perjobs_suff = X.nbrjobs_suff
                      AND  TIMEJOBS.perjobs_posn = X.nbrjobs_posn
                      AND  TIMEJOBS.perjobs_orgn_code_ts = X.nbrjobs_orgn_code_ts
                      AND  NVL(TIMEJOBS.perjobs_coas_code_ts, '*')
                                             = NVL(X.nbrjobs_coas_code_ts, '*')
                      AND  TIMEJOBS.perjobs_action_ind = pektecm.f_phvtime_action_ind
                      AND  TIMEJOBS.perjobs_payno      = ptrcaln_payno
                      AND  TIMEJOBS.perjobs_pict_code  = ptrcaln_pict_code
                      AND  TIMEJOBS.perjobs_year       = ptrcaln_year
                      AND  TIMEJOBS.perjobs_pidm       = X.nbrjobs_pidm)
   AND  nbrbjob_begin_date <= ptrcaln_end_date
   AND  (nbrbjob_end_date  >= ptrcaln_start_date
         OR nbrbjob_end_date IS NULL)
   AND  nbrbjob_pidm = nbrjobs_pidm
   AND  nbrbjob_posn = nbrjobs_posn
   AND  nbrbjob_suff = nbrjobs_suff
   AND  nbrjobs_effective_date =
          (SELECT MAX(JOBDETAIL.nbrjobs_effective_date)
           FROM   JOBDETAIL
           WHERE  JOBDETAIL.nbrjobs_effective_date <= ptrcaln_end_date
             AND  JOBDETAIL.nbrjobs_orgn_code_ts = X.nbrjobs_orgn_code_ts
             AND  NVL(JOBDETAIL.nbrjobs_coas_code_ts, '*')
                                     = NVL(X.nbrjobs_coas_code_ts, '*')
             AND  JOBDETAIL.nbrjobs_pict_code_leav_rept || ''
                                     = X.nbrjobs_pict_code_leav_rept
             AND  JOBDETAIL.nbrjobs_suff       = X.nbrjobs_suff
             AND  JOBDETAIL.nbrjobs_posn || '' = X.nbrjobs_posn
             AND  JOBDETAIL.nbrjobs_pidm       = X.nbrjobs_pidm)
   AND  NOT EXISTS (SELECT 'X'
                    FROM   JOBDETAIL
                    WHERE  JOBDETAIL.nbrjobs_effective_date > X.nbrjobs_effective_date
                      AND  JOBDETAIL.nbrjobs_effective_date <= ptrcaln_start_date
                      AND  X.nbrjobs_effective_date < ptrcaln_start_date
                      AND  JOBDETAIL.nbrjobs_suff       = X.nbrjobs_suff
                      AND  JOBDETAIL.nbrjobs_posn || '' = X.nbrjobs_posn
                      AND  JOBDETAIL.nbrjobs_pidm       = X.nbrjobs_pidm)
   AND  nbrjobs_leav_rept_method != 'P'
   AND  nbrjobs_leav_rept_method = NVL(pektecm.f_phvtime_time_entry_method,
                                       nbrjobs_leav_rept_method)
   AND  (nbrjobs_status IN ('A','L','B','F','P')
         OR (nbrjobs_status IN ('T','I')
             AND nbrjobs_effective_date BETWEEN ptrcaln_start_date
                                            AND ptrcaln_end_date))
   AND  nbrjobs_pict_code_leav_rept || '' = ptrcaln_pict_code
   AND  NVL(nbrjobs_coas_code_ts,'*') = NVL(pektecm.f_phvtime_coas_code_ts,'*')
   AND  nbrjobs_orgn_code_ts = pektecm.f_phvtime_orgn_code_ts
   AND  ptrcaln_payno        = pektecm.f_phvtime_payno
   AND  ptrcaln_pict_code    = pektecm.f_phvtime_pict_code
   AND  ptrcaln_year         = pektecm.f_phvtime_year
   AND  pektecm.f_phvtime_orgn_code_ts IS NOT NULL
   AND  pektecm.f_phvtime_action_ind IN ('L','R')
   AND  NVL(pektecm.f_phvtime_status_ind, 'N') = 'N'
 UNION ALL
 SELECT -1,
        nbrjobs_pidm,
        nbrjobs_posn,
        nbrjobs_suff,
        nbrjobs_coas_code_ts,
        nbrjobs_orgn_code_ts,
        nbrjobs_effective_date,
        'N',
        nbrjobs_desc,
        nbrjobs_shift,
        nbrjobs_ecls_code,
        nbrjobs_time_entry_method,
        nbrjobs_time_entry_type,
        nbrjobs_time_in_out_ind,
        NULL,
        DECODE(ptrinst_accrue_leave_method,
               'J', nbrjobs_lcat_code,
               pebempl_lcat_code),
        spriden_id,
        spriden_surname_prefix,
        spriden_last_name,
        spriden_first_name,
        spriden_mi,
        SUBSTR(noksecr.f_time_entry_security
                 (gobeacc_username,
                  nbrjobs_coas_code_ts,
                  nbrjobs_orgn_code_ts,
                  nbrjobs_ecls_code),1,1)
 FROM   ptrinst, gobeacc, spriden, pebempl, nbrbjob, nbrjobs X, ptrcaln
 WHERE  gobeacc_pidm = pektecm.f_phvtime_user_pidm
   AND  DECODE(ptrinst_accrue_leave_method,
               'J', nbrjobs_lcat_code,
               pebempl_lcat_code)
           IN (SELECT ptvlcat_code
               FROM   ptvlcat
               WHERE  ptvlcat_report_ind = 'L')
   AND  spriden_change_ind IS NULL
   AND  spriden_pidm = pebempl_pidm
   AND  pebempl_pidm = nbrbjob_pidm
   AND  NOT EXISTS (SELECT 'X'
                    FROM   TIMEJOBS
                    WHERE  TIMEJOBS.perjobs_suff = X.nbrjobs_suff
                      AND  TIMEJOBS.perjobs_posn = X.nbrjobs_posn
                      AND  TIMEJOBS.perjobs_orgn_code_ts = X.nbrjobs_orgn_code_ts
                      AND  NVL(TIMEJOBS.perjobs_coas_code_ts, '*')
                                             = NVL(X.nbrjobs_coas_code_ts, '*')
                      AND  TIMEJOBS.perjobs_action_ind = pektecm.f_phvtime_action_ind
                      AND  TIMEJOBS.perjobs_payno      = ptrcaln_payno
                      AND  TIMEJOBS.perjobs_pict_code  = ptrcaln_pict_code
                      AND  TIMEJOBS.perjobs_year       = ptrcaln_year
                      AND  TIMEJOBS.perjobs_pidm       = X.nbrjobs_pidm)
   AND  nbrbjob_begin_date <= ptrcaln_end_date
   AND  (nbrbjob_end_date  >= ptrcaln_start_date
         OR nbrbjob_end_date IS NULL)
   AND  nbrbjob_pidm = nbrjobs_pidm
   AND  nbrbjob_posn = nbrjobs_posn
   AND  nbrbjob_suff = nbrjobs_suff
   AND  nbrjobs_effective_date =
          (SELECT MAX(JOBDETAIL.nbrjobs_effective_date)
           FROM   JOBDETAIL
           WHERE  JOBDETAIL.nbrjobs_effective_date <= ptrcaln_end_date
             AND  JOBDETAIL.nbrjobs_orgn_code_ts = X.nbrjobs_orgn_code_ts
             AND  NVL(JOBDETAIL.nbrjobs_coas_code_ts, '*')
                                     = NVL(X.nbrjobs_coas_code_ts, '*')
             AND  JOBDETAIL.nbrjobs_pict_code_leav_rept || ''
                                     = X.nbrjobs_pict_code_leav_rept
             AND  JOBDETAIL.nbrjobs_suff       = X.nbrjobs_suff
             AND  JOBDETAIL.nbrjobs_posn || '' = X.nbrjobs_posn
             AND  JOBDETAIL.nbrjobs_pidm       = X.nbrjobs_pidm)
   AND  NOT EXISTS (SELECT 'X'
                    FROM   JOBDETAIL
                    WHERE  JOBDETAIL.nbrjobs_effective_date > X.nbrjobs_effective_date
                      AND  JOBDETAIL.nbrjobs_effective_date <= ptrcaln_start_date
                      AND  X.nbrjobs_effective_date < ptrcaln_start_date
                      AND  JOBDETAIL.nbrjobs_suff       = X.nbrjobs_suff
                      AND  JOBDETAIL.nbrjobs_posn || '' = X.nbrjobs_posn
                      AND  JOBDETAIL.nbrjobs_pidm       = X.nbrjobs_pidm)
   AND  nbrjobs_leav_rept_method != 'P'
   AND  nbrjobs_leav_rept_method = NVL(pektecm.f_phvtime_time_entry_method,
                                       nbrjobs_leav_rept_method)
   AND  (nbrjobs_status IN ('A','L','B','F','P')
         OR (nbrjobs_status IN ('T','I')
             AND nbrjobs_effective_date BETWEEN ptrcaln_start_date
                                            AND ptrcaln_end_date))
   AND  NVL(nbrjobs_coas_code_ts,'*') = NVL(pektecm.f_phvtime_coas_code_ts,'*')
   AND  nbrjobs_pict_code_leav_rept = ptrcaln_pict_code
   AND  ptrcaln_payno        = pektecm.f_phvtime_payno
   AND  ptrcaln_pict_code    = pektecm.f_phvtime_pict_code
   AND  ptrcaln_year         = pektecm.f_phvtime_year
   AND  pektecm.f_phvtime_orgn_code_ts IS NULL
   AND  pektecm.f_phvtime_action_ind IN ('L','R')
   AND  NVL(pektecm.f_phvtime_status_ind, 'N') = 'N'
"
"BANINST1","PHVECRT","Retrieves all effort reports related to a given pay event.","SELECT ptrcaln_year,
       ptrcaln_pict_code,
       ptrcaln_payno,
       phrecrt_pidm,
       ptrecpd_coas_code,
       ptrecpd_id,
       ptrecpd_ecpd_code,
       phrecrt_id,
       phrecst_report_status,
       phrecrs_report_state
FROM   ptrecpd,
       phrecst,
       phrecrs,
       phrecrt R,
       ptrecpr,
       ptrcaln C
WHERE  ptrecpd_coas_code IN (
          SELECT phrelbd_coas_code
          FROM   phrelbd
          WHERE  phrelbd_year = C.ptrcaln_year
            AND  phrelbd_pict_code = C.ptrcaln_pict_code
            AND  phrelbd_payno = C.ptrcaln_payno
            AND  phrelbd_pidm = R.phrecrt_pidm)
  AND  ptrecpd_id = ptrecpr_ptrecpd_id
  AND  phrecst_id =
              (SELECT MAX(A.phrecst_id)
               FROM   phrecst A
               WHERE  A.phrecst_phrecrt_id = R.phrecrt_id)
  AND  phrecrs_id =
              (SELECT MAX(B.phrecrs_id)
               FROM   phrecrs B
               WHERE  B.phrecrs_phrecrt_id = R.phrecrt_id)
  AND  phrecrt_ptrecpd_id = ptrecpr_ptrecpd_id
  AND  ptrecpr_pict_code = ptrcaln_pict_code
  AND  (TO_NUMBER(ptrcaln_year) * 1000) + ptrcaln_payno
          BETWEEN (ptrecpr_start_year * 1000) + ptrecpr_start_payno
              AND (ptrecpr_end_year * 1000) + ptrecpr_end_payno
"
"BANINST1","PHVECPP","Retrieves all pay periods defined for a given effort period.","SELECT ptrecpd_id,
       ptrecpd_ecpd_code,
       ptrecpd_coas_code,
       ptrcaln_year,
       ptrcaln_pict_code,
       ptrcaln_payno
FROM   ptrcaln,
       ptrecpr,
       ptrecpd
WHERE  (TO_NUMBER(ptrcaln_year) * 1000) + ptrcaln_payno
          BETWEEN (ptrecpr_start_year * 1000) + ptrecpr_start_payno
              AND (ptrecpr_end_year * 1000) + ptrecpr_end_payno
  AND  ptrcaln_pict_code = ptrecpr_pict_code
  AND  ptrcaln_year BETWEEN TO_CHAR(ptrecpr_start_year)
                        AND TO_CHAR(ptrecpr_end_year)
  AND  ptrecpr_ptrecpd_id = ptrecpd_id
"
"BANINST1","PEVVER2","","select
pebempl_pidm,
f_year('EMPLOYMENT VERIFIC'),
f_year('EMPLOYMENT VERIFIC') - 1,
spriden_id,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
spbpers_birth_date,
substr(f_calculate_age(null, spbpers_birth_date, spbpers_dead_date),1,3),
spbpers_sex,
spbpers_ethn_code,
substr(f_get_ethn_category(spbpers_ethn_code,'EEOC'),1,1),
spbpers_mrtl_code,
x.spraddr_atyp_code,
x.spraddr_house_number,
x.spraddr_street_line1,
x.spraddr_street_line2,
x.spraddr_street_line3,
x.spraddr_street_line4,
x.spraddr_city,
x.spraddr_stat_code,
x.spraddr_zip,
x.spraddr_natn_code,
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_ctry_code_phone),
decode(v.sprtele_unlist_ind,'Y','************',v.sprtele_phone_number),
decode(v.sprtele_unlist_ind,'Y','******',v.sprtele_phone_area),
decode(v.sprtele_unlist_ind,'Y','**********',v.sprtele_phone_ext),
y.spraddr_atyp_code,
y.spraddr_house_number,
y.spraddr_street_line1,
y.spraddr_street_line2,
y.spraddr_street_line3,
y.spraddr_street_line4,
y.spraddr_city,
y.spraddr_stat_code,
y.spraddr_zip,
y.spraddr_natn_code,
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_ctry_code_phone),
decode(w.sprtele_unlist_ind,'Y','************',w.sprtele_phone_number),
decode(w.sprtele_unlist_ind,'Y','******',w.sprtele_phone_area),
decode(w.sprtele_unlist_ind,'Y','**********',w.sprtele_phone_ext),
pebempl_ecls_code,
pebempl_coas_code_home,
pebempl_orgn_code_home,
pebempl_empl_status,
decode(pebempl_empl_status, 'A', 'Active',
                       'B', 'Leave w/o Pay and w/ Benefit',
                       'L', 'Leave w/o Pay and w/o Benefit',
                       'F', 'Leave w/ Pay and w/ Benefit',
                       'P', 'Leave w/ Part Pay and w/ Benefit',
                       'T', 'Terminated', ''),
a.nbrjobs_posn,
a.nbrjobs_suff,
a.nbrjobs_desc,
nbbposn_pcls_code,
a.nbrjobs_sal_table,
a.nbrjobs_sal_grade,
a.nbrjobs_sal_step,
a.nbrjobs_sgrp_code,
pebempl_first_hire_date,
pebempl_current_hire_date,
pebempl_adj_service_date,
pebempl_seniority_date
from  spriden, spbpers, spraddr x, spraddr y,
      sprtele v, sprtele w,
      nbrjobs a,nbbposn,pebempl
where spbpers_pidm(+) = spriden_pidm
  and spriden_change_ind is null
  and spriden_pidm = pebempl_pidm
  and nbbposn_posn(+)= nbrjobs_posn
  and a.rowid(+)= f_primary_job_rowid
         (pebempl_pidm,sysdate,'NBRJOBS')
  and x.rowid(+) = f_get_address_rowid
      (pebempl_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and v.rowid(+) = f_get_address_telephone_rowid
      (pebempl_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and y.rowid(+) = f_get_address_rowid
      (pebempl_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and w.rowid(+) = f_get_address_telephone_rowid
      (pebempl_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and f_ecls_security(user,a.nbrjobs_ecls_code) = 'Y'
  and f_orgn_security(user,a.nbrjobs_orgn_code_ts,a.nbrjobs_coas_code_ts) = 'Y'"
"BANINST1","PEVVER1","","select
pevver2_pidm,
pevver2_cur_year,
pevver2_prv_year,
pevver2_id_number,
pevver2_ssn,
pevver2_surname_prefix,
pevver2_last_name,
pevver2_first_name,
pevver2_middle_name,
pevver2_middle_initial,
pevver2_name_prefix,
pevver2_name_suffix,
pevver2_birth_date,
pevver2_age,
pevver2_gender,
pevver2_ethnicity_code,
pevver2_ethnicity_category,
pevver2_marital_status,
pevver2_addr_type_1,
pevver2_house_number_1,
pevver2_street_line1_1,
pevver2_street_line2_1,
pevver2_street_line3_1,
pevver2_street_line4_1,
pevver2_city_1,
pevver2_state_1,
pevver2_zip_1,
pevver2_nation_1,
pevver2_ctry_code_phone_1,
pevver2_phone_number_1,
pevver2_phone_area_1,
pevver2_phone_ext_1,
pevver2_addr_type_2,
pevver2_house_number_2,
pevver2_street_line1_2,
pevver2_street_line2_2,
pevver2_street_line3_2,
pevver2_street_line4_2,
pevver2_city_2,
pevver2_state_2,
pevver2_zip_2,
pevver2_nation_2,
pevver2_ctry_code_phone_2,
pevver2_phone_number_2,
pevver2_phone_area_2,
pevver2_phone_ext_2,
pevver2_empl_class_code,
pevver2_empl_coas_code_home,
pevver2_empl_home_orgn_code,
pevver2_empl_status,
pevver2_empl_status_desc,
pevver2_posn,
pevver2_suff,
pevver2_job_title,
pevver2_pcls_code,
pevver2_assignment_table,
pevver2_assignment_grade,
pevver2_assignment_step,
pevver2_assignment_sgrp_code,
pevver2_original_hire_date,
pevver2_current_hire_date,
pevver2_adjusted_serv_date,
pevver2_seniority_date,
f_total_hour_earning_year(pevver2_pidm,
                    f_year('EMPLOYMENT VERIFIC'), 'PERJTOT_HRS',
                     pevver2_empl_coas_code_home),
f_total_hour_earning_year(pevver2_pidm,
                    f_year('EMPLOYMENT VERIFIC'), 'PERJTOT_GRS',
                     pevver2_empl_coas_code_home),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC'), 1,'PERJTOT_EARN_CODE',
         pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 1,'PERJTOT_HRS',
            pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 1,'PERJTOT_GRS',
            pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC'), 2,'PERJTOT_EARN_CODE',
         pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 2,'PERJTOT_HRS',
            pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 2,'PERJTOT_GRS',
           pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC'), 3,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 3,'PERJTOT_HRS',
           pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 3,'PERJTOT_GRS',
           pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC'), 4,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 4,'PERJTOT_HRS',
           pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 4,'PERJTOT_GRS',
           pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC'), 5,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 5,'PERJTOT_HRS',
           pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 5,'PERJTOT_GRS',
           pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC'), 6,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 6,'PERJTOT_HRS',
           pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 6,'PERJTOT_GRS',
           pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC'), 7,'PERJTOT_EARN_CODE',
       pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 7,'PERJTOT_HRS',
           pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 7,'PERJTOT_GRS',
           pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC'), 8,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 8,'PERJTOT_HRS',
           pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
          f_year('EMPLOYMENT VERIFIC'), 8,'PERJTOT_GRS',
           pevver2_empl_coas_code_home),1,15)),
substr(f_earning_flag(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC'), pevver2_empl_coas_code_home),1,1),
f_total_hour_earning_other(pevver2_pidm,
                  f_year('EMPLOYMENT VERIFIC'), 'PERJTOT_HRS',
                   pevver2_empl_coas_code_home),
f_total_hour_earning_other(pevver2_pidm,
                  f_year('EMPLOYMENT VERIFIC'), 'PERJTOT_GRS',
                   pevver2_empl_coas_code_home),
f_total_hour_earning_year(pevver2_pidm,
                  f_year('EMPLOYMENT VERIFIC') - 1, 'PERJTOT_HRS',
                   pevver2_empl_coas_code_home),
f_total_hour_earning_year(pevver2_pidm,
                  f_year('EMPLOYMENT VERIFIC') - 1, 'PERJTOT_GRS',
                   pevver2_empl_coas_code_home),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 1,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 1,'PERJTOT_HRS',
        pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 1,'PERJTOT_GRS',
        pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 2,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 2,'PERJTOT_HRS',
        pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 2,'PERJTOT_GRS',
        pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 3,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 3,'PERJTOT_HRS',
        pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 3,'PERJTOT_GRS',
        pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 4,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 4,'PERJTOT_HRS',
        pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 4,'PERJTOT_GRS',
        pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 5,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 5,'PERJTOT_HRS',
        pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 5,'PERJTOT_GRS',
        pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 6,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 6,'PERJTOT_HRS',
        pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 6,'PERJTOT_GRS',
        pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 7,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 7,'PERJTOT_HRS',
        pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 7,'PERJTOT_GRS',
        pevver2_empl_coas_code_home),1,15)),
substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 8,'PERJTOT_EARN_CODE',
        pevver2_empl_coas_code_home),1,3),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 8,'PERJTOT_HRS',
        pevver2_empl_coas_code_home),1,10)),
to_number(substr(f_total_hour_earning_code(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, 8,'PERJTOT_GRS',
        pevver2_empl_coas_code_home),1,15)),
substr(f_earning_flag(pevver2_pidm,
       f_year('EMPLOYMENT VERIFIC') - 1, pevver2_empl_coas_code_home),1,1),
f_total_hour_earning_other(pevver2_pidm,
                      f_year('EMPLOYMENT VERIFIC') - 1, 'PERJTOT_HRS',
                       pevver2_empl_coas_code_home),
f_total_hour_earning_other(pevver2_pidm,
                      f_year('EMPLOYMENT VERIFIC') - 1, 'PERJTOT_GRS',
                       pevver2_empl_coas_code_home)
from  pevver2"
"BANINST1","PEVRTWK","Return to Work View","SELECT PEBEMPL_PIDM PIDM,
       PEBEMPL_LREA_CODE LREA,
       PEBEMPL_TREA_CODE TREA,
       PEBEMPL_SENIORITY_DATE EMPL_SENIORITY,
       NBRBJOB_POSN POSN,
       NBRBJOB_SUFF SUFF,
       '',
       to_date(''),
       to_date('')
FROM NBRBJOB, PEBEMPL, PPRCOLR
WHERE
     PPRCOLR_JOB = 'PEVRTWK'
     AND PPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
    AND ((PEBEMPL_LOA_BEG_DATE <= PPRCOLR_VALUE_DATE
     AND (PEBEMPL_LOA_END_DATE >= PPRCOLR_VALUE_DATE
          OR PEBEMPL_LOA_END_DATE IS NULL)
     AND PEBEMPL_LREA_CODE IN
         (SELECT PTRLREA_CODE
          FROM  PTRLREA
          WHERE PTRLREA_RET_WORK_ELIG_IND = 'Y'))
  OR
     (PEBEMPL_TERM_DATE <= PPRCOLR_VALUE_DATE
      AND PEBEMPL_TREA_CODE IN
          (SELECT PTRTREA_CODE
           FROM  PTRTREA
           WHERE PTRTREA_RET_WORK_ELIG_IND = 'Y')))
  AND NBRBJOB_PIDM = PEBEMPL_PIDM
  AND (NBRBJOB_POSN = PPRCOLR_VALUE_ATYP
       OR PPRCOLR_VALUE_ATYP IS NULL)
  AND NOT EXISTS
        (SELECT 'X'
         FROM PERJBBG
         WHERE PERJBBG_PIDM  = PEBEMPL_PIDM
         AND PERJBBG_POSN  = NBRBJOB_POSN
         AND PERJBBG_SUFF  = NBRBJOB_SUFF)
        UNION
(SELECT PEBEMPL_PIDM PIDM,
       PEBEMPL_LREA_CODE LREA,
       PEBEMPL_TREA_CODE TREA,
       PEBEMPL_SENIORITY_DATE EMPL_SENIORITY,
       NBRBJOB_POSN POSN,
       NBRBJOB_SUFF SUFF,
       PERJBBG_BARG_CODE,
       PERJBBG_JOB_SENIORITY_DATE,
       PERBARG_BARG_SENIORITY_DATE
FROM PERBARG, PERJBBG, NBRBJOB, PEBEMPL,
     PPRCOLR
WHERE
     PPRCOLR_JOB = 'PEVRTWK'
     AND PPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
    AND ((PEBEMPL_LOA_BEG_DATE <= PPRCOLR_VALUE_DATE
     AND (PEBEMPL_LOA_END_DATE >= PPRCOLR_VALUE_DATE
          OR PEBEMPL_LOA_END_DATE IS NULL)
     AND PEBEMPL_LREA_CODE IN
         (SELECT PTRLREA_CODE
          FROM  PTRLREA
          WHERE PTRLREA_RET_WORK_ELIG_IND = 'Y'))
  OR
     (PEBEMPL_TERM_DATE <= PPRCOLR_VALUE_DATE
      AND PEBEMPL_TREA_CODE IN
          (SELECT PTRTREA_CODE
           FROM   PTRTREA
           WHERE PTRTREA_RET_WORK_ELIG_IND = 'Y')))
  AND NBRBJOB_PIDM = PEBEMPL_PIDM
  AND (NBRBJOB_POSN = PPRCOLR_VALUE_ATYP
       OR PPRCOLR_VALUE_ATYP IS NULL)
  AND PERJBBG_PIDM  = PEBEMPL_PIDM
  AND PERJBBG_POSN  = NBRBJOB_POSN
  AND PERJBBG_SUFF  = NBRBJOB_SUFF
  AND PERJBBG_BARG_EFFECTIVE_DATE  =
        (SELECT MAX(X.PERJBBG_BARG_EFFECTIVE_DATE)
         FROM  PERJBBG X
         WHERE X.PERJBBG_PIDM  = PEBEMPL_PIDM
         AND X.PERJBBG_POSN  = NBRBJOB_POSN
         AND X.PERJBBG_SUFF  = NBRBJOB_SUFF)
  AND PERBARG_BARG_CODE  = PERJBBG_BARG_CODE
  AND PERBARG_EFFECTIVE_DATE  = PERJBBG_BARG_EFFECTIVE_DATE)
 "
"BANINST1","PEVREVW","Employee Review Type Information View","SELECT  PERREVW_PIDM,
        PERREVW_REVT_CODE,
        PTVREVT_DESC,
        PERREVW_REVT_DATE,
        DECODE(PERREVW_REVT_COMPLETE,'N','NO',
                                     'Y','YES',
                                      NULL),
        PERREVW_REVT_RATING,
        PERREVW_REVIEWER_PIDM,
        SPRIDEN_ID,
        SUBSTR(DECODE(gb_displaymask.f_ssb_format_name(),
                      'Y', DECODE(spriden_surname_prefix,NULL,NULL,spriden_surname_prefix||' '), '')
               ||SPRIDEN_LAST_NAME|| ', '||SPRIDEN_FIRST_NAME||' '||SUBSTR(SPRIDEN_MI,1,1),1,25),
        SPRIDEN_SURNAME_PREFIX,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI
FROM    PERREVW,
        PTVREVT,
        SPRIDEN
WHERE   PTVREVT_CODE (+)   = PERREVW_REVT_CODE
AND     SPRIDEN_PIDM (+)   = PERREVW_REVIEWER_PIDM
AND     SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","PEVREC1","","select  f_profile_date('WFE RECR FROM'),
        f_profile_date('WFE RECR THRU'),
        pabrequ_req_no,
        pabrequ_open_date,
        pabrequ_close_date,
        pabappl_pidm,
        decode(ntrsalb_ind,
               'H',ntrsalb_midpoint*ptrecls_hours_per_day*5*52,
                   ntrsalb_midpoint),
        pabappl_desired_salary,
        pabappl_desired_hourly,
        pabrequ_reqs_code,
        nbbposn_ecls_code,
        nbbposn_pcls_code,
        ptrecls_internal_ft_pt_ind,
        ntrpcls_eskl_code,
        decode(substr(ntrpcls_eskl_code,1,1),
             '2','F','S'),
        substr(f_min_degree_level(pabrequ_posn),1,2),
        ptrecls_empr_code,
        pabrequ_coas_code,
        pabrequ_orgn_code,
        pebempl_current_hire_date,
        pebempl_term_date,
        substr(f_alumnus_ind(pabappl_pidm),1,1),
        substr(f_disabled_ind(pabappl_pidm),1,1),
        pabappl_asrc_code,
        decode(pabappl_pidm,null,'N','Y'),
        substr(f_sdax_appl_stat(pabappl_pidm,pabappl_req_no,'IO'),1,1),
        substr(f_sdax_appl_stat(pabappl_pidm,pabappl_req_no,'IC'),1,1),
        substr(f_sdax_appl_stat(pabappl_pidm,pabappl_req_no,'EO'),1,1),
        substr(f_sdax_appl_stat(pabappl_pidm,pabappl_req_no,'EA'),1,1),
        decode(nbrbjob_pidm,null,'N','Y')
from    ntrsalb,
        ptrreqs,
        nbbposn,
        ptrecls,
        ntrpcls,
        pebempl,
        pabappl,
        nbrbjob,
        pabrequ
where   trunc(pabrequ_post_date) <= trunc(f_profile_date('WFE RECR THRU'))
and     trunc(pabrequ_post_date) >= trunc(f_profile_date('WFE RECR FROM'))
and     nbbposn_posn = pabrequ_posn
and     f_include_ecls(nbbposn_ecls_code,'WFEECLSREC') = 'Y'
and     ntrsalb_sgrp_code = nbbposn_sgrp_code
and     ntrsalb_table = nbbposn_table
and     ntrsalb_grade = nbbposn_grade
and     ptrreqs_code = pabrequ_reqs_code
and     ptrecls_code = nbbposn_ecls_code
and     ntrpcls_code = nbbposn_pcls_code
and     pabappl_req_no(+) = pabrequ_req_no
and     pebempl_pidm(+) = pabappl_pidm
and     nbrbjob.rowid(+) = f_curr_job_rowid(pabappl_pidm,pabappl_posn,null,
                                 f_profile_date('WFE RECR THRU'))
 "
"BANINST1","PEVREC0","Web for Executives Recruitment Profile View","select  'B',
        pevrec1_req_number,
        pevrec1_pidm,
        substr(to_char(pevrec1_thru_date,'MM'),1,2),
        substr(to_char(pevrec1_thru_date,'YYYY'),1,4),
        pevrec1_salary_midpoint,
        nvl(round(nvl(pevrec1_close_date,pevrec1_thru_date) - pevrec1_open_date + 1,2),0),
        pevrec1_desired_salary,
        pevrec1_desired_hourly,
        nvl(round((nvl(pprexpe_end_date,pevrec1_thru_date)
             -pprexpe_start_date)/365.25,2),0),
        nvl(pprexpe_curr_salary,pprexpe_curr_hourly*2080),
        pevrec1_req_status,
        pevrec1_employee_class,
        pevrec1_position_class,
        pevrec1_ft_pt_status,
        pevrec1_skill_code,
        pevrec1_fac_staff_ind,
        pevrec1_min_degree_level,
        pevrec1_employer,
        pevrec1_chart_code,
        pevrec1_department,
        substr(f_curr_empl_ind(pevrec1_current_hire_date,pevrec1_term_date,pevrec1_thru_date),1,1),
        pevrec1_alumnus_ind,
        f_calculate_age
           (pevrec1_thru_date,
            spbpers_birth_date,
            spbpers_dead_date),
        spbpers_ethn_code,
        stvethn_etct_code,
        spbpers_sex,
        sordegr_degc_code,
        sordegr_sbgi_code,
        decode(spbpers_vetc_file_number,null,'N','Y'),
        spraddr_city,
        spraddr_stat_code,
        spraddr_natn_code,
        pevrec1_disabled_ind,
        pprexpe_empr_name,
        pprexpe_emty_code,
        pevrec1_recr_source,
        pevrec1_applicant_ind,
        decode(pevrec1_empl_begun_ind,
         'Y','Y',
             decode(pevrec1_empl_accepted_ind,
              'Y','Y',
                  decode(pevrec1_empl_offered_ind,
                   'Y','Y',
                       decode(pevrec1_int_completed_ind,
                        'Y','Y',
                            pevrec1_int_offered_ind)))),
        decode(pevrec1_empl_begun_ind,
         'Y','Y',
             decode(pevrec1_empl_accepted_ind,
              'Y','Y',
                  decode(pevrec1_empl_offered_ind,
                   'Y','Y',
                       pevrec1_int_completed_ind))),
        decode(pevrec1_empl_begun_ind,
         'Y','Y',
             decode(pevrec1_empl_accepted_ind,
              'Y','Y',
                  pevrec1_empl_offered_ind)),
        decode(pevrec1_empl_begun_ind,
         'Y','Y',
             pevrec1_empl_accepted_ind),
        pevrec1_empl_begun_ind
from    pprexpe,
        spbpers,
        stvethn,
        sordegr,
        spraddr,
        pevrec1
where   pprexpe.rowid(+) = f_past_employment_rowid(pevrec1_pidm,1)
and     spbpers_pidm(+)  = pevrec1_pidm
and     stvethn_code(+)  = spbpers_ethn_code
and     sordegr.rowid(+) = f_terminal_degree(pevrec1_pidm,pevrec1_thru_date)
and     spraddr.rowid(+) = f_get_address_rowid
           (pevrec1_pidm,'PAYRADDR','A',pevrec1_thru_date,1,'AH',null)
 "
"BANINST1","PEVPRF1","","select
pebempl_pidm,
spriden_id,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
f_profile_date('EMPLOYEE PROFILE'),
spbpers_birth_date,
substr(f_calculate_age(null, spbpers_birth_date, spbpers_dead_date),1,3),
spbpers_sex,
spbpers_ethn_code,
substr(f_get_ethn_category(spbpers_ethn_code,'EEOC'),1,1),
spbpers_mrtl_code,
x.spraddr_atyp_code,
x.spraddr_house_number,
x.spraddr_street_line1,
x.spraddr_street_line2,
x.spraddr_street_line3,
x.spraddr_street_line4,
x.spraddr_city,
x.spraddr_stat_code,
x.spraddr_zip,
x.spraddr_natn_code,
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_ctry_code_phone),
decode(v.sprtele_unlist_ind,'Y','*******',v.sprtele_phone_number),
decode(v.sprtele_unlist_ind,'Y','***',v.sprtele_phone_area),
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_phone_ext),
y.spraddr_atyp_code,
y.spraddr_house_number,
y.spraddr_street_line1,
y.spraddr_street_line2,
y.spraddr_street_line3,
y.spraddr_street_line4,
y.spraddr_city,
y.spraddr_stat_code,
y.spraddr_zip,
y.spraddr_natn_code,
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_ctry_code_phone),
decode(w.sprtele_unlist_ind,'Y','*******',w.sprtele_phone_number),
decode(w.sprtele_unlist_ind,'Y','***',w.sprtele_phone_area),
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_phone_ext),
pebempl_empl_status,
decode(pebempl_empl_status, 'A', 'Active',
                       'B', 'Leave w/o Pay and w/ Benefit',
                       'L', 'Leave w/o Pay and w/o Benefit',
                       'F', 'Leave w/ Pay and w/ Benefit',
                       'P', 'Leave w/ Part Pay and w/ Benefit',
                       'T', 'Terminated', ''),
pebempl_ecls_code,
pebempl_lcat_code,
pebempl_bcat_code,
pebempl_coas_code_home,
pebempl_orgn_code_home,
nbrjobs_coas_code_ts,
nbrjobs_orgn_code_ts,
pebempl_internal_ft_pt_ind,
pebempl_first_hire_date,
pebempl_current_hire_date,
pebempl_adj_service_date,
pebempl_seniority_date,
p.sordegr_degc_code,
p.sordegr_degc_date,
p.sordegr_degc_year,
p.sordegr_degr_seq_no,
p.sordegr_sbgi_code,
t.sordegr_degc_code,
t.sordegr_degc_date,
t.sordegr_degc_year,
t.sordegr_degr_seq_no,
t.sordegr_sbgi_code,
substr(f_check_for_more_pay('DEGREE',pebempl_pidm),1,1),
a.perbarg_barg_code,
a.perbarg_bure_code,
m.ptrbure_desc,
b.perbarg_barg_code,
b.perbarg_bure_code,
n.ptrbure_desc,
c.perbarg_barg_code,
c.perbarg_bure_code,
o.ptrbure_desc,
substr(f_check_for_more_pay('BARGAINING UNIT', pebempl_pidm),1,1),
d.perleav_leav_code,
d.perleav_begin_balance,
d.perleav_accrued,
d.perleav_taken,
d.perleav_date_avail,
d.perleav_hrs_banked,
e.perleav_leav_code,
e.perleav_begin_balance,
e.perleav_accrued,
e.perleav_taken,
e.perleav_date_avail,
e.perleav_hrs_banked,
f.perleav_leav_code,
f.perleav_begin_balance,
f.perleav_accrued,
f.perleav_taken,
f.perleav_date_avail,
f.perleav_hrs_banked,
g.perleav_leav_code,
g.perleav_begin_balance,
g.perleav_accrued,
g.perleav_taken,
g.perleav_date_avail,
g.perleav_hrs_banked,
h.perleav_leav_code,
h.perleav_begin_balance,
h.perleav_accrued,
h.perleav_taken,
h.perleav_date_avail,
h.perleav_hrs_banked,
DJ.perjlev_leav_code,
DJ.perjlev_begin_balance,
DJ.perjlev_accrued,
DJ.perjlev_taken,
DJ.perjlev_hrs_banked,
EJ.perjlev_leav_code,
EJ.perjlev_begin_balance,
EJ.perjlev_accrued,
EJ.perjlev_taken,
EJ.perjlev_hrs_banked,
FJ.perjlev_leav_code,
FJ.perjlev_begin_balance,
FJ.perjlev_accrued,
FJ.perjlev_taken,
FJ.perjlev_hrs_banked,
GJ.perjlev_leav_code,
GJ.perjlev_begin_balance,
GJ.perjlev_accrued,
GJ.perjlev_taken,
GJ.perjlev_hrs_banked,
HJ.perjlev_leav_code,
HJ.perjlev_begin_balance,
HJ.perjlev_accrued,
HJ.perjlev_taken,
HJ.perjlev_hrs_banked,
substr(f_check_for_more_pay('LEAVE', pebempl_pidm),1,1),
pebempl_I9_form_ind,
decode(pebempl_I9_form_ind, 'R', 'Received',
                            'N', 'Not received',
                            'T', 'Temporary',
                            'E', 'Exempt', ''),
pebempl_I9_date,
pebempl_I9_expire_date,
pebempl_1042_recipient_cd,
decode(pebempl_1042_recipient_cd, '01', 'Individual',
                                  '02', 'Corporation',
                                  '03', 'Partnership',
                                  '04', 'Fiduciary',
                                  '05', 'Nominne',
                                  '06', 'Govt or International Organization',
                                  '07', 'Tax Exempt Organization',
                                  '08', 'Private Foundation',
                                  '09', 'Artist or Athlete',
                                  '19', 'Other',
                                  '20', 'Type of Recipient Unknown', ''),
pebempl_days_in_canada,
pebempl_stgr_code,
j.gorvisa_vtyp_code,
i.gobintl_i94_status,
i.gobintl_natn_code_legal,
j.gorvisa_visa_start_date,
j.gorvisa_visa_expire_date,
nbrbjob_contract_type,
nbrbjob_begin_date,
nbrbjob_end_date,
nbrjobs_posn,
nbrjobs_suff,
nbrjobs_desc,
nbrjobs_status,
decode(nbrjobs_status, 'A', 'Active',
                       'B', 'Leave w/o Pay and w/ Benefit',
                       'L', 'Leave w/o Pay and w/o Benefit',
                       'F', 'Leave w/ Pay and w/ Benefit',
                       'P', 'Leave w/ Part Pay and w/ Benefit',
                       'T', 'Terminated', ''),
nbrjobs_pers_chg_date,
nbrjobs_supervisor_pidm,
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'ID'),1,9),
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'SURNAME'),1,60),
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'LAST NAME'),1,60),
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'FIRST NAME'),1,15),
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'MI'),1,15),
nbrjobs_supervisor_suff,
nbrjobs_supervisor_posn,
nbrjobs_effective_date,
nbrjobs_jcre_code,
nbrjobs_sal_table,
nbrjobs_sal_grade,
nbrjobs_sal_step,
nbrjobs_sgrp_code,
nbrjobs_fte,
nbrjobs_appt_pct,
nbrjobs_lcat_code,
ntrsalb_low,
ntrsalb_midpoint,
ntrsalb_high,
f_next_auto_step(nbrjobs_sal_table,nbrjobs_sal_grade,nbrjobs_sgrp_code,
         nbrjobs_sal_step),
nbrjobs_ann_salary,
nbrjobs_assgn_salary,
nbrjobs_per_pay_salary,
nbrjobs_reg_rate,
nbrjobs_pict_code,
nbrjobs_factor,
nbrjobs_dfpr_code,
nbrjobs_pays,
nbrjobs_per_pay_defer_amt,
nbrbjob_defer_bal,
nbrbjob_salary_encumbrance,
nbrbjob_probation_units,
nbrbjob_probation_begin_date,
nbrbjob_probation_end_date,
k.perrevw_revt_code,
k.perrevw_revt_date,
k.perrevw_revt_complete,
k.perrevw_revt_rating,
l.perrevw_revt_code,
l.perrevw_revt_date,
l.perrevw_revt_complete,
l.perrevw_revt_rating,
substr(f_check_for_more_pay('REVIEW',pebempl_pidm),1,1),
pebempl_trea_code,
pebempl_term_date,
pebempl_lrea_code,
pebempl_loa_beg_date,
pebempl_loa_end_date,
nbrjfte_fte_effective_date,
nbrjfte_appt_pct,
nbrjfte_ann_fte,
nbrjfte_base_salary,
nbrbjob_future_salary_enc
from  spriden, spbpers, spraddr x, spraddr y,
      sprtele v, sprtele w,
      ptrbure m, ptrbure n, ptrbure o,
      perbarg a, perbarg b, perbarg c,
      perleav d,perleav e,perleav f, perleav g, perleav h,
      (SELECT perjlev_pidm, perjlev_leav_code,
              SUM(perjlev_begin_balance) perjlev_begin_balance,
              SUM(perjlev_accrued)       perjlev_accrued,
              SUM(perjlev_taken)         perjlev_taken,
              SUM(perjlev_hrs_banked)    perjlev_hrs_banked
       FROM   perjlev
       WHERE  perjlev_leav_code = (SELECT gtvsdax_external_code
                                   FROM   gtvsdax
                                   WHERE  gtvsdax_internal_code = 'PAYRLEAV'
                                     AND  gtvsdax_internal_code_group = 'LEAVE'
                                     AND  gtvsdax_internal_code_seqno = 1)
       GROUP BY perjlev_pidm, perjlev_leav_code) DJ,
      (SELECT perjlev_pidm, perjlev_leav_code,
              SUM(perjlev_begin_balance) perjlev_begin_balance,
              SUM(perjlev_accrued)       perjlev_accrued,
              SUM(perjlev_taken)         perjlev_taken,
              SUM(perjlev_hrs_banked)    perjlev_hrs_banked
       FROM   perjlev
       WHERE  perjlev_leav_code = (SELECT gtvsdax_external_code
                                   FROM   gtvsdax
                                   WHERE  gtvsdax_internal_code = 'PAYRLEAV'
                                     AND  gtvsdax_internal_code_group = 'LEAVE'
                                     AND  gtvsdax_internal_code_seqno = 2)
       GROUP BY perjlev_pidm, perjlev_leav_code) EJ,
      (SELECT perjlev_pidm, perjlev_leav_code,
              SUM(perjlev_begin_balance) perjlev_begin_balance,
              SUM(perjlev_accrued)       perjlev_accrued,
              SUM(perjlev_taken)         perjlev_taken,
              SUM(perjlev_hrs_banked)    perjlev_hrs_banked
       FROM   perjlev
       WHERE  perjlev_leav_code = (SELECT gtvsdax_external_code
                                   FROM   gtvsdax
                                   WHERE  gtvsdax_internal_code = 'PAYRLEAV'
                                     AND  gtvsdax_internal_code_group = 'LEAVE'
                                     AND  gtvsdax_internal_code_seqno = 3)
       GROUP BY perjlev_pidm, perjlev_leav_code) FJ,
      (SELECT perjlev_pidm, perjlev_leav_code,
              SUM(perjlev_begin_balance) perjlev_begin_balance,
              SUM(perjlev_accrued)       perjlev_accrued,
              SUM(perjlev_taken)         perjlev_taken,
              SUM(perjlev_hrs_banked)    perjlev_hrs_banked
       FROM   perjlev
       WHERE  perjlev_leav_code = (SELECT gtvsdax_external_code
                                   FROM   gtvsdax
                                   WHERE  gtvsdax_internal_code = 'PAYRLEAV'
                                     AND  gtvsdax_internal_code_group = 'LEAVE'
                                     AND  gtvsdax_internal_code_seqno = 4)
       GROUP BY perjlev_pidm, perjlev_leav_code) GJ,
       (SELECT perjlev_pidm, perjlev_leav_code,
              SUM(perjlev_begin_balance) perjlev_begin_balance,
              SUM(perjlev_accrued)       perjlev_accrued,
              SUM(perjlev_taken)         perjlev_taken,
              SUM(perjlev_hrs_banked)    perjlev_hrs_banked
       FROM   perjlev
       WHERE  perjlev_leav_code = (SELECT gtvsdax_external_code
                                   FROM   gtvsdax
                                   WHERE  gtvsdax_internal_code = 'PAYRLEAV'
                                     AND  gtvsdax_internal_code_group = 'LEAVE'
                                     AND  gtvsdax_internal_code_seqno = 5)
       GROUP BY perjlev_pidm, perjlev_leav_code) HJ,
      gobintl i, gorvisa j, perrevw k,
      perrevw l, nbrjfte, nbrbjob, nbrjobs, ntrsalb,
      sordegr p,sordegr t,
      (select ptrinst_ecls_security_ind
       from   ptrinst) inst,
      pebempl
where spbpers_pidm(+) = spriden_pidm
  and spriden_change_ind is null
  and spriden_pidm = pebempl_pidm
  and i.gobintl_pidm(+) = pebempl_pidm
  and j.gorvisa_pidm(+) = pebempl_pidm
  and i.rowid(+) = gokintl.f_get_gobintl_rowid(pebempl_pidm)
  and j.rowid(+) = gokintl.f_get_gorvisa_rowid(pebempl_pidm)
  and x.spraddr_pidm(+) = pebempl_pidm
  and v.sprtele_pidm(+) = pebempl_pidm
  and x.rowid(+) = f_get_address_rowid
      (pebempl_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and v.rowid(+) = f_get_address_telephone_rowid
      (pebempl_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and y.spraddr_pidm(+) = pebempl_pidm
  and w.sprtele_pidm(+) = pebempl_pidm
  and y.rowid(+) = f_get_address_rowid
      (pebempl_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and w.rowid(+) = f_get_address_telephone_rowid
      (pebempl_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and a.perbarg_pidm(+) = pebempl_pidm
  and b.perbarg_pidm(+) = pebempl_pidm
  and c.perbarg_pidm(+) = pebempl_pidm
  and m.ptrbure_code(+) = a.perbarg_bure_code
  and n.ptrbure_code(+) = b.perbarg_bure_code
  and o.ptrbure_code(+) = c.perbarg_bure_code
  and a.rowid(+) = f_bargaining_unit_rowid(pebempl_pidm,1)
  and b.rowid(+) = f_bargaining_unit_rowid(pebempl_pidm,2)
  and c.rowid(+) = f_bargaining_unit_rowid(pebempl_pidm,3)
  and d.perleav_pidm(+) = pebempl_pidm
  and e.perleav_pidm(+) = pebempl_pidm
  and f.perleav_pidm(+) = pebempl_pidm
  and g.perleav_pidm(+) = pebempl_pidm
  and h.perleav_pidm(+) = pebempl_pidm
  and d.rowid(+) = f_leave_rowid(pebempl_pidm,1)
  and e.rowid(+) = f_leave_rowid(pebempl_pidm,2)
  and f.rowid(+) = f_leave_rowid(pebempl_pidm,3)
  and g.rowid(+) = f_leave_rowid(pebempl_pidm,4)
  and h.rowid(+) = f_leave_rowid(pebempl_pidm,5)
  AND DJ.perjlev_pidm(+) = pebempl_pidm
  AND EJ.perjlev_pidm(+) = pebempl_pidm
  AND FJ.perjlev_pidm(+) = pebempl_pidm
  AND GJ.perjlev_pidm(+) = pebempl_pidm
  AND HJ.perjlev_pidm(+) = pebempl_pidm
  and k.perrevw_pidm(+) = pebempl_pidm
  and l.perrevw_pidm(+) = pebempl_pidm
  and k.rowid(+) = f_review_rowid(pebempl_pidm,1)
  and l.rowid(+) = f_review_rowid(pebempl_pidm,2)
  and nbrjfte_pidm(+) = nbrjobs_pidm
  and nbrjfte_posn(+) = nbrjobs_posn
  and nbrjfte_suff(+) = nbrjobs_suff
  and nbrjfte.rowid(+)=
       f_annualized_fte_rowid(nbrjobs_pidm,nbrjobs_posn,nbrjobs_suff,
                              nbrjobs_effective_date)
  and ntrsalb.rowid(+)=
       f_salary_rowid(nbrjobs_sal_table,nbrjobs_sal_grade)
  and nbrbjob_pidm(+) = pebempl_pidm
  and nbrjobs_pidm(+) = pebempl_pidm
  and nbrbjob.rowid(+)=
       f_primary_job_rowid
          (pebempl_pidm,f_profile_date('EMPLOYEE PROFILE'),'NBRBJOB')
  and nbrjobs.rowid(+)=
       f_primary_job_rowid
          (pebempl_pidm,f_profile_date('EMPLOYEE PROFILE'),'NBRJOBS')
  and p.sordegr_pidm(+) = pebempl_pidm
  and t.sordegr_pidm(+) = pebempl_pidm
  and p.rowid(+)=f_degree_major_rowid
           (pebempl_pidm,1,'SORDEGR')
  and t.rowid(+)=f_degree_major_rowid
           (pebempl_pidm,2,'SORDEGR')
  and f_ecls_security(user,nbrjobs_ecls_code, inst.ptrinst_ecls_security_ind) = 'Y'
  and f_orgn_security(user,nbrjobs_orgn_code_ts,nbrjobs_coas_code_ts) = 'Y'"
"BANINST1","PEVPCSN","EMPLOYEE SENIORITY HOURS VIEW","SELECT DISTINCT nbrjobs_pidm,
       persnbl_earned_hrs,
       persnbl_seniority_hrs,
       persnbl_date_in_class,
       nbrjobs_posn,
       nbrjobs_suff,
       nbbposn_title,
       nbrjobs_coas_code_ts,
       nbrjobs_orgn_code_ts
FROM   nbrjobs A, persnbl, nbbposn, gubinst, potparm
WHERE  f_ecls_security(USER, nbrjobs_ecls_code) = 'Y'
  AND  (nbrjobs_orgn_code_ts = potparm_orgn_code_ts
        OR (nbrjobs_orgn_code_ts <> potparm_orgn_code_ts
            AND NVL(gubinst_finance_installed, 'N') = 'Y'
            AND potparm_orgn_hier_ind = 'Y'
            AND nokflib.f_orgn_hier_orgn_ind(nbrjobs_orgn_code_ts,
                                             potparm_orgn_code_ts,
                                             nbrjobs_coas_code_ts) = 'Y'))
  AND  NVL(nbrjobs_coas_code_ts, '*') = NVL(potparm_coas_code_ts, '*')
  AND  nbrjobs_status = 'A'
  AND  nbrjobs_effective_date = (SELECT MAX(nbrjobs_effective_date)
                                 FROM nbrjobs B
                                 WHERE B.nbrjobs_pidm = A.nbrjobs_pidm
                                   AND B.nbrjobs_posn = A.nbrjobs_posn
                                   AND B.nbrjobs_suff = A.nbrjobs_suff
                                   AND B.nbrjobs_effective_date <=
                                         potparm_as_of_date)
  AND  nbrjobs_posn || '' = nbbposn_posn || ''
  AND  nbrjobs_pidm      = persnbl_pidm
  AND  persnbl_pcls_code = nbbposn_pcls_code
  AND  nbbposn_pcls_code = NVL(potparm_pcls_code, nbbposn_pcls_code)
  AND  gubinst_key = 'INST'
  AND  potparm_session_id = TO_CHAR(USERENV('SESSIONID'))

 "
"BANINST1","PEVPBRG","","SELECT  PERBARG_PIDM,
	SPRIDEN_ID,
  DECODE(gb_displaymask.f_ssb_format_name(),
         'Y', DECODE(spriden_surname_prefix,NULL,NULL,spriden_surname_prefix||' '), '')
  ||SPRIDEN_LAST_NAME||', '||SPRIDEN_FIRST_NAME||' '||SPRIDEN_MI,
  PERBARG_BARG_CODE,
  PTVBARG_DESC,
  PERBARG_BURE_CODE,
  PTRBURE_DESC,
  PERJBBG_JOB_SENIORITY_DATE,
  PERBARG_EFFECTIVE_DATE,
  PERBARG_END_DATE,
  PERJBBG_POSN,
	PERJBBG_SUFF ,
	NBRJOBS_DESC,
  NBRJOBS_JBLN_CODE,
  PTRJBLN_DESC,
  NBRJOBS_COAS_CODE_TS,
  NBRJOBS_ORGN_CODE_TS,
  f_get_special_desc(NBRJOBS_ORGN_CODE_TS,sysdate),
  NBRJOBS_EFFECTIVE_DATE,
  NBRJOBS_SAL_TABLE,
  NBRJOBS_SAL_GRADE,
  NBRJOBS_SAL_STEP,
  NBRJOBS_REG_RATE,
	NBRJOBS_HRS_PAY,
	NBRJOBS_ANN_SALARY
FROM    SPRIDEN,
        PTRJBLN,
        PTRBURE,
        PTVBARG,
        NBRJOBS,
        PERBARG y,
   	PERJBBG X
WHERE   SPRIDEN_PIDM = PERBARG_PIDM
AND	SPRIDEN_CHANGE_IND IS NULL
AND 	noksecr.f_sala_security(user,nbrjobs_ann_salary) = 'Y'
AND     noksecr.f_empr_security(user,nbrjobs_empr_code) = 'Y'
AND     f_ecls_security(user,nbrjobs_ecls_code) = 'Y'
AND     f_orgn_security(user,nbrjobs_orgn_code_ts,
		nbrjobs_coas_code_ts) = 'Y'
AND     PTRJBLN_CODE (+)  = NBRJOBS_JBLN_CODE
AND     PTVBARG_CODE = y.PERBARG_BARG_CODE
AND     PTRBURE_CODE = y.PERBARG_BURE_CODE
AND     NBRJOBS_PIDM  = PERJBBG_PIDM
AND     NBRJOBS_POSN  = PERJBBG_POSN
AND     NBRJOBS_SUFF  = PERJBBG_SUFF
AND     NBRJOBS_EFFECTIVE_DATE  =
	(SELECT MAX(NBRJOBS_EFFECTIVE_DATE)
         FROM   NBRJOBS
         WHERE  NBRJOBS_PIDM  = X.PERJBBG_PIDM
         AND    NBRJOBS_POSN = X.PERJBBG_POSN
         AND    NBRJOBS_SUFF = X.PERJBBG_SUFF
         AND    NBRJOBS_EFFECTIVE_DATE <= SYSDATE)
AND     PERBARG_EFFECTIVE_DATE = PERJBBG_BARG_EFFECTIVE_DATE
AND	PERBARG_BARG_CODE   = PERJBBG_BARG_CODE
AND     PERBARG_PIDM = PERJBBG_PIDM
AND     PERJBBG_POSN = pokparm.f_get_posn
AND     PERJBBG_BARG_EFFECTIVE_DATE <= pokparm.f_get_asof_date"
"BANINST1","PEVLEAV","Employee Leave Information View","SELECT  PERLEAV_PIDM,
        PERLEAV_LEAV_CODE,
        PTRLEAV_LONG_DESC,
        PTRLEAV_SHORT_DESC,
        PERLEAV_BEGIN_BALANCE,
        PERLEAV_ACCRUED,
        PERLEAV_TAKEN,
        PERLEAV_DATE_AVAIL,
        PERLEAV_HRS_BANKED
FROM    PERLEAV,
        PTRLEAV
WHERE   PTRLEAV_CODE (+)   = PERLEAV_LEAV_CODE
 "
"BANINST1","PEVJTOT","Employee Job Totals View","SELECT PERJTOT_PIDM,
            PERJTOT_YEAR,
            PERJTOT_MONTH,
            SUM(NVL(PERJTOT_HRS,0)),
            SUM(NVL(PERJTOT_GRS,0))
     FROM   PERJTOT,
            PTREARN,
            PPRCOLR
    WHERE   PERJTOT_EARN_CODE = PTREARN_CODE
    AND     PPRCOLR_JOB       =  'PEVJTOT'
    AND     PPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
    AND     PERJTOT_PIDM = TO_NUMBER(PPRCOLR_PARM_NUMBER)
    AND     TO_DATE('01-'||ltrim(to_char(PERJTOT_MONTH,'09'))||'-'
  ||ltrim(to_char(PERJTOT_YEAR,'0009')),'DD-MM-YYYY')
  BETWEEN PPRCOLR_VALUE_DATE AND PPRCOLR_ACTIVITY_DATE
    AND     ( PERJTOT_EARN_CODE = PPRCOLR_TYPE     OR
              PPRCOLR_TYPE      = '@@@'              )
    AND     DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,1,6),
              '@@@@@@','@@@@@@',PERJTOT_POSN)      =
              SUBSTR(PPRCOLR_VALUE_ATYP,1,6)
   AND      (DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,8,1),
              '@','@',PERJTOT_SUFF)              =
            SUBSTR(PPRCOLR_VALUE_ATYP,8,1)
   OR
             DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,8,2),
              '@@','@@',PERJTOT_SUFF)              =
            SUBSTR(PPRCOLR_VALUE_ATYP,8,2))
   AND     (((DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,10,1),
             'Y',PTREARN_CASH_IND,'Y') =
              PTREARN_CASH_IND ) OR
           (PPRCOLR_TYPE   <> '@@@'))
  OR
           ((DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,11,1),
             'Y',PTREARN_CASH_IND,'Y') =
              PTREARN_CASH_IND ) OR
           (PPRCOLR_TYPE   <> '@@@')))
   AND     (DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,12,4),
             '@@@@','@@@@', PERJTOT_EMPR_CODE)     =
                   SUBSTR(PPRCOLR_VALUE_ATYP,12,4)
   OR
            DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,13,4),
             '@@@@','@@@@', PERJTOT_EMPR_CODE)     =
                   SUBSTR(PPRCOLR_VALUE_ATYP,13,4))
   GROUP BY PERJTOT_PIDM, PERJTOT_YEAR, PERJTOT_MONTH,
   DECODE(PPRCOLR_TYPE,'@@@',NULL,PERJTOT_EARN_CODE),
   DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,1,6), '@@@@@@',NULL,PERJTOT_POSN),
   DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,8,2),'@@',NULL,PERJTOT_SUFF),
   DECODE(SUBSTR(PPRCOLR_VALUE_ATYP,11,4),'@@@@',NULL,PERJTOT_EMPR_CODE)

 "
"BANINST1","PEVJPS2","","select
spriden_pidm,
spriden_id,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
perjobp_jobp_code,
f_position_class(spriden_pidm, perjobp_jobp_code, 1),
f_position_class(spriden_pidm, perjobp_jobp_code, 2),
f_position_class(spriden_pidm, perjobp_jobp_code, 3),
f_position_class(spriden_pidm, perjobp_jobp_code, 4),
f_position_class(spriden_pidm, perjobp_jobp_code, 5),
f_position_seq_no(spriden_pidm, perjobp_jobp_code, 1),
f_position_seq_no(spriden_pidm, perjobp_jobp_code, 2),
f_position_seq_no(spriden_pidm, perjobp_jobp_code, 3),
f_position_seq_no(spriden_pidm, perjobp_jobp_code, 4),
f_position_seq_no(spriden_pidm, perjobp_jobp_code, 5)
from  spriden, perjobp
where spriden_pidm = perjobp_pidm
  and spriden_change_ind is null
  and EXISTS
      (select 'X'
         from persnbl
        where persnbl_pidm = spriden_pidm)"
"BANINST1","PEVJPS1","","select
pevjps2_pidm,
pevjps2_id_number,
pevjps2_surname_prefix,
pevjps2_last_name,
pevjps2_first_name,
pevjps2_middle_name,
pevjps2_jobp_code,
pevjps2_posn_class1,
pevjps2_posn_class2,
pevjps2_posn_class3,
pevjps2_posn_class4,
pevjps2_posn_class5,
pevjps2_sequence1,
pevjps2_sequence2,
pevjps2_sequence3,
pevjps2_sequence4,
pevjps2_sequence5,
f_seniority_date(pevjps2_pidm,pevjps2_posn_class1),
f_seniority_date(pevjps2_pidm,pevjps2_posn_class2),
f_seniority_date(pevjps2_pidm,pevjps2_posn_class3),
f_seniority_date(pevjps2_pidm,pevjps2_posn_class4),
f_seniority_date(pevjps2_pidm,pevjps2_posn_class5),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class1,'EARNED'),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class2,'EARNED'),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class3,'EARNED'),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class4,'EARNED'),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class5,'EARNED'),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class1,'SENIORITY'),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class2,'SENIORITY'),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class3,'SENIORITY'),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class4,'SENIORITY'),
f_seniority_hrs(pevjps2_pidm,pevjps2_posn_class5,'SENIORITY'),
f_seniority_comment(pevjps2_pidm,pevjps2_posn_class1),
f_seniority_comment(pevjps2_pidm,pevjps2_posn_class2),
f_seniority_comment(pevjps2_pidm,pevjps2_posn_class3),
f_seniority_comment(pevjps2_pidm,pevjps2_posn_class4),
f_seniority_comment(pevjps2_pidm,pevjps2_posn_class5)
from pevjps2"
"BANINST1","PEVJOBS","Employee Jobs Information View","SELECT  NBRBJOB_PIDM,
        NBRBJOB_POSN,
        NBRBJOB_SUFF,
        NBRBJOB_BEGIN_DATE,
        NBRBJOB_END_DATE,
        NBRBJOB_DEFER_BAL,
        DECODE(NBRBJOB_CONTRACT_TYPE,'P','Primary',
                                     'S','Secondary',
                                     'O','Overload',
                                     NULL),
        NBRBJOB_SALARY_ENCUMBRANCE,
        NBRBJOB_CONTRACT_BEGIN_DATE,
        NBRBJOB_CONTRACT_END_DATE,
        NBRBJOB_STEP_INCR_MON,
        NBRBJOB_STEP_INCR_DAY,
        NBRBJOB_COAS_CODE,
        DECODE(NBRBJOB_ACCRUE_LEAVE_IND,'Y','Yes','N','No',NULL),
        DECODE(NBRBJOB_CIVIL_SERVICE_IND,'Y','Yes','N','No',NULL),
        NBRBJOB_FRINGE_ENCUMBRANCE,
        NBRJOBS_EFFECTIVE_DATE,
        NBRJOBS_STATUS,
        DECODE(NBRJOBS_STATUS,'A','Active',
                              'B','Benefits',
                              'F','Full Pay LV',
                              'L','Leave',
                              'P','Part Pay LV',
                              'T','Terminated',
                              NULL),
        NBRJOBS_DESC,
        NBRJOBS_ECLS_CODE,
        PTRECLS_LONG_DESC,
        NBRJOBS_PICT_CODE,
        PTRPICT_DESC,
        NBRJOBS_COAS_CODE_TS,
        NBRJOBS_ORGN_CODE_TS,
        NBRJOBS_SAL_TABLE,
        NBRJOBS_SAL_GRADE,
        NBRJOBS_SAL_STEP,
        NBRJOBS_APPT_PCT,
        NBRJOBS_FTE,
        NBRJOBS_HRS_DAY,
        NBRJOBS_HRS_PAY,
        NBRJOBS_SHIFT,
        NBRJOBS_REG_RATE,
        NBRJOBS_ASSGN_SALARY,
        NBRJOBS_FACTOR,
        NBRJOBS_ANN_SALARY,
        NBRJOBS_PER_PAY_SALARY,
        NBRJOBS_PAYS,
        NBRJOBS_PER_PAY_DEFER_AMT,
        NBRJOBS_JCRE_CODE,
        PTRJCRE_DESC,
        NBRJOBS_SGRP_CODE,
        NBRJOBS_EMPR_CODE,
        PTREMPR_DESC,
        NBRJOBS_LGCD_CODE,
        PTVLGCD_DESC,
        NBRJOBS_LOCN_CODE,
        PTRLOCN_DESC,
        NBRJOBS_SCHL_CODE,
        PTRSCHL_DESC,
        NBRJOBS_SUPERVISOR_PIDM,
        NBRJOBS_SUPERVISOR_POSN,
        NBBPOSN_TITLE,
        NBRJOBS_SUPERVISOR_SUFF,
        NBRJOBS_WKCP_CODE,
        PTVWKCP_DESC,
        NBRJOBS_JBLN_CODE,
        PTRJBLN_DESC,
        NBRJOBS_PERS_CHG_DATE,
        NBRJOBS_PCAT_CODE,
        PTVPCAT_DESC,
        NBRJOBS_DFPR_CODE,
        PTRDFPR_DESC,
        NBRJFTE_FTE_EFFECTIVE_DATE,
        NBRJFTE_APPT_PCT,
        NBRJFTE_ANN_FTE,
        NBRJFTE_BASE_SALARY
FROM    NBBPOSN,
        PTRECLS,
        PTRPICT,
        PTRDFPR,
        PTREMPR,
        PTRLOCN,
        PTRSCHL,
        PTRJBLN,
        PTRJCRE,
        PTVLGCD,
        PTVWKCP,
        PTVPCAT,
        NBRJFTE,
        NBRBJOB,
        NBRJOBS A
WHERE   NBBPOSN_POSN (+)   = NBRJOBS_SUPERVISOR_POSN
AND     PTRECLS_CODE (+)   = NBRJOBS_ECLS_CODE
AND     PTRPICT_CODE (+)   = NBRJOBS_PICT_CODE
AND     PTRDFPR_CODE (+)   = NBRJOBS_DFPR_CODE
AND     PTRJCRE_CODE (+)   = NBRJOBS_JCRE_CODE
AND     PTREMPR_CODE (+)   = NBRJOBS_EMPR_CODE
AND     PTVLGCD_CODE (+)   = NBRJOBS_LGCD_CODE
AND     PTRLOCN_CODE (+)   = NBRJOBS_LOCN_CODE
AND     PTRSCHL_CODE (+)   = NBRJOBS_SCHL_CODE
AND     PTVWKCP_CODE (+)   = NBRJOBS_WKCP_CODE
AND     PTRJBLN_CODE (+)   = NBRJOBS_JBLN_CODE
AND     PTVPCAT_CODE (+)   = NBRJOBS_PCAT_CODE
AND     nbrjfte.rowid(+)   =
       f_annualized_fte_rowid(nbrjobs_pidm,nbrjobs_posn,nbrjobs_suff,
                              nbrjobs_effective_date)
AND     NBRBJOB_PIDM       = NBRJOBS_PIDM
AND     NBRBJOB_POSN       = NBRJOBS_POSN
AND     NBRBJOB_SUFF       = NBRJOBS_SUFF
AND     NBRJOBS_EFFECTIVE_DATE =
            (SELECT MAX(B.NBRJOBS_EFFECTIVE_DATE)
             FROM  NBRJOBS B
             WHERE B.NBRJOBS_PIDM = A.NBRJOBS_PIDM
             AND   B.NBRJOBS_POSN = A.NBRJOBS_POSN
             AND   B.NBRJOBS_SUFF = A.NBRJOBS_SUFF
             AND   B.NBRJOBS_EFFECTIVE_DATE <= SYSDATE)
 "
"BANINST1","PEVJOB1","","select
nbrbjob_pidm,
nbrbjob_posn,
nbrbjob_suff,
spriden_id,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
f_profile_date('JOB SUMMARY'),
spbpers_birth_date,
substr(f_calculate_age(null, spbpers_birth_date, spbpers_dead_date),1,3),
spbpers_sex,
spbpers_ethn_code,
substr(f_get_ethn_category(spbpers_ethn_code,'EEOC'),1,1),
spbpers_mrtl_code,
x.spraddr_atyp_code,
x.spraddr_house_number,
x.spraddr_street_line1,
x.spraddr_street_line2,
x.spraddr_street_line3,
x.spraddr_street_line4,
x.spraddr_city,
x.spraddr_stat_code,
x.spraddr_zip,
x.spraddr_natn_code,
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_ctry_code_phone),
decode(v.sprtele_unlist_ind,'Y','*******',v.sprtele_phone_number),
decode(v.sprtele_unlist_ind,'Y','***',v.sprtele_phone_area),
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_phone_ext),
y.spraddr_atyp_code,
y.spraddr_house_number,
y.spraddr_street_line1,
y.spraddr_street_line2,
y.spraddr_street_line3,
y.spraddr_street_line4,
y.spraddr_city,
y.spraddr_stat_code,
y.spraddr_zip,
y.spraddr_natn_code,
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_ctry_code_phone),
decode(w.sprtele_unlist_ind,'Y','*******',w.sprtele_phone_number),
decode(w.sprtele_unlist_ind,'Y','***',w.sprtele_phone_area),
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_phone_ext),
nbrbjob_contract_type,
nbrbjob_begin_date,
nbrbjob_end_date,
nbrjobs_desc,
nbrjobs_status,
decode(nbrjobs_status, 'A', 'Active',
                       'B', 'Leave w/o Pay and w/ Benefit',
                       'L', 'Leave w/o Pay and w/o Benefit',
                       'F', 'Leave w/ Pay and w/ Benefit',
                       'P', 'Leave w/ Part Pay and w/ Benefit',
                       'T', 'Terminated', ''),
nbrjobs_pers_chg_date,
nbrjobs_supervisor_pidm,
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'ID'),1,9),
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'SURNAME'),1,60),
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'LAST NAME'),1,60),
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'FIRST NAME'),1,15),
substr(f_supervisor_info(nbrjobs_supervisor_pidm,'MI'),1,15),
nbrjobs_supervisor_suff,
nbrjobs_supervisor_posn,
nbrjobs_effective_date,
nbrjobs_jcre_code,
nbrjobs_sal_table,
nbrjobs_sal_grade,
nbrjobs_sal_step,
nbrjobs_sgrp_code,
nbrjobs_fte,
nbrjobs_appt_pct,
nbrjobs_orgn_code_ts,
nbrjobs_lcat_code,
ntrsalb_low,
ntrsalb_midpoint,
ntrsalb_high,
substr(f_range_ind(f_salary_rowid(nbrjobs_sal_table,nbrjobs_sal_grade),
        nbrjobs_assgn_salary,nbrjobs_reg_rate,'LOW'),1,1),
substr(f_range_ind(f_salary_rowid(nbrjobs_sal_table,nbrjobs_sal_grade),
        nbrjobs_assgn_salary,nbrjobs_reg_rate,'MIDPOINT'),1,1),
substr(f_range_ind(f_salary_rowid(nbrjobs_sal_table,nbrjobs_sal_grade),
        nbrjobs_assgn_salary,nbrjobs_reg_rate,'HIGH'),1,1),
f_next_auto_step(nbrjobs_sal_table,nbrjobs_sal_grade,nbrjobs_sgrp_code,
         nbrjobs_sal_step),
nbrjobs_ann_salary,
nbrjobs_assgn_salary,
nbrjobs_per_pay_salary,
nbrjobs_reg_rate,
nbrjobs_pict_code,
nbrjobs_factor,
nbrjobs_dfpr_code,
nbrjobs_pays,
nbrjobs_per_pay_defer_amt,
nbrbjob_defer_bal,
nbrbjob_salary_encumbrance,
nbrbjob_probation_units,
nbrbjob_probation_begin_date,
nbrbjob_probation_end_date,
nbbposn_pcls_code,
nbbposn_status,
decode(nbbposn_status, 'A', 'Active',
                       'C', 'Canceled',
                       'F', 'Frozen',
                       'I', 'Inactive',''),
nbbposn_title,
nbbposn_type,
nbbposn_pgrp_code,
nbbposn_ecls_code,
nbrjfte_fte_effective_date,
nbrjfte_appt_pct,
nbrjfte_ann_fte,
nbrjfte_base_salary,
nbrbjob_future_salary_enc
from  spriden, spbpers, spraddr x, spraddr y,
      sprtele v, sprtele w,
      nbrjfte, nbrjobs, ntrsalb,nbbposn,
      (select ptrinst_ecls_security_ind
       from   ptrinst) inst,
      nbrbjob
where spbpers_pidm(+) = spriden_pidm
  and spriden_change_ind is null
  and nbrbjob_pidm   = spriden_pidm
  and nbbposn_posn   = nbrbjob_posn
  and nbrjobs_pidm   = nbrbjob_pidm
  and nbrjobs_posn   = nbrbjob_posn
  and nbrjobs_suff   = nbrbjob_suff
  and nbrjfte_pidm(+) = nbrjobs_pidm
  and nbrjfte_posn(+) = nbrjobs_posn
  and nbrjfte_suff(+) = nbrjobs_suff
  and x.spraddr_pidm(+) = nbrbjob_pidm
  and y.spraddr_pidm(+) = nbrbjob_pidm
  and v.sprtele_pidm(+) = nbrbjob_pidm
  and w.sprtele_pidm(+) = nbrbjob_pidm
  and x.rowid(+) = f_get_address_rowid
      (nbrbjob_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and v.rowid(+) = f_get_address_telephone_rowid
      (nbrbjob_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and y.rowid(+) = f_get_address_rowid
      (nbrbjob_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and w.rowid(+) = f_get_address_telephone_rowid
      (nbrbjob_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and nbrjfte.rowid(+)=
       f_annualized_fte_rowid(nbrjobs_pidm,nbrjobs_posn,nbrjobs_suff,
                              nbrjobs_effective_date)
  and ntrsalb.rowid(+)=
       f_salary_rowid(nbrjobs_sal_table,nbrjobs_sal_grade)
  and nbrjobs_effective_date =
          (select MAX(n.nbrjobs_effective_date)
             from nbrjobs n
            where n.nbrjobs_effective_date <= f_profile_date('JOB SUMMARY')
              and n.nbrjobs_suff = nbrbjob_suff
              and n.nbrjobs_posn = nbrbjob_posn
              and n.nbrjobs_pidm = nbrbjob_pidm)
  and f_ecls_security(user,nbrjobs_ecls_code, inst.ptrinst_ecls_security_ind) = 'Y'
  and f_orgn_security(user,nbrjobs_orgn_code_ts,nbrjobs_coas_code_ts) = 'Y'"
"BANINST1","PEVJLEV","Leave by Job Employee Balance View","(
SELECT perjlev_pidm,
       perjlev_leav_code,
       SUM(perjlev_begin_balance),
       SUM(perjlev_accrued),
       SUM(perjlev_taken),
       SUM(perjlev_hrs_banked),
       SUM(perjlev_begin_balance + perjlev_accrued - perjlev_taken),
       MAX(DECODE(NVL(potparm_leave_display_type,'R'),'H','H','D','D',
                  ptvlcat_hour_day_ind)),
       AVG(ptrlvas_seq_no)
FROM   ptrlvas,
       ptvlcat,
       nbrjobs B,
       nbrjobs A,
       nbrbjob,
       perjlev,
       potparm
WHERE  (NVL(potparm_leave_seq_method,'I') = 'I'
        OR (NVL(potparm_leave_seq_method,'I') = 'E'
            AND ptrlvas_seq_no IS NOT NULL))
 AND   ptrlvas_leav_code = perjlev_leav_code
 AND   ptrlvas_lcat_code = ptvlcat_code
 AND   ptvlcat_code = A.nbrjobs_lcat_code
 AND   ((TRUNC(nbrbjob_begin_date)
                      >= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
         AND B.nbrjobs_effective_date =
             (SELECT MIN(nbrjobs_effective_date)
              FROM   nbrjobs
              WHERE  nbrjobs_pidm = B.nbrjobs_pidm
                AND  nbrjobs_posn = B.nbrjobs_posn
                AND  nbrjobs_suff = B.nbrjobs_suff
                AND  TRUNC(nbrjobs_effective_date)
                      >= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))))
     OR (TRUNC(nbrbjob_begin_date)
                       < TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
         AND B.nbrjobs_effective_date =
             (SELECT MAX(nbrjobs_effective_date)
              FROM   nbrjobs
              WHERE  nbrjobs_pidm = B.nbrjobs_pidm
                AND  nbrjobs_posn = B.nbrjobs_posn
                AND  nbrjobs_suff = B.nbrjobs_suff
                AND  TRUNC(nbrjobs_effective_date)
                      <= TRUNC(NVL(potparm_leave_balance_date,SYSDATE)))))
 AND   B.nbrjobs_pidm = nbrbjob_pidm
 AND   B.nbrjobs_posn = nbrbjob_posn
 AND   B.nbrjobs_suff = nbrbjob_suff
 AND   ((TRUNC(nbrbjob_begin_date)
                      >= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
         AND A.nbrjobs_effective_date =
             (SELECT MIN(nbrjobs_effective_date)
              FROM   nbrjobs X
              WHERE  nbrjobs_pidm = A.nbrjobs_pidm
                AND  nbrjobs_posn = A.nbrjobs_posn
                AND  nbrjobs_suff = A.nbrjobs_suff
                AND  TRUNC(nbrjobs_effective_date)
                      >= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
                AND  perjlev_leav_code IN
                      (SELECT ptrlvas_leav_code
                       FROM   ptrlvas
                       WHERE  ptrlvas_lcat_code = X.nbrjobs_lcat_code)))
     OR (TRUNC(nbrbjob_begin_date)
                       < TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
         AND A.nbrjobs_effective_date =
             (SELECT MAX(nbrjobs_effective_date)
              FROM   nbrjobs Y
              WHERE  nbrjobs_pidm = A.nbrjobs_pidm
                AND  nbrjobs_posn = A.nbrjobs_posn
                AND  nbrjobs_suff = A.nbrjobs_suff
                AND  TRUNC(nbrjobs_effective_date)
                      <= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
                AND  perjlev_leav_code IN
                      (SELECT ptrlvas_leav_code
                       FROM   ptrlvas
                       WHERE  ptrlvas_lcat_code = Y.nbrjobs_lcat_code))))
 AND   A.nbrjobs_pidm = nbrbjob_pidm
 AND   A.nbrjobs_posn = nbrbjob_posn
 AND   A.nbrjobs_suff = nbrbjob_suff
 AND   nbrbjob_pidm = perjlev_pidm
 AND   nbrbjob_posn = perjlev_posn
 AND   nbrbjob_suff = perjlev_suff
 AND   perjlev_pidm = potparm_pidm
 AND   potparm_session_id = TO_CHAR(USERENV('SESSIONID'))
GROUP BY perjlev_pidm, perjlev_leav_code
HAVING MAX(DECODE(NVL(potparm_leave_display_type,'R'),'H','H','D','D',
                  ptvlcat_hour_day_ind)) = 'H'
UNION ALL
SELECT perjlev_pidm,
       perjlev_leav_code,
       SUM(f_convert_leave_value('HD',perjlev_begin_balance,B.nbrjobs_hrs_day)),
       SUM(f_convert_leave_value('HD',perjlev_accrued,B.nbrjobs_hrs_day)),
       SUM(f_convert_leave_value('HD',perjlev_taken,B.nbrjobs_hrs_day)),
       SUM(f_convert_leave_value('HD',perjlev_hrs_banked,B.nbrjobs_hrs_day)),
       SUM(f_convert_leave_value('HD',perjlev_begin_balance,B.nbrjobs_hrs_day)
         + f_convert_leave_value('HD',perjlev_accrued,B.nbrjobs_hrs_day)
         - f_convert_leave_value('HD',perjlev_taken,B.nbrjobs_hrs_day)),
       MAX(DECODE(NVL(potparm_leave_display_type,'R'),'H','H','D','D',
                  ptvlcat_hour_day_ind)),
       AVG(ptrlvas_seq_no)
FROM   ptrinst,
       ptrlvas,
       ptvlcat,
       nbrjobs B,
       nbrjobs A,
       nbrbjob,
       perjlev,
       potparm
WHERE  (NVL(potparm_leave_seq_method,'I') = 'I'
        OR (NVL(potparm_leave_seq_method,'I') = 'E'
            AND ptrlvas_seq_no IS NOT NULL))
 AND   ptrlvas_leav_code = perjlev_leav_code
 AND   ptrlvas_lcat_code = ptvlcat_code
 AND   ptvlcat_code = A.nbrjobs_lcat_code
 AND   ((TRUNC(nbrbjob_begin_date)
                      >= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
         AND B.nbrjobs_effective_date =
             (SELECT MIN(nbrjobs_effective_date)
              FROM   nbrjobs
              WHERE  nbrjobs_pidm = B.nbrjobs_pidm
                AND  nbrjobs_posn = B.nbrjobs_posn
                AND  nbrjobs_suff = B.nbrjobs_suff
                AND  TRUNC(nbrjobs_effective_date)
                      >= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))))
     OR (TRUNC(nbrbjob_begin_date)
                       < TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
         AND B.nbrjobs_effective_date =
             (SELECT MAX(nbrjobs_effective_date)
              FROM   nbrjobs
              WHERE  nbrjobs_pidm = B.nbrjobs_pidm
                AND  nbrjobs_posn = B.nbrjobs_posn
                AND  nbrjobs_suff = B.nbrjobs_suff
                AND  TRUNC(nbrjobs_effective_date)
                      <= TRUNC(NVL(potparm_leave_balance_date,SYSDATE)))))
 AND   B.nbrjobs_pidm = nbrbjob_pidm
 AND   B.nbrjobs_posn = nbrbjob_posn
 AND   B.nbrjobs_suff = nbrbjob_suff
 AND   ((TRUNC(nbrbjob_begin_date)
                      >= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
         AND A.nbrjobs_effective_date =
             (SELECT MIN(nbrjobs_effective_date)
              FROM   nbrjobs X
              WHERE  nbrjobs_pidm = A.nbrjobs_pidm
                AND  nbrjobs_posn = A.nbrjobs_posn
                AND  nbrjobs_suff = A.nbrjobs_suff
                AND  TRUNC(nbrjobs_effective_date)
                      >= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
                AND  perjlev_leav_code IN
                      (SELECT ptrlvas_leav_code
                       FROM   ptrlvas
                       WHERE  ptrlvas_lcat_code = X.nbrjobs_lcat_code)))
     OR (TRUNC(nbrbjob_begin_date)
                       < TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
         AND A.nbrjobs_effective_date =
             (SELECT MAX(nbrjobs_effective_date)
              FROM   nbrjobs Y
              WHERE  nbrjobs_pidm = A.nbrjobs_pidm
                AND  nbrjobs_posn = A.nbrjobs_posn
                AND  nbrjobs_suff = A.nbrjobs_suff
                AND  TRUNC(nbrjobs_effective_date)
                       <= TRUNC(NVL(potparm_leave_balance_date,SYSDATE))
                AND  perjlev_leav_code IN
                      (SELECT ptrlvas_leav_code
                       FROM   ptrlvas
                       WHERE  ptrlvas_lcat_code = Y.nbrjobs_lcat_code))))
 AND   A.nbrjobs_pidm = nbrbjob_pidm
 AND   A.nbrjobs_posn = nbrbjob_posn
 AND   A.nbrjobs_suff = nbrbjob_suff
 AND   nbrbjob_pidm = perjlev_pidm
 AND   nbrbjob_posn = perjlev_posn
 AND   nbrbjob_suff = perjlev_suff
 AND   perjlev_pidm = potparm_pidm
 AND   potparm_session_id = TO_CHAR(USERENV('SESSIONID'))
GROUP BY perjlev_pidm, perjlev_leav_code
HAVING MAX(DECODE(NVL(potparm_leave_display_type,'R'),'H','H','D','D',
                  ptvlcat_hour_day_ind)) = 'D'
)"
"BANINST1","PEVJFAC","Job Point Factor Date View","SELECT DISTINCT PERJFAC_POSN,
                PERJFAC_DATE
FROM  PERJFAC
 "
"BANINST1","PEVJBBG","Jobs Bargaining Unit Information View","SELECT  PERJBBG_PIDM,
        PERJBBG_BARG_CODE,
        PTVBARG_DESC,
        PERJBBG_POSN,
        PERJBBG_SUFF,
        NBRJOBS_DESC,
        PERJBBG_JOB_SENIORITY_DATE,
        PERJBBG_BARG_EFFECTIVE_DATE
FROM    PTVBARG,
        PERJBBG,
        NBRJOBS X
WHERE   PTVBARG_CODE (+)   = PERJBBG_BARG_CODE
AND     PERJBBG_PIDM       = NBRJOBS_PIDM
AND     PERJBBG_POSN       = NBRJOBS_POSN
AND     PERJBBG_SUFF       = NBRJOBS_SUFF
AND     NBRJOBS_EFFECTIVE_DATE =
            (SELECT MAX(Y.NBRJOBS_EFFECTIVE_DATE)
             FROM NBRJOBS Y
             WHERE Y.NBRJOBS_PIDM = X.NBRJOBS_PIDM
             AND   Y.NBRJOBS_POSN = X.NBRJOBS_POSN
             AND   Y.NBRJOBS_SUFF = X.NBRJOBS_SUFF
             AND   Y.NBRJOBS_EFFECTIVE_DATE <= SYSDATE)
 "
"BANINST1","PEVEPRO","EMPLOYEE PROBATIONARY INFORMATION VIEW","SELECT nbrjobs_pidm,
       spriden_id,
       spriden_surname_prefix,
       spriden_last_name,
       spriden_first_name,
       SUBSTR(spriden_mi,1,1),
       nbrjobs_posn,
       nbrjobs_suff,
       nbrjobs_effective_date,
       nbrjobs_orgn_code_ts,
       nbrbjob_probation_units,
       nbrbjob_probation_begin_date,
       nbrbjob_probation_end_date,
       nbbposn_pcls_code,
       ntrpcls_desc
FROM   spriden, ntrpcls, nbbposn, nbrjobs, nbrbjob x
WHERE  spriden_pidm = nbrbjob_pidm
AND    spriden_change_ind IS NULL
AND    nbbposn_posn = nbrbjob_posn
AND    nbbposn_pcls_code = ntrpcls_code
AND    f_ecls_security(USER,nbrjobs_ecls_code) = 'Y'
AND    f_orgn_security(USER,nbrjobs_orgn_code_ts,
                nbrjobs_coas_code_ts) = 'Y'
AND    NVL(nbrjobs_coas_code_ts,'*') = NVL(pokparm.f_get_coas_code,'*')
AND    nbrjobs_orgn_code_ts >=  pokparm.f_get_orgn_code_low
AND    nbrjobs_orgn_code_ts <=  pokparm.f_get_orgn_code_high
AND    nbrjobs_effective_date =
            (SELECT MAX(nbrjobs_effective_date)
                 FROM nbrjobs
                WHERE nbrjobs_pidm = x.nbrbjob_pidm
		  AND nbrjobs_posn = x.nbrbjob_posn
                  AND nbrjobs_suff = x.nbrbjob_suff
                  AND nbrjobs_effective_date <= sysdate)
AND    nbrjobs_suff = nbrbjob_suff
AND    nbrjobs_posn = nbrbjob_posn
AND    nbrjobs_pidm = nbrbjob_pidm
AND    nbrbjob_probation_units IS NOT NULL
AND    ((pokparm.f_get_probation_unit_ind = 'Y'
         AND    nbrbjob_probation_end_date >= sysdate)
         OR (pokparm.f_get_probation_unit_ind = 'N'))"
"BANINST1","PEVEMPL","Employee Information View","SELECT  SPRIDEN_PIDM,
        SPRIDEN_ID,
        SUBSTR(DECODE(gb_displaymask.f_ssb_format_name(),
               'Y', DECODE(spriden_surname_prefix,NULL,NULL,spriden_surname_prefix||' '), '')
               ||SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' ||
               SUBSTR(SPRIDEN_MI,1,1),1,25),
        SPRIDEN_SURNAME_PREFIX,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        DECODE(PEBEMPL_EMPL_STATUS,'A','Active',
                                   'F', 'Leave, full pay/benefits',
                                   'L', 'Leave, no pay/benefits',
                                   'B', 'Leave with benefits',
                                   'P', 'Partial pay/full benefits',
                                   'T', 'Terminated',
                                   NULL),
        PEBEMPL_COAS_CODE_HOME,
        PEBEMPL_ORGN_CODE_HOME,
        PEBEMPL_COAS_CODE_DIST,
        PEBEMPL_ORGN_CODE_DIST,
        PEBEMPL_ECLS_CODE,
        PTRECLS_LONG_DESC,
        PEBEMPL_LCAT_CODE,
        PTVLCAT_DESC,
        PEBEMPL_BCAT_CODE,
        PTRBCAT_DESC,
        PEBEMPL_FIRST_HIRE_DATE,
        PEBEMPL_CURRENT_HIRE_DATE,
        PEBEMPL_ADJ_SERVICE_DATE,
        PEBEMPL_SENIORITY_DATE,
        PEBEMPL_LREA_CODE,
        PTRLREA_DESC,
        PEBEMPL_LOA_BEG_DATE,
        PEBEMPL_LOA_END_DATE,
        PEBEMPL_TREA_CODE,
        PTRTREA_DESC,
        PEBEMPL_TERM_DATE,
        DECODE(PEBEMPL_I9_FORM_IND,'R','Received',
                                   'N','Not received',
                                   'T','Temporary',
                                   'E','Exempt',
                                   NULL),
        PEBEMPL_I9_DATE,
        PEBEMPL_I9_EXPIRE_DATE,
        PEBEMPL_WKPR_CODE,
        PTRWKPR_DESC,
        DECODE(PEBEMPL_FLSA_IND,'A','Accrual',
                                'C','Cash',
                                'N','None',
                                NULL),
        PEBEMPL_STGR_CODE,
        PTVSTGR_DESC,
        PEBEMPL_DAYS_IN_CANADA,
        SPBPERS_SSN,
        SPBPERS_BIRTH_DATE,
        SPBPERS_LGCY_CODE,
        STVLGCY_DESC,
        SPBPERS_ETHN_CODE,
        STVETHN_DESC,
        SPBPERS_MRTL_CODE,
        STVMRTL_DESC,
        SPBPERS_SEX,
        DECODE(SPBPERS_CONFID_IND,'Y','YES','N','NO',NULL),
        SPBPERS_VETC_FILE_NUMBER,
        SPBPERS_PREF_FIRST_NAME,
        SPBPERS_NAME_PREFIX,
        SPBPERS_NAME_SUFFIX,
        DECODE(SPBPERS_VERA_IND,'O','Other Protected Veteran Only',
                                'V','Vietnam Veteran Only',
                                'B','Both Vietnam and Other Eligible Veteran',
                                NULL,'None'),
        SPBPERS_CITZ_CODE,
        STVCITZ_DESC,
        SPBPERS_CITY_BIRTH,
        SPBPERS_DRIVER_LICENSE,
        SPBPERS_STAT_CODE_DRIVER,
        STVSTAT_DESC,
        SPBPERS_NATN_CODE_DRIVER,
        STVNATN_NATION,
        DECODE(SPBPERS_SDVET_IND,'Y','YES','N','NO',NULL),
        DECODE(SPBPERS_ARMED_SERV_MED_VET_IND,'Y','YES','N','NO',NULL),
        PEBEMPL_1042_RECIPIENT_CD,
        PEBEMPL_IPEDS_SOFT_MONEY_IND,
        PEBEMPL_IPEDS_MED_DENTAL_IND,
        PEBEMPL_IPEDS_PRIMARY_FUNCTION
FROM    SPRIDEN,
        SPBPERS,
        PEBEMPL,
        PTRBCAT,
        PTRECLS,
        PTRTREA,
        PTRLREA,
        PTRWKPR,
        PTVLCAT,
        PTVSTGR,
        STVLGCY,
        STVETHN,
        STVMRTL,
        STVCITZ,
        STVSTAT,
        STVNATN
WHERE   PTRBCAT_CODE (+)   = PEBEMPL_BCAT_CODE
AND     PTRECLS_CODE (+)   = PEBEMPL_ECLS_CODE
AND     PTRTREA_CODE (+)   = PEBEMPL_TREA_CODE
AND     PTRLREA_CODE (+)   = PEBEMPL_LREA_CODE
AND     PTRWKPR_CODE (+)   = PEBEMPL_WKPR_CODE
AND     PTVLCAT_CODE (+)   = PEBEMPL_LCAT_CODE
AND     PTVSTGR_CODE (+)   = PEBEMPL_STGR_CODE
AND     STVLGCY_CODE (+)   = SPBPERS_LGCY_CODE
AND     STVETHN_CODE (+)   = SPBPERS_ETHN_CODE
AND     STVMRTL_CODE (+)   = SPBPERS_MRTL_CODE
AND     STVCITZ_CODE (+)   = SPBPERS_CITZ_CODE
AND     STVSTAT_CODE (+)   = SPBPERS_STAT_CODE_DRIVER
AND     STVNATN_CODE (+)   = SPBPERS_NATN_CODE_DRIVER
AND     PEBEMPL_PIDM       = SPRIDEN_PIDM
AND     SPRIDEN_CHANGE_IND IS NULL
AND     SPBPERS_PIDM       = PEBEMPL_PIDM
AND     NVL(SPBPERS_DEAD_IND,'N') = 'N'
AND     PEBEMPL_EMPL_STATUS <> 'T'"
"BANINST1","PEVELEV","Leave by Employee Balance View","(
SELECT perleav_pidm,
       perleav_leav_code,
       DECODE(NVL(potparm_leave_display_type,'R'),
              'H',perleav_begin_balance,
              'D',f_convert_leave_value
                    ('HD',perleav_begin_balance,ptrecls_hours_per_day),
              DECODE(ptvlcat_hour_day_ind,
                     'D',f_convert_leave_value
                           ('HD',perleav_begin_balance,ptrecls_hours_per_day),
                     perleav_begin_balance)),
       DECODE(NVL(potparm_leave_display_type,'R'),
              'H',perleav_accrued,
              'D',f_convert_leave_value
                     ('HD',perleav_accrued,ptrecls_hours_per_day),
              DECODE(ptvlcat_hour_day_ind,
                     'D',f_convert_leave_value
                           ('HD',perleav_accrued,ptrecls_hours_per_day),
                     perleav_accrued)),
       DECODE(NVL(potparm_leave_display_type,'R'),
              'H',perleav_taken,
              'D',f_convert_leave_value
                    ('HD',perleav_taken,ptrecls_hours_per_day),
              DECODE(ptvlcat_hour_day_ind,
                     'D',f_convert_leave_value
                           ('HD',perleav_taken,ptrecls_hours_per_day),
                     perleav_taken)),
       DECODE(NVL(potparm_leave_display_type,'R'),
              'H',perleav_hrs_banked,
              'D',f_convert_leave_value
                    ('HD',perleav_hrs_banked,ptrecls_hours_per_day),
              DECODE(ptvlcat_hour_day_ind,
                     'D',f_convert_leave_value
                           ('HD',perleav_hrs_banked,ptrecls_hours_per_day),
                     perleav_hrs_banked)),
       DECODE(NVL(potparm_leave_display_type,'R'),
              'H',perleav_begin_balance,
              'D',f_convert_leave_value
                    ('HD',perleav_begin_balance,ptrecls_hours_per_day),
              DECODE(ptvlcat_hour_day_ind,
                     'D',f_convert_leave_value
                           ('HD',perleav_begin_balance,ptrecls_hours_per_day),
                     perleav_begin_balance))
       + DECODE(NVL(potparm_leave_display_type,'R'),
                'H',perleav_accrued,
                'D',f_convert_leave_value
                      ('HD',perleav_accrued,ptrecls_hours_per_day),
                DECODE(ptvlcat_hour_day_ind,
                       'D',f_convert_leave_value
                             ('HD',perleav_accrued,ptrecls_hours_per_day),
                       perleav_accrued))
       - DECODE(NVL(potparm_leave_display_type,'R'),
                'H',perleav_taken,
                'D',f_convert_leave_value
                      ('HD',perleav_taken,ptrecls_hours_per_day),
                DECODE(ptvlcat_hour_day_ind,
                       'D',f_convert_leave_value
                             ('HD',perleav_taken,ptrecls_hours_per_day),
                       perleav_taken)),
       perleav_date_avail,
       DECODE(NVL(potparm_leave_display_type,'R'),'H','H','D','D',
                  ptvlcat_hour_day_ind),
       ptrlvas_seq_no
FROM   ptrlvas,
       ptvlcat,
       ptrecls,
       perleav,
       pebempl,
       potparm
WHERE  (NVL(potparm_leave_seq_method,'I') = 'I'
        OR (NVL(potparm_leave_seq_method,'I') = 'E'
            AND ptrlvas_seq_no IS NOT NULL))
 AND   ptrlvas_leav_code = perleav_leav_code
 AND   ptrlvas_lcat_code = ptvlcat_code
 AND   ptvlcat_code = pebempl_lcat_code
 AND   ptrecls_code = pebempl_ecls_code
 AND   perleav_pidm = pebempl_pidm
 AND   pebempl_pidm = potparm_pidm
 AND   potparm_session_id = USERENV('SESSIONID')
)
 "
"BANINST1","PEVEBRG","","SELECT  PERBARG_PIDM,
	SPRIDEN_ID,
	DECODE(gb_displaymask.f_ssb_format_name(),
        'Y', DECODE(spriden_surname_prefix,NULL,NULL,spriden_surname_prefix||' '), '')
	||SPRIDEN_LAST_NAME||', '||SPRIDEN_FIRST_NAME||' '||SPRIDEN_MI,
  PERBARG_BURE_CODE,
  PTRBURE_DESC,
  PERBARG_BARG_SENIORITY_DATE,
  PERBARG_EFFECTIVE_DATE,
  PERBARG_END_DATE,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  sysdate,
  NULL,
  NULL,
  0,
  0,
	0,
	0
FROM  SPRIDEN,
      PTRBURE,
	    PERBARG y
WHERE SPRIDEN_PIDM = PERBARG_PIDM
AND     SPRIDEN_CHANGE_IND IS NULL
AND     NOT EXISTS
	(SELECT 'X'
         FROM PERJBBG
	 WHERE PERJBBG_PIDM = PERBARG_PIDM
	 AND   PERJBBG_BARG_CODE = PERBARG_BARG_CODE
	 AND   PERJBBG_BARG_EFFECTIVE_DATE = PERBARG_EFFECTIVE_DATE)
AND     PTRBURE_CODE = y.PERBARG_BURE_CODE
AND	PERBARG_BARG_CODE = pokparm.f_get_barg_unit
AND    (PERBARG_BURE_CODE = pokparm.f_get_bure_code
               OR   pokparm.f_get_bure_code IS NULL)
AND     PERBARG_EFFECTIVE_DATE <= pokparm.f_get_asof_date
union
SELECT  PERBARG_PIDM,
	SPRIDEN_ID,
  DECODE(gb_displaymask.f_ssb_format_name(),
         'Y', DECODE(spriden_surname_prefix,NULL,NULL,spriden_surname_prefix||' '), '')
	||SPRIDEN_LAST_NAME||', '||SPRIDEN_FIRST_NAME||' '||SPRIDEN_MI,
  PERBARG_BURE_CODE,
  PTRBURE_DESC,
  PERBARG_BARG_SENIORITY_DATE,
  PERBARG_EFFECTIVE_DATE,
  PERBARG_END_DATE,
  PERJBBG_POSN,
	PERJBBG_SUFF ,
	NBRJOBS_DESC,
        NBRJOBS_JBLN_CODE,
        PTRJBLN_DESC,
        NBRJOBS_COAS_CODE_TS,
        NBRJOBS_ORGN_CODE_TS,
        f_get_special_desc(NBRJOBS_ORGN_CODE_TS,sysdate),
        NBRJOBS_EFFECTIVE_DATE,
        NBRJOBS_SAL_TABLE,
        NBRJOBS_SAL_GRADE,
        NBRJOBS_SAL_STEP,
        NBRJOBS_REG_RATE,
	NBRJOBS_HRS_PAY,
	NBRJOBS_ANN_SALARY
FROM    SPRIDEN,
        PTRJBLN,
        PTRBURE,
        NBRJOBS,
   	PERJBBG X,
        PERBARG Y
WHERE   SPRIDEN_PIDM = PERBARG_PIDM
AND	SPRIDEN_CHANGE_IND IS NULL
AND 	noksecr.f_sala_security(user,nbrjobs_ann_salary) = 'Y'
and     noksecr.f_empr_security(user,nbrjobs_empr_code) = 'Y'
and     f_ecls_security(user,nbrjobs_ecls_code) = 'Y'
and     f_orgn_security(user,nbrjobs_orgn_code_ts,
		nbrjobs_coas_code_ts) = 'Y'
AND     PTRJBLN_CODE (+)  = NBRJOBS_JBLN_CODE
AND     PTRBURE_CODE = y.PERBARG_BURE_CODE
AND     NBRJOBS_PIDM  = PERJBBG_PIDM
AND     NBRJOBS_POSN  = PERJBBG_POSN
AND     NBRJOBS_SUFF  = PERJBBG_SUFF
AND     NBRJOBS_EFFECTIVE_DATE  =
	(SELECT MAX(NBRJOBS_EFFECTIVE_DATE)
         FROM   NBRJOBS
         WHERE  NBRJOBS_PIDM  = X.PERJBBG_PIDM
         AND    NBRJOBS_POSN = X.PERJBBG_POSN
         AND    NBRJOBS_SUFF = X.PERJBBG_SUFF
         AND    NBRJOBS_EFFECTIVE_DATE <= SYSDATE)
AND     PERJBBG_PIDM = PERBARG_PIDM
AND     PERJBBG_BARG_CODE  = PERBARG_BARG_CODE
AND     PERJBBG_BARG_EFFECTIVE_DATE  = PERBARG_EFFECTIVE_DATE
AND	PERBARG_BARG_CODE   = pokparm.f_get_barg_unit
AND    (PERBARG_BURE_CODE = pokparm.f_get_bure_code
   OR   pokparm.f_get_bure_code IS NULL)
AND     PERBARG_EFFECTIVE_DATE <= pokparm.f_get_asof_date"
"BANINST1","PEVDTOT","Employee Benefit / Deduction Totals View","SELECT PERDTOT_PIDM,
                PERDTOT_YEAR,
                PERDTOT_MONTH,
                SUM(NVL(PERDTOT_EMPL_AMT,0)),
                SUM(NVL(PERDTOT_EMPR_AMT,0)),
                SUM(NVL(PERDTOT_APPL_GRS,0))
         FROM   PERDTOT,
                PPRCOLR
         WHERE  PPRCOLR_JOB       =   'PEVDTOT'
         AND    PPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
         AND    TO_DATE('01-'||ltrim(to_char(PERDTOT_MONTH,'09'))||'-'
       ||ltrim(to_char(PERDTOT_YEAR,'0009')),'DD-MM-YYYY')
       BETWEEN PPRCOLR_VALUE_DATE AND PPRCOLR_ACTIVITY_DATE
         AND    PERDTOT_PIDM = TO_NUMBER(PPRCOLR_PARM_NUMBER)
         AND    ( PERDTOT_EMPR_CODE  = PPRCOLR_VALUE_ATYP   OR
                  PPRCOLR_VALUE_ATYP = '@@@@'                     )
         AND    ( PERDTOT_BDCA_CODE  = PPRCOLR_TYPE         OR
                  PPRCOLR_TYPE       = '@@@'                      )
         GROUP BY PERDTOT_PIDM, PERDTOT_YEAR, PERDTOT_MONTH,
                  DECODE(PPRCOLR_VALUE_ATYP,'@@@@',NULL,PERDTOT_EMPR_CODE ),
                  DECODE(PPRCOLR_TYPE,      '@@@' ,NULL,PERDTOT_BDCA_CODE )
 "
"BANINST1","PEVDEG1","","select  f_profile_date('WFE SELECT'),
        pebempl_pidm,
        substr(f_concat_empl_data
             (pebempl_pidm,f_profile_date('WFE SELECT')),1,60),
        substr(f_prim_skill_code
             (pebempl_pidm,f_profile_date('WFE SELECT')),1,2)
from    pebempl
where   trunc(pebempl_current_hire_date) <= trunc(f_profile_date('WFE SELECT'))
and     trunc(nvl(pebempl_term_date,to_date('12312099','MMDDYYYY')))
             >= trunc(f_profile_date('WFE SELECT'))
and     f_include_ecls(pebempl_ecls_code,'WFEECLSDEG') = 'Y'
 "
"BANINST1","PEVDEG0","Web for Executives Degree Profile View","select  'B',
        pevdeg1_pidm,
        substr(to_char(pevdeg1_select_date,'MM'),1,2),
        substr(to_char(pevdeg1_select_date,'YYYY'),1,4),
        substr(f_split_fields(pevdeg1_concat_empl_data,3),1,4),
        substr(f_split_fields(pevdeg1_concat_empl_data,4),1,3),
        substr(f_split_fields(pevdeg1_concat_empl_data,5),1,1),
        substr(f_split_fields(pevdeg1_concat_empl_data,6),1,6),
        spbpers_sex,
        spbpers_ethn_code,
        stvethn_etct_code,
        substr(f_split_fields(pevdeg1_concat_empl_data,7),1,1),
        substr(f_split_fields(pevdeg1_concat_empl_data,8),1,2),
        pevdeg1_employee_skill_code,
        substr(f_split_fields(pevdeg1_concat_empl_data,9),1,4),
        decode(substr(pevdeg1_employee_skill_code,1,1),
             '2','F','S'),
        substr(f_split_fields(pevdeg1_concat_empl_data,10),1,1),
        f_calculate_age
           (pevdeg1_select_date,
            spbpers_birth_date,
            spbpers_dead_date),
        sordegr_degc_code,
        nvl(sordegr_term_degree,'N'),
        sormajr_majr_code_major,
        f_number_degrees(pevdeg1_pidm,pevdeg1_select_date)
from    sordegr,
        sormajr,
        stvethn,
        spbpers,
        pevdeg1
where   spbpers_pidm           = pevdeg1_pidm
and     stvethn_code           = spbpers_ethn_code
and     sordegr_pidm           = pevdeg1_pidm
and     sordegr_degc_code      is not null
and     trunc(nvl(sordegr_degc_date,to_date('01011900','MMDDYYYY'))) <=
           trunc(pevdeg1_select_date)
and     sormajr_pidm(+)        = sordegr_pidm
and     sormajr_sbgi_code(+)   = sordegr_sbgi_code
and     sormajr_degr_seq_no(+) = sordegr_degr_seq_no
 "
"BANINST1","PEVDEDT","Employee Monthly Benefit/Deduction totals Information View","SELECT  PERDTOT_PIDM,
        PERDTOT_YEAR,
        PERDTOT_BDCA_CODE,
        PTRBDCA_SHORT_DESC,
        PTRBDCA_LONG_DESC,
        PERDTOT_MONTH,
        PERDTOT_EMPL_AMT,
        PERDTOT_EMPR_AMT,
        PERDTOT_APPL_GRS,
        PERDTOT_EMPR_CODE,
        PTREMPR_DESC
FROM    PTRBDCA,
        PTREMPR,
        PERDTOT
WHERE   PTRBDCA_CODE (+)  = PERDTOT_BDCA_CODE
AND     PTREMPR_CODE (+)  = PERDTOT_EMPR_CODE
 "
"BANINST1","PEVBDAS","Associated Benefits/Deductions Totals View","SELECT   PERDTOT_YEAR,
                      PERDTOT_PIDM,
                      PERDTOT_BDCA_CODE,
                      PERDTOT_MONTH,
                 SUM (PERDTOT_EMPL_AMT),
                 SUM (PERDTOT_EMPR_AMT),
                 SUM (PERDTOT_APPL_GRS)
                FROM  PERDTOT
              GROUP BY PERDTOT_YEAR,
                       PERDTOT_PIDM,
                       PERDTOT_BDCA_CODE,
                       PERDTOT_MONTH
             UNION
             SELECT  PERDTOT_YEAR,
                     PERDTOT_PIDM,
                     PTRBDAS_CODE,
                     PERDTOT_MONTH,
                 SUM (PERDTOT_EMPL_AMT),
                 SUM (PERDTOT_EMPR_AMT),
                 SUM (PERDTOT_APPL_GRS)
             FROM     PERDTOT,
                      PTRBDAS
             WHERE  PERDTOT_BDCA_CODE = PTRBDAS_BDCA_CODE
              GROUP BY PERDTOT_YEAR,
                       PERDTOT_PIDM,
                       PTRBDAS_CODE,
                       PERDTOT_MONTH
 "
"BANINST1","PEVBARG","Employee Labor Relations Information View","SELECT  PERBARG_PIDM,
        PERBARG_BARG_CODE,
        PTVBARG_DESC,
        PTRBURE_DESC,
        PERBARG_BARG_SENIORITY_DATE,
        PERBARG_EFFECTIVE_DATE,
        PERBARG_END_DATE
FROM    PTRBURE,
        PERBARG,
        PTVBARG
WHERE   PTRBURE_CODE = PERBARG_BURE_CODE
AND     PTVBARG_CODE (+)   = PERBARG_BARG_CODE
 "
"BANINST1","PEVATYP","Employee Benefit / Deduction Type Totals View","(
SELECT perdtot_year,
       TO_NUMBER(DECODE(pprcolr_job,'PEVATYP_YR',NULL,perdtot_month)),
       SUM(NVL(perdtot_empl_amt,0)),
       SUM(NVL(perdtot_empr_amt,0))
FROM   perdtot,
       ptrbdca,
       pprcolr
WHERE  TO_DATE('01-'|| LTRIM(TO_CHAR(perdtot_month,'09')) ||
                '-' || LTRIM(TO_CHAR(perdtot_year,'0009')),'DD-MM-YYYY')
        BETWEEN TRUNC(pprcolr_value_date) AND TRUNC(pprcolr_activity_date)
  AND  perdtot_empr_code = pprcolr_value_atyp
  AND  perdtot_bdca_code = ptrbdca_code
  AND  perdtot_pidm      = TO_NUMBER(pprcolr_parm_number)
  AND  ptrbdca_bdty_code = pprcolr_type
  AND  pprcolr_job       IN ('PEVATYP','PEVATYP_YR')
  AND  pprcolr_sessionid = USERENV('SESSIONID')
GROUP BY perdtot_year,
         DECODE(pprcolr_job,'PEVATYP_YR',NULL,perdtot_month)
)
 "
"BANINST1","PEVATOT","Employee Benefit / Deduction Totals View","(
SELECT perdtot_year,
       TO_NUMBER(DECODE(pprcolr_job,'PEVATOT_YR',NULL,perdtot_month)),
       SUM(NVL(perdtot_empl_amt,0)),
       SUM(NVL(perdtot_empr_amt,0))
FROM   perdtot X,
       pprcolr
WHERE  TO_DATE('01-'|| LTRIM(TO_CHAR(perdtot_month,'09')) ||
                '-' || LTRIM(TO_CHAR(perdtot_year,'0009')),'DD-MM-YYYY')
        BETWEEN TRUNC(pprcolr_value_date) AND TRUNC(pprcolr_activity_date)
  AND  (perdtot_bdca_code = pprcolr_type
         OR perdtot_bdca_code IN (SELECT ptrbdas_bdca_code
                                  FROM   ptrbdas
                                  WHERE  ptrbdas_code = pprcolr_type))
  AND   perdtot_empr_code = pprcolr_value_atyp
  AND   perdtot_pidm      = TO_NUMBER(pprcolr_parm_number)
  AND   pprcolr_job       IN ('PEVATOT','PEVATOT_YR')
  AND   pprcolr_sessionid = USERENV('SESSIONID')
GROUP BY perdtot_year,
         DECODE(pprcolr_job,'PEVATOT_YR',NULL,perdtot_month)
)
 "
"BANINST1","PEVACP2","","select  f_profile_date('WFE SELECT'),
        nbbfisc_code,
        lpad(to_char(trunc(months_between
             (f_profile_date('WFE SELECT'),nbbfisc_begin_date)) + 1),2,'0'),
        nbrbjob_pidm,
        substr(f_concat_empl_data
             (nbrbjob_pidm,f_profile_date('WFE SELECT')),1,60),
        nbrbjob_begin_date,
        nbrbjob_end_date,
        nbrjobs_empr_code,
        nbrjobs_coas_code_ts,
        nbrjobs_orgn_code_ts,
        nbrjobs_ecls_code,
        nbrbjob_ipeds_rept_ind,
        ntrpcls_eskl_code,
        decode(substr(ntrpcls_eskl_code,1,1),
               '2', 'F', 'S'),
        nbrbjob_posn,
        nbrbjob_suff,
        nbbposn_pcls_code,
        nbrjobs_status,
        nbrbjob_contract_type,
        nbrjobs_appt_pct,
        nbrjobs_ann_salary,
        nbrjobs_reg_rate,
        f_concat_fisc_gross(nbrbjob_pidm,nbrbjob_posn,nbrbjob_suff,
                            nbbfisc_begin_date,nbbfisc_end_date),
        f_concat_fisc_ben_amts(nbrbjob_pidm,
                               nbbfisc_begin_date,nbbfisc_end_date),
        decode(ntrsalb_ind,'S',nbrjobs_fte,0),
        decode(ntrsalb_ind,'H',nbrjobs_fte,0),
        nbrbjob_salary_encumbrance
from    nbbfisc,
        ntrsalb,
        nbrjobs,
        nbbposn,
        ntrpcls,
        nbrbjob
where   nbbfisc.rowid(+) = f_nbbfisc_rowid(f_profile_date('WFE SELECT'),
    nbrbjob_coas_code)
and     ntrsalb_sgrp_code = nbrjobs_sgrp_code
and     ntrsalb_table = nbrjobs_sal_table
and     ntrsalb_grade = nbrjobs_sal_grade
and     nbrjobs.rowid = f_all_job_rowid
          (nbrbjob_pidm,nbrbjob_posn,nbrbjob_suff,f_profile_date('WFE SELECT'))
and     nbbposn_posn = nbrbjob_posn
and     ntrpcls_code = nbbposn_pcls_code
and     f_incl_terminated(nbrbjob_pidm,f_profile_date('WFE SELECT'),
                          nbbfisc_begin_date,nbbfisc_end_date) = 'Y'
and     f_include_ecls(nbrjobs_ecls_code,'WFEECLSEMP') = 'Y'
and     trunc(nbrbjob_begin_date) <= trunc(f_profile_date('WFE SELECT'))
and     nvl(nbrbjob_end_date,nbbfisc_begin_date)
		between nbbfisc_begin_date and nbbfisc_end_date
 "
"BANINST1","PEVACP1","","select  pevacp2_select_date,
        pevacp2_fiscal_year,
        pevacp2_fiscal_period,
        pevacp2_pidm,
        to_date(f_split_fields(pevacp2_concat_empl_data,1),'MMDDYYYY'),
        to_date(f_split_fields(pevacp2_concat_empl_data,2),'MMDDYYYY'),
        substr(f_split_fields(pevacp2_concat_empl_data,3),1,4),
        substr(f_split_fields(pevacp2_concat_empl_data,4),1,3),
        substr(f_split_fields(pevacp2_concat_empl_data,5),1,1),
        substr(f_split_fields(pevacp2_concat_empl_data,6),1,6),
        substr(f_split_fields(pevacp2_concat_empl_data,7),1,1),
        substr(f_split_fields(pevacp2_concat_empl_data,8),1,2),
        substr(f_split_fields(pevacp2_concat_empl_data,9),1,4),
        substr(f_split_fields(pevacp2_concat_empl_data,10),1,1),
        sordegr_degc_code,
        f_number_degrees(pevacp2_pidm,pevacp2_select_date),
        substr(f_highest_tenure(pevacp2_pidm,pevacp2_select_date),1,2),
        substr(f_faculty_rank(pevacp2_pidm,pevacp2_select_date),1,2),
        to_number(f_split_fields(pevacp2_concat_benefits,2),999999999.99),
        f_calc_leave_bal(pevacp2_pidm,pevacp2_select_date),
        pevacp2_job_employer,
        pevacp2_job_chart_code,
        pevacp2_job_department,
        pevacp2_job_employee_class,
        pevacp2_ipeds_rept_ind,
        pevacp2_job_skill_code,
        pevacp2_job_fac_staff_ind,
        pevacp2_position,
        pevacp2_suffix,
        pevacp2_position_class,
        pevacp2_job_status,
        pevacp2_contract_type,
        pevacp2_appt_percent,
        nvl(round((nvl(pevacp2_job_end_date,pevacp2_select_date)
                  -pevacp2_job_begin_date)/365.25,2),0),
        pevacp2_annual_salary,
        pevacp2_reg_rate,
        to_number(f_split_fields(pevacp2_concat_gross,1),999999999.99),
        to_number(f_split_fields(pevacp2_concat_gross,2),999999999.99),
        to_number(f_split_fields(pevacp2_concat_gross,3),999999999.99),
        pevacp2_salary_fte,
        pevacp2_hourly_fte,
        pevacp2_encumb_amount
from    sordegr,
        pevacp2
where   sordegr.rowid(+) = f_terminal_degree(pevacp2_pidm,pevacp2_select_date)
 "
"BANINST1","PEVACP0","Web for Executives Current Employee and Appointment/Compensation View","select  'B',
        pevacp1_fiscal_year,
        pevacp1_fiscal_period,
        pevacp1_pidm,
        nvl(round((nvl(pevacp1_term_date,pevacp1_select_date)-pevacp1_adjsvc_date)/365.25,2),0),
        pevacp1_employer,
        pevacp1_division,
        nvl(pevacp1_chart_code,
             decode(pevacp1_contract_type,
                   'P', pevacp1_job_chart_code,
                        pevacp1_chart_code)),
        pevacp1_department,
        spbpers_sex,
        spbpers_ethn_code,
        stvethn_etct_code,
        pevacp1_employee_status,
        pevacp1_employee_class,
        pevacp1_employee_group,
        pevacp1_time_status,
        f_calculate_age
           (pevacp1_select_date,
            spbpers_birth_date,
            spbpers_dead_date),
        pevacp1_terminal_degree,
        pevacp1_number_of_degrees,
        pevacp1_highest_tenure,
        pevacp1_faculty_rank,
        pevacp1_benefit_contrib,
        decode(pevacp1_contract_type,
            'P',round(pevacp1_leave_balance * pevacp1_reg_rate,2),
                0),
        pevacp1_job_employer,
        pevacp1_job_chart_code,
        pevacp1_job_department,
        pevacp1_job_employee_class,
        pevacp1_ipeds_rept_ind,
        pevacp1_job_skill_code,
        pevacp1_job_fac_staff_ind,
        pevacp1_position,
        pevacp1_suffix,
        pevacp1_position_class,
        pevacp1_job_status,
        pevacp1_contract_type,
        pevacp1_appt_percent,
        pevacp1_years_in_position,
        pevacp1_annual_salary,
        pevacp1_regular_gross,
        pevacp1_overtime_gross,
        pevacp1_other_gross,
        pevacp1_salary_fte,
        pevacp1_hourly_fte,
        pevacp1_encumb_amount
from    stvethn,
        spbpers,
        pevacp1
where   spbpers_pidm = pevacp1_pidm
and     stvethn_code = spbpers_ethn_code
 "
"BANINST1","PDVDEDN","Deduction View","SELECT
 PDRDEDN_PIDM,
 PDRDEDN_BDCA_CODE,
 PDRDEDN_EFFECTIVE_DATE,
 PDRDEDN_STATUS,
 PDRDEDN_REF_NO,
 PDRDEDN_OPT_CODE1,
 PDRBDED_BEGIN_DATE,
 PDRBDED_END_DATE,
 PDRBDED_ARR_STATUS,
 PDRBDED_ARR_BALANCE,
 PDRBDED_BOND_BALANCE,
 PTRBDCA_LONG_DESC,
 PTRBDPL_DESC
FROM PTRBDCA,
     PTRBDPL,
     PDRBDED,
     PDRDEDN
WHERE
     PTRBDCA_CODE = PDRBDED_BDCA_CODE
AND  PTRBDCA_CODE = PDRDEDN_BDCA_CODE
AND  PDRBDED_PIDM = PDRDEDN_PIDM
AND PDRDEDN_BDCA_CODE = PTRBDPL_BDCA_CODE (+)
AND NVL(PDRDEDN_OPT_CODE1,'@') = NVL(PTRBDPL_CODE (+),'@')
"
"BANINST1","PDVDEDD","Employee Benefit/Deduction Information View","SELECT  PDRBDED_PIDM,
        PDRBDED_BDCA_CODE,
        PTRBDCA_SHORT_DESC,
        PTRBDCA_LONG_DESC,
        PTRBDCA_CALC_RULE,
        DECODE(PDRBDED_ADD_REPL_IND,'A','ADD','R','REPLACE',NULL),
        PDRBDED_ADD_REPL_EMPL,
        PDRBDED_ADD_REPL_EMPR,
        PDRBDED_ADD_REPL_TAX_BASE,
        DECODE(PDRBDED_ARR_STATUS,'Y','ACTIVE','N','NOT ACTIVE',NULL),
        PDRBDED_ARR_BALANCE,
        PDRBDED_BOND_BALANCE,
        PDRBDED_BEGIN_DATE,
        PDRBDED_END_DATE,
        PDRBDED_ARR_RECOVER_MAX,
        PDRDEDN_EFFECTIVE_DATE,
        DECODE(PDRDEDN_STATUS,'A','ACTIVE',
                              'E','EXEMPT',
                              'T','TERMINATED',
                              'W','WAIVED',
                              NULL),
        PDRDEDN_REF_NO,
        PDRDEDN_AMOUNT1,
        PTRBDCA_AMT1_TITLE,
        PTRBDCA_AMT1_DESC,
        PDRDEDN_AMOUNT2,
        PTRBDCA_AMT2_TITLE,
        PTRBDCA_AMT2_DESC,
        PDRDEDN_AMOUNT3,
        PTRBDCA_AMT3_TITLE,
        PTRBDCA_AMT3_DESC,
        PDRDEDN_AMOUNT4,
        PTRBDCA_AMT4_TITLE,
        PTRBDCA_AMT4_DESC,
        PTRBDCA_TXCD_CODE,
        PXRTXCD_DESC,
        PTRBDCA_BDTY_CODE,
        PTVBDTY_DESC,
        PDRDEDN_OPT_CODE1,
        PTRBDCA_OPTION1_TITLE,
        PDRDEDN_OPT_CODE2,
        PTRBDCA_OPTION2_TITLE,
        PDRDEDN_OPT_CODE3,
        PTRBDCA_OPTION3_TITLE,
        PDRDEDN_OPT_CODE4,
        PTRBDCA_OPTION4_TITLE,
        PDRDEDN_OPT_CODE5,
        PTRBDCA_OPTION5_TITLE
FROM    PTRBDCA,
        PXRTXCD,
        PTVBDTY,
        PDRBDED,
        PDRDEDN A
WHERE   PTRBDCA_CODE            = PDRBDED_BDCA_CODE
AND     PXRTXCD_CODE (+)        = PTRBDCA_TXCD_CODE
AND     PTVBDTY_CODE (+)        = PTRBDCA_BDTY_CODE
AND     PDRDEDN_PIDM            = PDRBDED_PIDM
AND     PDRDEDN_BDCA_CODE       = PDRBDED_BDCA_CODE
AND     PDRDEDN_EFFECTIVE_DATE  =
            (SELECT MAX(B.PDRDEDN_EFFECTIVE_DATE)
             FROM PDRDEDN B
             WHERE B.PDRDEDN_PIDM      = A.PDRDEDN_PIDM
             AND   B.PDRDEDN_BDCA_CODE = A.PDRDEDN_BDCA_CODE
             AND   B.PDRDEDN_EFFECTIVE_DATE <= SYSDATE)
AND     PTRBDCA_CALC_RULE       = '22'
UNION
SELECT  PDRBDED_PIDM,
        PDRBDED_BDCA_CODE,
        PTRBDCA_SHORT_DESC,
        PTRBDCA_LONG_DESC,
        PTRBDCA_CALC_RULE,
        DECODE(PDRBDED_ADD_REPL_IND,'A','ADD','R','REPLACE',NULL),
        PDRBDED_ADD_REPL_EMPL,
        PDRBDED_ADD_REPL_EMPR,
        PDRBDED_ADD_REPL_TAX_BASE,
        DECODE(PDRBDED_ARR_STATUS,'Y','ACTIVE','N','NOT ACTIVE',NULL),
        PDRBDED_ARR_BALANCE,
        PDRBDED_BOND_BALANCE,
        PDRBDED_BEGIN_DATE,
        PDRBDED_END_DATE,
        PDRBDED_ARR_RECOVER_MAX,
        PDRDEDN_EFFECTIVE_DATE,
        DECODE(PDRDEDN_STATUS,'A','ACTIVE',
                              'E','EXEMPT',
                              'T','TERMINATED',
                              'W','WAIVED',
                              NULL),
        PDRDEDN_REF_NO,
        NVL(PTRBDPL_AMT1,PDRDEDN_AMOUNT1),
        PTRBDCA_AMT1_TITLE,
        NVL(PTRBDPL_DESC,PTRBDCA_AMT1_DESC),
        NVL(PTRBDPL_AMT2,PDRDEDN_AMOUNT2),
        PTRBDCA_AMT2_TITLE,
        PTRBDCA_AMT2_DESC,
        NVL(PTRBDPL_AMT3,PDRDEDN_AMOUNT3),
        PTRBDCA_AMT3_TITLE,
        PTRBDCA_AMT3_DESC,
        NVL(PTRBDPL_AMT4,PDRDEDN_AMOUNT4),
        PTRBDCA_AMT4_TITLE,
        PTRBDCA_AMT4_DESC,
        PTRBDCA_TXCD_CODE,
        PXRTXCD_DESC,
        PTRBDCA_BDTY_CODE,
        PTVBDTY_DESC,
        PDRDEDN_OPT_CODE1,
        PTRBDCA_OPTION1_TITLE,
        PDRDEDN_OPT_CODE2,
        PTRBDCA_OPTION2_TITLE,
        PDRDEDN_OPT_CODE3,
        PTRBDCA_OPTION3_TITLE,
        PDRDEDN_OPT_CODE4,
        PTRBDCA_OPTION4_TITLE,
        PDRDEDN_OPT_CODE5,
        PTRBDCA_OPTION5_TITLE
FROM    PTRBDCA,
        PXRTXCD,
        PTVBDTY,
        PTRBDPL Y,
        PDRBDED,
        PDRDEDN A
WHERE   PTRBDCA_CODE            = PDRBDED_BDCA_CODE
AND     PXRTXCD_CODE (+)        = PTRBDCA_TXCD_CODE
AND     PTVBDTY_CODE (+)        = PTRBDCA_BDTY_CODE
AND     PTRBDPL_BDCA_CODE (+)   = PDRBDED_BDCA_CODE
AND     NVL(PTRBDPL_CODE,'*')   = NVL(PDRDEDN_OPT_CODE1,'*')
AND     NVL(Y.PTRBDPL_EFFECTIVE_DATE,'15-MAR-20') =
                 (SELECT NVL(MAX(X.PTRBDPL_EFFECTIVE_DATE),'15-MAR-20')
                    FROM PTRBDPL X
                   WHERE X.PTRBDPL_EFFECTIVE_DATE <= A.PDRDEDN_EFFECTIVE_DATE
                     AND X.PTRBDPL_BDCA_CODE       = A.PDRDEDN_BDCA_CODE
                     AND NVL(X.PTRBDPL_CODE,'@@')  = NVL(Y.PTRBDPL_CODE,'@@') )
AND     PDRDEDN_PIDM            = PDRBDED_PIDM
AND 	PDRDEDN_BDCA_CODE	= PDRBDED_BDCA_CODE
AND     PDRDEDN_EFFECTIVE_DATE  =
            (SELECT MAX(B.PDRDEDN_EFFECTIVE_DATE)
             FROM PDRDEDN B
             WHERE B.PDRDEDN_PIDM      = A.PDRDEDN_PIDM
             AND   B.PDRDEDN_BDCA_CODE = A.PDRDEDN_BDCA_CODE
             AND   B.PDRDEDN_EFFECTIVE_DATE <= SYSDATE)
AND     PTRBDCA_CALC_RULE       <> '22'
 "
"BANINST1","PDVDED1","","select
pdrbded_pidm,
pdrbded_bdca_code,
f_year('DEDUCTION/BENEFIT'),
spriden_id,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
f_profile_date('DEDUCTION/BENEFIT'),
spbpers_birth_date,
substr(f_calculate_age(null, spbpers_birth_date, spbpers_dead_date),1,3),
spbpers_sex,
spbpers_ethn_code,
substr(f_get_ethn_category(spbpers_ethn_code,'EEOC'),1,1),
spbpers_mrtl_code,
x.spraddr_atyp_code,
x.spraddr_house_number,
x.spraddr_street_line1,
x.spraddr_street_line2,
x.spraddr_street_line3,
x.spraddr_street_line4,
x.spraddr_city,
x.spraddr_stat_code,
x.spraddr_zip,
x.spraddr_natn_code,
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_ctry_code_phone),
decode(v.sprtele_unlist_ind,'Y','************',v.sprtele_phone_number),
decode(v.sprtele_unlist_ind,'Y','******',v.sprtele_phone_area),
decode(v.sprtele_unlist_ind,'Y','**********',v.sprtele_phone_ext),
y.spraddr_atyp_code,
y.spraddr_house_number,
y.spraddr_street_line1,
y.spraddr_street_line2,
y.spraddr_street_line3,
y.spraddr_street_line4,
y.spraddr_city,
y.spraddr_stat_code,
y.spraddr_zip,
y.spraddr_natn_code,
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_ctry_code_phone),
decode(w.sprtele_unlist_ind,'Y','************',w.sprtele_phone_number),
decode(w.sprtele_unlist_ind,'Y','******',w.sprtele_phone_area),
decode(w.sprtele_unlist_ind,'Y','**********',w.sprtele_phone_ext),
pebempl_empl_status,
decode(pebempl_empl_status, 'A', 'Active',
                            'B', 'Leave w/o Pay and w/ Benefit',
                            'L', 'Leave w/o Pay and w/o Benefit',
                            'F', 'Leave w/ Pay and w/ Benefit',
                            'P', 'Leave w/ Part Pay and w/ Benefit',
                            'T', 'Terminated', ''),
pebempl_ecls_code,
pebempl_bcat_code,
pebempl_first_hire_date,
pebempl_current_hire_date,
pebempl_adj_service_date,
pebempl_seniority_date,
pdrbded_begin_date,
pdrbded_end_date,
pdrbded_bond_balance,
pdrbded_arr_recover_max,
pdrbded_arr_balance,
pdrdedn_effective_date,
pdrdedn_status,
decode(pdrdedn_status, 'A', 'Active',
                       'E', 'Exempt',
                       'W', 'Waived',
                       'T', 'Terminated', ''),
pdrdedn_amount1,
ptrbdca_amt1_title,
pdrdedn_amount2,
ptrbdca_amt2_title,
pdrdedn_amount3,
ptrbdca_amt3_title,
pdrdedn_amount4,
ptrbdca_amt4_title,
pdrdedn_opt_code1,
ptrbdca_option1_title,
pdrdedn_opt_code2,
ptrbdca_option2_title,
pdrdedn_opt_code3,
ptrbdca_option3_title,
pdrdedn_opt_code4,
ptrbdca_option4_title,
pdrdedn_opt_code5,
ptrbdca_option5_title,
ptrbdca_bdty_code,
a.perdtot_month,
a.perdtot_empl_amt,
a.perdtot_empr_amt,
a.perdtot_appl_grs,
b.perdtot_month,
b.perdtot_empl_amt,
b.perdtot_empr_amt,
b.perdtot_appl_grs,
c.perdtot_month,
c.perdtot_empl_amt,
c.perdtot_empr_amt,
c.perdtot_appl_grs,
d.perdtot_month,
d.perdtot_empl_amt,
d.perdtot_empr_amt,
d.perdtot_appl_grs,
e.perdtot_month,
e.perdtot_empl_amt,
e.perdtot_empr_amt,
e.perdtot_appl_grs,
f.perdtot_month,
f.perdtot_empl_amt,
f.perdtot_empr_amt,
f.perdtot_appl_grs,
g.perdtot_month,
g.perdtot_empl_amt,
g.perdtot_empr_amt,
g.perdtot_appl_grs,
h.perdtot_month,
h.perdtot_empl_amt,
h.perdtot_empr_amt,
h.perdtot_appl_grs,
i.perdtot_month,
i.perdtot_empl_amt,
i.perdtot_empr_amt,
i.perdtot_appl_grs,
j.perdtot_month,
j.perdtot_empl_amt,
j.perdtot_empr_amt,
j.perdtot_appl_grs,
k.perdtot_month,
k.perdtot_empl_amt,
k.perdtot_empr_amt,
k.perdtot_appl_grs,
l.perdtot_month,
l.perdtot_empl_amt,
l.perdtot_empr_amt,
l.perdtot_appl_grs,
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPL',1,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPR',1,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'APPL',1,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPL',2,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPR',2,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'APPL',2,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPL',3,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPR',3,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'APPL',3,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPL',4,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPR',4,f_year('DEDUCTION/BENEFIT')),
f_quaterly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'APPL',4,f_year('DEDUCTION/BENEFIT')),
f_yearly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPL',f_year('DEDUCTION/BENEFIT')),
f_yearly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'EMPR',f_year('DEDUCTION/BENEFIT')),
f_yearly_deduction_total
        (pdrbded_pidm,pdrbded_bdca_code,'APPL',f_year('DEDUCTION/BENEFIT')),
substr(f_beneficiary_info(pdrbded_pidm,pdrbded_bdca_code,6),1,2000),
pdrdedn_w4_name_change_ind   ,
pdrdedn_w4_signed_pidm       ,
pdrdedn_w4_signed_date       ,
pdrdedn_lockin_letter_status ,
pdrdedn_lockin_letter_date   ,
pdrdedn_lockin_fsta_fil_st   ,
pdrdedn_lockin_withhold_allow,
pdrdedn_comment              ,
pdrdedn_comment_date         ,
pdrdedn_comment_user_id
from  spriden, spbpers, spraddr x, spraddr y,
      sprtele v, sprtele w,pebempl,
      perdtot a,perdtot b,perdtot c,perdtot d,
      perdtot e,perdtot f,perdtot g,perdtot h,
      perdtot i,perdtot j,perdtot k,perdtot l,
      ptrbdca,pdrdedn,pdrbded
where spbpers_pidm = spriden_pidm
  and spriden_change_ind is null
  and spriden_pidm = pdrbded_pidm
  and pebempl_pidm = pdrbded_pidm
  and ptrbdca_code(+) = pdrbded_bdca_code
  and x.rowid(+) = f_get_address_rowid
      (pdrbded_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and v.rowid(+) = f_get_address_telephone_rowid
      (pdrbded_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and y.rowid(+) = f_get_address_rowid
      (pdrbded_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and w.rowid(+) = f_get_address_telephone_rowid
      (pdrbded_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and pdrdedn.rowid = f_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,f_profile_date('DEDUCTION/BENEFIT'))
  and a.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,1,f_year('DEDUCTION/BENEFIT'))
  and b.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,2,f_year('DEDUCTION/BENEFIT'))
  and c.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,3,f_year('DEDUCTION/BENEFIT'))
  and d.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,4,f_year('DEDUCTION/BENEFIT'))
  and e.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,5,f_year('DEDUCTION/BENEFIT'))
  and f.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,6,f_year('DEDUCTION/BENEFIT'))
  and g.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,7,f_year('DEDUCTION/BENEFIT'))
  and h.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,8,f_year('DEDUCTION/BENEFIT'))
  and i.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,9,f_year('DEDUCTION/BENEFIT'))
  and j.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,10,f_year('DEDUCTION/BENEFIT'))
  and k.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,11,f_year('DEDUCTION/BENEFIT'))
  and l.rowid(+) = f_monthly_deduction_rowid
      (pdrbded_pidm,pdrbded_bdca_code,12,f_year('DEDUCTION/BENEFIT'))
  and f_ecls_security(user,pebempl_ecls_code) = 'Y'"
"BANINST1","PDVDAMT","Deduction Amounts View for IntelliQuest ","SELECT
 PDRDEDN_PIDM,
 PDRDEDN_BDCA_CODE,
 PDRDEDN_EFFECTIVE_DATE,
 NVL(PTRBDCA_AMT1_DESC,PTRBDCA_AMT1_TITLE),
 DECODE(NVL(PTRBDPL_BDCA_CODE,'@'),'@',PDRDEDN_AMOUNT1, PTRBDPL_AMT1)
FROM PTRBDCA,
     PTRBDPL,
     PDRDEDN
WHERE PDRDEDN_BDCA_CODE = PTRBDPL_BDCA_CODE (+)
 AND NVL(PDRDEDN_OPT_CODE1,'@') = NVL(PTRBDPL_CODE (+),'@')
 AND PTRBDCA_CODE = PDRDEDN_BDCA_CODE
AND (PTRBDCA_AMT1_DESC IS NOT NULL
   OR PTRBDCA_AMT1_TITLE IS NOT NULL)
UNION
SELECT
 PDRDEDN_PIDM,
 PDRDEDN_BDCA_CODE,
 PDRDEDN_EFFECTIVE_DATE,
 NVL(PTRBDCA_AMT2_DESC,PTRBDCA_AMT2_TITLE),
 DECODE(NVL(PTRBDPL_BDCA_CODE,'@'),'@',PDRDEDN_AMOUNT2, PTRBDPL_AMT2)
FROM PTRBDCA,
     PTRBDPL,
     PDRDEDN
WHERE PDRDEDN_BDCA_CODE = PTRBDPL_BDCA_CODE (+)
 AND NVL(PDRDEDN_OPT_CODE1,'@') = NVL(PTRBDPL_CODE (+),'@')
 AND PTRBDCA_CODE = PDRDEDN_BDCA_CODE
AND (PTRBDCA_AMT2_DESC IS NOT NULL
   OR PTRBDCA_AMT2_TITLE IS NOT NULL)
UNION
SELECT
 PDRDEDN_PIDM,
 PDRDEDN_BDCA_CODE,
 PDRDEDN_EFFECTIVE_DATE,
 NVL(PTRBDCA_AMT3_DESC,PTRBDCA_AMT3_TITLE),
 DECODE(NVL(PTRBDPL_BDCA_CODE,'@'),'@',PDRDEDN_AMOUNT3, PTRBDPL_AMT3)
FROM PTRBDCA,
     PTRBDPL,
     PDRDEDN
WHERE PDRDEDN_BDCA_CODE = PTRBDPL_BDCA_CODE (+)
 AND NVL(PDRDEDN_OPT_CODE1,'@') = NVL(PTRBDPL_CODE (+),'@')
 AND PTRBDCA_CODE = PDRDEDN_BDCA_CODE
AND (PTRBDCA_AMT3_DESC IS NOT NULL
   OR PTRBDCA_AMT3_TITLE IS NOT NULL)
UNION
SELECT
 PDRDEDN_PIDM,
 PDRDEDN_BDCA_CODE,
 PDRDEDN_EFFECTIVE_DATE,
 NVL(PTRBDCA_AMT4_DESC,PTRBDCA_AMT4_TITLE),
 DECODE(NVL(PTRBDPL_BDCA_CODE,'@'),'@',PDRDEDN_AMOUNT4, PTRBDPL_AMT4)
FROM PTRBDCA,
     PTRBDPL,
     PDRDEDN
WHERE PDRDEDN_BDCA_CODE = PTRBDPL_BDCA_CODE (+)
 AND NVL(PDRDEDN_OPT_CODE1,'@') = NVL(PTRBDPL_CODE (+),'@')
 AND PTRBDCA_CODE = PDRDEDN_BDCA_CODE
AND (PTRBDCA_AMT4_DESC IS NOT NULL
   OR PTRBDCA_AMT4_TITLE IS NOT NULL)
  
 "
"BANINST1","PDVBENE","Dependent/Beneficiary Information View","SELECT  PDRBENE_PIDM,
        NULL,
        PDRBENE_SEQ_NO,
        PDRBENE_BENE_PIDM,
        PDRBENE_SURNAME_PREFIX,
        PDRBENE_BENE_LAST_NAME,
        PDRBENE_BENE_FIRST_NAME,
        PDRBENE_BENE_MI,
        PDRBENE_BREL_CODE,
        PTRBREL_DESC,
        DECODE(PDRBENE_SEX_IND,'M','Male',
                               'F','Female',
                               'N','Not Available',
                               NULL),
        PDRBENE_BIRTH_DATE,
        DECODE(PDRBENE_COLLEGE_IND,'N','Not In College',
                                   'Y','In College',
                                   NULL),
        PDRBENE_SSN
FROM    PTRBREL,
        PDRBENE
WHERE   PTRBREL_CODE (+)   = PDRBENE_BREL_CODE
AND     PDRBENE_BENE_PIDM IS NULL
UNION
SELECT  PDRBENE_PIDM,
        SPRIDEN_ID,
        PDRBENE_SEQ_NO,
        PDRBENE_BENE_PIDM,
        SPRIDEN_SURNAME_PREFIX,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        PDRBENE_BREL_CODE,
        PTRBREL_DESC,
        DECODE(SPBPERS_SEX,'M','Male',
                           'F','Female',
                           'N','Not Available',
                           NULL),
        SPBPERS_BIRTH_DATE,
        DECODE(PDRBENE_COLLEGE_IND,'N','Not In College',
                                   'Y','In College',
                                   NULL),
        SPBPERS_SSN
FROM    PTRBREL,
        PDRBENE,
        SPRIDEN,
        SPBPERS
WHERE   PTRBREL_CODE (+)   = PDRBENE_BREL_CODE
AND     PDRBENE_BENE_PIDM  = SPRIDEN_PIDM
AND     SPRIDEN_CHANGE_IND IS NULL
AND     PDRBENE_BENE_PIDM  = SPBPERS_PIDM"
"BANINST1","PDVBEN1","Dependent View for BANNERQuest ","SELECT
 PDRBENE_PIDM,
 PDRBENE_SURNAME_PREFIX,
 PDRBENE_BENE_LAST_NAME,
 PDRBENE_BENE_FIRST_NAME,
 PDRBENE_BENE_MI,
 PDRBENE_BIRTH_DATE,
 PDRBENE_COLLEGE_IND
FROM PDRBENE
WHERE
 PDRBENE_BENE_PIDM IS NULL
UNION
SELECT
 PDRBENE_PIDM,
 SPRIDEN_SURNAME_PREFIX,
 SPRIDEN_LAST_NAME,
 SPRIDEN_FIRST_NAME,
 SPRIDEN_MI,
 PDRBENE_BIRTH_DATE,
 PDRBENE_COLLEGE_IND
FROM PDRBENE,
     SPRIDEN
WHERE
 PDRBENE_BENE_PIDM = SPRIDEN_PIDM
AND SPRIDEN_CHANGE_IND IS NULL
"
"BANINST1","PDVBCOV","Employee Beneficiary Coverage Information View","SELECT  PDRBCOV_PIDM,
        PDRBCOV_BDCA_CODE,
        PTRBDCA_SHORT_DESC,
        PTRBDCA_LONG_DESC,
        PDRBCOV_BENE_SEQ_NO,
        PDRBCOV_BEGIN_DATE,
        PDRBCOV_END_DATE,
        DECODE(PDRBCOV_OTHER_COV_IND,'N','No other coverage',
                                     'Y','Yes other coverage',
                                     NULL)
FROM    PTRBDCA,
        PDRBCOV
WHERE   PTRBDCA_CODE (+)  = PDRBCOV_BDCA_CODE
 "
"BANINST1","PBVSLB1","","select
nbrptot_fisc_code,
nbbfisc_begin_date,
nbbfisc_end_date,
nbbposn_posn,
nbbposn_title,
nbrptot_obud_code,
nbrptot_obph_code,
nbrptot_effective_date,
nbrptot_status,
decode(nbrptot_status,'A','Approved',
                        'C','Closed',
                        'T','Transferred',
                        'W','Wworking',''),
nbbposn_type,
nbbposn_pcls_code,
nbbposn_roll_ind,
nbbposn_premium_roll_ind,
nbbposn_status,
decode(nbbposn_status,'A', 'Active',
                        'C', 'Cancelled',
                        'F', 'Frozen',
                        'I','Inactive',''),
nbrptot_fte,
f_number_incumb(nbbposn_posn,nbbfisc_begin_date),
f_number_incumb(nbbposn_posn,nbbfisc_end_date),
nbrptot_coas_code,
nbrptot_orgn_code,
nbrptot_budget,
nbrptot_encumb,
nbrptot_expend,
(nbrptot_budget - nbrptot_encumb - nbrptot_expend),
nbrptot_budg_basis,
nbrptot_ann_basis,
nbrptot_appt_pct,
nbrptot_base_units,
nbrptot_create_jfte_ind,
a.nbrplbd_budget,
a.nbrplbd_coas_code,
a.nbrplbd_acci_code,
a.nbrplbd_fund_code,
a.nbrplbd_orgn_code,
a.nbrplbd_acct_code,
a.nbrplbd_prog_code,
a.nbrplbd_actv_code,
a.nbrplbd_locn_code,
a.nbrplbd_acct_code_external,
a.nbrplbd_percent,
b.nbrplbd_budget,
b.nbrplbd_coas_code,
b.nbrplbd_acci_code,
b.nbrplbd_fund_code,
b.nbrplbd_orgn_code,
b.nbrplbd_acct_code,
b.nbrplbd_prog_code,
b.nbrplbd_actv_code,
b.nbrplbd_locn_code,
b.nbrplbd_acct_code_external,
b.nbrplbd_percent,
c.nbrplbd_budget,
c.nbrplbd_coas_code,
c.nbrplbd_acci_code,
c.nbrplbd_fund_code,
c.nbrplbd_orgn_code,
c.nbrplbd_acct_code,
c.nbrplbd_prog_code,
c.nbrplbd_actv_code,
c.nbrplbd_locn_code,
c.nbrplbd_acct_code_external,
c.nbrplbd_percent,
d.nbrplbd_budget,
d.nbrplbd_coas_code,
d.nbrplbd_acci_code,
d.nbrplbd_fund_code,
d.nbrplbd_orgn_code,
d.nbrplbd_acct_code,
d.nbrplbd_prog_code,
d.nbrplbd_actv_code,
d.nbrplbd_locn_code,
d.nbrplbd_acct_code_external,
d.nbrplbd_percent,
e.nbrplbd_budget,
e.nbrplbd_coas_code,
e.nbrplbd_acci_code,
e.nbrplbd_fund_code,
e.nbrplbd_orgn_code,
e.nbrplbd_acct_code,
e.nbrplbd_prog_code,
e.nbrplbd_actv_code,
e.nbrplbd_locn_code,
e.nbrplbd_acct_code_external,
e.nbrplbd_percent,
f.nbrplbd_budget,
f.nbrplbd_coas_code,
f.nbrplbd_acci_code,
f.nbrplbd_fund_code,
f.nbrplbd_orgn_code,
f.nbrplbd_acct_code,
f.nbrplbd_prog_code,
f.nbrplbd_actv_code,
f.nbrplbd_locn_code,
f.nbrplbd_acct_code_external,
f.nbrplbd_percent,
g.nbrplbd_budget,
g.nbrplbd_coas_code,
g.nbrplbd_acci_code,
g.nbrplbd_fund_code,
g.nbrplbd_orgn_code,
g.nbrplbd_acct_code,
g.nbrplbd_prog_code,
g.nbrplbd_actv_code,
g.nbrplbd_locn_code,
g.nbrplbd_acct_code_external,
g.nbrplbd_percent,
h.nbrplbd_budget,
h.nbrplbd_coas_code,
h.nbrplbd_acci_code,
h.nbrplbd_fund_code,
h.nbrplbd_orgn_code,
h.nbrplbd_acct_code,
h.nbrplbd_prog_code,
h.nbrplbd_actv_code,
h.nbrplbd_locn_code,
h.nbrplbd_acct_code_external,
h.nbrplbd_percent,
i.nbrplbd_budget,
i.nbrplbd_coas_code,
i.nbrplbd_acci_code,
i.nbrplbd_fund_code,
i.nbrplbd_orgn_code,
i.nbrplbd_acct_code,
i.nbrplbd_prog_code,
i.nbrplbd_actv_code,
i.nbrplbd_locn_code,
i.nbrplbd_acct_code_external,
i.nbrplbd_percent,
j.nbrplbd_budget,
j.nbrplbd_coas_code,
j.nbrplbd_acci_code,
j.nbrplbd_fund_code,
j.nbrplbd_orgn_code,
j.nbrplbd_acct_code,
j.nbrplbd_prog_code,
j.nbrplbd_actv_code,
j.nbrplbd_locn_code,
j.nbrplbd_acct_code_external,
j.nbrplbd_percent,
substr(f_add_labor_flag(nbrptot_posn,nbrptot_fisc_code),1,1)
from  nbrplbd a,nbrplbd b,nbrplbd c,nbrplbd d,
      nbrplbd e,nbrplbd f,nbrplbd g,nbrplbd h,
      nbrplbd i,nbrplbd j,nbbposn,nbbfisc,
      nbrptot
where nbbposn_posn = nbrptot_posn
and   nbrptot_fisc_code = nbbfisc_code
and   nbbfisc_active_ind = 'Y'
and   a.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,1)
and   b.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,2)
and   c.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,3)
and   d.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,4)
and   e.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,5)
and   f.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,6)
and   g.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,7)
and   h.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,8)
and   i.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,9)
and   j.rowid(+)= f_nbrplbd_rowid(nbrptot_posn,nbrptot_fisc_code,10)
and   f_orgn_security(user,nbrptot_orgn_code,nbrptot_coas_code) = 'Y'
and   nbrptot_coas_code = nbbfisc_coas_code"
"BANINST1","PAVREQ1","","select
pabappl_pidm,
pabappl_posn,
spriden_id,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
spbpers_sex,
spbpers_ethn_code,
substr(f_get_ethn_category(spbpers_ethn_code,'EEOC'),1,1),
spbpers_mrtl_code,
xx.spraddr_atyp_code,
xx.spraddr_house_number,
xx.spraddr_street_line1,
xx.spraddr_street_line2,
xx.spraddr_street_line3,
xx.spraddr_street_line4,
xx.spraddr_city,
xx.spraddr_stat_code,
xx.spraddr_zip,
xx.spraddr_natn_code,
decode(vv.sprtele_unlist_ind,'Y','*******',vv.sprtele_ctry_code_phone),
decode(vv.sprtele_unlist_ind,'Y','*******',vv.sprtele_phone_number),
decode(vv.sprtele_unlist_ind,'Y','***',vv.sprtele_phone_area),
decode(vv.sprtele_unlist_ind,'Y','****',vv.sprtele_phone_ext),
yy.spraddr_atyp_code,
yy.spraddr_house_number,
yy.spraddr_street_line1,
yy.spraddr_street_line2,
yy.spraddr_street_line3,
yy.spraddr_street_line4,
yy.spraddr_city,
yy.spraddr_stat_code,
yy.spraddr_zip,
yy.spraddr_natn_code,
decode(ww.sprtele_unlist_ind,'Y','*******',ww.sprtele_ctry_code_phone),
decode(ww.sprtele_unlist_ind,'Y','*******',ww.sprtele_phone_number),
decode(ww.sprtele_unlist_ind,'Y','***',ww.sprtele_phone_area),
decode(ww.sprtele_unlist_ind,'Y','****',ww.sprtele_phone_ext),
spbpers_vetc_file_number,
spbpers_vera_ind,
spbpers_armed_serv_med_vet_ind,
kk.sprmedi_medi_code,
kk.sprmedi_disa_code,
ll.sprmedi_medi_code,
ll.sprmedi_disa_code,
substr(f_check_for_more_pay('DISABILITY',pabappl_pidm),1,1),
a.sordegr_degc_code,
a.sordegr_degc_date,
a.sordegr_degc_year,
a.sordegr_degr_seq_no,
a.sordegr_sbgi_code,
b.sormajr_majr_code_major,
c.sormajr_majr_code_major,
d.sordegr_degc_code,
d.sordegr_degc_date,
d.sordegr_degc_year,
d.sordegr_degr_seq_no,
d.sordegr_sbgi_code,
e.sormajr_majr_code_major,
f.sormajr_majr_code_major,
substr(f_check_for_more_pay('DEGREE',pabappl_pidm),1,1),
g.pprskil_skil_code,
g.pprskil_sklv_code,
h.pprskil_skil_code,
h.pprskil_sklv_code,
i.pprskil_skil_code,
i.pprskil_sklv_code,
j.pprskil_skil_code,
j.pprskil_sklv_code,
k.pprskil_skil_code,
k.pprskil_sklv_code,
substr(f_check_for_more_pay('SKIL',pabappl_pidm),1,1 ),
l.pprrefe_name,
l.pprrefe_ctry_code_phone,
l.pprrefe_phone_area,
l.pprrefe_phone_number,
l.pprrefe_phone_ext,
m.pprrefe_name,
m.pprrefe_ctry_code_phone,
m.pprrefe_phone_area,
m.pprrefe_phone_number,
m.pprrefe_phone_ext,
n.pprrefe_name,
n.pprrefe_ctry_code_phone,
n.pprrefe_phone_area,
n.pprrefe_phone_number,
n.pprrefe_phone_ext,
substr(f_check_for_more_pay('REFERENCE',pabappl_pidm),1,1 ),
p.pprexpe_posn_title,
p.pprexpe_emty_code,
p.pprexpe_empr_name,
p.pprexpe_start_date,
p.pprexpe_end_date,
months_between(p.pprexpe_end_date,p.pprexpe_start_date),
p.pprexpe_emps_supervise,
p.pprexpe_super_name,
p.pprexpe_ctry_code_super_phone,
p.pprexpe_super_phone_area,
p.pprexpe_super_phone_number,
p.pprexpe_super_phone_ext,
p.pprexpe_contact_ind,
p.pprexpe_curr_salary,
p.pprexpe_curr_hourly,
p.pprexpe_reason_left,
q.pprexpe_posn_title,
q.pprexpe_emty_code,
q.pprexpe_empr_name,
q.pprexpe_start_date,
q.pprexpe_end_date,
months_between(p.pprexpe_end_date,p.pprexpe_start_date),
q.pprexpe_emps_supervise,
q.pprexpe_super_name,
q.pprexpe_ctry_code_super_phone,
q.pprexpe_super_phone_area,
q.pprexpe_super_phone_number,
q.pprexpe_super_phone_ext,
q.pprexpe_contact_ind,
q.pprexpe_curr_salary,
q.pprexpe_curr_hourly,
q.pprexpe_reason_left,
r.pprexpe_posn_title,
r.pprexpe_emty_code,
r.pprexpe_empr_name,
r.pprexpe_start_date,
r.pprexpe_end_date,
months_between(p.pprexpe_end_date,p.pprexpe_start_date),
r.pprexpe_emps_supervise,
r.pprexpe_super_name,
r.pprexpe_ctry_code_super_phone,
r.pprexpe_super_phone_area,
r.pprexpe_super_phone_number,
r.pprexpe_super_phone_ext,
r.pprexpe_contact_ind,
r.pprexpe_curr_salary,
r.pprexpe_curr_hourly,
r.pprexpe_reason_left,
s.pprexpe_posn_title,
s.pprexpe_emty_code,
s.pprexpe_empr_name,
s.pprexpe_start_date,
s.pprexpe_end_date,
months_between(p.pprexpe_end_date,p.pprexpe_start_date),
s.pprexpe_emps_supervise,
s.pprexpe_super_name,
s.pprexpe_ctry_code_super_phone,
s.pprexpe_super_phone_area,
s.pprexpe_super_phone_number,
s.pprexpe_super_phone_ext,
s.pprexpe_contact_ind,
s.pprexpe_curr_salary,
s.pprexpe_curr_hourly,
s.pprexpe_reason_left,
substr(f_check_for_more_pay('PAST EMPLOYMENT',pabappl_pidm),1,1 ),
pabappl_date,
pabappl_desired_salary,
pabappl_desired_hourly,
pabappl_full_part_ind,
pabappl_asrc_code,
substr(f_disposition_ind(pabappl_pidm,pabappl_req_no,pabappl_posn,
                         pabappl_pcls_code,pabappl_date),1,1),
decode(substr(f_disposition_ind(pabappl_pidm,pabappl_req_no,pabappl_posn,
                         pabappl_pcls_code,pabappl_date),1,1),
             'H','Hired','N','No longer considered','U','Under consideration',
                  ''),
t.parapst_seq_no,
t.parapst_apps_code,
t.parapst_apps_date,
t.parapst_comment,
v.parapst_seq_no,
v.parapst_apps_code,
v.parapst_apps_date,
v.parapst_comment,
w.parapst_seq_no,
w.parapst_apps_code,
w.parapst_apps_date,
w.parapst_comment,
u.parapst_seq_no,
u.parapst_apps_code,
u.parapst_apps_date,
u.parapst_comment,
y.parapst_seq_no,
y.parapst_apps_code,
y.parapst_apps_date,
y.parapst_comment,
substr(f_add_applicant_flag
         (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code),1,1 ),
nbbposn_begin_date,
nbbposn_posn_reports,
nbbposn_title,
nbbposn_grade,
nbbposn_table,
nbbposn_appt_pct,
nbbposn_status,
decode(nbbposn_status, 'A', 'Active',
                       'C', 'Canceled',
                       'F', 'Frozen',
                       'I', 'Inactive',''),
nbbposn_ecls_code,
ptrecls_eeog_code,
pabappl_eskl_code,
pabrequ_vacy_date,
pabrequ_post_date,
pabrequ_open_date,
pabrequ_close_date,
pabrequ_hire_date,
pabrequ_appr_date,
pabrequ_reloc_ind,
substr(f_interviewer_name(f_interview_rowid
       (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,1)),1,60),
aa.parapin_interview_date,
substr(f_interviewer_name(f_interview_rowid
       (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,2)),1,60),
bb.parapin_interview_date,
substr(f_interviewer_name(f_interview_rowid
       (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,3)),1,60),
cc.parapin_interview_date,
substr(f_interviewer_name(f_interview_rowid
       (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,4)),1,60),
dd.parapin_interview_date,
substr(f_add_interview_flag
            (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code),1,1 ),
ee.pprcert_cert_code,
ee.pprcert_cert_date,
ee.pprcert_next_cert_date,
ee.pprcert_expire_date,
ff.pprcert_cert_code,
ff.pprcert_cert_date,
ff.pprcert_next_cert_date,
ff.pprcert_expire_date,
gg.pprcert_cert_code,
gg.pprcert_cert_date,
gg.pprcert_next_cert_date,
gg.pprcert_expire_date,
substr(f_check_for_more_pay('CERTIFICATION',pabappl_pidm),1,1 )
from spriden ,spbpers,
     spraddr xx,spraddr yy,
     sprtele ww,sprtele vv,
     sordegr a,sordegr d,
     sormajr b,sormajr c,sormajr e,sormajr f,
     pprskil g,pprskil h,pprskil i,pprskil j,pprskil k,
     pprrefe l,pprrefe m,pprrefe n,
     pprexpe p,pprexpe q,pprexpe r,pprexpe s,
     parapst t,parapst v,parapst w,parapst u,parapst y,
     nbbposn,ptrecls,pabrequ,
     parapin aa,parapin bb,parapin cc,parapin dd,
     pprcert ee,pprcert ff,pprcert gg,
     sprmedi kk,sprmedi ll,
     pabappl
where spriden_change_ind is null
  and spriden_pidm = pabappl_pidm
  and spbpers_pidm(+) = pabappl_pidm
  and nbbposn_posn(+) = pabappl_posn
  and ptrecls_code(+) = nbbposn_ecls_code
  and pabrequ_req_no(+) = pabappl_req_no
  and pabrequ_posn(+) = pabappl_posn
  and xx.spraddr_pidm(+) = pabappl_pidm
  and yy.spraddr_pidm(+) = pabappl_pidm
  and ww.sprtele_pidm(+) = pabappl_pidm
  and vv.sprtele_pidm(+) = pabappl_pidm
  and xx.rowid(+) = f_get_address_rowid
      (pabappl_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and vv.rowid(+) = f_get_address_telephone_rowid
      (pabappl_pidm,'PAYRADDR','A',sysdate,1,'AH',null)
  and yy.rowid(+) = f_get_address_rowid
      (pabappl_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and ww.rowid(+) = f_get_address_telephone_rowid
      (pabappl_pidm,'PAYRADDR','A',sysdate,2,'AH',null)
  and a.sordegr_pidm(+) = pabappl_pidm
  and d.sordegr_pidm(+) = pabappl_pidm
  and b.sormajr_pidm(+) = pabappl_pidm
  and c.sormajr_pidm(+) = pabappl_pidm
  and e.sormajr_pidm(+) = pabappl_pidm
  and f.sormajr_pidm(+) = pabappl_pidm
  and a.rowid(+)=f_degree_major_rowid
           (pabappl_pidm,1,'SORDEGR')
  and d.rowid(+)=f_degree_major_rowid
           (pabappl_pidm,2,'SORDEGR')
  and b.rowid(+)=f_degree_major_rowid
           (pabappl_pidm,1,'SORMAJR1')
  and e.rowid(+)=f_degree_major_rowid
           (pabappl_pidm,2,'SORMAJR1')
  and c.rowid(+)=f_degree_major_rowid
           (pabappl_pidm,1,'SORMAJR2')
  and f.rowid(+)=f_degree_major_rowid
           (pabappl_pidm,2,'SORMAJR2')
  and g.pprskil_pidm(+) = pabappl_pidm
  and h.pprskil_pidm(+) = pabappl_pidm
  and i.pprskil_pidm(+) = pabappl_pidm
  and j.pprskil_pidm(+) = pabappl_pidm
  and k.pprskil_pidm(+) = pabappl_pidm
  and g.rowid(+)=f_skil_rowid(pabappl_pidm,1)
  and h.rowid(+)=f_skil_rowid(pabappl_pidm,2)
  and i.rowid(+)=f_skil_rowid(pabappl_pidm,3)
  and j.rowid(+)=f_skil_rowid(pabappl_pidm,4)
  and k.rowid(+)=f_skil_rowid(pabappl_pidm,5)
  and l.pprrefe_pidm(+) = pabappl_pidm
  and m.pprrefe_pidm(+) = pabappl_pidm
  and n.pprrefe_pidm(+) = pabappl_pidm
  and l.rowid(+)=f_reference_rowid(pabappl_pidm,1)
  and m.rowid(+)=f_reference_rowid(pabappl_pidm,2)
  and n.rowid(+)=f_reference_rowid(pabappl_pidm,3)
  and p.pprexpe_pidm(+) = pabappl_pidm
  and q.pprexpe_pidm(+) = pabappl_pidm
  and r.pprexpe_pidm(+) = pabappl_pidm
  and s.pprexpe_pidm(+) = pabappl_pidm
  and p.rowid(+)=f_past_employment_rowid(pabappl_pidm,1)
  and q.rowid(+)=f_past_employment_rowid(pabappl_pidm,2)
  and r.rowid(+)=f_past_employment_rowid(pabappl_pidm,3)
  and s.rowid(+)=f_past_employment_rowid(pabappl_pidm,4)
  and t.parapst_pidm(+) = pabappl_pidm
  and v.parapst_pidm(+) = pabappl_pidm
  and w.parapst_pidm(+) = pabappl_pidm
  and u.parapst_pidm(+) = pabappl_pidm
  and y.parapst_pidm(+) = pabappl_pidm
  and t.rowid(+)=f_applicant_rowid
           (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,1)
  and v.rowid(+)=f_applicant_rowid
           (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,2)
  and w.rowid(+)=f_applicant_rowid
           (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,3)
  and u.rowid(+)=f_applicant_rowid
           (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,4)
  and y.rowid(+)=f_applicant_rowid
           (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,5)
  and aa.parapin_pidm(+) = pabappl_pidm
  and bb.parapin_pidm(+) = pabappl_pidm
  and cc.parapin_pidm(+) = pabappl_pidm
  and dd.parapin_pidm(+) = pabappl_pidm
  and aa.rowid(+)=f_interview_rowid
           (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,1)
  and bb.rowid(+)=f_interview_rowid
           (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,2)
  and cc.rowid(+)=f_interview_rowid
           (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,3)
  and dd.rowid(+)=f_interview_rowid
           (pabappl_pidm,pabappl_req_no,pabappl_posn,pabappl_pcls_code,4)
  and ee.pprcert_pidm(+) = pabappl_pidm
  and ff.pprcert_pidm(+) = pabappl_pidm
  and gg.pprcert_pidm(+) = pabappl_pidm
  and ee.rowid(+)=f_certification_rowid(pabappl_pidm,1)
  and ff.rowid(+)=f_certification_rowid(pabappl_pidm,2)
  and gg.rowid(+)=f_certification_rowid(pabappl_pidm,3)
  and kk.sprmedi_pidm(+) = pabappl_pidm
  and ll.sprmedi_pidm(+) = pabappl_pidm
  and kk.rowid(+)=f_disability_rowid(pabappl_pidm,1)
  and ll.rowid(+)=f_disability_rowid(pabappl_pidm,2)
  and f_ecls_security(user,nbbposn_ecls_code) = 'Y'"
"BANINST1","PAVAPST","Applicant Status Information View","SELECT  PARAPST_PIDM,
        PARAPST_APPS_CODE,
        PTRAPPS_DESC,
        PARAPST_APPS_DATE,
        PARAPST_COMMENT,
        PARAPST_REQ_NO,
        PARAPST_APPL_DATE
FROM    PARAPST,
        PTRAPPS
WHERE   PTRAPPS_CODE (+)  = PARAPST_APPS_CODE
 "
"BANINST1","PAVAPPL","Applicant Information View","SELECT  SPRIDEN_ID,
        SUBSTR(DECODE(gb_displaymask.f_ssb_format_name(),
                      'Y', DECODE(spriden_surname_prefix,NULL,NULL,spriden_surname_prefix||' '), '')
               ||SPRIDEN_LAST_NAME
               || ', ' || SPRIDEN_FIRST_NAME || ' ' ||
               SUBSTR(SPRIDEN_MI,1,1),1,25),
        SPRIDEN_SURNAME_PREFIX,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SPRIDEN_PIDM,
        PABAPPL_DATE,
        DECODE(PABAPPL_FULL_PART_IND,'F','Full',
                                     'P','Part-time',
                                     NULL),
        PABAPPL_ESKL_CODE,
        PTVESKL_DESC,
        PABAPPL_ASRC_CODE,
        PTVASRC_DESC,
        PABAPPL_DESIRED_SALARY,
        PABAPPL_REQ_NO,
        PABAPPL_POSN,
        NBBPOSN_TITLE,
        PABAPPL_PCLS_CODE,
        NTRPCLS_DESC,
        PABAPPL_DESIRED_HOURLY,
        DECODE(PEBEMPL_EMPL_STATUS,'A','Active',
                                   'F', 'Leave, full pay/benefits',
                                   'L', 'Leave, no pay/benefits',
                                   'B', 'Leave with benefits',
                                   'P', 'Partial pay/full benefits',
                                   'T', 'Terminated',
                                   NULL),
        PEBEMPL_ECLS_CODE,
        PTRECLS_LONG_DESC,
        PEBEMPL_FIRST_HIRE_DATE,
        PEBEMPL_CURRENT_HIRE_DATE,
        PEBEMPL_TREA_CODE,
        PTRTREA_DESC,
        PEBEMPL_TERM_DATE,
        PEBEMPL_LREA_CODE,
        PTRLREA_DESC,
        PEBEMPL_LOA_BEG_DATE,
        PEBEMPL_LOA_END_DATE,
        SPBPERS_SSN,
        SPBPERS_BIRTH_DATE,
        SPBPERS_LGCY_CODE,
        STVLGCY_DESC,
        SPBPERS_ETHN_CODE,
        STVETHN_DESC,
        SPBPERS_MRTL_CODE,
        STVMRTL_DESC,
        SPBPERS_SEX,
        DECODE(SPBPERS_CONFID_IND,'Y','YES',NULL),
        SPBPERS_VETC_FILE_NUMBER,
        SPBPERS_PREF_FIRST_NAME,
        SPBPERS_NAME_PREFIX,
        SPBPERS_NAME_SUFFIX,
        DECODE(SPBPERS_VERA_IND,'P','Pre-Vietnam',
                                'D','During Vietnam',
                                'X','Post Vietnam'),
        SPBPERS_CITZ_CODE,
        STVCITZ_DESC,
        SPBPERS_CITY_BIRTH,
        SPBPERS_DRIVER_LICENSE,
        SPBPERS_STAT_CODE_DRIVER,
        STVSTAT_DESC,
        SPBPERS_NATN_CODE_DRIVER,
        STVNATN_NATION,
        DECODE(SPBPERS_SDVET_IND,'Y','YES',NULL),
        DECODE(SPBPERS_ARMED_SERV_MED_VET_IND,'Y','YES',NULL),
        PEBEMPL_1042_RECIPIENT_CD
FROM    PTVESKL,
        PTVASRC,
        NTRPCLS,
        PTRECLS,
        PTRTREA,
        PTRLREA,
        STVLGCY,
        STVETHN,
        STVMRTL,
        STVCITZ,
        STVSTAT,
        STVNATN,
        SPRIDEN,
        NBBPOSN,
        PABAPPL,
        PEBEMPL,
        SPBPERS,
        GUBINST
WHERE   PTVESKL_CODE (+)   = PABAPPL_ESKL_CODE
AND     PTVESKL_EMPR_IND   = GUBINST_HIGHED_GOVT_IND
AND     PTVASRC_CODE (+)   = PABAPPL_ASRC_CODE
AND     NTRPCLS_CODE (+)   = PABAPPL_PCLS_CODE
AND     PTRECLS_CODE (+)   = PEBEMPL_ECLS_CODE
AND     PTRTREA_CODE (+)   = PEBEMPL_TREA_CODE
AND     PTRLREA_CODE (+)   = PEBEMPL_LREA_CODE
AND     STVLGCY_CODE (+)   = SPBPERS_LGCY_CODE
AND     STVETHN_CODE (+)   = SPBPERS_ETHN_CODE
AND     STVMRTL_CODE (+)   = SPBPERS_MRTL_CODE
AND     STVCITZ_CODE (+)   = SPBPERS_CITZ_CODE
AND     STVSTAT_CODE (+)   = SPBPERS_STAT_CODE_DRIVER
AND     STVNATN_CODE (+)   = SPBPERS_NATN_CODE_DRIVER
AND     NBBPOSN_POSN (+)   = PABAPPL_POSN
AND     SPRIDEN_PIDM       = PABAPPL_PIDM
AND     SPRIDEN_CHANGE_IND IS NULL
AND     PEBEMPL_PIDM (+)   = SPRIDEN_PIDM
AND     SPBPERS_PIDM       = SPRIDEN_PIDM
AND     NVL(SPBPERS_DEAD_IND,'N') = 'N'"
"BANINST1","NHVEDST","Employee Salary Distribution View","select nhrdist_coas_code,
       nhrdist_rucl_code,
       nhrdist_fund_code,
       nhrdist_orgn_code,
       nhrdist_acct_code,
       nhrdist_prog_code,
       nhrdist_actv_code,
       nhrdist_locn_code,
       nhrdist_earn_code,
       nhrdist_bdca_code,
       sum(nhrdist_hrs) ,
   sum (decode(nhrdist_category_code,
          'A',decode(nhrdist_dr_cr_ind,'D', nhrdist_amt,'C', -nhrdist_amt),
          'D',decode(nhrdist_dr_cr_ind,'D', nhrdist_amt,'C', -nhrdist_amt),
          'H',decode(nhrdist_dr_cr_ind,'D', nhrdist_amt,'C', -nhrdist_amt),
          'G',decode(nhrdist_dr_cr_ind,'D', nhrdist_amt,'C', -nhrdist_amt),
          'J',decode(nhrdist_dr_cr_ind,'D', nhrdist_amt,'C', -nhrdist_amt),
          'B',decode(nhrdist_dr_cr_ind,'C', nhrdist_amt,'D', -nhrdist_amt),
          'C',decode(nhrdist_dr_cr_ind,'C', nhrdist_amt,'D', -nhrdist_amt),
          'E',decode(nhrdist_dr_cr_ind,'C', nhrdist_amt,'D', -nhrdist_amt),
          'F',decode(nhrdist_dr_cr_ind,'C', nhrdist_amt,'D', -nhrdist_amt),
          'I',decode(nhrdist_dr_cr_ind,'C', nhrdist_amt,'D', -nhrdist_amt),
          'O',decode(nhrdist_dr_cr_ind,'+', nhrdist_amt,'-', -nhrdist_amt),
          'P',decode(nhrdist_dr_cr_ind,'+', nhrdist_amt,'-', -nhrdist_amt),
          'Q',decode(nhrdist_dr_cr_ind,'+', nhrdist_amt,'-', -nhrdist_amt),
          'R',decode(nhrdist_dr_cr_ind,'+', nhrdist_amt,'-', -nhrdist_amt)))
from nhrdist,
     nprcolr
where nhrdist_pidm = to_number(nprcolr_value_atyp)
and   nhrdist_trans_date between nprcolr_value_date and nprcolr_activity_date
and   nprcolr_job = 'NHIEDST'
and   nprcolr_sessionid = to_char(userenv('SESSIONID'))
and   ( (nprcolr_type = 'E' and nhrdist_category_code IN ('A', 'D', 'H'))
    or  (nprcolr_type = 'L' and nhrdist_category_code IN ('B', 'C', 'E'))
    or  (nprcolr_type = 'A' and nhrdist_category_code = 'F')
    or  (nprcolr_type = 'P' and nhrdist_category_code = 'G')
    or  (nprcolr_type = 'C' and nhrdist_category_code = 'I')
    or  (nprcolr_type = 'F' and nhrdist_category_code = 'J')
    or  (nprcolr_type = 'N' and nhrdist_category_code IN ('O', 'P', 'Q','R')))
group by  nhrdist_coas_code,
       nhrdist_rucl_code,
       nhrdist_fund_code,
       nhrdist_orgn_code,
       nhrdist_acct_code,
       nhrdist_prog_code,
       nhrdist_actv_code,
       nhrdist_locn_code,
       nhrdist_earn_code,
       nhrdist_bdca_code
 "
"BANINST1","NBVPINC","Position Incumbent List View","SELECT SPRIDEN_ID,
                DECODE(gb_displaymask.f_ssb_format_name(),
                       'Y', DECODE(spriden_surname_prefix,NULL,NULL,spriden_surname_prefix||' '), '')
                ||SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' ||
                SUBSTR(SPRIDEN_MI,1,1),
                NBRBJOB_SUFF,
                NBRJOBS_STATUS,
                -- NBRJOBS_FTE,
                f_get_jfte(nbrjobs_pidm,nbrjobs_posn,nbrjobs_suff,
			nbrjobs_effective_date, 'Y'),
                NBRBJOB_BEGIN_DATE,
                NBRBJOB_END_DATE
         FROM   SPRIDEN,
                NBRJOBS,
                NBRBJOB,
                NPRCOLR
        WHERE   SPRIDEN_PIDM  = NBRJOBS_PIDM
        AND     SPRIDEN_CHANGE_IND IS NULL
        AND     NBRJOBS_PIDM = NBRBJOB_PIDM
        AND     NBRJOBS_POSN = NBRBJOB_POSN
        AND     NBRJOBS_SUFF = NBRBJOB_SUFF
        AND     NBRJOBS_EFFECTIVE_DATE =
                  (SELECT    MAX(NBRJOBS_EFFECTIVE_DATE)
                     FROM    NBRJOBS
                   WHERE     NBRJOBS_PIDM = NBRBJOB_PIDM
                     AND     NBRJOBS_POSN = NBRBJOB_POSN
                     AND     NBRJOBS_SUFF = NBRBJOB_SUFF
                     AND     NBRJOBS_EFFECTIVE_DATE <= NPRCOLR_VALUE_DATE)
        AND     NBRBJOB_POSN = NPRCOLR_VALUE_ATYP
        AND     NPRCOLR_JOB = 'NBVPINC'
        AND     NPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
  "
"BANINST1","GVWMIXE","Common (CALBCOM) California MIS XE domain view. Can be shared by MIS EB report in CALBHR and MIS XE report in CALBSTU.","SELECT STVTERM_CODE,
       GTVDICD_CODE,
       STVTERM_MIS_TERM_ID,
       SSBSECT_CRN,
       SSBSECT_ENRL,
       A.SCBCRSE_SUBJ_CODE,
       A.SCBCRSE_CRSE_NUMB,
       SSRMEET_CATAGORY,
       SIRASGN_PIDM,
       SPRIDEN_ID,
       SIRASGN_ASTY_CODE,
       SIRASGN_PERCENT_RESPONSE,
       SIRASGN_WORKLOAD_ADJUST,
       SIRASGN_POSN,
       SIRASGN_SUFF,
       SIRASGN_CATEGORY,
       SIBINST_FSTP_CODE,
       SPBPERS_SSN,
       SIBTERM_FTE_FACTOR
  FROM SSBSECT,
       SCBCRSE A,
       GTVDICD,
       STVTERM,
       STVRSTS,
       SFRSTCR,
       STVACCT,
       SSRMEET,
       SIRASGN,
       SIBINST C,
       SPRIDEN SI,
       SPBPERS SP,
       SIBTERM ST
 WHERE SSBSECT_TERM_CODE = STVTERM_CODE
   AND SP.SPBPERS_PIDM (+)= SI.SPRIDEN_PIDM
   AND ST.SIBTERM_TERM_CODE (+)= STVTERM_CODE
   AND SSBSECT_CAMP_CODE IN( SELECT STVCAMP_CODE
                                FROM STVCAMP
                               WHERE STVCAMP_DICD_CODE = GTVDICD_CODE
                           )
   AND SFRSTCR_CRN = SSBSECT_CRN
   AND SFRSTCR_TERM_CODE = SSBSECT_TERM_CODE
   AND A.SCBCRSE_SUBJ_CODE = SSBSECT_SUBJ_CODE
   AND A.SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB
   AND A.SCBCRSE_EFF_TERM = ( SELECT MAX(B.SCBCRSE_EFF_TERM)
                                FROM SCBCRSE B
                               WHERE B.SCBCRSE_SUBJ_CODE = A.SCBCRSE_SUBJ_CODE
                                 AND B.SCBCRSE_CRSE_NUMB = A.SCBCRSE_CRSE_NUMB
                                 AND B.SCBCRSE_EFF_TERM <= STVTERM_CODE
                            )
   AND SSBSECT_ACCT_CODE = STVACCT_CODE
   AND SFRSTCR_RSTS_CODE = STVRSTS_CODE
   AND ( ( SSBSECT_PTRM_CODE IS NULL
           AND SFRSTCR_ATTEND_HR > 0
         )
      OR ( SSBSECT_PTRM_CODE IS NOT NULL
           AND NVL( STVACCT_ACTUAL_IND, 'N' ) = 'Y'
           AND ( SFRSTCR_ATTEND_HR > 0
                OR SFRSTCR_GRDE_CODE IS NOT NULL
                )
         )
      OR ( SSBSECT_PTRM_CODE IS NOT NULL
           AND NVL( STVACCT_ACTUAL_IND, 'N' ) = 'N'
           AND STVRSTS_VOICE_TYPE = 'R'
         )
      OR ( SSBSECT_PTRM_CODE IS NOT NULL
           AND NVL( STVRSTS_WAIT_IND, 'N' ) = 'N'
           AND NVL( STVACCT_ACTUAL_IND, 'N' ) = 'N'
           AND STVRSTS_VOICE_TYPE IN( 'W', 'D' )
           AND SFRSTCR_RSTS_DATE >= SSBSECT_CENSUS_ENRL_DATE
         )
   )
   AND NVL( STVRSTS_WAIT_IND, 'N' ) <> 'Y'
   AND SSRMEET_CRN = SSBSECT_CRN
   AND SSRMEET_TERM_CODE = SSBSECT_TERM_CODE
   AND SIRASGN_TERM_CODE = SSRMEET_TERM_CODE
   AND SIRASGN_CRN = SSRMEET_CRN
   AND SIRASGN_CATEGORY = SSRMEET_CATAGORY
   AND C.SIBINST_PIDM = SIRASGN_PIDM
   AND C.SIBINST_TERM_CODE_EFF = ( SELECT MAX( D.SIBINST_TERM_CODE_EFF )
                                     FROM SIBINST D
                                    WHERE D.SIBINST_PIDM = C.SIBINST_PIDM
                                      AND D.SIBINST_TERM_CODE_EFF <= STVTERM_CODE
                                 )
  AND SPRIDEN_PIDM = SIRASGN_PIDM
  AND SPRIDEN_CHANGE_IND IS NULL
  AND ( ( SIRASGN_ASTY_CODE IS NOT NULL
          AND EXISTS ( SELECT 'Y'
                         FROM STVASTY
                        WHERE STVASTY_CODE = SIRASGN_ASTY_CODE
                          AND ( STVASTY_NON_TEACHING_IND <> 'Y'
                                OR STVASTY_NON_TEACHING_IND IS NULL
                              )
                     )
        )
     OR ( SIRASGN_ASTY_CODE IS NULL )
  )
 GROUP BY STVTERM_CODE,
          GTVDICD_CODE,
          STVTERM_MIS_TERM_ID,
          SSBSECT_CRN,
          SSBSECT_ENRL,
          A.SCBCRSE_SUBJ_CODE,
          A.SCBCRSE_CRSE_NUMB,
          SIRASGN_PIDM,
          SPRIDEN_ID,
          SIRASGN_ASTY_CODE,
          SIRASGN_PERCENT_RESPONSE,
          SIRASGN_WORKLOAD_ADJUST,
          SIRASGN_POSN,
          SIRASGN_SUFF,
          SIRASGN_CATEGORY,
          SSRMEET_CATAGORY,
          SIBINST_FSTP_CODE,
          SPRIDEN_PIDM,
          SPBPERS_SSN,
          SIBTERM_FTE_FACTOR"
"BANINST1","GVQ_GCRSLIS","POPULATION LIST VIEW","(SELECT a.gcrslis_surrogate_id AS gcrslis_surrogate_id
          ,a.gcrslis_version AS gcrslis_version
          ,a.gcrslis_name AS gcrslis_name
          ,a.gcrslis_query_id AS gcrslis_query_id
          ,a.gcrslis_last_calc_time AS gcrslis_last_calc_time
          ,a.gcrslis_last_calc_by AS gcrslis_last_calc_by
          ,a.gcrslis_last_calc_count AS gcrslis_last_calc_count
          ,a.gcrslis_status AS gcrslis_status
          ,b.gcbqury_name AS gcbqury_name
          ,gcrfldr_name AS gcbqury_folder_name
          ,b.gcbqury_description AS gcbqury_description
          ,b.gcbqury_creator_id AS gcbqury_creator_id
          ,b.gcbqury_activity_date AS gcbqury_activity_date
      FROM gcrslis a
           INNER JOIN gcbqury b
              ON b.gcbqury_surrogate_id = a.gcrslis_query_id
           INNER JOIN gcrfldr
              ON gcbqury_folder_id = gcrfldr_surrogate_id)
   WITH READ ONLY"
"BANINST1","GVQ_GCRORAN","COMMUNICATION ORGANIZATION VIEW","SELECT a.gcroran_surrogate_id AS gcroran_surrogate_id,
           a.gcroran_name        AS gcroran_name,
           decode(a.gcroran_parent_id, NULL, 'Y','N') AS gcroran_is_root,
           a.gcroran_version AS gcroran_version
    FROM gcroran a
    WHERE a.gcroran_available_ind = 'Y'
    WITH READ ONLY"
"BANINST1","GVQ_GCRLENT","POPULATION ENTITY VIEW","(
   SELECT gcrlent.gcrlent_surrogate_id
         ,gcrlent.gcrlent_version
         ,gcrslis.gcrslis_query_id
         ,gcrslis.gcrslis_surrogate_id
         ,gcrlent.gcrlent_pidm
         ,spriden.spriden_id
         ,spriden.spriden_first_name
         ,spriden.spriden_last_name
         ,spriden.spriden_mi
         ,spriden.spriden_surname_prefix
         ,nvl(spbpers.spbpers_confid_ind,'N')
         ,nvl(spbpers.spbpers_dead_ind,'N')
     FROM spriden
         ,gcrlent
         ,gcrslis
         ,spbpers
    WHERE     gcrslis.gcrslis_surrogate_id = gcrlent.gcrlent_slis_id
          AND spriden_pidm = gcrlent_pidm
          AND spriden_change_ind IS NULL
          AND spbpers_pidm (+) = gcrlent_pidm
  )
    WITH READ ONLY"
"BANINST1","GVQ_GCRGSIM","GROUP SEND ITEM VIEW","SELECT a.gcrgsim_surrogate_id       group_item_id,
       a.gcrgsim_group_send_id      group_send_id,
       a.gcrgsim_reference_id       reference_id,
       a.gcrgsim_pidm               pidm,
       spriden.spriden_id           banner_id,
       spriden.spriden_first_name   first_name,
       spriden.spriden_last_name    last_name,
       spriden.spriden_mi           middle_name,
       spriden.spriden_surname_prefix        surname_prefix,
       nvl(spbpers.spbpers_confid_ind, 'N')  confidential_ind,
       nvl(spbpers.spbpers_dead_ind, 'N')    DECEASED_IND,
       a.gcrgsim_started_date                start_date,
       a.gcrgsim_stop_date                   stop_date,
       (CASE a.gcrgsim_current_state
           WHEN 'Ready' THEN  'Processing'
           WHEN 'Complete' THEN
               CASE b.gcbcjob_status
                  WHEN 'COMPLETED' THEN 'Complete'
                  WHEN 'FAILED' THEN    'Failed'
                  WHEN 'STOPPED' THEN  'Stopped'
               ELSE
                  'Processing'
               END
           ELSE a.gcrgsim_current_state
        END) item_status,
        a.gcrgsim_user_id last_modified_by,
        a.gcrgsim_activity_date last_modified,
        a.gcrgsim_version version
  FROM gcrgsim a
        INNER JOIN spriden ON spriden_pidm = a.gcrgsim_pidm
                              AND spriden_change_ind IS NULL
        LEFT OUTER JOIN spbpers ON spbpers_pidm = a.gcrgsim_pidm
        LEFT OUTER JOIN gcbcjob b ON b.gcbcjob_reference_id = a.gcrgsim_reference_id
    WITH READ ONLY"
"BANINST1","GVQ_GCRCITM","COMMUNICATION ITEM VIEW","SELECT gcrcitm_surrogate_id   surrogate_id
      ,gcrcitm_creator_id     initiated_by
      ,gcrcitm_create_date    create_date
      ,spriden_id             banner_id
      ,spriden_pidm           pidm
      ,spriden.spriden_first_name as first_name
      ,spriden.spriden_last_name as last_name
      ,spriden.spriden_mi as middle_name
      ,spriden.spriden_surname_prefix as surname_prefix
      ,nvl(spbpers.spbpers_confid_ind,'N') as confidential_ind
      ,nvl(spbpers.spbpers_dead_ind,'N') as deceased_ind
      ,gcrcitm_sent_date      sent_date
      ,gcbtmpl_name           template_name
      ,gcroran_name           organization_name
      ,gcrcitm_comm_channel   communication_channel
      ,gcrcitm_version        version
  FROM gcroran
      ,gcbtmpl
      ,spriden
      ,spbpers
      ,gcrcitm
 WHERE     spriden_pidm = gcrcitm_recipient_pidm
       AND spriden_change_ind IS NULL
       AND spbpers_pidm (+) = gcrcitm_recipient_pidm
       AND gcrcitm_template_id = gcbtmpl_surrogate_id
       AND gcrcitm_organization_id = gcroran_surrogate_id
   WITH READ ONLY"
"BANINST1","GVQ_GCRCFLD","COMMUNICATION DATAFIELD VIEW","SELECT
     gcrcfld_surrogate_id
    ,gcrcfld_name
    ,gcrfldr_surrogate_id
    ,gcrfldr_name
    ,gcrcfld_immutableid
    ,gcrcfld_version
  FROM gcrcfld
       INNER JOIN gcrfldr
        ON gcrcfld_folder_id = gcrfldr_surrogate_id
  WHERE lower(gcrcfld_status) = 'production'
   WITH READ ONLY"
"BANINST1","GVQ_GCBTMPL","COMMUNICATION TEMPLATE VIEW","SELECT
     gcbtmpl_surrogate_id
    ,gcbtmpl_name
    ,gcbtmpl_description
    ,gcrfldr_name
    ,CASE
      WHEN gcbtmpl_publish = 'Y' AND SYSDATE between NVL(trunc(GCBTMPL_VALID_FROM),SYSDATE) and NVL(trunc(GCBTMPL_VALID_TO), SYSDATE) THEN 'Y'
      ELSE 'N'
      END AS active
    ,CASE
      WHEN gcbemtl_surrogate_id IS NOT NULL THEN 'EMAIL'
      WHEN gcbmntl_surrogate_id IS NOT NULL THEN 'MOBILE_NOTIFICATION'
     END AS communication_channel
    ,gcbtmpl_personal
    ,gcbtmpl_creator_id
    ,gcbtmpl_vpdi_code
    ,gcbtmpl_version
  FROM gcbtmpl
       INNER JOIN gcrfldr ON gcbtmpl_folder_id = gcrfldr_surrogate_id
    LEFT JOIN GCBEMTL ON (gcbtmpl.gcbtmpl_surrogate_id = gcbemtl.gcbemtl_surrogate_id)
    LEFT JOIN GCBMNTL ON (gcbtmpl.gcbtmpl_surrogate_id = gcbmntl.gcbmntl_surrogate_id)
   WITH READ ONLY"
"BANINST1","GVQ_GCBQURY","COMMUNICATION QUERY VIEW","SELECT
     gcbqury_surrogate_id
    ,gcbqury_name
    ,gcbqury_description
    ,gcrfldr_surrogate_id
    ,gcrfldr_name
    ,gcbqury_creator_id
    ,gcbqury_create_date
    ,gcbqury_valid_ind
    ,gcbqury_locked_ind
    ,gcbqury_published_ind
    ,gcbqury_version
    ,gcbqury_vpdi_code
  FROM gcbqury
       INNER JOIN gcrfldr
        ON gcbqury_folder_id = gcrfldr_surrogate_id
   WITH READ ONLY"
"BANINST1","GVQ_GCBGSND","GROUP SEND VIEW for group send data","SELECT g.gcbgsnd_surrogate_id            group_send_id
           ,g.gcbgsnd_creator_id              creator
           ,g.gcbgsnd_name                    group_send_name
           ,gcbtmpl_name                      template_name
           ,gcrslis_name                      population_name
           ,g.gcbgsnd_poplist_id              population_id
           ,gcroran_name                      organization_name
           ,a.population_count                population_count
           ,g.gcbgsnd_creationdatetime        group_send_creation_date
           ,a.max_item_end_date               group_send_end_date
           ,(CASE WHEN g.gcbgsnd_current_state = 'Complete' AND a.communication_jobs_processing > 0  THEN 'Processing'
             ELSE gcbgsnd_current_state
             END
           )   group_send_current_state
           ,(CASE WHEN g.gcbgsnd_current_state = 'Error' THEN 'Y'
                  WHEN a.group_items_failed > 0 THEN 'Y'
                  WHEN a.communication_jobs_failed > 0 THEN 'Y'
             ELSE 'N'
             END
           )   errors_exist
           ,a.group_items_processing        group_items_processing
           ,a.group_items_failed            group_items_failed
           ,a.group_items_stopped           group_items_stopped
           ,a.group_items_processed         group_items_processed
           ,a.communication_jobs_processing communication_jobs_processing
           ,a.communication_jobs_failed     communication_jobs_failed
           ,a.communication_jobs_processed  communication_jobs_processed
           ,a.communication_jobs_stopped    communication_jobs_stopped
           ,a.communication_item_count      communication_item_count
           ,gcrslis_activity_date           population_calculation_date
           ,SYSDATE                         as_of_date
           ,g.gcbgsnd_version                 version
       FROM gcbgsnd g
            INNER JOIN gcbtmpl ON (g.gcbgsnd_template_id = gcbtmpl_surrogate_id)
            INNER JOIN gcroran ON (g.gcbgsnd_organization_id = gcroran_surrogate_id)
            INNER JOIN gcrslis ON (g.gcbgsnd_poplist_id = gcrslis_surrogate_id)
            INNER JOIN (SELECT x.gcbgsnd_surrogate_id    send_id
                        ,COUNT (y.gcrgsim_surrogate_id)    population_count
                        ,MAX(y.gcrgsim_stop_date) max_item_end_date
                        ,SUM (DECODE (y.gcrgsim_current_state,  'Ready', 1, 0))
                                            group_items_processing
                        ,SUM (DECODE (y.gcrgsim_current_state,  'Failed', 1, 0))
                                            group_items_failed
                        ,SUM (DECODE (y.gcrgsim_current_state,  'Stopped', 1, 0))
                                            group_items_stopped
                       ,SUM (DECODE (y.gcrgsim_current_state,  'Complete', 1, 0))
                                            group_items_processed
                       ,SUM (DECODE (z.gcbcjob_status,  'PENDING', 1,  'DISPATCHED', 1,  0))
                                            communication_jobs_processing
                       ,SUM (DECODE (z.gcbcjob_status,  'FAILED', 1,  0))
                                            communication_jobs_failed
                       ,SUM (DECODE (z.gcbcjob_status,  'STOPPED', 1,  0))
                                            communication_jobs_stopped
                       ,SUM (DECODE (z.gcbcjob_status,  'COMPLETED', 1, 0))
                                            communication_jobs_processed
                       ,COUNT (gcrcitm_surrogate_id)    communication_item_count
       FROM gcbgsnd x
            INNER JOIN gcrgsim y
               ON (y.gcrgsim_group_send_id = x.gcbgsnd_surrogate_id)
            LEFT OUTER JOIN gcbcjob z
               ON (z.gcbcjob_reference_id = y.gcrgsim_reference_id)
            LEFT OUTER JOIN gcrcitm
               ON (z.gcbcjob_reference_id = gcrcitm_reference_id)
   GROUP BY x.gcbgsnd_surrogate_id
 ) a  ON (g.gcbgsnd_surrogate_id = a.send_id)
    WITH READ ONLY"
"BANINST1","GVQ_ERROR_LOG_DETAIL","ERROR LOG DETAIL VIEW","SELECT gcrgsim_reference_id        as reference_id
         ,gcbcjob_version            as version
         ,gcbgsnd_name               as job_name
         ,NVL(gcrgsim_error_code, gcbcjob_error_code) as error_code
         ,NVL(gcrgsim_error_text, gcbcjob_error_text) as error_text
    FROM gcbgsnd
         ,gcrgsim
         ,gcbcjob
     WHERE gcbgsnd_surrogate_id = gcrgsim_group_send_id
       AND gcrgsim_reference_id = gcbcjob_reference_id(+)
       AND ((gcrgsim_current_state = 'Failed' or gcrgsim_error_code is not null) OR
            (gcbcjob_status = 'FAILED' or gcbcjob_error_code is not null))
  WITH READ ONLY"
"BANINST1","GVQ_ERROR_LOG","Communication Error log view","SELECT gcbgsnd_surrogate_id                 AS gcbgsnd_surrogate_id
         ,gcrgsim_reference_id                AS reference_id
         ,gcbgsnd_creator_id                  AS initiated_by
         ,gcbgsnd_creationdatetime            AS create_date_time
         ,spriden_id                          AS banner_id
         ,spriden_pidm                        AS pidm
         ,spriden.spriden_first_name          AS first_name
         ,spriden.spriden_last_name           AS last_name
         ,spriden.spriden_mi                  AS middle_name
         ,spriden.spriden_surname_prefix      AS surname_prefix
         ,nvl(spbpers.spbpers_confid_ind,'N') AS confidential_ind
         ,nvl(spbpers.spbpers_dead_ind,'N')   AS deceased_ind
         ,(CASE WHEN gcbcjob_error_code IS NOT NULL THEN gcbcjob_activity_date
                ELSE gcrgsim_activity_date END) AS activity_date
         ,gcbtmpl_name                        AS template_name
         ,gcroran_name                        AS organization_name
         ,(CASE WHEN EXISTS (SELECT gcbemtl_surrogate_id FROM gcbemtl WHERE gcbemtl_surrogate_id = gcbgsnd_template_id)
                  THEN 'EMAIL'
                  ELSE 'MOBILE_NOTIFICATION' END) AS communication_channel
         ,gcbcjob_version                    AS version
         ,gcbgsnd_name                       AS job_name
         ,NVL(gcrgsim_error_code, gcbcjob_error_code) AS ERROR_CODE
    FROM  gcroran
         ,gcbtmpl
         ,spriden
         ,spbpers
         ,gcbgsnd
         ,gcrgsim
         ,gcbcjob
   WHERE spriden_pidm = gcrgsim_pidm
       AND spriden_change_ind IS NULL
       AND spbpers_pidm (+) = gcrgsim_pidm
       AND gcbgsnd_template_id = gcbtmpl_surrogate_id
       AND gcbgsnd_organization_id = gcroran_surrogate_id
       AND ((gcrgsim_current_state = 'Failed' OR gcrgsim_error_code IS NOT NULL) OR
            (gcbcjob_status = 'FAILED' OR gcbcjob_error_code IS NOT NULL))
       AND gcbgsnd_surrogate_id = gcrgsim_group_send_id
       AND gcrgsim_reference_id = gcbcjob_reference_id(+)
  WITH READ ONLY"
"BANINST1","GUVRPRV","GUVRPRV: View to access role privileges as a single row.","select role guvrprv_role,
       owner guvrprv_owner,
       table_name guvrprv_object,
	decode(sum(decode(privilege,'SELECT',1,0)),0,'N','S') guvrprv_priv_S,
	decode(sum(decode(privilege,'INSERT',1,0)),0,'N','I') guvrprv_priv_I,
	decode(sum(decode(privilege,'UPDATE',1,0)),0,'N','U') guvrprv_priv_U,
	decode(sum(decode(privilege,'DELETE',1,0)),0,'N','D') guvrprv_priv_D,
	decode(sum(decode(privilege,'EXECUTE',1,0)),0,'N','E') guvrprv_priv_E
from role_tab_privs
group by role, owner, table_name"
"BANINST1","GUVRPRV","","select role guvrprv_role,
       owner guvrprv_owner,
       table_name guvrprv_object,
	decode(sum(decode(privilege,'SELECT',1,0)),0,'N','S') guvrprv_priv_S,
	decode(sum(decode(privilege,'INSERT',1,0)),0,'N','I') guvrprv_priv_I,
	decode(sum(decode(privilege,'UPDATE',1,0)),0,'N','U') guvrprv_priv_U,
	decode(sum(decode(privilege,'DELETE',1,0)),0,'N','D') guvrprv_priv_D,
	decode(sum(decode(privilege,'EXECUTE',1,0)),0,'N','E') guvrprv_priv_E
from role_tab_privs
group by role, owner, table_name"
"BANINST1","GUVPSMNU_PROCESS","","SELECT -1,
       LEVEL,
       GURMENU_DESC,
       '',
       GURMENU_OBJ_NAME
 from gurmenu
 WHERE (
        gurmenu_user_id = 'BASELINE'
        or   gurmenu_user_id = 'LOCAL'
       )
CONNECT BY PRIOR gurmenu_obj_name = gurmenu_name
START WITH gurmenu_name = '*PROCESS'
ORDER SIBLINGS BY gurmenu_sort_seq

 "
"BANINST1","GUVLETR","Letter Display View","SELECT GUBLETR_LETR_CODE, GUBLETR_PARA_CODE,
        GUBLETR_PARA_SEQNO, GUBPARA_SEQ_NO,    GUBPARA_TEXT_VAR
   FROM GUBLETR, GUBPARA
  WHERE GUBLETR_PARA_CODE = GUBPARA_PARA_CODE"
"BANINST1","GUVDFTR","GUVDFTR: View to show users default roles.","SELECT u1.name guvdftr_user,
       u2.name guvdftr_role
  FROM sys.user$ u1,
       sys.user$ u2,
       sys.defrole$ r
 WHERE u1.user# = r.user#
   AND u2.user# = r.role#"
"BANINST1","GUVDFTR","","SELECT u1.name guvdftr_user,
       u2.name guvdftr_role
  FROM sys.user$ u1,
       sys.user$ u2,
       sys.defrole$ r
 WHERE u1.user# = r.user#
   AND u2.user# = r.role#"
"BANINST1","GUVALTI","View to provide access to SPRIDEN Banner ID by way of alternate ID lookup using key columns on the SPBPERS table.","SELECT spriden_pidm,
        null spbpers_ssn,
        spriden_entity_ind,
        spriden_search_last_name,
        spriden_search_first_name,
        spriden_search_mi,
        spriden_id,
        spriden_last_name,
        spriden_first_name,
        spriden_mi,
        to_date(null) spbpers_birth_date,
        spriden_change_ind,
        spriden_activity_date
   FROM spriden
  WHERE not exists
            (select 'x' from spbpers where spbpers_pidm = spriden_pidm)
union all
 SELECT spriden_pidm,
        spbpers_ssn,
        spriden_entity_ind,
        spriden_search_last_name,
        spriden_search_first_name,
        spriden_search_mi,
        spriden_id,
        spriden_last_name,
        spriden_first_name,
        spriden_mi,
        spbpers_birth_date,
        spriden_change_ind,
        spriden_activity_date
   FROM spbpers, spriden
  WHERE spbpers_pidm = spriden_pidm

 "
"BANINST1","GPVENT1","","select
 spriden_pidm,
 substr(f_alumni_constituent_ind(spriden_pidm),1,1),
 substr(f_alumni_organization_ind(spriden_pidm),1,1),
 substr(f_ar_deposit_ind(spriden_pidm),1,1),
 substr(f_ar_detail_ind(spriden_pidm),1,1),
 substr(f_ar_memo_ind(spriden_pidm),1,1),
 substr(f_ar_profile_ind(spriden_pidm),1,1),
 substr(f_finaid_applicant_ind(spriden_pidm,'',''),1,1),
 substr(f_finance_agency_ind(spriden_pidm),1,1),
 substr(f_finance_bank_ind(spriden_pidm),1,1),
 substr(f_finance_customer_ind(spriden_pidm),1,1),
 substr(f_finance_employee_ind(spriden_pidm),1,1),
 substr(f_finance_manager_ind(spriden_pidm),1,1),
 substr(f_finance_vendor_ind(spriden_pidm),1,1),
 substr(f_payroll_applicant_ind(spriden_pidm),1,1),
 substr(f_payroll_beneficiary_ind(spriden_pidm),1,1),
 substr(f_payroll_cobra_ind(spriden_pidm),1,1),
 substr(f_payroll_employee_ind(spriden_pidm),1,1),
 substr(f_student_admissions_ind(spriden_pidm),1,1),
 substr(f_student_enrollment_ind(spriden_pidm),1,1),
 substr(f_student_faculty_ind(spriden_pidm),1,1),
 substr(f_student_gen_students_ind(spriden_pidm),1,1),
 substr(f_student_housing_ind(spriden_pidm),1,1),
 substr(f_student_recruit_ind(spriden_pidm),1,1),
 substr(f_student_registration_ind(spriden_pidm),1,1),
 substr(f_student_transfer_work_ind(spriden_pidm),1,1),
 spriden_id,
 spbpers_ssn,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 spbpers_name_prefix,
 spbpers_name_suffix,
 spbpers_legal_name,
 spbpers_pref_first_name,
 substr(f_format_name(spriden_pidm,'FML'),1,92),
 substr(f_format_name(spriden_pidm,'FMIL'),1,79),
 substr(f_format_name(spriden_pidm,'LFMI'),1,80),
 substr(f_format_name(spriden_pidm,'LF30'),1,30),
 substr(f_format_name(spriden_pidm,'FL30'),1,30),
 substr(f_format_name(spriden_pidm,'L30'),1,30),
 spbpers_birth_date,
 f_calculate_age(null, spbpers_birth_date, spbpers_dead_date),
 spbpers_sex,
 spbpers_ethn_code,
 spbpers_lgcy_code,
 spbpers_mrtl_code,
 spbpers_relg_code,
 spbpers_dead_ind,
 spbpers_dead_date,
 spbpers_confid_ind,
 a.spraddr_street_line1,
 a.spraddr_street_line2,
 a.spraddr_street_line3,
 a.spraddr_city,
 a.spraddr_stat_code,
 a.spraddr_zip,
 a.spraddr_cnty_code,
 a.spraddr_natn_code,
 a.spraddr_atyp_code,
 decode(c.sprtele_unlist_ind,'Y','***',c.sprtele_phone_area),
 decode(c.sprtele_unlist_ind,'Y','*******',c.sprtele_phone_number),
 decode(c.sprtele_unlist_ind,'Y','****',c.sprtele_tele_code),
 b.spraddr_street_line1,
 b.spraddr_street_line2,
 b.spraddr_street_line3,
 b.spraddr_city,
 b.spraddr_stat_code,
 b.spraddr_zip,
 b.spraddr_cnty_code,
 b.spraddr_natn_code,
 b.spraddr_atyp_code,
 decode(d.sprtele_unlist_ind,'Y','***',d.sprtele_phone_area),
 decode(d.sprtele_unlist_ind,'Y','*******',d.sprtele_phone_number),
 decode(d.sprtele_unlist_ind,'Y','****',d.sprtele_tele_code)
 from spbpers, spraddr a, spraddr b,
      sprtele c, sprtele d, spriden
where spriden_change_ind is null
  and spbpers_pidm(+) = spriden_pidm
  and a.rowid(+) =
    f_get_address_rowid
        (spriden_pidm,'ENTYADDR','A',sysdate,1,'C',null)
  and b.rowid(+) =
    f_get_address_rowid
        (spriden_pidm,'ENTYADDR','A',sysdate,2,'C',null)
  and c.rowid(+) =
    f_get_address_telephone_rowid
        (spriden_pidm,'ENTYADDR','A',sysdate,1,'C',null)
  and d.rowid(+) =
    f_get_address_telephone_rowid
        (spriden_pidm,'ENTYADDR','A',sysdate,2,'C',null)
 "
"BANINST1","GOVWFED","GOVWFED: Electronics Documents Data View","SELECT gorwfed_trans_no, gorwfed_wfed_code, gorwfed_page,
              gorwfed_line, gorwfed_activity_date,
              gorwfed_a, gorwfed_b, gorwfed_c, gorwfed_d, gorwfed_e,
              gorwfed_f, gorwfed_g, gorwfed_h, gorwfed_i, gorwfed_j,
              gorwfed_k, gorwfed_l, gorwfed_m, gorwfed_n, gorwfed_o,
              gorwfed_p, gorwfed_q, gorwfed_r, gorwfed_s, gorwfed_t,
              gorwfed_u, gorwfed_v, gorwfed_w, gorwfed_x, gorwfed_y,
              gorwfed_z
         FROM gorwfed"
"BANINST1","GOVWFDB","GOVWFDB: Electronic Documents Builder View","SELECT gorwfdb_wfed_code, gorwfdb_page, gorwfdb_line,
              gorwfdb_a, gorwfdb_b, gorwfdb_c, gorwfdb_d, gorwfdb_e,
              gorwfdb_f, gorwfdb_g, gorwfdb_h, gorwfdb_i, gorwfdb_j,
              gorwfdb_k, gorwfdb_l, gorwfdb_m, gorwfdb_n, gorwfdb_o,
              gorwfdb_p, gorwfdb_q, gorwfdb_r, gorwfdb_s, gorwfdb_t,
              gorwfdb_u, gorwfdb_v, gorwfdb_w, gorwfdb_x, gorwfdb_y,
              gorwfdb_z, gorwfdb_user_id, gorwfdb_activity_date
         FROM gorwfdb"
"BANINST1","GOVSVTS","SEVIS Transmittal Status Reporting View","select
	gorsevs_pidm,
        GORSEVS_SEQ_NO,
        spriden_id,
        nvl(gorsevs_sevis_id, gobsevs_sevis_id) ,
	gorsevs_last_name,
	gorsevs_first_name,
        substr(gorsevs_mi,1,1),
        gorsevs_svcr_code,
        gtvsvcr_usage_ind,
        gorsevs_svts_code ,
        trunc(gorsevs_submit_date),
        gorsevs_submit_date,
        GORSEVS_STATUS_CDE ,
        GORSEVS_RESULT_CODE_MESSAGE ,
        gorsevs_structure_update
	from gtvsvcr, spriden, gobsevs, gorsevs
	where
          gtvsvcr_code = gorsevs_svcr_code
          and   spriden_pidm = gorsevs_pidm
          and   spriden_change_ind IS NULL
          and   gobsevs_pidm = gorsevs_pidm
          
 "
"BANINST1","GOVSVSD","SEVIS Reporting Student Data View","select
	gobsevs_pidm,
        gobsevs_sevis_id,
        stvvtyp_sevis_equiv,
        gobsevs_svcr_code,
	substr(spriden_last_name,1,40),
	spriden_first_name,
	spriden_mi,
	decode(substr(spbpers_name_suffix,1,3),	'I','I', 'II','II',
						'III','III', 'IV','IV',
			'SR','Sr.', 'SR.', 'Sr.','Sr','Sr.', 'Sr.', 'Sr.',
			'JR','Jr.', 'JR.', 'Jr.','Jr','Jr.', 'Jr.', 'Jr.'),
	decode(spbpers_sex,'N','U','','U',spbpers_sex),
	spbpers_birth_date,
	a.stvnatn_sevis_equiv,
	b.stvnatn_sevis_equiv,
	x.spraddr_street_line1,
	rtrim(substr(decode(x.spraddr_street_line3,NULL,x.spraddr_street_line2,
                     decode(x.spraddr_street_line2,NULL,x.spraddr_street_line3,
                            x.spraddr_street_line2||' '||x.spraddr_street_line3)),1,60)),
	x.spraddr_city,
	x.spraddr_stat_code,
	substr(x.spraddr_zip,1,5),
	substr(replace(x.spraddr_zip,'-',''),6,4),
	y.spraddr_street_line1,
	rtrim(substr(decode(y.spraddr_street_line3,NULL,y.spraddr_street_line2,
                     decode(y.spraddr_street_line2,NULL,y.spraddr_street_line3,
                            y.spraddr_street_line2||' '||y.spraddr_street_line3)),1,60)),
	y.spraddr_city,
	stvstat_desc,
	substr(replace(y.spraddr_zip,'-',''),1,9),
	c.stvnatn_sevis_equiv,
	gobsevs_program_begin_date,
	gobsevs_program_end_date,
	gobsevs_new_program_end_date,
	gobsevs_program_enroll_date,
	gobsevs_session_start_date,
	gobsevs_session_end_date,
	gobsevs_transfer_comment,
	gobsevs_issue_comment,
	gobsevs_svel_code,
	gobsevs_svel_comment,
        decode(a.stvmajr_sevis_equiv,NULL,'',
		substr(a.stvmajr_sevis_equiv,1,2)||'.'||
		substr(a.stvmajr_sevis_equiv,3,4)),
	gobsevs_study_length,
	decode(gobsevs_eng_prof_req_ind,'Y','1','0'),
	decode(gobsevs_eng_prof_met_ind,'Y','1','0'),
	gobsevs_eng_prof_reason,
	gobsevs_academic_term_months,
	gobsevs_tuition_expense,
	gobsevs_personal_funds,
	gobsevs_living_expenses,
	gobsevs_svft_code,
	gobsevs_auth_start_date,
	gobsevs_completion_remarks,
	gobsevs_da_program_start_date,
	gobsevs_da_program_end_date,
	decode(gobsevs_criminal_convict_ind,'Y','1','0'),
	gobsevs_disc_action_text,
	decode(gobsevs_terminate_student_ind,'Y','1','0'),
	gobsevs_svtr_code,
	gobsevs_terminate_date,
        gobsevs_trans_cde,
	gobsevs_svcr_comment,
	decode(gobsevs_print_request_ind,'Y','1','0'),
        gobsevs_dependent_expenses,
        gobsevs_other_funds,
	gobsevs_other_funds_comment,
        gobsevs_other_expenses,
	gobsevs_other_exp_comment,
        gobsevs_auth_end_date,
        gobsevs_new_program_start_date,
	decode(gobsevs_commuter_ind,'Y','1','0'),
        gobsevs_admission_number,
        gobsevs_drivers_lic_number,
        gobsevs_stat_code_drivers_lic,
        spbpers_ssn,
        gobsevs_tin,
        decode(b.stvmajr_sevis_equiv,NULL,'',
		substr(b.stvmajr_sevis_equiv,1,2)||'.'||
		substr(b.stvmajr_sevis_equiv,3,4)),
        decode(c.stvmajr_sevis_equiv,NULL,'',
		substr(c.stvmajr_sevis_equiv,1,2)||'.'||
		substr(c.stvmajr_sevis_equiv,3,4)),
        gobsevs_school_funds,
	gobsevs_school_funds_comment,
        gobsevs_employment_funds,
	gobsevs_funding_comment,
	gobsevs_svft_comment,
	gobsevs_extend_program_comment,
	gobsevs_da_comment,
	gobsevs_svtr_comment,
        gobsevs_passport_number,
	d.stvnatn_sevis_equiv,
        gobsevs_passport_expire_date,
        gobsevs_visa_number,
	gobsevs_svcp_code,
        gobsevs_visa_expire_date,
        stvpent_sevis_equiv,
	gobsevs_pent_comment,
        gobsevs_entry_date,
	gobsevs_rfc_comment,
	gobsevs_edit_program_comment,
	gobsevs_school_cde,
	gobsevs_officer_id ,
	decode(gobsevs_svft_cancel_ind,'Y','1','0'),
	gobsevs_svca_code,
	gobsevs_svca_comment,
	decode(gobsevs_verify_status_ind,'Y','1','0'),
	decode(gobsevs_extension_cancel_ind,'Y','1','0'),
	gobsevs_visa_issue_date,
	gobsevs_svrp_code,
        gobsevs_reprint_reason_comment,
        gobsevs_edit_bio_comment,
        decode(gobsevs_svel_cancel_ind,'Y','1','0')
	from
	stvnatn a, stvnatn b, stvnatn c, stvnatn d, gtvsvcp,
	spraddr x, spraddr y, stvpent, stvstat,
	stvmajr a, stvmajr b, stvmajr c, stvvtyp, gtvsvtr, gtvsvcr,
        spbpers, spriden, gobsevs
	where
                spriden_pidm = gobsevs_pidm
          and   spriden_change_ind IS NULL
          and	spbpers_pidm(+) = gobsevs_pidm
          and	stvvtyp_code(+) = gobsevs_vtyp_code
          and	a.stvmajr_code(+) = gobsevs_majr_code
	  and	a.stvmajr_valid_major_ind(+) = 'Y'
          and   b.stvmajr_code(+) = gobsevs_majr_code_2
	  and	b.stvmajr_valid_major_ind(+) = 'Y'
          and   c.stvmajr_code(+) = gobsevs_majr_code_minr
	  and	c.stvmajr_valid_minor_ind(+) = 'Y'
	  and   gobsevs_birth_natn_code = a.stvnatn_code(+)
	  and   gobsevs_legal_natn_code = b.stvnatn_code(+)
          and   gobsevs_natn_code_passport = d.stvnatn_code(+)
          and	gobsevs_svcp_code = gtvsvcp_code(+)
          and	gobsevs_pent_code = stvpent_code(+)
          and   gtvsvcr_code(+) = gobsevs_svcr_code
          and   gtvsvtr_code(+) = gobsevs_svtr_code
	  and  ( gtvsvcr_usage_ind = '1' or gtvsvtr_usage_ind = '1')
	  and   y.spraddr_natn_code = c.stvnatn_code(+)
	  and   y.spraddr_stat_code = stvstat_code(+)
   	  and	x.rowid(+) =
          f_get_address_rowid(gobsevs_pidm, 'SVSUADDR', 'A', sysdate,1,'G',null)
	  and	y.rowid(+) =
          f_get_address_rowid(gobsevs_pidm, 'SVSFADDR', 'A', sysdate,1,'G',null)
          "
"BANINST1","GOVSVEV","SEVIS Exchange Visitor Data View","select
	gobsevs_pidm,
        gobsevs_sevis_id,
        stvvtyp_sevis_equiv,
        gobsevs_svcr_code,
	substr(spriden_last_name,1,40),
	spriden_first_name,
	spriden_mi,
	decode(substr(spbpers_name_suffix,1,3),	'I','I', 'II','II',
						'III','III', 'IV','IV',
			'SR','Sr.', 'SR.', 'Sr.','Sr','Sr.', 'Sr.', 'Sr.',
			'JR','Jr.', 'JR.', 'Jr.','Jr','Jr.', 'Jr.', 'Jr.'),
	decode(spbpers_sex,'N','U','','U',spbpers_sex),
	spbpers_birth_date,
        a.stvnatn_sevis_equiv,
        b.stvnatn_sevis_equiv,
        d.stvnatn_sevis_equiv,
	x.spraddr_street_line1,
        rtrim(substr(decode(x.spraddr_street_line2,NULL, x.spraddr_street_line3,
                x.spraddr_street_line2||' '||x.spraddr_street_line3),1,60)),
	x.spraddr_city,
	x.spraddr_stat_code,
	substr(x.spraddr_zip,1,5),
	substr(replace(x.spraddr_zip,'-',''),6,4),
	y.spraddr_street_line1,
        rtrim(substr(decode(y.spraddr_street_line2,NULL, y.spraddr_street_line3,
                y.spraddr_street_line2||' '||y.spraddr_street_line3),1,60)),
	y.spraddr_city,
	stvstat_desc,
	y.spraddr_zip,
        c.stvnatn_sevis_equiv,
	gobsevs_program_begin_date,
	gobsevs_program_end_date,
	gobsevs_svtr_code,
	gobsevs_terminate_date,
	gobsevs_svit_code,
	gobsevs_other_infract_comment,
	gobsevs_svep_code,
	gobsevs_svep_comment,
	gobsevs_extend_end_date,
	gobsevs_end_program_eff_date,
	gobsevs_ev_form_number,
	gobsevs_svrp_code,
	gobsevs_reprint_reason_comment,
        gobsevs_trans_cde,
	gobsevs_svcr_comment,
	decode(gobsevs_print_request_ind,'Y','1','0'),
	gobsevs_svpc_code,
        decode(stvmajr_sevis_equiv,NULL,'',
		substr(stvmajr_sevis_equiv,1,2)||'.'||
		substr(stvmajr_sevis_equiv,3,4)),
	gobsevs_svsc_comment,
	gobsevs_svcc_code,
	gobsevs_new_program_start_date,
	gobsevs_new_program_end_date,
	gobsevs_program_sponsor_funds,
	gobsevs_personal_funds,
	gobsevs_funding_comment,
	gobsevs_govt_org_funds,
	gobsevs_svgo_code,
	gobsevs_govt_org_funds_2,
	gobsevs_svgo_code_2,
	gobsevs_intl_org_funds,
	gobsevs_svio_code,
	gobsevs_intl_org_funds_2,
	gobsevs_svio_code_2,
	gobsevs_ev_govt_funds,
	gobsevs_bination_funds,
	gobsevs_other_org_funds,
	decode(gobsevs_program_start_ind,'Y','1','0'),
	gobsevs_extend_program_comment,
	gobsevs_amend_program_comment,
	gobsevs_matriculation_cde,
	gobsevs_extend_failure_comment,
	gobsevs_conclude_trans_comment,
	gobsevs_svtr_comment,
	gobsevs_birth_city,
	gobsevs_edit_bio_comment,
	gobsevs_program_cde,
	gobsevs_officer_id,
	decode(gobsevs_noshow_ind,'Y','1','0'),
	gobsevs_birth_natn_reason_cde,
	gobsevs_svgo_name,
	gobsevs_svgo_name_2,
	gobsevs_svio_name,
	gobsevs_svio_name_2,
	gobsevs_other_org_name,
	gobsevs_svsc_desc,
	gobsevs_passport_number,
	e.stvnatn_sevis_equiv,
        gobsevs_passport_expire_date,
	gobsevs_visa_number,
	gobsevs_svcp_code,
	gobsevs_visa_issue_date,
	gobsevs_visa_expire_date,
	gobsevs_admission_number,
	stvpent_sevis_equiv,
	gobsevs_entry_date,
	gobsevs_svca_comment,
	gobsevs_svct_code
	from
	stvnatn a, stvnatn b, stvnatn c, stvnatn d, stvnatn e,
	stvstat, stvpent,
	spraddr x, spraddr y,
        gtvsvtr, gtvsvcr, gtvsvit, gtvsvcc,
	stvmajr, stvvtyp, spbpers, spriden, gobsevs
	where
                spriden_pidm = gobsevs_pidm
          and   spriden_change_ind IS NULL
          and	spbpers_pidm(+) = gobsevs_pidm
          and   gobsevs_vtyp_code = stvvtyp_code(+)
	  and   gobsevs_birth_natn_code = a.stvnatn_code(+)
	  and   gobsevs_legal_natn_code = b.stvnatn_code(+)
	  and   gobsevs_natn_code_perm_res = d.stvnatn_code(+)
	  and   gobsevs_natn_code_passport = e.stvnatn_code(+)
	  and   gobsevs_pent_code = stvpent_code(+)
          and	stvmajr_code(+) = gobsevs_svsc_code
	  and	stvmajr_valid_major_ind(+) = 'Y'
          and   gtvsvcr_code(+) = gobsevs_svcr_code
          and   gtvsvtr_code(+) = gobsevs_svtr_code
          and   gtvsvit_code(+) = gobsevs_svit_code
          and   gtvsvcc_code(+) = gobsevs_svcc_code
	  and  ( gtvsvcr_usage_ind = '2' or gtvsvtr_usage_ind = '2')
	  and   y.spraddr_natn_code = c.stvnatn_code(+)
	  and   y.spraddr_stat_code = stvstat_code(+)
   	  and	x.rowid(+) =
          f_get_address_rowid(gobsevs_pidm, 'SVSUADDR', 'A', sysdate,1,'G',null)
	  and	y.rowid(+) =
          f_get_address_rowid(gobsevs_pidm, 'SVSFADDR', 'A', sysdate,1,'G',null)
          "
"BANINST1","GOVSVEI","SEVIS Employment Information View","select gorsvei_pidm,
		gorsvei_seq_no,
		decode(gorsvei_employer_pidm,NULL,gorsvei_employer_name,
                      spriden_first_name||
	   	      decode(spriden_mi,NULL,' ',
			     ' '||spriden_mi||' ')||spriden_last_name),
		decode( gorsvei_emp_auth_ind,  'Y','1', '0'),
 		gorsvei_employment_type_cde,
 		gorsvei_employment_cde,
 		gorsvei_employment_time_cde,
		gorsvei_start_date,
		gorsvei_end_date,
		decode(gorsvei_employer_pidm,NULL,gorsvei_street_line1,
			spraddr_street_line1),
		decode(gorsvei_employer_pidm,NULL,gorsvei_street_line2,
			substr(decode(spraddr_street_line2,NULL,
			spraddr_street_line3,
			spraddr_street_line2||' '||spraddr_street_line3),
			1, 60)),
		decode(gorsvei_employer_pidm,NULL,gorsvei_city,
			spraddr_city),
		decode(gorsvei_employer_pidm,NULL,gorsvei_stat_code,
			spraddr_stat_code),
		decode(gorsvei_employer_pidm,NULL, substr(gorsvei_zip,1,5),
			substr(spraddr_zip,1,5)),
		decode(gorsvei_employer_pidm,NULL,
			substr(replace(gorsvei_zip,'-',''),6,4),
			substr(replace(spraddr_zip,'-',''),6,4)),
		gorsvei_course_relevance,
		gorsvei_employment_comment,
		decode(gobsevs_print_request_ind,'Y','1','0'),
		gorsvei_recommendation,
		decode(gorsvei_cancel_ind,'Y','1','0'),
		decode(gorsvei_opt_acad_yr_met_ind,'Y','1','0')
	from  spraddr, spriden, gobsevs, gorsvei
	where   gorsvei_pidm = gobsevs_pidm and
		gorsvei_employer_pidm = spriden_pidm(+) and
		gorsvei_employer_pidm = spraddr_pidm(+) and
		spriden_change_ind is null and
		gorsvei_atyp_code = spraddr_atyp_code(+)    and
		trunc(sysdate) <= nvl(spraddr_to_date, trunc(sysdate)) and
		trunc(sysdate) >= nvl(spraddr_from_date, trunc(sysdate))
	"
"BANINST1","GOVSVDP","SEVIS Dependent Data View","select gorsevd_pidm,
		gorsevd_seq_no,
		stvrelt_sevis_equiv,
                gorsevd_dep_pidm,
		decode(gorsevd_dep_pidm,NULL,gorsevd_dep_last_name,
                       spriden_last_name),
		decode(gorsevd_dep_pidm,NULL,gorsevd_dep_first_name,
                       spriden_first_name),
		decode(gorsevd_dep_pidm,NULL,gorsevd_dep_middle_name,
                       spriden_mi),
		decode(gorsevd_dep_pidm,NULL,gorsevd_dep_name_suffix,
		   decode(substr(spbpers_name_suffix,1,3),
						 'I','I', 'II','II',
						'III','III', 'IV','IV',
			'SR','Sr.', 'SR.', 'Sr.','Sr','Sr.', 'Sr.', 'Sr.',
			'JR','Jr.', 'JR.', 'Jr.','Jr','Jr.', 'Jr.', 'Jr.',NULL)),
		a.stvnatn_sevis_equiv,
		b.stvnatn_sevis_equiv,
		decode(gorsevd_dep_pidm,NULL,gorsevd_dep_birth_date,
                       spbpers_birth_date),
		gorsevd_dep_sevis_id,
		gorsevd_svdt_code,
		decode(gorsevd_gender,'N','U','','U',gorsevd_gender),
		stvvtyp_sevis_equiv,
		gorsevd_dep_birth_city,
		c.stvnatn_sevis_equiv,
		gorsevd_terminate_eff_date,
		gorsevd_dep_comment,
		gorsevd_svdt_comment,
		gorsevd_cancel_cde,
		decode(gorsevd_reprint_request_ind,'Y','1','0'),
		decode(gorsevd_delete_ind,'Y','1','0'),
		gorsevd_svrp_code,
		gorsevd_svrp_comment,
		gorsevd_birth_natn_reason_cde,
		gorsevd_form_purpose_cde
	from  stvnatn a, stvnatn b, stvnatn c, stvrelt,
              stvvtyp, spriden, spbpers, gorsevd
	where
		gorsevd_dep_birth_natn_code = a.stvnatn_code(+)
	and	gorsevd_dep_legal_natn_code = b.stvnatn_code(+)
	and     gorsevd_natn_code_perm_res  = c.stvnatn_code(+)
	and	gorsevd_relt_code = stvrelt_code(+)
	and	gorsevd_vtyp_code = stvvtyp_code(+)
        and     spriden_pidm(+) = gorsevd_dep_pidm
        and     spriden_change_ind(+) is null
        and     spbpers_pidm(+) = gorsevd_dep_pidm
	"
"BANINST1","GOVSVAS","SEVIS Activity Site View","select gorsvas_pidm,
		gorsvas_seq_no,
		decode(gorsvas_termination_ind, 'Y', '1', '0'),
		decode(gorsvas_act_site_pidm,NULL,gorsvas_act_site_name,
                      substr(spriden_first_name||
	   	      decode(spriden_mi,NULL,' ',
			     ' '||spriden_mi||' ')||spriden_last_name,1,60)),
		decode(gorsvas_act_site_pidm,NULL,gorsvas_street_line1,
			spraddr_street_line1),
		decode(gorsvas_act_site_pidm,NULL,gorsvas_street_line2,
			substr(decode(spraddr_street_line2,NULL,
				spraddr_street_line3,
				spraddr_street_line2||' '||
				spraddr_street_line3),1,60)),
		decode(gorsvas_act_site_pidm,NULL,gorsvas_city,
			spraddr_city),
		decode(gorsvas_act_site_pidm,NULL,gorsvas_stat_code,
			spraddr_stat_code),
		decode(gorsvas_act_site_pidm,NULL, substr(gorsvas_zip,1,5),
			substr(spraddr_zip,1,5)),
		decode(gorsvas_act_site_pidm,NULL,
			substr(replace(gorsvas_zip,'-',''),6,4),
			substr(replace(spraddr_zip,'-',''),6,4)),
		gorsvas_act_site_comment,
		decode(gobsevs_print_request_ind,'Y','1','0'),
		decode(gorsvas_primary_site_ind,'Y','1','0')
	from  spriden, spraddr, gobsevs, gorsvas
	where   gorsvas_pidm = gobsevs_pidm and
		gorsvas_act_site_pidm = spriden_pidm(+) and
		gorsvas_act_site_pidm = spraddr_pidm(+) and
		spriden_change_ind is null and
		gorsvas_atyp_code = spraddr_atyp_code(+)    and
		trunc(sysdate) <= nvl(spraddr_to_date, trunc(sysdate)) and
		trunc(sysdate) >= nvl(spraddr_from_date, trunc(sysdate))
	
 "
"BANINST1","GOVSRVR","Survey Respondent View - This views is used to display records from the GOBSRVR table.","select
gobsrvr_pidm,
gobsrvr_name,
gobsrvr_declined_ind,
gobsrvr_complete_ind,
spriden_id,
decode(spriden_mi,
   '',(spriden_last_name || ', ' || spriden_first_name)
     ,(spriden_last_name || ', ' || spriden_first_name
      || ' '  || substr(spriden_mi,1,1) || '.')),
spriden_last_name,
spriden_first_name,
spriden_mi,
spbpers_name_prefix,
spbpers_name_suffix,
gobsrvr_user,
gobsrvr_activity_date
from  spbpers, spriden, gobsrvr
where spriden_pidm = gobsrvr_pidm
  and spriden_change_ind is null
  and spriden_entity_ind = 'P'
  and spbpers_pidm(+) = spriden_pidm"
"BANINST1","GOVSDAV","GOVSDAV: Supplemental Data Attribute Values and Metadata view.","SELECT
   gorsdam_table_name      AS govsdav_table_name
  ,gorsdam_attr_name       AS govsdav_attr_name
  ,gorsdam_attr_type       AS govsdav_attr_type
  ,gorsdam_attr_order      AS govsdav_attr_order
  ,gorsdam_attr_reqd_ind   AS govsdav_attr_reqd_ind
  ,gorsdam_attr_data_type  AS govsdav_attr_data_type
  ,gorsdam_attr_data_len   AS govsdav_attr_data_len
  ,gorsdam_attr_data_scale AS govsdav_attr_data_scale
  ,REPLACE(gorsdam_attr_prompt,'%DISC%',
      NVL(NVL(gotsdcr_desc,NVL(gorsdav_disc, gotsdcr_disc)),
          DECODE(gobsddc_method,'I','1',''))
    )                      AS govsdav_attr_prompt_disp
  ,gorsdam_attr_prompt     AS govsdav_attr_prompt
  ,gorsdam_attr_info       AS govsdav_attr_info
  ,gorsdam_attr_base_col   AS govsdav_attr_base_col
  ,gorsdam_sddc_code             AS govsdav_sddc_code
  ,gorsdam_lov_form              AS govsdav_lov_form
  ,gorsdam_lov_table_ovrd        AS govsdav_lov_table_ovrd
  ,gorsdam_lov_attr_ovrd         AS govsdav_lov_attr_ovrd
  ,gorsdam_lov_code_title        AS govsdav_lov_code_title
  ,gorsdam_lov_desc_title        AS govsdav_lov_desc_title
  ,gorsdam_lov_low_range_char    AS govsdav_lov_low_range
  ,gorsdam_lov_high_range_char   AS govsdav_lov_high_range
  ,gorsdam_lov_low_sysdate_ind   AS govsdav_lov_low_sysdate_ind
  ,gorsdam_lov_high_sysdate_ind  AS govsdav_lov_high_sysdate_ind
  ,gorsdam_gjapdef_validation    AS govsdav_gjapdef_validation
  ,gorsdam_sql_sqpr_code         AS govsdav_sql_sqpr_code
  ,gorsdam_sql_sqru_code         AS govsdav_sql_sqru_code
  ,DECODE(gobsddc_method,NULL,'S','M')       AS govsdav_disc_type
  ,gobsddc_method          AS govsdav_disc_method
  ,gobsddc_validation      AS govsdav_disc_validation
  ,NVL(gorsdav_disc, gotsdcr_disc) AS govsdav_disc
  ,gotsdcr_desc            AS govsdav_desc
  ,gorsdav_pk_parenttab    AS govsdav_pk_parenttab
  ,gorsdav_value           AS govsdav_value
  ,DECODE(v.gorsdav_value.gettypename(),
         'SYS.DATE'    , TO_CLOB(v.gorsdav_value.accessDate()),
         'SYS.VARCHAR2', TO_CLOB(v.gorsdav_value.accessVarchar2()),
         'SYS.CLOB'    , v.gorsdav_value.accessCLOB(),
         'SYS.NUMBER'  , TO_CLOB(v.gorsdav_value.accessNumber())
         )                 AS govsdav_value_as_clob
  ,DECODE(v.gorsdav_value.gettypename(),
         'SYS.DATE'    , TO_CHAR(v.gorsdav_value.accessDate()),
         'SYS.VARCHAR2', v.gorsdav_value.accessVarchar2(),
         'SYS.CLOB'    , TO_CHAR(v.gorsdav_value.accessCLOB()),
         'SYS.NUMBER'  , TO_CHAR(v.gorsdav_value.accessNumber())
         )                 AS govsdav_value_as_char
  ,v.rowid                 AS govsdav_rowid
  FROM (SELECT c.gobsddc_method,c.gobsddc_validation, d.gotsdcr_disc, d.gotsdcr_desc
               ,m.gorsdam_table_name
               ,m.gorsdam_attr_name
               ,m.gorsdam_attr_type
               ,m.gorsdam_attr_order
               ,m.gorsdam_attr_reqd_ind
               ,m.gorsdam_attr_data_type
               ,m.gorsdam_attr_prompt
               ,m.gorsdam_activity_date
               ,m.gorsdam_user_id
               ,m.gorsdam_attr_data_len
               ,m.gorsdam_attr_data_scale
               ,m.gorsdam_attr_info
               ,m.gorsdam_attr_base_col
               ,m.gorsdam_sddc_code
               ,m.gorsdam_data_origin
               ,m.gorsdam_lov_form
               ,m.gorsdam_lov_table_ovrd
               ,m.gorsdam_lov_attr_ovrd
               ,m.gorsdam_lov_code_title
               ,m.gorsdam_lov_desc_title
               ,gp_goksdif.f_to_varchar2(m.gorsdam_lov_low_range) as gorsdam_lov_low_range_char
               ,gp_goksdif.f_to_varchar2(m.gorsdam_lov_high_range) as gorsdam_lov_high_range_char
               ,m.gorsdam_lov_low_sysdate_ind
               ,m.gorsdam_lov_high_sysdate_ind
               ,m.gorsdam_gjapdef_validation
               ,m.gorsdam_sql_sqpr_code
               ,m.gorsdam_sql_sqru_code
        FROM gorsdam m, gobsddc c, gotsdcr d
        WHERE c.gobsddc_code          = m.gorsdam_sddc_code
          AND c.gobsddc_method       IN ('S','U')
          AND d.gotsdcr_table_name (+)= m.gorsdam_table_name
          AND d.gotsdcr_attr_name  (+)= m.gorsdam_attr_name
        UNION
        SELECT c.gobsddc_method,c.gobsddc_validation, d.gorsdav_disc, d.gorsdav_disc
               ,m.gorsdam_table_name
               ,m.gorsdam_attr_name
               ,m.gorsdam_attr_type
               ,m.gorsdam_attr_order
               ,m.gorsdam_attr_reqd_ind
               ,m.gorsdam_attr_data_type
               ,m.gorsdam_attr_prompt
               ,m.gorsdam_activity_date
               ,m.gorsdam_user_id
               ,m.gorsdam_attr_data_len
               ,m.gorsdam_attr_data_scale
               ,m.gorsdam_attr_info
               ,m.gorsdam_attr_base_col
               ,m.gorsdam_sddc_code
               ,m.gorsdam_data_origin
               ,m.gorsdam_lov_form
               ,m.gorsdam_lov_table_ovrd
               ,m.gorsdam_lov_attr_ovrd
               ,m.gorsdam_lov_code_title
               ,m.gorsdam_lov_desc_title
               ,gp_goksdif.f_to_varchar2(m.gorsdam_lov_low_range) as gorsdam_lov_low_range_char
               ,gp_goksdif.f_to_varchar2(m.gorsdam_lov_high_range) as gorsdam_lov_high_range_char
               ,m.gorsdam_lov_low_sysdate_ind
               ,m.gorsdam_lov_high_sysdate_ind
               ,m.gorsdam_gjapdef_validation
               ,m.gorsdam_sql_sqpr_code
               ,m.gorsdam_sql_sqru_code
        FROM gorsdam m, gobsddc c, gorsdav d
        WHERE c.gobsddc_code            = m.gorsdam_sddc_code
          AND c.gobsddc_method          = 'I'
          AND d.gorsdav_table_name   (+)= m.gorsdam_table_name
          AND d.gorsdav_attr_name    (+)= m.gorsdam_attr_name
          AND d.gorsdav_pk_parenttab (+) like nvl(gp_goksdif.f_get_current_pk,'%')
        UNION
        SELECT NULL,NULL,'1','1'
               ,m.gorsdam_table_name
               ,m.gorsdam_attr_name
               ,m.gorsdam_attr_type
               ,m.gorsdam_attr_order
               ,m.gorsdam_attr_reqd_ind
               ,m.gorsdam_attr_data_type
               ,m.gorsdam_attr_prompt
               ,m.gorsdam_activity_date
               ,m.gorsdam_user_id
               ,m.gorsdam_attr_data_len
               ,m.gorsdam_attr_data_scale
               ,m.gorsdam_attr_info
               ,m.gorsdam_attr_base_col
               ,m.gorsdam_sddc_code
               ,m.gorsdam_data_origin
               ,m.gorsdam_lov_form
               ,m.gorsdam_lov_table_ovrd
               ,m.gorsdam_lov_attr_ovrd
               ,m.gorsdam_lov_code_title
               ,m.gorsdam_lov_desc_title
               ,gp_goksdif.f_to_varchar2(m.gorsdam_lov_low_range) as gorsdam_lov_low_range_char
               ,gp_goksdif.f_to_varchar2(m.gorsdam_lov_high_range) as gorsdam_lov_high_range_char
               ,m.gorsdam_lov_low_sysdate_ind
               ,m.gorsdam_lov_high_sysdate_ind
               ,m.gorsdam_gjapdef_validation
               ,m.gorsdam_sql_sqpr_code
               ,m.gorsdam_sql_sqru_code
        FROM gorsdam m
        WHERE m.gorsdam_sddc_code IS NULL -- Single valued
  ) md
  , gorsdav v
  WHERE gorsdav_table_name  (+)= md.gorsdam_table_name
    AND gorsdav_attr_name   (+)= md.gorsdam_attr_name
    AND gorsdav_disc        (+)= md.gotsdcr_disc
    AND gorsdav_pk_parenttab(+) like nvl(gp_goksdif.f_get_current_pk,'%')
"
"BANINST1","GOVROLE","User roles view","SELECT spriden_pidm,
          SUBSTR (f_student_gen_students_ind (spriden_pidm), 1, 1),
          SUBSTR (f_student_faculty_ind (spriden_pidm), 1, 1),
          SUBSTR (f_payroll_employee_ind (spriden_pidm), 1, 1),
          SUBSTR (f_alumni_constituent_ind (spriden_pidm), 1, 1),
          SUBSTR (f_finance_user_ind (spriden_pidm), 1, 1),
          SUBSTR (
             DECODE (
                f_alumni_constituent_ind (spriden_pidm),
                'Y', 'N',
                f_alumni_friend_ind(spriden_pidm)
             ), 1, 1 ),
          SUBSTR (f_finaid_applicant_ind (spriden_pidm, NULL, NULL), 1, 1),
          SUBSTR (
             DECODE (
                f_student_admissions_ind (spriden_pidm),
                'Y', 'Y',
                f_student_gen_students_ind (spriden_pidm)
              ), 1, 1)
     FROM spriden
    WHERE spriden_change_ind IS NULL"
"BANINST1","GOVFUSR","This view lists users who have VBS using FGAC restrictions.","select gorfgus_fgac_user_id,
gorfgus_fdmn_code
from gobfgac, gorfgus
where gobfgac_fgac_code = gorfgus_fgac_code
and gobfgac_active_ind = 'Y'
and nvl(gobfgac_eff_date, trunc(sysdate)) <= trunc(sysdate)
UNION
select gorfbpr_fgac_user_id,
gorfgbp_fdmn_code
from gobfgac, gorfbpr, gorfgbp
where gobfgac_fgac_code = gorfgbp_fgac_code
and gobfgac_active_ind = 'Y'
and nvl(gobfgac_eff_date, trunc(sysdate)) <= trunc(sysdate)
and gorfbpr_fbpr_code = gorfgbp_fbpr_code
and not exists ( select 'x' from gorfgus x
      where x.gorfgus_fgac_user_id = gorfbpr_fgac_user_id
       and x.gorfgus_fgac_code = gorfgbp_fgac_code
       and x.gorfgus_fdmn_code = gorfgbp_fdmn_code
       and x.gorfgus_fprd_seqno = gorfgbp_fprd_seqno)"
"BANINST1","GOVFPII","This view lists users and their PII domain assignments.","select gorfpii_fgac_user_id,
gorfpii_fdmn_code_pii
from gorfpii
UNION
select gorfbpr_fgac_user_id,
gorfbpi_fdmn_code
from gorfbpi, gorfbpr
where gorfbpi_fbpr_code = gorfbpr_fbpr_code
and not exists ( select 'x' from gorfpii x
      where x.gorfpii_fgac_user_id = gorfbpr_fgac_user_id
      and x.gorfpii_fdmn_code_pii = gorfbpi_fdmn_code)
"
"BANINST1","GOVFGAC","GOVFGAC: This view lists users who have VBS or PII using FGAC restrictions defined on GOAFGAC and GORFDPI.","select
 govfusr_fgac_user_id,
 gorfdpl_table_name,
 gokfgac.f_query_policy(gorfdpl_table_name, 'INSERT'),
 gokfgac.f_query_predicate(gorfdpl_table_name, 'INSERT', govfusr_fgac_user_id),
 gokfgac.f_query_policy(gorfdpl_table_name, 'SELECT'),
 gokfgac.f_query_predicate(gorfdpl_table_name, 'SELECT', govfusr_fgac_user_id),
 gokfgac.f_query_policy(gorfdpl_table_name, 'UPDATE'),
 gokfgac.f_query_predicate(gorfdpl_table_name, 'UPDATE', govfusr_fgac_user_id),
 gokfgac.f_query_policy(gorfdpl_table_name, 'DELETE'),
 gokfgac.f_query_predicate(gorfdpl_table_name, 'DELETE', govfusr_fgac_user_id)
from gorfdpl, govfusr
where  gorfdpl_fdmn_code = govfusr_fdmn_code
group by govfusr_fgac_user_id, gorfdpl_table_name
UNION ALL
select
 usr.username,
 gorfdpi_table_name,
 NULL, NULL,
 gokfgac.f_query_policy(gorfdpi_table_name, 'SELECT'),
 gokfgac.f_query_predicate(gorfdpi_table_name, 'SELECT', usr.username),
 NULL, NULL,
 NULL, NULL
from gorfdpi, dba_users usr
where
    not exists ( select 'x' from gorfdpl vbs, govfusr usr
    where vbs.gorfdpl_table_name = gorfdpi_table_name
    and vbs.gorfdpl_fdmn_code = usr.govfusr_fdmn_code
    and usr.govfusr_fgac_user_id = usr.username)
order by govfusr_fgac_user_id, gorfdpl_table_name
"
"BANINST1","GOVELTR","Proxy Access view","SELECT gpbeltr.ROWID                                      AS GOVELTR_ROWID_KEY
         ,gpbeltr_proxy_idm                                  AS GOVELTR_PROXY_IDM
         ,gpbprxy_proxy_pidm                                 AS GOVELTR_PROXY_PIDM
         ,DECODE (NVL (gpbprxy_proxy_pidm, 0),
                  0, gpbprxy_first_name || ' ' || gpbprxy_last_name,
                  f_format_name (gpbprxy_proxy_pidm, 'FL'))  AS GOVELTR_PROXY_NAME
         ,DECODE (NVL (gpbprxy_proxy_pidm, 0),
                  0, gpbprxy_email_address,
                  prxyemal.goremal_email_address)            AS GOVELTR_PROXY_EMAIL
         ,gpbeltr_proxy_old_data                             AS GOVELTR_PROXY_OLD_DATA
         ,gpbeltr_proxy_new_data                             AS GOVELTR_PROXY_NEW_DATA
         ,gprxref_passphrase                                 AS GOVELTR_PROXY_PASSPHRASE
         ,gpbprxy_salt                                       AS GOVELTR_PROXY_SALT
         ,gpbeltr_person_pidm                                AS GOVELTR_PERSON_PIDM
         ,DECODE (NVL (gpbeltr_person_pidm, 0),
                  0, NULL,
                  f_format_name (gpbeltr_person_pidm, 'FL')) AS GOVELTR_PERSON_NAME
         ,prsnemal.goremal_email_address                     AS GOVELTR_PERSON_EMAIL
         ,gpbeltr_ctyp_code                                  AS GOVELTR_CTYP_CODE
         ,gtvctyp_desc                                       AS GOVELTR_CTYP_DESC
         ,gpbeltr_ctyp_url                                   AS GOVELTR_CTYP_URL
         ,NVL(gebcomm_admin_email,gokprxy.f_wt_parm('PROXY_ACCESS_EMAIL_FROM'))
                                                             AS GOVELTR_ADMIN_EMAIL
         ,gprxref_retp_code                                  AS GOVELTR_RETP_CODE
         ,gtvretp_desc                                       AS GOVELTR_RETP_DESC
     FROM gpbeltr,
          gpbprxy,
          gprxref,
          goremal prxyemal,
          goremal prsnemal,
          gtvctyp,
          gebcomm,
          gtvretp
    WHERE     gpbprxy_proxy_idm      = gpbeltr_proxy_idm
          AND gprxref_proxy_idm(+)   = gpbeltr_proxy_idm
          AND gprxref_person_pidm(+) = gpbeltr_person_pidm
          AND gtvctyp_code           = gpbeltr_ctyp_code
          AND gtvretp_code(+)        = gprxref_retp_code
          AND gebcomm_syst_code      = gpbeltr_syst_code
          AND gebcomm_ctyp_code      = gpbeltr_ctyp_code
          AND prxyemal.ROWID(+)      = f_get_email_rowid (gpbprxy_proxy_pidm,
                                                     'PRXY_EMAIL',
                                                     'A',
                                                     1)
          AND prsnemal.ROWID(+)      = f_get_email_rowid (gpbeltr_person_pidm,
                                                     'PRSN_EMAIL',
                                                     'A',
                                                     1)
"
"BANINST1","GOVCMRT","Common Matching Results View","SELECT X.GOTCMRT_CMSC_CODE,
        X.GOTCMRT_CMSR_PRIORITY_NO,
        X.GOTCMRT_PIDM,
        X.GOTCMRT_RESULT_TYPE,
        X.GOTCMRT_MATCH_COUNT,
        X.GOTCMRT_MISSING_COUNT,
        X.GOTCMRT_UNMATCH_COUNT,
        X.GOTCMRT_MESSAGE,
        X.GOTCMRT_RESULT_IND,
        X.GOTCMRT_SPRIDEN_ID_ROWID,
        X.GOTCMRT_SPRIDEN_NAME_ROWID,
        X.GOTCMRT_SPRADDR_ROWID,
        X.GOTCMRT_SPRTELE_ROWID,
        X.GOTCMRT_GOREMAL_ROWID,
        X.GOTCMRT_GORADID_ROWID,
--
        (SELECT SPRIDEN_ID || DECODE(SPRIDEN_CHANGE_IND,'I','*','')
           FROM SPRIDEN
          WHERE (ROWID = X.GOTCMRT_SPRIDEN_ID_ROWID
            AND  X.GOTCMRT_SPRIDEN_ID_ROWID IS NOT NULL)
         UNION
         SELECT SPRIDEN_ID
           FROM SPRIDEN
          WHERE (SPRIDEN_PIDM = X.GOTCMRT_PIDM
            AND  X.GOTCMRT_SPRIDEN_ID_ROWID IS NULL)
            AND SPRIDEN_CHANGE_IND IS NULL) GOVCMRT_ID,
--
        (SELECT RTRIM(SPRIDEN_LAST_NAME || DECODE(SPRIDEN_CHANGE_IND,'N','*','')
	        || ', ' || SPRIDEN_FIRST_NAME
                || DECODE(SPRIDEN_MI,'',''
                                    ,' ' || SUBSTR(SPRIDEN_MI,1,1) || '.'),', ')
           FROM SPRIDEN
          WHERE (ROWID = X.GOTCMRT_SPRIDEN_NAME_ROWID
            AND  X.GOTCMRT_SPRIDEN_NAME_ROWID IS NOT NULL)
         UNION
         SELECT RTRIM(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME
                || DECODE(SPRIDEN_MI,'',''
                                    ,' ' || SUBSTR(SPRIDEN_MI,1,1) || '.'),', ')
           FROM SPRIDEN
          WHERE (SPRIDEN_PIDM = X.GOTCMRT_PIDM
            AND  X.GOTCMRT_SPRIDEN_NAME_ROWID IS NULL)
            AND SPRIDEN_CHANGE_IND IS NULL) GOVCMRT_NAME
   FROM GOTCMRT X"
"BANINST1","GOVCMID","Common Matching Results View","SELECT X.GOVCMRT_PIDM,
        X.GOVCMRT_ID,
        X.GOVCMRT_NAME
--
   FROM GOVCMRT X
  WHERE X.GOVCMRT_RESULT_IND = 'M'
     OR X.GOVCMRT_RESULT_IND = 'S'
  GROUP BY X.GOVCMRT_PIDM, X.GOVCMRT_ID, X.GOVCMRT_NAME"
"BANINST1","GLVSLCT","Population Selection View","SELECT DISTINCT GLBSLCT_APPLICATION,
                GLBSLCT_SELECTION,
                GLBSLCT_CREATOR_ID
  FROM GLBSLCT
 "
"BANINST1","GLVRSLT","Selection ID Results View","SELECT DISTINCT GLBEXTR_APPLICATION, GLBEXTR_SELECTION,
        GLBEXTR_CREATOR_ID, GLBEXTR_USER_ID, COUNT(GLBEXTR_KEY)
   FROM GLBEXTR
  GROUP BY GLBEXTR_APPLICATION, GLBEXTR_SELECTION,
           GLBEXTR_CREATOR_ID, GLBEXTR_USER_ID"
"BANINST1","GLVEXTR","Population Selection ID Inquiry View","SELECT GLBEXTR_APPLICATION, GLBEXTR_SELECTION, GLBEXTR_CREATOR_ID,
        GLBEXTR_USER_ID, GLBEXTR_KEY,
        DECODE(SPRIDEN_MI,
           '',(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME)
             ,(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME
                                 || ' '  || SUBSTR(SPRIDEN_MI,1,1) || '.')),
        SPRIDEN_ID, GLBEXTR_SYS_IND, GLBEXTR_ACTIVITY_DATE
   FROM GLBEXTR, SPRIDEN
  WHERE GLBEXTR_KEY = SPRIDEN_PIDM
    AND SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","GKVSPRO","Self Service Engine Property View.","SELECT
   val.gkrsobi_page_id gkvspro_page_id
 , val.gkrsopt_obj_sobj_code gkvspro_obj_sobj_code
 , val.gkrsopt_sprt_code gkvspro_sprt_code
 , val.gkrsobi_obj_inst_id gkvspro_obj_inst_id
 , NVL(DECODE(DBMS_LOB.GETLENGTH(pri.gkrspri_prop_clob_val), NULL,
         DECODE(pri.gkrspri_prop_val.gettypename(),
         'SYS.DATE'    , TO_CLOB(pri.gkrspri_prop_val.accessdate()),
         'SYS.NUMBER'  , TO_CLOB(pri.gkrspri_prop_val.accessnumber())
         ), pri.gkrspri_prop_clob_val),  val.gkvspro_default_val)
         AS gkvspro_prop_clob_val
 , pri.gkrspri_prop_val gkvspro_prop_val
 , val.gkbsprt_prop_desc gkvspro_prop_desc
 , val.gkbsprt_prop_data_type gkvspro_prop_data_type
 , val.gkbsprt_prop_size gkvspro_prop_size
 , val.gkbsprt_lov_qry gkvspro_lov_qry
 , val.gkbsprt_lov_validate_ind gkvspro_lov_validate_ind
 , val.gkbsprt_hint_text gkvspro_hint_text
 , val.gkbsprt_show_lov_ind gkvspro_show_lov_ind
 , val.gkvspro_default_val gkvspro_default_val
 , val.gkvspro_req_ind gkvspro_req_ind
 , val.gkbsprt_disp_seq gkvspro_disp_seq
 , pri.ROWID gkvspro_rowid
FROM
 (
   SELECT
     prt.gkbsprt_prop_desc
   , prt.gkbsprt_prop_data_type
   , prt.gkbsprt_prop_size
   , prt.gkbsprt_lov_qry
   , prt.gkbsprt_show_lov_ind
   , prt.gkbsprt_lov_validate_ind
   , prt.gkbsprt_hint_text
   , opt.gkrsopt_obj_sobj_code
   , opt.gkrsopt_sprt_code
   , TO_CLOB(NVL(opt.gkrsopt_default_val,prt.gkbsprt_default_val) ) gkvspro_default_val
   , NVL(opt.gkrsopt_req_ind,prt.gkbsprt_req_ind) gkvspro_req_ind
   , prt.gkbsprt_disp_seq
   , obi.gkrsobi_obj_inst_id
   , obi.gkrsobi_page_id
   FROM GKRSOPT opt, GKBSPRT prt, GKRSOBI obi
   WHERE opt.gkrsopt_sprt_code=prt.gkbsprt_code
     AND obi.gkrsobi_obj_sobj_code=opt.gkrsopt_obj_sobj_code
) val
 , GKRSPRI pri
 WHERE pri.gkrspri_obj_sobi_code(+)  =  val.gkrsopt_obj_sobj_code
   AND pri.gkrspri_page_id(+)        =  val.gkrsobi_page_id
   AND pri.gkrspri_obj_inst_id(+)    =  val.gkrsobi_obj_inst_id
   AND pri.gkrspri_code(+)           =  val.gkrsopt_sprt_code
"
"BANINST1","GKVSAPR","Application object instance view.","SELECT
   val.gkrsaoi_top_saot_code gkvsapr_top_saot_code
 , val.gkrsaoi_top_id        gkvsapr_top_saoi_id
 , val.gkrsaop_saot_code gkvsapr_saot_code
 , val.gkrsaoi_id        gkvsapr_saoi_id
 , val.gkrsaop_sprt_code gkvsapr_sprt_code
 , NVL( DECODE(pri.gkrsapi_prop_val.gettypename(),
         'SYS.DATE'    , TO_CLOB(pri.gkrsapi_prop_val.accessdate()),
         'SYS.VARCHAR2', TO_CLOB(pri.gkrsapi_prop_val.accessvarchar2()),
         'SYS.CLOB'    , pri.gkrsapi_prop_val.accessclob(),
         'SYS.NUMBER'  , TO_CLOB(pri.gkrsapi_prop_val.accessnumber())
         ),  val.gkvsapr_default_val)
                                 AS gkvsapr_prop_clob_val
 , pri.gkrsapi_prop_val             gkvsapr_prop_val
 , val.gkbsprt_prop_desc            gkvsapr_prop_desc
 , val.gkbsprt_prop_data_type       gkvsapr_prop_data_type
 , val.gkbsprt_prop_size            gkvsapr_prop_size
 , val.gkbsprt_lov_qry              gkvsapr_lov_qry
 , val.gkbsprt_lov_validate_ind     gkvsapr_lov_validate_ind
 , val.gkbsprt_hint_text            gkvsapr_hint_text
 , val.gkbsprt_show_lov_ind         gkvsapr_show_lov_ind
 , val.gkvsapr_default_val          gkvsapr_default_val
 , val.gkvsapr_req_ind              gkvsapr_req_ind
 , val.gkbsprt_disp_seq             gkvsapr_disp_seq
 , pri.ROWID                        gkvsapr_rowid
FROM
 (
   SELECT
     obi.gkrsaoi_top_saot_code
   , obi.gkrsaoi_top_id
   , opt.gkrsaop_saot_code
   , obi.gkrsaoi_id
   , prt.gkbsprt_prop_desc
   , prt.gkbsprt_prop_data_type
   , prt.gkbsprt_prop_size
   , prt.gkbsprt_lov_qry
   , prt.gkbsprt_show_lov_ind
   , prt.gkbsprt_lov_validate_ind
   , prt.gkbsprt_hint_text
   , opt.gkrsaop_sprt_code
   , TO_CLOB(NVL(opt.gkrsaop_default_val,prt.gkbsprt_default_val) ) gkvsapr_default_val
   , NVL(opt.gkrsaop_req_ind,prt.gkbsprt_req_ind) gkvsapr_req_ind
   , prt.gkbsprt_disp_seq
   FROM gkrsaop opt, gkbsprt prt, gkrsaoi obi
   WHERE opt.gkrsaop_sprt_code=prt.gkbsprt_code
     AND obi.gkrsaoi_saot_code=opt.gkrsaop_saot_code
) val
 , gkrsapi pri
 WHERE pri.gkrsapi_top_saot_code(+) = val.gkrsaoi_top_saot_code
   AND pri.gkrsapi_saoi_top_id(+)   = val.gkrsaoi_top_id
   AND pri.gkrsapi_saot_code(+)  =  val.gkrsaop_saot_code
   AND pri.gkrsapi_saoi_id(+)    =  val.gkrsaoi_id
   AND pri.gkrsapi_sprt_code(+)  =  val.gkrsaop_sprt_code
"
"BANINST1","GEVEVN2","Events Management work view.","select
 gebfunc_evnt_crn,
 slbevnt_desc,
 gebfunc_func_code,
 slbevnt_etyp_code,
 slbevnt_coll_code,
 slbevnt_dept_code,
 slbevnt_sysi_code,
 gebfunc_fsta_code,
 gebfunc_purp_code,
 gebfunc_purp_desc,
 gebfunc_emph_code,
 gebfunc_location,
 gebfunc_location_date,
 gebfunc_invitation_date,
 gebfunc_letr_code,
 gebfunc_rsvp_confirm_date,
 gebfunc_committee_name,
 gebfunc_plan_attend,
 f_count_attendees(gebfunc_evnt_crn, gebfunc_func_code),
 gebfunc_brk_even_attend,
 b.spriden_last_name,
 slbevnt_contact_pidm,
 decode(slbevnt_contact_pidm,null,substr(slbevnt_contact_name,1,30),
        substr(f_format_name(slbevnt_contact_pidm,'FL30'),1,30)),
 slbevnt_atyp_code,
 a.spraddr_street_line1,
 a.spraddr_street_line2,
 a.spraddr_street_line3,
 a.spraddr_city,
 a.spraddr_stat_code,
 a.spraddr_zip,
 slbevnt_phone_area,
 slbevnt_phone,
 slbevnt_phone_ext,
 l.gerpart_pidm,
 l.gerpart_atyp_code,
 gebfunc_etyp_code,
 m.gerpart_ptyp_code,
 m.gerpart_date,
 m.gerpart_contact_ind,
 m.gerpart_pidm,
 m.gerpart_atyp_code,
 n.gerpart_date,
 n.gerpart_contact_ind,
 n.gerpart_pidm,
 n.gerpart_atyp_code,
 substr(f_check_for_participants
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01PTYP',1,''),1,1),
 o.gerpart_ptyp_code,
 o.gerpart_date,
 o.gerpart_contact_ind,
 o.gerpart_pidm,
 o.gerpart_atyp_code,
 p.gerpart_date,
 p.gerpart_contact_ind,
 p.gerpart_pidm,
 p.gerpart_atyp_code,
 substr(f_check_for_participants
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01PTYP',2,''),1,1),
 substr(f_check_for_participants
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01PTYP','','A'),1,1),
 substr(f_get_task_type
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01TTYP',1),1,5),
 f_count_tasks
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01TTYP',1),
 substr(f_get_task_type
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01TTYP',2),1,5),
 f_count_tasks
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01TTYP',2),
 substr(f_get_task_type
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01TTYP',3),1,5),
 f_count_tasks
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01TTYP',3),
 substr(f_check_for_more_tasks
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01TTYP'),1,1),
 substr(f_check_for_event_comments
           (gebfunc_evnt_crn, gebfunc_func_code),1,1),
 substr(f_get_subject_index
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01SUBJ',1),1,5),
 substr(f_check_for_subj_cmnts
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01SUBJ',1),1,1),
 substr(f_get_subject_index
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01SUBJ',2),1,5),
 substr(f_check_for_subj_cmnts
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01SUBJ',2),1,1),
 substr(f_get_subject_index
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01SUBJ',3),1,5),
 substr(f_check_for_subj_cmnts
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01SUBJ',3),1,1),
 substr(f_check_for_more_subj_indexes
           (gebfunc_evnt_crn, gebfunc_func_code,'EV01SUBJ'),1,1),
 c.gerffee_ftyp_code,
 c.gerffee_rate_code,
 c.gerffee_amt,
 d.gerffee_ftyp_code,
 d.gerffee_rate_code,
 d.gerffee_amt,
 e.gerffee_ftyp_code,
 e.gerffee_rate_code,
 e.gerffee_amt,
 f.gerfrev_revn_code,
 f.gerfrev_budget_amt,
 f.gerfrev_actual_amt,
 f.gerfrev_actual_amt - f.gerfrev_budget_amt,
 f.gerfrev_revenue_date,
 g.gerfrev_revn_code,
 g.gerfrev_budget_amt,
 g.gerfrev_actual_amt,
 g.gerfrev_actual_amt - g.gerfrev_budget_amt,
 g.gerfrev_revenue_date,
 h.gerfrev_revn_code,
 h.gerfrev_budget_amt,
 h.gerfrev_actual_amt,
 h.gerfrev_actual_amt - h.gerfrev_budget_amt,
 h.gerfrev_revenue_date,
 i.gerfexp_expn_code,
 i.gerfexp_budget_amt,
 i.gerfexp_actual_amt,
 i.gerfexp_budget_amt - i.gerfexp_actual_amt,
 i.gerfexp_expense_date,
 j.gerfexp_expn_code,
 j.gerfexp_budget_amt,
 j.gerfexp_actual_amt,
 j.gerfexp_budget_amt - j.gerfexp_actual_amt,
 j.gerfexp_expense_date,
 k.gerfexp_expn_code,
 k.gerfexp_budget_amt,
 k.gerfexp_actual_amt,
 k.gerfexp_budget_amt - k.gerfexp_actual_amt,
 k.gerfexp_expense_date
 from spriden b, spraddr a,
      gerffee c, gerffee d, gerffee e,
      gerfrev f, gerfrev g, gerfrev h,
      gerfexp i, gerfexp j, gerfexp k,
      gerpart l, gerpart m, gerpart n, gerpart o, gerpart p,
      gebfunc, slbevnt
 where gebfunc_evnt_crn = slbevnt_crn
   and b.spriden_pidm (+) = slbevnt_agency_pidm
   and b.spriden_change_ind (+) is null
   and a.rowid(+) = decode(slbevnt_contact_pidm,null,null,
                    decode(slbevnt_atyp_code,null,null,f_get_address_rowid
       (slbevnt_contact_pidm,'EV01ADDR','A',sysdate,'','GP',slbevnt_atyp_code)))
   and c.rowid (+) = f_get_gerffee_rowid
                         (gebfunc_evnt_crn, gebfunc_func_code,'EV01FFEE',1)
   and d.rowid (+) = f_get_gerffee_rowid
                         (gebfunc_evnt_crn, gebfunc_func_code,'EV01FFEE',2)
   and e.rowid (+) = f_get_gerffee_rowid
                         (gebfunc_evnt_crn, gebfunc_func_code,'EV01FFEE',3)
   and f.rowid (+) = f_get_gerfrev_rowid
                         (gebfunc_evnt_crn, gebfunc_func_code,'EV01FREV',1)
   and g.rowid (+) = f_get_gerfrev_rowid
                         (gebfunc_evnt_crn, gebfunc_func_code,'EV01FREV',2)
   and h.rowid (+) = f_get_gerfrev_rowid
                         (gebfunc_evnt_crn, gebfunc_func_code,'EV01FREV',3)
   and i.rowid (+) = f_get_gerfexp_rowid
                         (gebfunc_evnt_crn, gebfunc_func_code,'EV01FEXP',1)
   and j.rowid (+) = f_get_gerfexp_rowid
                         (gebfunc_evnt_crn, gebfunc_func_code,'EV01FEXP',2)
   and k.rowid (+) = f_get_gerfexp_rowid
                         (gebfunc_evnt_crn, gebfunc_func_code,'EV01FEXP',3)
   and l.rowid(+) = f_get_gerpart_rowid
                       (gebfunc_evnt_crn,gebfunc_func_code,'EV01PTYP','','','P')
   and m.rowid(+) = f_get_gerpart_rowid
                       (gebfunc_evnt_crn,gebfunc_func_code,'EV01PTYP',1,1,'')
   and n.rowid(+) = f_get_gerpart_rowid
                       (gebfunc_evnt_crn,gebfunc_func_code,'EV01PTYP',1,2,'')
   and o.rowid(+) = f_get_gerpart_rowid
                       (gebfunc_evnt_crn,gebfunc_func_code,'EV01PTYP',2,1,'')
   and p.rowid(+) = f_get_gerpart_rowid
                       (gebfunc_evnt_crn,gebfunc_func_code,'EV01PTYP',2,2,'')
 "
"BANINST1","GEVEVN1","Events Management work view.","select
 gevevn2_evnt_crn,
 gevevn2_evnt_desc,
 gevevn2_func_code,
 gevevn2_etyp_code,
 gevevn2_coll_code,
 gevevn2_dept_code,
 gevevn2_sysi_code,
 gevevn2_fsta_code,
 gevevn2_purp_code,
 gevevn2_purp_desc,
 gevevn2_emph_code,
 gevevn2_location,
 gevevn2_location_date,
 gevevn2_invitation_date,
 gevevn2_letr_code,
 gevevn2_rsvp_confirm_date,
 gevevn2_committee_name,
 gevevn2_plan_attend,
 gevevn2_no_attending_function,
 gevevn2_brk_even_attend,
 gevevn2_agency_name,
 gevevn2_e_contact_pidm,
 gevevn2_e_contact_name,
 gevevn2_e_contact_atyp_code,
 gevevn2_e_contact_street_1,
 gevevn2_e_contact_street_2,
 gevevn2_e_contact_street_3,
 gevevn2_e_contact_city,
 gevevn2_e_contact_state,
 gevevn2_e_contact_zip_code,
 gevevn2_e_contact_area_code,
 gevevn2_e_contact_phone_number,
 gevevn2_e_contact_phone_ext,
 gevevn2_p_contact_pidm,
 a3.spriden_id,
 a3.spriden_last_name,
 a3.spriden_first_name,
 gevevn2_p_contact_atyp_code,
 a1.spraddr_street_line1,
 a1.spraddr_street_line2,
 a1.spraddr_street_line3,
 a1.spraddr_city,
 a1.spraddr_stat_code,
 a1.spraddr_zip,
 a2.sprtele_phone_area,
 a2.sprtele_phone_number,
 a2.sprtele_phone_ext,
 gevevn2_etyp_code_2,
 gevevn2_ptyp_code_1,
 gevevn2_ptyp_date_1_1,
 gevevn2_ptyp_contact_ind_1_1,
 gevevn2_ptyp_pidm_1_1,
 gevevn2_ptyp_atyp_code_1_1,
 b3.spriden_id,
 b3.spriden_last_name,
 b3.spriden_first_name,
 b1.spraddr_street_line1,
 b1.spraddr_street_line2,
 b1.spraddr_street_line3,
 b1.spraddr_city,
 b1.spraddr_stat_code,
 b1.spraddr_zip,
 b2.sprtele_phone_area,
 b2.sprtele_phone_number,
 b2.sprtele_phone_ext,
 gevevn2_ptyp_date_1_2,
 gevevn2_ptyp_contact_ind_1_2,
 gevevn2_ptyp_pidm_1_2,
 gevevn2_ptyp_atyp_code_1_2,
 c3.spriden_id,
 c3.spriden_last_name,
 c3.spriden_first_name,
 c1.spraddr_street_line1,
 c1.spraddr_street_line2,
 c1.spraddr_street_line3,
 c1.spraddr_city,
 c1.spraddr_stat_code,
 c1.spraddr_zip,
 c2.sprtele_phone_area,
 c2.sprtele_phone_number,
 c2.sprtele_phone_ext,
 gevevn2_additional_ptyp_1_ind,
 gevevn2_ptyp_code_2,
 gevevn2_ptyp_date_2_1,
 gevevn2_ptyp_contact_ind_2_1,
 gevevn2_ptyp_pidm_2_1,
 gevevn2_ptyp_atyp_code_2_1,
 d3.spriden_id,
 d3.spriden_last_name,
 d3.spriden_first_name,
 d1.spraddr_street_line1,
 d1.spraddr_street_line2,
 d1.spraddr_street_line3,
 d1.spraddr_city,
 d1.spraddr_stat_code,
 d1.spraddr_zip,
 d2.sprtele_phone_area,
 d2.sprtele_phone_number,
 d2.sprtele_phone_ext,
 gevevn2_ptyp_date_2_2,
 gevevn2_ptyp_contact_ind_2_2,
 gevevn2_ptyp_pidm_2_2,
 gevevn2_ptyp_atyp_code_2_2,
 e3.spriden_id,
 e3.spriden_last_name,
 e3.spriden_first_name,
 e1.spraddr_street_line1,
 e1.spraddr_street_line2,
 e1.spraddr_street_line3,
 e1.spraddr_city,
 e1.spraddr_stat_code,
 e1.spraddr_zip,
 e2.sprtele_phone_area,
 e2.sprtele_phone_number,
 e2.sprtele_phone_ext,
 gevevn2_additional_ptyp_2_ind,
 gevevn2_additional_ptyp_ind,
 gevevn2_ttyp_code_1,
 gevevn2_no_tasks_1,
 decode(gevevn2_no_tasks_1,0,null,
        substr(f_completed_task_flag
           (gevevn2_evnt_crn, gevevn2_func_code,'EV01TTYP',1),1,1)),
 gevevn2_ttyp_code_2,
 gevevn2_no_tasks_2,
 decode(gevevn2_no_tasks_2,0,null,
        substr(f_completed_task_flag
           (gevevn2_evnt_crn, gevevn2_func_code,'EV01TTYP',2),1,1)),
 gevevn2_ttyp_code_3,
 gevevn2_no_tasks_3,
 decode(gevevn2_no_tasks_3,0,null,
        substr(f_completed_task_flag
           (gevevn2_evnt_crn, gevevn2_func_code,'EV01TTYP',3),1,1)),
 gevevn2_additional_tasks_ind,
 gevevn2_comments_exist_ind,
 gevevn2_subj_code_1,
 gevevn2_comments_exist_ind_1,
 gevevn2_subj_code_2,
 gevevn2_comments_exist_ind_2,
 gevevn2_subj_code_3,
 gevevn2_comments_exist_ind_3,
 gevevn2_more_subj_cmnts_ind,
 gevevn2_ftyp_code_1,
 gevevn2_ftyp_rate_code_1,
 gevevn2_ftyp_amount_1,
 gevevn2_ftyp_code_2,
 gevevn2_ftyp_rate_code_2,
 gevevn2_ftyp_amount_2,
 gevevn2_ftyp_code_3,
 gevevn2_ftyp_rate_code_3,
 gevevn2_ftyp_amount_3,
 gevevn2_revn_code_1,
 gevevn2_revn_budget_amount_1,
 gevevn2_revn_actual_amount_1,
 gevevn2_revn_diff_amount_1,
 gevevn2_revn_date_1,
 gevevn2_revn_code_2,
 gevevn2_revn_budget_amount_2,
 gevevn2_revn_actual_amount_2,
 gevevn2_revn_diff_amount_2,
 gevevn2_revn_date_2,
 gevevn2_revn_code_3,
 gevevn2_revn_budget_amount_3,
 gevevn2_revn_actual_amount_3,
 gevevn2_revn_diff_amount_3,
 gevevn2_revn_date_3,
 gevevn2_expn_code_1,
 gevevn2_expn_budget_amount_1,
 gevevn2_expn_actual_amount_1,
 gevevn2_expn_diff_amount_1,
 gevevn2_expn_date_1,
 gevevn2_expn_code_2,
 gevevn2_expn_budget_amount_2,
 gevevn2_expn_actual_amount_2,
 gevevn2_expn_diff_amount_2,
 gevevn2_expn_date_2,
 gevevn2_expn_code_3,
 gevevn2_expn_budget_amount_3,
 gevevn2_expn_actual_amount_3,
 gevevn2_expn_diff_amount_3,
 gevevn2_expn_date_3
from spraddr a1, sprtele a2, spriden a3,
     spraddr b1, sprtele b2, spriden b3,
     spraddr c1, sprtele c2, spriden c3,
     spraddr d1, sprtele d2, spriden d3,
     spraddr e1, sprtele e2, spriden e3,
     gevevn2
where a3.spriden_change_ind (+) is null
  and a3.spriden_pidm (+) = gevevn2_p_contact_pidm
   and a1.rowid(+) = decode(gevevn2_p_contact_pidm,null,null,
                     decode(gevevn2_p_contact_atyp_code,null,null,
                     f_get_address_rowid(gevevn2_p_contact_pidm,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_p_contact_atyp_code)))
   and a2.rowid(+) = decode(gevevn2_p_contact_pidm,null,null,
                     decode(gevevn2_p_contact_atyp_code,null,null,
                     f_get_address_telephone_rowid(gevevn2_p_contact_pidm,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_p_contact_atyp_code)))
  and b3.spriden_change_ind (+) is null
  and b3.spriden_pidm (+) = gevevn2_ptyp_pidm_1_1
  and b1.rowid(+) = decode(gevevn2_ptyp_pidm_1_1,null,null,
                    decode(gevevn2_ptyp_atyp_code_1_1,null,null,
                    f_get_address_rowid(gevevn2_ptyp_pidm_1_1,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_ptyp_atyp_code_1_1)))
  and b2.rowid(+) = decode(gevevn2_ptyp_pidm_1_1,null,null,
                    decode(gevevn2_ptyp_atyp_code_1_1,null,null,
                    f_get_address_telephone_rowid(gevevn2_ptyp_pidm_1_1,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_ptyp_atyp_code_1_1)))
  and c3.spriden_change_ind (+) is null
  and c3.spriden_pidm (+) = gevevn2_ptyp_pidm_1_2
  and c1.rowid(+) = decode(gevevn2_ptyp_pidm_1_2,null,null,
                    decode(gevevn2_ptyp_atyp_code_1_2,null,null,
                    f_get_address_rowid(gevevn2_ptyp_pidm_1_2,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_ptyp_atyp_code_1_2)))
  and c2.rowid(+) = decode(gevevn2_ptyp_pidm_1_2,null,null,
                    decode(gevevn2_ptyp_atyp_code_1_2,null,null,
                    f_get_address_telephone_rowid(gevevn2_ptyp_pidm_1_2,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_ptyp_atyp_code_1_2)))
  and d3.spriden_change_ind (+) is null
  and d3.spriden_pidm (+) = gevevn2_ptyp_pidm_2_1
  and d1.rowid(+) = decode(gevevn2_ptyp_pidm_2_1,null,null,
                    decode(gevevn2_ptyp_atyp_code_2_1,null,null,
                    f_get_address_rowid(gevevn2_ptyp_pidm_2_1,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_ptyp_atyp_code_2_1)))
  and d2.rowid(+) = decode(gevevn2_ptyp_pidm_2_1,null,null,
                    decode(gevevn2_ptyp_atyp_code_2_1,null,null,
                    f_get_address_telephone_rowid(gevevn2_ptyp_pidm_2_1,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_ptyp_atyp_code_2_1)))
  and e3.spriden_change_ind (+) is null
  and e3.spriden_pidm (+) = gevevn2_ptyp_pidm_2_2
  and e1.rowid(+) = decode(gevevn2_ptyp_pidm_2_2,null,null,
                    decode(gevevn2_ptyp_atyp_code_2_2,null,null,
                    f_get_address_rowid(gevevn2_ptyp_pidm_2_2,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_ptyp_atyp_code_2_2)))
  and e2.rowid(+) = decode(gevevn2_ptyp_pidm_2_2,null,null,
                    decode(gevevn2_ptyp_atyp_code_2_2,null,null,
                    f_get_address_telephone_rowid(gevevn2_ptyp_pidm_2_2,'EV01ADDR',
                          'A',sysdate,'','GP',gevevn2_ptyp_atyp_code_2_2)))
 "
"BANINST1","GEVATTD","GEVATTD: Invitee information from GERATTD by name.","SELECT
         GERATTD_EVNT_CRN,
         GERATTD_FUNC_CODE,
         SPRIDEN_LAST_NAME,
         SPRIDEN_FIRST_NAME,
         SPRIDEN_MI,
         SPRIDEN_ID,
         DECODE(SPRIDEN_ENTITY_IND,'C',
               SPRIDEN_LAST_NAME, SPRIDEN_FIRST_NAME || ' ' ||
               DECODE(NVL(SPRIDEN_MI,' '),' ','',SPRIDEN_MI || ' ') ||
               SPRIDEN_LAST_NAME),
         GERATTD_PIDM,
         GERATTD_ACTIVITY_DATE,
         GERATTD_RSVP_CODE,
         GERATTD_RSVP_DATE,
         GERATTD_FEES_CODE,
         GERATTD_FEE_DATE,
         GERATTD_ATYP_CODE,
         GERATTD_NAME_TAG_NAME,
         GERATTD_PLACE_CARD_NAME,
         GERATTD_TICKET_CNT,
         GERATTD_MENU_CODE,
         GERATTD_ATTENDANCE_IND,
         GERATTD_INVOLVE_IND,
         GERATTD_COMMENT,
         GERATTD_FEES_DESC
FROM SPRIDEN, GERATTD
WHERE GERATTD_PIDM = SPRIDEN_PIDM
  AND SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","FTVSATV","This view retrieves all the attributes (sets, types, values) associated with a foapal code.","SELECT
  ftrfnda_coas_code,
  'F',
  ftrfnda_fund_Code,
  ftvfund_title,
  ftrfnda_atts_code,
  ftvatts_desc,
  ftrfnda_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrfnda_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts,ftvfund, ftrfnda
where ftvattt_coas_code = ftrfnda_coas_code
and   ftvattt_code = ftrfnda_attt_code
and   ftrattv_coas_code(+) = ftrfnda_coas_code
and   ftrattv_attt_code(+) = ftrfnda_attt_code
and   ftrattv_code(+) = ftrfnda_attv_code
and   ftvfund_coas_Code = ftrfnda_coas_code
and   ftvfund_fund_Code = ftrfnda_fund_Code
and   ftvfund_eff_date <= sysdate
and   ftvfund_nchg_date > sysdate
and   ftvatts_coas_code(+) = ftrfnda_coas_code
and   ftvatts_code(+) = ftrfnda_atts_code
and   ftrfnda_attv_code is not null
UNION ALL
 SELECT
  ftrorga_coas_code,
  'O',
  ftrorga_orgn_Code,
  ftvorgn_title,
  ftrorga_atts_code,
  ftvatts_desc,
  ftrorga_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrorga_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts,ftvorgn, ftrorga
where ftvattt_coas_code = ftrorga_coas_code
and   ftvattt_code = ftrorga_attt_code
and   ftrattv_coas_code(+) = ftrorga_coas_code
and   ftrattv_attt_code(+) = ftrorga_attt_code
and   ftrattv_code(+) = ftrorga_attv_code
and   ftvorgn_coas_Code = ftrorga_coas_code
and   ftvorgn_orgn_Code = ftrorga_orgn_Code
and   ftvorgn_eff_date <= sysdate
and   ftvorgn_nchg_date > sysdate
and   ftvatts_coas_code(+) = ftrorga_coas_code
and   ftvatts_code(+) = ftrorga_atts_code
and   ftrorga_attv_code is not null
UNION ALL
 SELECT
  ftracta_coas_code,
  'A',
  ftracta_acct_Code,
  ftvacct_title,
  ftracta_atts_code,
  ftvatts_desc,
  ftracta_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftracta_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts,ftvacct, ftracta
where ftvattt_coas_code = ftracta_coas_code
and   ftvattt_code = ftracta_attt_code
and   ftrattv_coas_code(+) = ftracta_coas_code
and   ftrattv_attt_code(+) = ftracta_attt_code
and   ftrattv_code(+) = ftracta_attv_code
and   ftvacct_coas_Code = ftracta_coas_code
and   ftvacct_acct_Code = ftracta_acct_Code
and   ftvacct_eff_date <= sysdate
and   ftvacct_nchg_date > sysdate
and   ftvatts_coas_code(+) = ftracta_coas_code
and   ftvatts_code(+) = ftracta_atts_code
and   ftracta_attv_code is not null
UNION ALL
 SELECT
  ftrprga_coas_code,
  'P',
  ftrprga_prog_Code,
  ftvprog_title,
  ftrprga_atts_code,
  ftvatts_desc,
  ftrprga_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrprga_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts,ftvprog, ftrprga
where ftvattt_coas_code = ftrprga_coas_code
and   ftvattt_code = ftrprga_attt_code
and   ftrattv_coas_code(+) = ftrprga_coas_code
and   ftrattv_attt_code(+) = ftrprga_attt_code
and   ftrattv_code(+) = ftrprga_attv_code
and   ftvprog_coas_Code = ftrprga_coas_code
and   ftvprog_prog_Code = ftrprga_prog_Code
and   ftvprog_eff_date <= sysdate
and   ftvprog_nchg_date > sysdate
and   ftvatts_coas_code(+) = ftrprga_coas_code
and   ftvatts_code(+) = ftrprga_atts_code
and   ftrprga_attv_code is not null
UNION ALL
 SELECT
  ftracva_coas_code,
  'Y',
  ftracva_actv_Code,
  ftvactv_title,
  ftracva_atts_code,
  ftvatts_desc,
  ftracva_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftracva_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts,ftvactv, ftracva
where ftvattt_coas_code = ftracva_coas_code
and   ftvattt_code = ftracva_attt_code
and   ftrattv_coas_code(+) = ftracva_coas_code
and   ftrattv_attt_code(+) = ftracva_attt_code
and   ftrattv_code(+) = ftracva_attv_code
and   ftvactv_coas_Code = ftracva_coas_code
and   ftvactv_actv_Code = ftracva_actv_Code
and   ftvactv_eff_date <= sysdate
and   ftvactv_nchg_date > sysdate
and   ftvatts_coas_code(+) = ftracva_coas_code
and   ftvatts_code(+) = ftracva_atts_code
and   ftracva_attv_code is not null
UNION ALL
 SELECT
  ftrlcna_coas_code,
  'L',
  ftrlcna_locn_Code,
  ftvlocn_title,
  ftrlcna_atts_code,
  ftvatts_desc,
  ftrlcna_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrlcna_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts,ftvlocn, ftrlcna
where ftvattt_coas_code = ftrlcna_coas_code
and   ftvattt_code = ftrlcna_attt_code
and   ftrattv_coas_code(+) = ftrlcna_coas_code
and   ftrattv_attt_code(+) = ftrlcna_attt_code
and   ftrattv_code(+) = ftrlcna_attv_code
and   ftvlocn_coas_Code = ftrlcna_coas_code
and   ftvlocn_locn_Code = ftrlcna_locn_Code
and   ftvlocn_eff_date <= sysdate
and   ftvlocn_nchg_date > sysdate
and   ftvatts_coas_code(+) = ftrlcna_coas_code
and   ftvatts_code(+) = ftrlcna_atts_code
and   ftrlcna_attv_code is not null
UNION ALL
 SELECT
  ftratya_coas_code,
  'T',
  ftratya_atyp_Code,
  ftvatyp_title,
  ftratya_atts_code,
  ftvatts_desc,
  ftratya_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftratya_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts,ftvatyp, ftratya
where ftvattt_coas_code = ftratya_coas_code
and   ftvattt_code = ftratya_attt_code
and   ftrattv_coas_code(+) = ftratya_coas_code
and   ftrattv_attt_code(+) = ftratya_attt_code
and   ftrattv_code(+) = ftratya_attv_code
and   ftvatyp_coas_Code = ftratya_coas_code
and   ftvatyp_atyp_Code = ftratya_atyp_Code
and   ftvatyp_eff_date <= sysdate
and   ftvatyp_nchg_date > sysdate
and   ftvatts_coas_code(+) = ftratya_coas_code
and   ftvatts_code(+) = ftratya_atts_code
and   ftratya_attv_code is not null
UNION ALL
 SELECT
  ftrftya_coas_code,
  'N',
  ftrftya_ftyp_Code,
  ftvftyp_title,
  ftrftya_atts_code,
  ftvatts_desc,
  ftrftya_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrftya_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts,ftvftyp, ftrftya
where ftvattt_coas_code = ftrftya_coas_code
and   ftvattt_code = ftrftya_attt_code
and   ftrattv_coas_code(+) = ftrftya_coas_code
and   ftrattv_attt_code(+) = ftrftya_attt_code
and   ftrattv_code(+) = ftrftya_attv_code
and   ftvftyp_coas_Code = ftrftya_coas_code
and   ftvftyp_ftyp_Code = ftrftya_ftyp_Code
and   ftvftyp_eff_date <= sysdate
and   ftvftyp_nchg_date > sysdate
and   ftvatts_coas_code(+) = ftrftya_coas_code
and   ftvatts_code(+) = ftrftya_atts_code
and   ftrftya_attv_code is not null"
"BANINST1","FTVFSET","This view retrieves all the sets associated with a foapal code.","SELECT
  ftrfnds_coas_code,
  'F',
  ftrfnds_fund_Code,
  ftvfund_title,
  ftrfnds_atts_code,
  ftvatts_desc
from ftvatts,ftvfund,ftrfnds
where ftvfund_coas_code = ftrfnds_coas_Code
and   ftvfund_fund_code = ftrfnds_fund_code
and   ftvfund_eff_date <= sysdate
and   ftvfund_nchg_date > sysdate
and   ftvatts_coas_Code = ftrfnds_coas_Code
and   ftvatts_code = ftrfnds_atts_code
UNION ALL
 SELECT
  ftrorgs_coas_code,
  'O',
  ftrorgs_orgn_Code,
  ftvorgn_title,
  ftrorgs_atts_code,
  ftvatts_desc
from ftvatts,ftvorgn,ftrorgs
where ftvorgn_coas_code = ftrorgs_coas_Code
and   ftvorgn_orgn_code = ftrorgs_orgn_code
and   ftvorgn_eff_date <= sysdate
and   ftvorgn_nchg_date > sysdate
and   ftvatts_coas_Code = ftrorgs_coas_Code
and   ftvatts_code = ftrorgs_atts_code
UNION ALL
 SELECT
  ftracts_coas_code,
  'A',
  ftracts_acct_Code,
  ftvacct_title,
  ftracts_atts_code,
  ftvatts_desc
from ftvatts,ftvacct,ftracts
where ftvacct_coas_code = ftracts_coas_Code
and   ftvacct_acct_code = ftracts_acct_code
and   ftvacct_eff_date <= sysdate
and   ftvacct_nchg_date > sysdate
and   ftvatts_coas_Code = ftracts_coas_Code
and   ftvatts_code = ftracts_atts_code
UNION ALL
 SELECT
  ftrlcns_coas_code,
  'L',
  ftrlcns_locn_Code,
  ftvlocn_title,
  ftrlcns_atts_code,
  ftvatts_desc
from ftvatts,ftvlocn,ftrlcns
where ftvlocn_coas_code = ftrlcns_coas_Code
and   ftvlocn_locn_code = ftrlcns_locn_code
and   ftvlocn_eff_date <= sysdate
and   ftvlocn_nchg_date > sysdate
and   ftvatts_coas_Code = ftrlcns_coas_Code
and   ftvatts_code = ftrlcns_atts_code
UNION ALL
 SELECT
  ftracvs_coas_code,
  'Y',
  ftracvs_actv_Code,
  ftvactv_title,
  ftracvs_atts_code,
  ftvatts_desc
from ftvatts,ftvactv,ftracvs
where ftvactv_coas_code = ftracvs_coas_Code
and   ftvactv_actv_code = ftracvs_actv_code
and   ftvactv_eff_date <= sysdate
and   ftvactv_nchg_date > sysdate
and   ftvatts_coas_Code = ftracvs_coas_Code
and   ftvatts_code = ftracvs_atts_code
UNION ALL
 SELECT
  ftrprgs_coas_code,
  'P',
  ftrprgs_prog_Code,
  ftvprog_title,
  ftrprgs_atts_code,
  ftvatts_desc
from ftvatts,ftvprog,ftrprgs
where ftvprog_coas_code = ftrprgs_coas_Code
and   ftvprog_prog_code = ftrprgs_prog_code
and   ftvprog_eff_date <= sysdate
and   ftvprog_nchg_date > sysdate
and   ftvatts_coas_Code = ftrprgs_coas_Code
and   ftvatts_code = ftrprgs_atts_code
UNION ALL
 SELECT
  ftratys_coas_code,
  'T',
  ftratys_atyp_Code,
  ftvatyp_title,
  ftratys_atts_code,
  ftvatts_desc
from ftvatts,ftvatyp,ftratys
where ftvatyp_coas_code = ftratys_coas_Code
and   ftvatyp_atyp_code = ftratys_atyp_code
and   ftvatyp_eff_date <= sysdate
and   ftvatyp_nchg_date > sysdate
and   ftvatts_coas_Code = ftratys_coas_Code
and   ftvatts_code = ftratys_atts_code
UNION ALL
 SELECT
  ftrftys_coas_code,
  'N',
  ftrftys_ftyp_Code,
  ftvftyp_title,
  ftrftys_atts_code,
  ftvatts_desc
from ftvatts,ftvftyp,ftrftys
where ftvftyp_coas_code = ftrftys_coas_Code
and   ftvftyp_ftyp_code = ftrftys_ftyp_code
and   ftvftyp_eff_date <= sysdate
and   ftvftyp_nchg_date > sysdate
and   ftvatts_coas_Code = ftrftys_coas_Code
and   ftvatts_code = ftrftys_atts_code"
"BANINST1","FTVFATV","This view retrieves all the attributes (sets,types,values) associated with a foapal code.","SELECT
  ftrfnda_coas_code,
  'F',
  ftrfnda_fund_Code,
  ftrfnda_atts_code,
  ftrfnda_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrfnda_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftrfnda
where ftvattt_coas_code = ftrfnda_coas_code
and   ftvattt_code = ftrfnda_attt_code
and   ftrattv_coas_Code(+) = ftrfnda_coas_code
and   ftrattv_attt_code(+) = ftrfnda_attt_code
and   ftrattv_code(+) = ftrfnda_attv_code
UNION ALL
 SELECT
  ftrorga_coas_code,
  'O',
  ftrorga_orgn_Code,
  ftrorga_atts_code,
  ftrorga_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrorga_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftrorga
where ftvattt_coas_code = ftrorga_coas_code
and   ftvattt_code = ftrorga_attt_code
and   ftrattv_coas_Code(+) = ftrorga_coas_code
and   ftrattv_attt_code(+) = ftrorga_attt_code
and   ftrattv_code(+) = ftrorga_attv_code
UNION ALL
 SELECT
  ftracta_coas_code,
  'A',
  ftracta_acct_Code,
  ftracta_atts_code,
  ftracta_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftracta_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftracta
where ftvattt_coas_code = ftracta_coas_code
and   ftvattt_code = ftracta_attt_code
and   ftrattv_coas_Code(+) = ftracta_coas_code
and   ftrattv_attt_code(+) = ftracta_attt_code
and   ftrattv_code(+) = ftracta_attv_code
UNION ALL
 SELECT
  ftrprga_coas_code,
  'P',
  ftrprga_prog_Code,
  ftrprga_atts_code,
  ftrprga_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrprga_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftrprga
where ftvattt_coas_code = ftrprga_coas_code
and   ftvattt_code = ftrprga_attt_code
and   ftrattv_coas_Code(+) = ftrprga_coas_code
and   ftrattv_attt_code(+) = ftrprga_attt_code
and   ftrattv_code(+) = ftrprga_attv_code
UNION ALL
 SELECT
  ftracva_coas_code,
  'Y',
  ftracva_actv_Code,
  ftracva_atts_code,
  ftracva_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftracva_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftracva
where ftvattt_coas_code = ftracva_coas_code
and   ftvattt_code = ftracva_attt_code
and   ftrattv_coas_Code(+) = ftracva_coas_code
and   ftrattv_attt_code(+) = ftracva_attt_code
and   ftrattv_code(+) = ftracva_attv_code
UNION ALL
 SELECT
  ftrlcna_coas_code,
  'L',
  ftrlcna_locn_Code,
  ftrlcna_atts_code,
  ftrlcna_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrlcna_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftrlcna
where ftvattt_coas_code = ftrlcna_coas_code
and   ftvattt_code = ftrlcna_attt_code
and   ftrattv_coas_Code(+) = ftrlcna_coas_code
and   ftrattv_attt_code(+) = ftrlcna_attt_code
and   ftrattv_code(+) = ftrlcna_attv_code
UNION ALL
 SELECT
  ftrftya_coas_code,
  'N',
  ftrftya_ftyp_Code,
  ftrftya_atts_code,
  ftrftya_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftrftya_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftrftya
where ftvattt_coas_code = ftrftya_coas_code
and   ftvattt_code = ftrftya_attt_code
and   ftrattv_coas_Code(+) = ftrftya_coas_code
and   ftrattv_attt_code(+) = ftrftya_attt_code
and   ftrattv_code(+) = ftrftya_attv_code
UNION ALL
 SELECT
  ftratya_coas_code,
  'T',
  ftratya_atyp_Code,
  ftratya_atts_code,
  ftratya_attt_code,
  ftvattt_desc,
  ftvattt_status_ind,
  ftratya_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftratya
where ftvattt_coas_code = ftratya_coas_code
and   ftvattt_code = ftratya_attt_code
and   ftrattv_coas_Code(+) = ftratya_coas_code
and   ftrattv_attt_code(+) = ftratya_attt_code
and   ftrattv_code(+) = ftratya_attv_code
 "
"BANINST1","FTVFATA","This view retrieves all the attributes (sets,types,values) associated with a foapal code.","SELECT
  ftrfnda_coas_code,
  'F',
  ftrfnda_fund_Code,
  ftrfnda_atts_code,
  ftrfnda_attt_code,
  ftrfnda_attv_code
from ftrfnda
UNION ALL
 SELECT
  ftrorga_coas_code,
  'O',
  ftrorga_orgn_Code,
  ftrorga_atts_code,
  ftrorga_attt_code,
  ftrorga_attv_code
from ftrorga
UNION ALL
 SELECT
  ftracta_coas_code,
  'A',
  ftracta_acct_Code,
  ftracta_atts_code,
  ftracta_attt_code,
  ftracta_attv_code
from ftracta
UNION ALL
 SELECT
  ftrprga_coas_code,
  'P',
  ftrprga_prog_Code,
  ftrprga_atts_code,
  ftrprga_attt_code,
  ftrprga_attv_code
from  ftrprga
UNION ALL
 SELECT
  ftracva_coas_code,
  'Y',
  ftracva_actv_Code,
  ftracva_atts_code,
  ftracva_attt_code,
  ftracva_attv_code
from  ftracva
UNION ALL
 SELECT
  ftrlcna_coas_code,
  'L',
  ftrlcna_locn_Code,
  ftrlcna_atts_code,
  ftrlcna_attt_code,
  ftrlcna_attv_code
from  ftrlcna
UNION ALL
 SELECT
  ftrftya_coas_code,
  'N',
  ftrftya_ftyp_Code,
  ftrftya_atts_code,
  ftrftya_attt_code,
  ftrftya_attv_code
from  ftrftya
UNION ALL
 SELECT
  ftratya_coas_code,
  'T',
  ftratya_atyp_Code,
  ftratya_atts_code,
  ftratya_attt_code,
  ftratya_attv_code
from  ftratya
 "
"BANINST1","FRVSRQ2","","select  fgbopal_coas_code,
        fgbopal_fsyr_code,
        a.ftvfspd_fspd_code,
        a.ftvfspd_prd_end_date,
        ftvfund_ftyp_code,
        ftvfund_fund_code_bavl,
        ftvfund_grnt_code,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code,
        sum(fgbopal_14_adopt_bud),
        sum(fgbopal_14_bud_adjt),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_adopt_bud,
            '02', fgbopal_02_adopt_bud,
            '03', fgbopal_03_adopt_bud,
            '04', fgbopal_04_adopt_bud,
            '05', fgbopal_05_adopt_bud,
            '06', fgbopal_06_adopt_bud,
            '07', fgbopal_07_adopt_bud,
            '08', fgbopal_08_adopt_bud,
            '09', fgbopal_09_adopt_bud,
            '10', fgbopal_10_adopt_bud,
            '11', fgbopal_11_adopt_bud,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_adopt_bud,
                               fgbopal_12_adopt_bud),
            '13', fgbopal_14_adopt_bud)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_adjt,
            '02', fgbopal_02_bud_adjt,
            '03', fgbopal_03_bud_adjt,
            '04', fgbopal_04_bud_adjt,
            '05', fgbopal_05_bud_adjt,
            '06', fgbopal_06_bud_adjt,
            '07', fgbopal_07_bud_adjt,
            '08', fgbopal_08_bud_adjt,
            '09', fgbopal_09_bud_adjt,
            '10', fgbopal_10_bud_adjt,
            '11', fgbopal_11_bud_adjt,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_bud_adjt,
                               fgbopal_12_bud_adjt),
            '13', fgbopal_14_bud_adjt)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv,
            '02', fgbopal_02_ytd_actv,
            '03', fgbopal_03_ytd_actv,
            '04', fgbopal_04_ytd_actv,
            '05', fgbopal_05_ytd_actv,
            '06', fgbopal_06_ytd_actv,
            '07', fgbopal_07_ytd_actv,
            '08', fgbopal_08_ytd_actv,
            '09', fgbopal_09_ytd_actv,
            '10', fgbopal_10_ytd_actv,
            '11', fgbopal_11_ytd_actv,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_ytd_actv,
                               fgbopal_12_ytd_actv),
            '13', fgbopal_14_ytd_actv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb,
            '02', fgbopal_02_encumb,
            '03', fgbopal_03_encumb,
            '04', fgbopal_04_encumb,
            '05', fgbopal_05_encumb,
            '06', fgbopal_06_encumb,
            '07', fgbopal_07_encumb,
            '08', fgbopal_08_encumb,
            '09', fgbopal_09_encumb,
            '10', fgbopal_10_encumb,
            '11', fgbopal_11_encumb,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_encumb,
                               fgbopal_12_encumb),
            '13', fgbopal_14_encumb)) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv,
            '02', fgbopal_02_bud_rsrv,
            '03', fgbopal_03_bud_rsrv,
            '04', fgbopal_04_bud_rsrv,
            '05', fgbopal_05_bud_rsrv,
            '06', fgbopal_06_bud_rsrv,
            '07', fgbopal_07_bud_rsrv,
            '08', fgbopal_08_bud_rsrv,
            '09', fgbopal_09_bud_rsrv,
            '10', fgbopal_10_bud_rsrv,
            '11', fgbopal_11_bud_rsrv,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_bud_rsrv,
                               fgbopal_12_bud_rsrv),
            '13', fgbopal_14_bud_rsrv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_acctd_bud - fgbopal_00_acctd_bud,
            '02', fgbopal_02_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                              fgbopal_00_acctd_bud),
            '03', fgbopal_03_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                              fgbopal_00_acctd_bud),
            '04', fgbopal_04_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                              fgbopal_00_acctd_bud),
            '05', fgbopal_05_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                              fgbopal_00_acctd_bud),
            '06', fgbopal_06_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                              fgbopal_00_acctd_bud),
            '07', fgbopal_07_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                              fgbopal_00_acctd_bud),
            '08', fgbopal_08_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                              fgbopal_00_acctd_bud),
            '09', fgbopal_09_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                              fgbopal_00_acctd_bud),
            '10', fgbopal_10_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                              fgbopal_00_acctd_bud),
            '11', fgbopal_11_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                              fgbopal_00_acctd_bud),
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_acctd_bud,
                               fgbopal_12_acctd_bud) -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                        '11', fgbopal_11_acctd_bud,
                              fgbopal_00_acctd_bud),
            '13', fgbopal_14_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                        '11', fgbopal_11_acctd_bud,
                        '12', fgbopal_12_acctd_bud,
                              fgbopal_00_acctd_bud) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv - fgbopal_00_ytd_actv,
            '02', fgbopal_02_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                              fgbopal_00_ytd_actv),
            '03', fgbopal_03_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                              fgbopal_00_ytd_actv),
            '04', fgbopal_04_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                              fgbopal_00_ytd_actv),
            '05', fgbopal_05_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                              fgbopal_00_ytd_actv),
            '06', fgbopal_06_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                              fgbopal_00_ytd_actv),
            '07', fgbopal_07_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                              fgbopal_00_ytd_actv),
            '08', fgbopal_08_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                              fgbopal_00_ytd_actv),
            '09', fgbopal_09_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                              fgbopal_00_ytd_actv),
            '10', fgbopal_10_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                              fgbopal_00_ytd_actv),
            '11', fgbopal_11_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                              fgbopal_00_ytd_actv),
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_ytd_actv,
                               fgbopal_12_ytd_actv) -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                        '11', fgbopal_11_ytd_actv,
                              fgbopal_00_ytd_actv),
            '13', fgbopal_14_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                        '11', fgbopal_11_ytd_actv,
                        '12', fgbopal_12_ytd_actv,
                              fgbopal_00_ytd_actv) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb - fgbopal_00_encumb,
            '02', fgbopal_02_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                              fgbopal_00_encumb),
            '03', fgbopal_03_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                              fgbopal_00_encumb),
            '04', fgbopal_04_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                              fgbopal_00_encumb),
            '05', fgbopal_05_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                              fgbopal_00_encumb),
            '06', fgbopal_06_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                              fgbopal_00_encumb),
            '07', fgbopal_07_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                              fgbopal_00_encumb),
            '08', fgbopal_08_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                              fgbopal_00_encumb),
            '09', fgbopal_09_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                              fgbopal_00_encumb),
            '10', fgbopal_10_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                              fgbopal_00_encumb),
            '11', fgbopal_11_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                              fgbopal_00_encumb),
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_encumb,
                               fgbopal_12_encumb) -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                        '11', fgbopal_11_encumb,
                              fgbopal_00_encumb),
            '13', fgbopal_14_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                        '11', fgbopal_11_encumb,
                        '12', fgbopal_12_encumb,
                              fgbopal_00_encumb) )) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv - fgbopal_00_bud_rsrv,
            '02', fgbopal_02_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '03', fgbopal_03_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '04', fgbopal_04_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '05', fgbopal_05_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '06', fgbopal_06_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '07', fgbopal_07_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '08', fgbopal_08_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '09', fgbopal_09_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '10', fgbopal_10_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '11', fgbopal_11_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_bud_rsrv,
                               fgbopal_12_bud_rsrv) -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                        '11', fgbopal_11_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '13', fgbopal_14_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                        '11', fgbopal_11_bud_rsrv,
                        '12', fgbopal_12_bud_rsrv,
                              fgbopal_00_bud_rsrv) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_acctd_bud - fgbopal_00_acctd_bud,
            '02', fgbopal_02_acctd_bud - fgbopal_01_acctd_bud,
            '03', fgbopal_03_acctd_bud - fgbopal_02_acctd_bud,
            '04', fgbopal_04_acctd_bud - fgbopal_03_acctd_bud,
            '05', fgbopal_05_acctd_bud - fgbopal_04_acctd_bud,
            '06', fgbopal_06_acctd_bud - fgbopal_05_acctd_bud,
            '07', fgbopal_07_acctd_bud - fgbopal_06_acctd_bud,
            '08', fgbopal_08_acctd_bud - fgbopal_07_acctd_bud,
            '09', fgbopal_09_acctd_bud - fgbopal_08_acctd_bud,
            '10', fgbopal_10_acctd_bud - fgbopal_09_acctd_bud,
            '11', fgbopal_11_acctd_bud - fgbopal_10_acctd_bud,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_acctd_bud,
                               fgbopal_12_acctd_bud)
                                       - fgbopal_11_acctd_bud,
            '13', fgbopal_14_acctd_bud - fgbopal_12_acctd_bud)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv - fgbopal_00_ytd_actv,
            '02', fgbopal_02_ytd_actv - fgbopal_01_ytd_actv,
            '03', fgbopal_03_ytd_actv - fgbopal_02_ytd_actv,
            '04', fgbopal_04_ytd_actv - fgbopal_03_ytd_actv,
            '05', fgbopal_05_ytd_actv - fgbopal_04_ytd_actv,
            '06', fgbopal_06_ytd_actv - fgbopal_05_ytd_actv,
            '07', fgbopal_07_ytd_actv - fgbopal_06_ytd_actv,
            '08', fgbopal_08_ytd_actv - fgbopal_07_ytd_actv,
            '09', fgbopal_09_ytd_actv - fgbopal_08_ytd_actv,
            '10', fgbopal_10_ytd_actv - fgbopal_09_ytd_actv,
            '11', fgbopal_11_ytd_actv - fgbopal_10_ytd_actv,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_ytd_actv,
                               fgbopal_12_ytd_actv)
                                       - fgbopal_11_ytd_actv,
            '13', fgbopal_14_ytd_actv - fgbopal_12_ytd_actv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb - fgbopal_00_encumb,
            '02', fgbopal_02_encumb - fgbopal_01_encumb,
            '03', fgbopal_03_encumb - fgbopal_02_encumb,
            '04', fgbopal_04_encumb - fgbopal_03_encumb,
            '05', fgbopal_05_encumb - fgbopal_04_encumb,
            '06', fgbopal_06_encumb - fgbopal_05_encumb,
            '07', fgbopal_07_encumb - fgbopal_06_encumb,
            '08', fgbopal_08_encumb - fgbopal_07_encumb,
            '09', fgbopal_09_encumb - fgbopal_08_encumb,
            '10', fgbopal_10_encumb - fgbopal_09_encumb,
            '11', fgbopal_11_encumb - fgbopal_10_encumb,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_encumb,
                               fgbopal_12_encumb)
                                       - fgbopal_11_encumb,
            '13', fgbopal_14_encumb - fgbopal_12_encumb)) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv - fgbopal_00_bud_rsrv,
            '02', fgbopal_02_bud_rsrv - fgbopal_01_bud_rsrv,
            '03', fgbopal_03_bud_rsrv - fgbopal_02_bud_rsrv,
            '04', fgbopal_04_bud_rsrv - fgbopal_03_bud_rsrv,
            '05', fgbopal_05_bud_rsrv - fgbopal_04_bud_rsrv,
            '06', fgbopal_06_bud_rsrv - fgbopal_05_bud_rsrv,
            '07', fgbopal_07_bud_rsrv - fgbopal_06_bud_rsrv,
            '08', fgbopal_08_bud_rsrv - fgbopal_07_bud_rsrv,
            '09', fgbopal_09_bud_rsrv - fgbopal_08_bud_rsrv,
            '10', fgbopal_10_bud_rsrv - fgbopal_09_bud_rsrv,
            '11', fgbopal_11_bud_rsrv - fgbopal_10_bud_rsrv,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_bud_rsrv,
                               fgbopal_12_bud_rsrv)
                                       - fgbopal_11_bud_rsrv,
            '13', fgbopal_14_bud_rsrv - fgbopal_12_bud_rsrv))
from    ftvfspd a,
        ftvfspd b,
        ftvfsyr,
        ftvfund,
        fgbopal
where   a.ftvfspd_coas_code = fgbopal_coas_code
and     a.ftvfspd_fsyr_code = fgbopal_fsyr_code
and     ftvfund_coas_code         = fgbopal_coas_code
and     ftvfund_fund_code         = fgbopal_fund_code
and     ftvfund_eff_date         <= a.ftvfspd_prd_end_date
and     ftvfund_nchg_date         > a.ftvfspd_prd_end_date
and     ftvfund_grnt_code is not null
and     b.rowid(+) =
            f_prior_eoq_rowid(
                a.ftvfspd_coas_code,
                a.ftvfspd_fsyr_code,
                a.ftvfspd_fspd_code)
and     ftvfsyr_coas_code   = fgbopal_coas_code
and     ftvfsyr_fsyr_code   = fgbopal_fsyr_code
group by
        fgbopal_coas_code,
        fgbopal_fsyr_code,
        a.ftvfspd_fspd_code,
        a.ftvfspd_prd_end_date,
        ftvfund_ftyp_code,
        ftvfund_fund_code_bavl,
        ftvfund_grnt_code,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code
 "
"BANINST1","FRVSRQ1","","select  frvsrq2_coas_code,
        frvsrq2_fsyr_code,
        frvsrq2_fspd_code,
        frvsrq2_prd_end_date,
        substr(f_get_acci
            ('O',frvsrq2_coas_code,null,null,frvsrq2_fund_code,
             frvsrq2_orgn_code,frvsrq2_acct_code,frvsrq2_prog_code,
             frvsrq2_prd_end_date),1,50),
        frvsrq2_fund_code,
        frvsrq2_fund_code_bavl,
        frvsrq2_orgn_code,
        ftvorgn_orgn_code_nsf,
        frvsrq2_acct_code,
        ftvacct_acct_code_pool,
        frvsrq2_prog_code,
        substr(f_coa_hierarchy
            ('FTYP',frvsrq2_coas_code,frvsrq2_ftyp_code,null,
                    null,frvsrq2_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('FUND',frvsrq2_coas_code,frvsrq2_fund_code,null,
                    null,frvsrq2_prd_end_date),1,250),
        substr(f_coa_hierarchy
            ('ORGN',frvsrq2_coas_code,frvsrq2_orgn_code,null,
                    null,frvsrq2_prd_end_date),1,400),
        substr(f_coa_hierarchy
            ('ATYP',frvsrq2_coas_code,ftvacct_atyp_code,null,
                    null,frvsrq2_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('ACCT',frvsrq2_coas_code,frvsrq2_acct_code,null,
                    null,frvsrq2_prd_end_date),1,200),
        substr(f_coa_hierarchy
            ('PROG',frvsrq2_coas_code,frvsrq2_prog_code,null,
                    null,frvsrq2_prd_end_date),1,250),
        frvsrq2_ytd_budg_orig,
        frvsrq2_ytd_budg_adjust,
        frvsrq2_ytd_actual,
        frvsrq2_ytd_commitments,
        frvsrq2_cpd_budg_change,
        frvsrq2_cpd_actual,
        frvsrq2_cpd_commitments,
        frvsrq2_grnt_code,
        frbgrnt_agency_pidm,
        ftvagcy_agcy_code_pred_pidm,
        frbgrnt_orgn_code_resp_office,
        frbgrnt_grant_type,
        frbgrnt_category,
        frbgrnt_sub_category,
        frbgrnt_pi_pidm,
        substr(f_get_grant_loc(frvsrq2_grnt_code),1,6),
        ftvacct_acct_class_code,
        ftvatyp_internal_atyp_code,
        frbgrnt_cum_funding_amt,
        substr(f_prior_grant_amounts
		(frvsrq2_coas_code,frvsrq2_fsyr_code,frvsrq2_fund_code,
             frvsrq2_orgn_code,frvsrq2_acct_code,frvsrq2_prog_code),1,100),
        substr(f_memo_ledger_amounts
            (frvsrq2_coas_code,frbgrnt_code,frvsrq2_fund_code,
             frvsrq2_orgn_code,frvsrq2_acct_code,frvsrq2_prog_code,
             frbgrnt_project_start_date,frbgrnt_project_end_date,
             ftvfsyr_start_date,frvsrq2_prd_end_date),1,50)
from    ftvfsyr,
        ftvorgn,
        ftvacct,
        frbgrnt,
        ftvagcy,
        ftvatyp,
        frvsrq2
where   ftvfsyr_coas_code         = frvsrq2_coas_code
and     ftvfsyr_fsyr_code         = frvsrq2_fsyr_code
and     ftvorgn_coas_code         = frvsrq2_coas_code
and     ftvorgn_orgn_code         = frvsrq2_orgn_code
and     ftvorgn_eff_date         <= frvsrq2_prd_end_date
and     ftvorgn_nchg_date         > frvsrq2_prd_end_date
and     ftvacct_coas_code         = frvsrq2_coas_code
and     ftvacct_acct_code         = frvsrq2_acct_code
and     ftvacct_eff_date         <= frvsrq2_prd_end_date
and     ftvacct_nchg_date         > frvsrq2_prd_end_date
and     frbgrnt_code              = frvsrq2_grnt_code
and     ftvagcy_agcy_code_pidm(+) = frbgrnt_agency_pidm
and     ftvatyp_coas_code         = ftvacct_coas_code
and     ftvatyp_atyp_code         = ftvacct_atyp_code
and     ftvatyp_eff_date         <= frvsrq2_prd_end_date
and     ftvatyp_nchg_date         > frvsrq2_prd_end_date
 "
"BANINST1","FRVSRQ0","Web for Executives Grant Ledger 01-13 Including Accrual View","select  'B',
        frvsrq1_coas_code,
        substr(to_char(to_date(frvsrq1_fsyr_code,'RR'),'YYYY'),1,4),
        frvsrq1_fspd_code,
        frvsrq1_prd_end_date,
        frvsrq1_grnt_code,
        substr(f_format_name(frvsrq1_agency_pidm,'L30'),1,60),
        substr(f_format_name(frvsrq1_agcy_code_pred_pidm,'L30'),1,60),
        frvsrq1_orgn_code_resp_office,
        frvsrq1_grant_type,
        frvsrq1_category,
        frvsrq1_sub_category,
        substr(f_format_name(frvsrq1_pi_pidm,'LFMI'),1,60),
        frvsrq1_locn_code,
        substr(f_split_fields(frvsrq1_concat_acci,1),1,6),
        frvsrq1_fund_code,
        frvsrq1_orgn_code,
        frvsrq1_acct_code,
        frvsrq1_acct_class_code,
        frvsrq1_internal_atyp_code,
        frvsrq1_prog_code,
        substr(f_split_fields(frvsrq1_concat_ftyp_hier,1),1,2),
        substr(f_split_fields(frvsrq1_concat_ftyp_hier,4),1,2),
        substr(f_split_fields(frvsrq1_concat_fund_hier,1),1,6),
        substr(f_split_fields(frvsrq1_concat_fund_hier,4),1,6),
        substr(f_split_fields(frvsrq1_concat_fund_hier,7),1,6),
        substr(f_split_fields(frvsrq1_concat_fund_hier,10),1,6),
        substr(f_split_fields(frvsrq1_concat_fund_hier,13),1,6),
        nvl(frvsrq1_fund_code_bavl,frvsrq1_fund_code),
        substr(f_split_fields(frvsrq1_concat_orgn_hier,1),1,6),
        substr(f_split_fields(frvsrq1_concat_orgn_hier,4),1,6),
        substr(f_split_fields(frvsrq1_concat_orgn_hier,7),1,6),
        substr(f_split_fields(frvsrq1_concat_orgn_hier,10),1,6),
        substr(f_split_fields(frvsrq1_concat_orgn_hier,13),1,6),
        substr(f_split_fields(frvsrq1_concat_orgn_hier,16),1,6),
        substr(f_split_fields(frvsrq1_concat_orgn_hier,19),1,6),
        substr(f_split_fields(frvsrq1_concat_orgn_hier,22),1,6),
        nvl(frvsrq1_orgn_code_nsf,frvsrq1_orgn_code),
        substr(f_split_fields(frvsrq1_concat_atyp_hier,1),1,2),
        substr(f_split_fields(frvsrq1_concat_atyp_hier,4),1,2),
        substr(f_split_fields(frvsrq1_concat_acct_hier,1),1,6),
        substr(f_split_fields(frvsrq1_concat_acct_hier,4),1,6),
        substr(f_split_fields(frvsrq1_concat_acct_hier,7),1,6),
        substr(f_split_fields(frvsrq1_concat_acct_hier,10),1,6),
        nvl(frvsrq1_acct_code_pool,frvsrq1_acct_code),
        substr(f_split_fields(frvsrq1_concat_prog_hier,1),1,6),
        substr(f_split_fields(frvsrq1_concat_prog_hier,4),1,6),
        substr(f_split_fields(frvsrq1_concat_prog_hier,7),1,6),
        substr(f_split_fields(frvsrq1_concat_prog_hier,10),1,6),
        substr(f_split_fields(frvsrq1_concat_prog_hier,13),1,6),
        frvsrq1_total_award,
        to_number(f_split_fields(frvsrq1_concat_py_amounts,1),999999999999999.99),
        to_number(f_split_fields(frvsrq1_concat_py_amounts,2),999999999999999.99),
        to_number(f_split_fields(frvsrq1_concat_py_amounts,3),999999999999999.99),
        to_number(f_split_fields(frvsrq1_concat_py_amounts,4),999999999999999.99),
        to_number(f_split_fields(frvsrq1_concat_mem_amounts,1),999999999999999.99),
        frvsrq1_ytd_budg_orig,
        frvsrq1_ytd_budg_adjust,
        frvsrq1_ytd_actual,
        frvsrq1_ytd_commitments,
        to_number(f_split_fields(frvsrq1_concat_mem_amounts,2),999999999999999.99),
        frvsrq1_cpd_budg_change,
        frvsrq1_cpd_actual,
        frvsrq1_cpd_commitments,
        to_number(f_split_fields(frvsrq1_concat_mem_amounts,3),999999999999999.99)
from    frvsrq1"
"BANINST1","FRVSRP2","","select  fgbopal_coas_code,
        fgbopal_fsyr_code,
        a.ftvfspd_fspd_code,
        a.ftvfspd_prd_end_date,
        ftvfund_ftyp_code,
        ftvfund_fund_code_bavl,
        ftvfund_grnt_code,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code,
        sum(fgbopal_13_adopt_bud),
        sum(fgbopal_13_bud_adjt),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_adopt_bud,
            '02', fgbopal_02_adopt_bud,
            '03', fgbopal_03_adopt_bud,
            '04', fgbopal_04_adopt_bud,
            '05', fgbopal_05_adopt_bud,
            '06', fgbopal_06_adopt_bud,
            '07', fgbopal_07_adopt_bud,
            '08', fgbopal_08_adopt_bud,
            '09', fgbopal_09_adopt_bud,
            '10', fgbopal_10_adopt_bud,
            '11', fgbopal_11_adopt_bud,
            '12', fgbopal_12_adopt_bud,
            '13', fgbopal_13_adopt_bud)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_adjt,
            '02', fgbopal_02_bud_adjt,
            '03', fgbopal_03_bud_adjt,
            '04', fgbopal_04_bud_adjt,
            '05', fgbopal_05_bud_adjt,
            '06', fgbopal_06_bud_adjt,
            '07', fgbopal_07_bud_adjt,
            '08', fgbopal_08_bud_adjt,
            '09', fgbopal_09_bud_adjt,
            '10', fgbopal_10_bud_adjt,
            '11', fgbopal_11_bud_adjt,
            '12', fgbopal_12_bud_adjt,
            '13', fgbopal_13_bud_adjt)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv,
            '02', fgbopal_02_ytd_actv,
            '03', fgbopal_03_ytd_actv,
            '04', fgbopal_04_ytd_actv,
            '05', fgbopal_05_ytd_actv,
            '06', fgbopal_06_ytd_actv,
            '07', fgbopal_07_ytd_actv,
            '08', fgbopal_08_ytd_actv,
            '09', fgbopal_09_ytd_actv,
            '10', fgbopal_10_ytd_actv,
            '11', fgbopal_11_ytd_actv,
            '12', fgbopal_12_ytd_actv,
            '13', fgbopal_13_ytd_actv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb,
            '02', fgbopal_02_encumb,
            '03', fgbopal_03_encumb,
            '04', fgbopal_04_encumb,
            '05', fgbopal_05_encumb,
            '06', fgbopal_06_encumb,
            '07', fgbopal_07_encumb,
            '08', fgbopal_08_encumb,
            '09', fgbopal_09_encumb,
            '10', fgbopal_10_encumb,
            '11', fgbopal_11_encumb,
            '12', fgbopal_12_encumb,
            '13', fgbopal_13_encumb)) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv,
            '02', fgbopal_02_bud_rsrv,
            '03', fgbopal_03_bud_rsrv,
            '04', fgbopal_04_bud_rsrv,
            '05', fgbopal_05_bud_rsrv,
            '06', fgbopal_06_bud_rsrv,
            '07', fgbopal_07_bud_rsrv,
            '08', fgbopal_08_bud_rsrv,
            '09', fgbopal_09_bud_rsrv,
            '10', fgbopal_10_bud_rsrv,
            '11', fgbopal_11_bud_rsrv,
            '12', fgbopal_12_bud_rsrv,
            '13', fgbopal_13_bud_rsrv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_acctd_bud - fgbopal_00_acctd_bud,
            '02', fgbopal_02_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                              fgbopal_00_acctd_bud),
            '03', fgbopal_03_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                              fgbopal_00_acctd_bud),
            '04', fgbopal_04_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                              fgbopal_00_acctd_bud),
            '05', fgbopal_05_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                              fgbopal_00_acctd_bud),
            '06', fgbopal_06_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                              fgbopal_00_acctd_bud),
            '07', fgbopal_07_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                              fgbopal_00_acctd_bud),
            '08', fgbopal_08_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                              fgbopal_00_acctd_bud),
            '09', fgbopal_09_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                              fgbopal_00_acctd_bud),
            '10', fgbopal_10_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                              fgbopal_00_acctd_bud),
            '11', fgbopal_11_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                              fgbopal_00_acctd_bud),
            '12', fgbopal_12_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                        '11', fgbopal_11_acctd_bud,
                              fgbopal_00_acctd_bud),
            '13', fgbopal_13_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                        '11', fgbopal_11_acctd_bud,
                        '12', fgbopal_12_acctd_bud,
                              fgbopal_00_acctd_bud) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv - fgbopal_00_ytd_actv,
            '02', fgbopal_02_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                              fgbopal_00_ytd_actv),
            '03', fgbopal_03_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                              fgbopal_00_ytd_actv),
            '04', fgbopal_04_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                              fgbopal_00_ytd_actv),
            '05', fgbopal_05_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                              fgbopal_00_ytd_actv),
            '06', fgbopal_06_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                              fgbopal_00_ytd_actv),
            '07', fgbopal_07_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                              fgbopal_00_ytd_actv),
            '08', fgbopal_08_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                              fgbopal_00_ytd_actv),
            '09', fgbopal_09_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                              fgbopal_00_ytd_actv),
            '10', fgbopal_10_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                              fgbopal_00_ytd_actv),
            '11', fgbopal_11_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                              fgbopal_00_ytd_actv),
            '12', fgbopal_12_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                        '11', fgbopal_11_ytd_actv,
                              fgbopal_00_ytd_actv),
            '13', fgbopal_13_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                        '11', fgbopal_11_ytd_actv,
                        '12', fgbopal_12_ytd_actv,
                              fgbopal_00_ytd_actv) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb - fgbopal_00_encumb,
            '02', fgbopal_02_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                              fgbopal_00_encumb),
            '03', fgbopal_03_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                              fgbopal_00_encumb),
            '04', fgbopal_04_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                              fgbopal_00_encumb),
            '05', fgbopal_05_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                              fgbopal_00_encumb),
            '06', fgbopal_06_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                              fgbopal_00_encumb),
            '07', fgbopal_07_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                              fgbopal_00_encumb),
            '08', fgbopal_08_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                              fgbopal_00_encumb),
            '09', fgbopal_09_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                              fgbopal_00_encumb),
            '10', fgbopal_10_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                              fgbopal_00_encumb),
            '11', fgbopal_11_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                              fgbopal_00_encumb),
            '12', fgbopal_12_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                        '11', fgbopal_11_encumb,
                              fgbopal_00_encumb),
            '13', fgbopal_13_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                        '11', fgbopal_11_encumb,
                        '12', fgbopal_12_encumb,
                              fgbopal_00_encumb) )) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv - fgbopal_00_bud_rsrv,
            '02', fgbopal_02_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '03', fgbopal_03_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '04', fgbopal_04_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '05', fgbopal_05_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '06', fgbopal_06_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '07', fgbopal_07_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '08', fgbopal_08_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '09', fgbopal_09_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '10', fgbopal_10_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '11', fgbopal_11_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '12', fgbopal_12_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                        '11', fgbopal_11_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '13', fgbopal_13_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                        '11', fgbopal_11_bud_rsrv,
                        '12', fgbopal_12_bud_rsrv,
                              fgbopal_00_bud_rsrv) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_acctd_bud - fgbopal_00_acctd_bud,
            '02', fgbopal_02_acctd_bud - fgbopal_01_acctd_bud,
            '03', fgbopal_03_acctd_bud - fgbopal_02_acctd_bud,
            '04', fgbopal_04_acctd_bud - fgbopal_03_acctd_bud,
            '05', fgbopal_05_acctd_bud - fgbopal_04_acctd_bud,
            '06', fgbopal_06_acctd_bud - fgbopal_05_acctd_bud,
            '07', fgbopal_07_acctd_bud - fgbopal_06_acctd_bud,
            '08', fgbopal_08_acctd_bud - fgbopal_07_acctd_bud,
            '09', fgbopal_09_acctd_bud - fgbopal_08_acctd_bud,
            '10', fgbopal_10_acctd_bud - fgbopal_09_acctd_bud,
            '11', fgbopal_11_acctd_bud - fgbopal_10_acctd_bud,
            '12', fgbopal_12_acctd_bud - fgbopal_11_acctd_bud,
            '13', fgbopal_13_acctd_bud - fgbopal_12_acctd_bud)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv - fgbopal_00_ytd_actv,
            '02', fgbopal_02_ytd_actv - fgbopal_01_ytd_actv,
            '03', fgbopal_03_ytd_actv - fgbopal_02_ytd_actv,
            '04', fgbopal_04_ytd_actv - fgbopal_03_ytd_actv,
            '05', fgbopal_05_ytd_actv - fgbopal_04_ytd_actv,
            '06', fgbopal_06_ytd_actv - fgbopal_05_ytd_actv,
            '07', fgbopal_07_ytd_actv - fgbopal_06_ytd_actv,
            '08', fgbopal_08_ytd_actv - fgbopal_07_ytd_actv,
            '09', fgbopal_09_ytd_actv - fgbopal_08_ytd_actv,
            '10', fgbopal_10_ytd_actv - fgbopal_09_ytd_actv,
            '11', fgbopal_11_ytd_actv - fgbopal_10_ytd_actv,
            '12', fgbopal_12_ytd_actv - fgbopal_11_ytd_actv,
            '13', fgbopal_13_ytd_actv - fgbopal_12_ytd_actv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb - fgbopal_00_encumb,
            '02', fgbopal_02_encumb - fgbopal_01_encumb,
            '03', fgbopal_03_encumb - fgbopal_02_encumb,
            '04', fgbopal_04_encumb - fgbopal_03_encumb,
            '05', fgbopal_05_encumb - fgbopal_04_encumb,
            '06', fgbopal_06_encumb - fgbopal_05_encumb,
            '07', fgbopal_07_encumb - fgbopal_06_encumb,
            '08', fgbopal_08_encumb - fgbopal_07_encumb,
            '09', fgbopal_09_encumb - fgbopal_08_encumb,
            '10', fgbopal_10_encumb - fgbopal_09_encumb,
            '11', fgbopal_11_encumb - fgbopal_10_encumb,
            '12', fgbopal_12_encumb - fgbopal_11_encumb,
            '13', fgbopal_13_encumb - fgbopal_12_encumb)) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv - fgbopal_00_bud_rsrv,
            '02', fgbopal_02_bud_rsrv - fgbopal_01_bud_rsrv,
            '03', fgbopal_03_bud_rsrv - fgbopal_02_bud_rsrv,
            '04', fgbopal_04_bud_rsrv - fgbopal_03_bud_rsrv,
            '05', fgbopal_05_bud_rsrv - fgbopal_04_bud_rsrv,
            '06', fgbopal_06_bud_rsrv - fgbopal_05_bud_rsrv,
            '07', fgbopal_07_bud_rsrv - fgbopal_06_bud_rsrv,
            '08', fgbopal_08_bud_rsrv - fgbopal_07_bud_rsrv,
            '09', fgbopal_09_bud_rsrv - fgbopal_08_bud_rsrv,
            '10', fgbopal_10_bud_rsrv - fgbopal_09_bud_rsrv,
            '11', fgbopal_11_bud_rsrv - fgbopal_10_bud_rsrv,
            '12', fgbopal_12_bud_rsrv - fgbopal_11_bud_rsrv,
            '13', fgbopal_13_bud_rsrv - fgbopal_12_bud_rsrv))
from    ftvfspd a,
        ftvfspd b,
        ftvfund,
        fgbopal
where   a.ftvfspd_coas_code = fgbopal_coas_code
and     a.ftvfspd_fsyr_code = fgbopal_fsyr_code
and     ftvfund_coas_code         = fgbopal_coas_code
and     ftvfund_fund_code         = fgbopal_fund_code
and     ftvfund_eff_date         <= a.ftvfspd_prd_end_date
and     ftvfund_nchg_date         > a.ftvfspd_prd_end_date
and     ftvfund_grnt_code is not null
and     b.rowid(+) =
            f_prior_eoq_rowid(
                a.ftvfspd_coas_code,
                a.ftvfspd_fsyr_code,
                a.ftvfspd_fspd_code)
group by
        fgbopal_coas_code,
        fgbopal_fsyr_code,
        a.ftvfspd_fspd_code,
        a.ftvfspd_prd_end_date,
        ftvfund_ftyp_code,
        ftvfund_fund_code_bavl,
        ftvfund_grnt_code,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code
 "
"BANINST1","FRVSRP1","","select  frvsrp2_coas_code,
        frvsrp2_fsyr_code,
        frvsrp2_fspd_code,
        frvsrp2_prd_end_date,
        substr(f_get_acci
            ('O',frvsrp2_coas_code,null,null,frvsrp2_fund_code,
             frvsrp2_orgn_code,frvsrp2_acct_code,frvsrp2_prog_code,
             frvsrp2_prd_end_date),1,50),
        frvsrp2_fund_code,
        frvsrp2_fund_code_bavl,
        frvsrp2_orgn_code,
        ftvorgn_orgn_code_nsf,
        frvsrp2_acct_code,
        ftvacct_acct_code_pool,
        frvsrp2_prog_code,
        substr(f_coa_hierarchy
            ('FTYP',frvsrp2_coas_code,frvsrp2_ftyp_code,null,
                    null,frvsrp2_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('FUND',frvsrp2_coas_code,frvsrp2_fund_code,null,
                    null,frvsrp2_prd_end_date),1,250),
        substr(f_coa_hierarchy
            ('ORGN',frvsrp2_coas_code,frvsrp2_orgn_code,null,
                    null,frvsrp2_prd_end_date),1,400),
        substr(f_coa_hierarchy
            ('ATYP',frvsrp2_coas_code,ftvacct_atyp_code,null,
                    null,frvsrp2_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('ACCT',frvsrp2_coas_code,frvsrp2_acct_code,null,
                    null,frvsrp2_prd_end_date),1,200),
        substr(f_coa_hierarchy
            ('PROG',frvsrp2_coas_code,frvsrp2_prog_code,null,
                    null,frvsrp2_prd_end_date),1,250),
        frvsrp2_ytd_budg_orig,
        frvsrp2_ytd_budg_adjust,
        frvsrp2_ytd_actual,
        frvsrp2_ytd_commitments,
        frvsrp2_cpd_budg_change,
        frvsrp2_cpd_actual,
        frvsrp2_cpd_commitments,
        frvsrp2_grnt_code,
        frbgrnt_agency_pidm,
        ftvagcy_agcy_code_pred_pidm,
        frbgrnt_orgn_code_resp_office,
        frbgrnt_grant_type,
        frbgrnt_category,
        frbgrnt_sub_category,
        frbgrnt_pi_pidm,
        substr(f_get_grant_loc(frvsrp2_grnt_code),1,6),
        ftvacct_acct_class_code,
        ftvatyp_internal_atyp_code,
        frbgrnt_cum_funding_amt,
        substr(f_prior_grant_amounts
		(frvsrp2_coas_code,frvsrp2_fsyr_code,frvsrp2_fund_code,
             frvsrp2_orgn_code,frvsrp2_acct_code,frvsrp2_prog_code),1,100),
        substr(f_memo_ledger_amounts
            (frvsrp2_coas_code,frbgrnt_code,frvsrp2_fund_code,
             frvsrp2_orgn_code,frvsrp2_acct_code,frvsrp2_prog_code,
             frbgrnt_project_start_date,frbgrnt_project_end_date,
             ftvfsyr_start_date,frvsrp2_prd_end_date),1,50)
from    ftvfsyr,
        ftvorgn,
        ftvacct,
        frbgrnt,
        ftvagcy,
        ftvatyp,
        frvsrp2
where   ftvfsyr_coas_code         = frvsrp2_coas_code
and     ftvfsyr_fsyr_code         = frvsrp2_fsyr_code
and     ftvorgn_coas_code         = frvsrp2_coas_code
and     ftvorgn_orgn_code         = frvsrp2_orgn_code
and     ftvorgn_eff_date         <= frvsrp2_prd_end_date
and     ftvorgn_nchg_date         > frvsrp2_prd_end_date
and     ftvacct_coas_code         = frvsrp2_coas_code
and     ftvacct_acct_code         = frvsrp2_acct_code
and     ftvacct_eff_date         <= frvsrp2_prd_end_date
and     ftvacct_nchg_date         > frvsrp2_prd_end_date
and     frbgrnt_code              = frvsrp2_grnt_code
and     ftvagcy_agcy_code_pidm(+) = frbgrnt_agency_pidm
and     ftvatyp_coas_code         = ftvacct_coas_code
and     ftvatyp_atyp_code         = ftvacct_atyp_code
and     ftvatyp_eff_date         <= frvsrp2_prd_end_date
and     ftvatyp_nchg_date         > frvsrp2_prd_end_date
 "
"BANINST1","FRVSRP0","Web for Executives Grant Ledger 01-13 Excluding Accrual View","select  'B',
        frvsrp1_coas_code,
        substr(to_char(to_date(frvsrp1_fsyr_code,'RR'),'YYYY'),1,4),
        frvsrp1_fspd_code,
        frvsrp1_prd_end_date,
        frvsrp1_grnt_code,
        substr(f_format_name(frvsrp1_agency_pidm,'L30'),1,60),
        substr(f_format_name(frvsrp1_agcy_code_pred_pidm,'L30'),1,60),
        frvsrp1_orgn_code_resp_office,
        frvsrp1_grant_type,
        frvsrp1_category,
        frvsrp1_sub_category,
        substr(f_format_name(frvsrp1_pi_pidm,'LFMI'),1,60),
        frvsrp1_locn_code,
        substr(f_split_fields(frvsrp1_concat_acci,1),1,6),
        frvsrp1_fund_code,
        frvsrp1_orgn_code,
        frvsrp1_acct_code,
        frvsrp1_acct_class_code,
        frvsrp1_internal_atyp_code,
        frvsrp1_prog_code,
        substr(f_split_fields(frvsrp1_concat_ftyp_hier,1),1,2),
        substr(f_split_fields(frvsrp1_concat_ftyp_hier,4),1,2),
        substr(f_split_fields(frvsrp1_concat_fund_hier,1),1,6),
        substr(f_split_fields(frvsrp1_concat_fund_hier,4),1,6),
        substr(f_split_fields(frvsrp1_concat_fund_hier,7),1,6),
        substr(f_split_fields(frvsrp1_concat_fund_hier,10),1,6),
        substr(f_split_fields(frvsrp1_concat_fund_hier,13),1,6),
        nvl(frvsrp1_fund_code_bavl,frvsrp1_fund_code),
        substr(f_split_fields(frvsrp1_concat_orgn_hier,1),1,6),
        substr(f_split_fields(frvsrp1_concat_orgn_hier,4),1,6),
        substr(f_split_fields(frvsrp1_concat_orgn_hier,7),1,6),
        substr(f_split_fields(frvsrp1_concat_orgn_hier,10),1,6),
        substr(f_split_fields(frvsrp1_concat_orgn_hier,13),1,6),
        substr(f_split_fields(frvsrp1_concat_orgn_hier,16),1,6),
        substr(f_split_fields(frvsrp1_concat_orgn_hier,19),1,6),
        substr(f_split_fields(frvsrp1_concat_orgn_hier,22),1,6),
        nvl(frvsrp1_orgn_code_nsf,frvsrp1_orgn_code),
        substr(f_split_fields(frvsrp1_concat_atyp_hier,1),1,2),
        substr(f_split_fields(frvsrp1_concat_atyp_hier,4),1,2),
        substr(f_split_fields(frvsrp1_concat_acct_hier,1),1,6),
        substr(f_split_fields(frvsrp1_concat_acct_hier,4),1,6),
        substr(f_split_fields(frvsrp1_concat_acct_hier,7),1,6),
        substr(f_split_fields(frvsrp1_concat_acct_hier,10),1,6),
        nvl(frvsrp1_acct_code_pool,frvsrp1_acct_code),
        substr(f_split_fields(frvsrp1_concat_prog_hier,1),1,6),
        substr(f_split_fields(frvsrp1_concat_prog_hier,4),1,6),
        substr(f_split_fields(frvsrp1_concat_prog_hier,7),1,6),
        substr(f_split_fields(frvsrp1_concat_prog_hier,10),1,6),
        substr(f_split_fields(frvsrp1_concat_prog_hier,13),1,6),
        frvsrp1_total_award,
        to_number(f_split_fields(frvsrp1_concat_py_amounts,1),999999999999999.99),
        to_number(f_split_fields(frvsrp1_concat_py_amounts,2),999999999999999.99),
        to_number(f_split_fields(frvsrp1_concat_py_amounts,3),999999999999999.99),
        to_number(f_split_fields(frvsrp1_concat_py_amounts,4),999999999999999.99),
        to_number(f_split_fields(frvsrp1_concat_mem_amounts,1),999999999999999.99),
        frvsrp1_ytd_budg_orig,
        frvsrp1_ytd_budg_adjust,
        frvsrp1_ytd_actual,
        frvsrp1_ytd_commitments,
        to_number(f_split_fields(frvsrp1_concat_mem_amounts,2),999999999999999.99),
        frvsrp1_cpd_budg_change,
        frvsrp1_cpd_actual,
        frvsrp1_cpd_commitments,
        to_number(f_split_fields(frvsrp1_concat_mem_amounts,3),999999999999999.99)
from    frvsrp1"
"BANINST1","FRVSRA2","","select  fgbopal_coas_code,
        fgbopal_fsyr_code,
        '14',
        ftvfsyr_start_date,
        ftvfsyr_end_date,
        ftvfund_ftyp_code,
        ftvfund_fund_code_bavl,
        ftvfund_grnt_code,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code,
        sum(fgbopal_14_adopt_bud),
        sum(fgbopal_14_bud_adjt),
        sum(fgbopal_14_ytd_actv),
        sum(fgbopal_14_encumb) + sum(fgbopal_14_bud_rsrv),
        sum(fgbopal_14_acctd_bud -
            decode(a.ftvfspd_fspd_code,
                '01', fgbopal_01_acctd_bud,
                '02', fgbopal_02_acctd_bud,
                '03', fgbopal_03_acctd_bud,
                '04', fgbopal_04_acctd_bud,
                '05', fgbopal_05_acctd_bud,
                '06', fgbopal_06_acctd_bud,
                '07', fgbopal_07_acctd_bud,
                '08', fgbopal_08_acctd_bud,
                '09', fgbopal_09_acctd_bud,
                '10', fgbopal_10_acctd_bud,
                '11', fgbopal_11_acctd_bud,
                '12', fgbopal_12_acctd_bud,
                '13', fgbopal_13_acctd_bud,
                      fgbopal_00_acctd_bud)),
        sum(fgbopal_14_ytd_actv -
            decode(a.ftvfspd_fspd_code,
                '01', fgbopal_01_ytd_actv,
                '02', fgbopal_02_ytd_actv,
                '03', fgbopal_03_ytd_actv,
                '04', fgbopal_04_ytd_actv,
                '05', fgbopal_05_ytd_actv,
                '06', fgbopal_06_ytd_actv,
                '07', fgbopal_07_ytd_actv,
                '08', fgbopal_08_ytd_actv,
                '09', fgbopal_09_ytd_actv,
                '10', fgbopal_10_ytd_actv,
                '11', fgbopal_11_ytd_actv,
                '12', fgbopal_12_ytd_actv,
                '13', fgbopal_13_ytd_actv,
                      fgbopal_00_ytd_actv)),
        sum(fgbopal_14_encumb -
            decode(a.ftvfspd_fspd_code,
                '01', fgbopal_01_encumb,
                '02', fgbopal_02_encumb,
                '03', fgbopal_03_encumb,
                '04', fgbopal_04_encumb,
                '05', fgbopal_05_encumb,
                '06', fgbopal_06_encumb,
                '07', fgbopal_07_encumb,
                '08', fgbopal_08_encumb,
                '09', fgbopal_09_encumb,
                '10', fgbopal_10_encumb,
                '11', fgbopal_11_encumb,
                '12', fgbopal_12_encumb,
                '13', fgbopal_13_encumb,
                      fgbopal_00_encumb)) +
        sum(fgbopal_14_bud_rsrv -
            decode(a.ftvfspd_fspd_code,
                '01', fgbopal_01_bud_rsrv,
                '02', fgbopal_02_bud_rsrv,
                '03', fgbopal_03_bud_rsrv,
                '04', fgbopal_04_bud_rsrv,
                '05', fgbopal_05_bud_rsrv,
                '06', fgbopal_06_bud_rsrv,
                '07', fgbopal_07_bud_rsrv,
                '08', fgbopal_08_bud_rsrv,
                '09', fgbopal_09_bud_rsrv,
                '10', fgbopal_10_bud_rsrv,
                '11', fgbopal_11_bud_rsrv,
                '12', fgbopal_12_bud_rsrv,
                '13', fgbopal_13_bud_rsrv,
                      fgbopal_00_bud_rsrv)),
        sum(fgbopal_14_acctd_bud - fgbopal_13_acctd_bud),
        sum(fgbopal_14_ytd_actv - fgbopal_13_ytd_actv),
        sum(fgbopal_14_encumb - fgbopal_13_encumb) +
            sum(fgbopal_14_bud_rsrv - fgbopal_13_bud_rsrv)
from    ftvfsyr,
        ftvfspd a,
        ftvfund,
        fgbopal
where   ftvfsyr_coas_code = fgbopal_coas_code
and     ftvfsyr_fsyr_code = fgbopal_fsyr_code
and     ftvfund_coas_code         = fgbopal_coas_code
and     ftvfund_fund_code         = fgbopal_fund_code
and     ftvfund_eff_date         <= ftvfsyr_end_date
and     ftvfund_nchg_date         > ftvfsyr_end_date
and     ftvfund_grnt_code is not null
and     a.rowid(+) =
            f_prior_eoq_rowid(
                fgbopal_coas_code,
                fgbopal_fsyr_code,
                '13')
group by
        fgbopal_coas_code,
        fgbopal_fsyr_code,
        ftvfsyr_start_date,
        ftvfsyr_end_date,
        ftvfund_ftyp_code,
        ftvfund_fund_code_bavl,
        ftvfund_grnt_code,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code
 "
"BANINST1","FRVSRA1","","select  frvsra2_coas_code,
        frvsra2_fsyr_code,
        frvsra2_fspd_code,
        frvsra2_end_date,
        substr(f_get_acci
            ('O',frvsra2_coas_code,null,null,frvsra2_fund_code,
             frvsra2_orgn_code,frvsra2_acct_code,frvsra2_prog_code,
             frvsra2_end_date),1,50),
        frvsra2_fund_code,
        frvsra2_fund_code_bavl,
        frvsra2_orgn_code,
        ftvorgn_orgn_code_nsf,
        frvsra2_acct_code,
        ftvacct_acct_code_pool,
        frvsra2_prog_code,
        substr(f_coa_hierarchy
            ('FTYP',frvsra2_coas_code,frvsra2_ftyp_code,null,
                    null,frvsra2_end_date),1,100),
        substr(f_coa_hierarchy
            ('FUND',frvsra2_coas_code,frvsra2_fund_code,null,
                    null,frvsra2_end_date),1,250),
        substr(f_coa_hierarchy
            ('ORGN',frvsra2_coas_code,frvsra2_orgn_code,null,
                    null,frvsra2_end_date),1,400),
        substr(f_coa_hierarchy
            ('ATYP',frvsra2_coas_code,ftvacct_atyp_code,null,
                    null,frvsra2_end_date),1,100),
        substr(f_coa_hierarchy
            ('ACCT',frvsra2_coas_code,frvsra2_acct_code,null,
                    null,frvsra2_end_date),1,200),
        substr(f_coa_hierarchy
            ('PROG',frvsra2_coas_code,frvsra2_prog_code,null,
                    null,frvsra2_end_date),1,250),
        frvsra2_ytd_accr_budg_orig,
        frvsra2_ytd_accr_budg_adjust,
        frvsra2_ytd_accr_actual,
        frvsra2_ytd_accr_commitments,
        frvsra2_cpd_budg_change,
        frvsra2_cpd_actual,
        frvsra2_cpd_commitments,
        frvsra2_grnt_code,
        frbgrnt_agency_pidm,
        ftvagcy_agcy_code_pred_pidm,
        frbgrnt_orgn_code_resp_office,
        frbgrnt_grant_type,
        frbgrnt_category,
        frbgrnt_sub_category,
        frbgrnt_pi_pidm,
        substr(f_get_grant_loc(frvsra2_grnt_code),1,6),
        ftvacct_acct_class_code,
        ftvatyp_internal_atyp_code,
        frbgrnt_cum_funding_amt,
        substr(f_prior_grant_amounts
		(frvsra2_coas_code,frvsra2_fsyr_code,frvsra2_fund_code,
             frvsra2_orgn_code,frvsra2_acct_code,frvsra2_prog_code),1,100),
        substr(f_memo_ledger_amounts
            (frvsra2_coas_code,frbgrnt_code,frvsra2_fund_code,
             frvsra2_orgn_code,frvsra2_acct_code,frvsra2_prog_code,
             frbgrnt_project_start_date,frbgrnt_project_end_date,
             frvsra2_start_date,frvsra2_end_date),1,50)
from    ftvorgn,
        ftvacct,
        frbgrnt,
        ftvagcy,
        ftvatyp,
        frvsra2
where   ftvorgn_coas_code         = frvsra2_coas_code
and     ftvorgn_orgn_code         = frvsra2_orgn_code
and     ftvorgn_eff_date         <= frvsra2_end_date
and     ftvorgn_nchg_date         > frvsra2_end_date
and     ftvacct_coas_code         = frvsra2_coas_code
and     ftvacct_acct_code         = frvsra2_acct_code
and     ftvacct_eff_date         <= frvsra2_end_date
and     ftvacct_nchg_date         > frvsra2_end_date
and     frbgrnt_code              = frvsra2_grnt_code
and     ftvagcy_agcy_code_pidm(+) = frbgrnt_agency_pidm
and     ftvatyp_coas_code         = ftvacct_coas_code
and     ftvatyp_atyp_code         = ftvacct_atyp_code
and     ftvatyp_eff_date         <= frvsra2_end_date
and     ftvatyp_nchg_date         > frvsra2_end_date
 "
"BANINST1","FRVSRA0","Web for Executives Grant Ledger Period 14 View","select  'B',
        frvsra1_coas_code,
        substr(to_char(to_date(frvsra1_fsyr_code,'RR'),'YYYY'),1,4),
        frvsra1_fspd_code,
        frvsra1_end_date,
        frvsra1_grnt_code,
        substr(f_format_name(frvsra1_agency_pidm,'L30'),1,60),
        substr(f_format_name(frvsra1_agcy_code_pred_pidm,'L30'),1,60),
        frvsra1_orgn_code_resp_office,
        frvsra1_grant_type,
        frvsra1_category,
        frvsra1_sub_category,
        substr(f_format_name(frvsra1_pi_pidm,'LFMI'),1,60),
        frvsra1_locn_code,
        substr(f_split_fields(frvsra1_concat_acci,1),1,6),
        frvsra1_fund_code,
        frvsra1_orgn_code,
        frvsra1_acct_code,
        frvsra1_acct_class_code,
        frvsra1_internal_atyp_code,
        frvsra1_prog_code,
        substr(f_split_fields(frvsra1_concat_ftyp_hier,1),1,2),
        substr(f_split_fields(frvsra1_concat_ftyp_hier,4),1,2),
        substr(f_split_fields(frvsra1_concat_fund_hier,1),1,6),
        substr(f_split_fields(frvsra1_concat_fund_hier,4),1,6),
        substr(f_split_fields(frvsra1_concat_fund_hier,7),1,6),
        substr(f_split_fields(frvsra1_concat_fund_hier,10),1,6),
        substr(f_split_fields(frvsra1_concat_fund_hier,13),1,6),
        nvl(frvsra1_fund_code_bavl,frvsra1_fund_code),
        substr(f_split_fields(frvsra1_concat_orgn_hier,1),1,6),
        substr(f_split_fields(frvsra1_concat_orgn_hier,4),1,6),
        substr(f_split_fields(frvsra1_concat_orgn_hier,7),1,6),
        substr(f_split_fields(frvsra1_concat_orgn_hier,10),1,6),
        substr(f_split_fields(frvsra1_concat_orgn_hier,13),1,6),
        substr(f_split_fields(frvsra1_concat_orgn_hier,16),1,6),
        substr(f_split_fields(frvsra1_concat_orgn_hier,19),1,6),
        substr(f_split_fields(frvsra1_concat_orgn_hier,22),1,6),
        nvl(frvsra1_orgn_code_nsf,frvsra1_orgn_code),
        substr(f_split_fields(frvsra1_concat_atyp_hier,1),1,2),
        substr(f_split_fields(frvsra1_concat_atyp_hier,4),1,2),
        substr(f_split_fields(frvsra1_concat_acct_hier,1),1,6),
        substr(f_split_fields(frvsra1_concat_acct_hier,4),1,6),
        substr(f_split_fields(frvsra1_concat_acct_hier,7),1,6),
        substr(f_split_fields(frvsra1_concat_acct_hier,10),1,6),
        nvl(frvsra1_acct_code_pool,frvsra1_acct_code),
        substr(f_split_fields(frvsra1_concat_prog_hier,1),1,6),
        substr(f_split_fields(frvsra1_concat_prog_hier,4),1,6),
        substr(f_split_fields(frvsra1_concat_prog_hier,7),1,6),
        substr(f_split_fields(frvsra1_concat_prog_hier,10),1,6),
        substr(f_split_fields(frvsra1_concat_prog_hier,13),1,6),
        frvsra1_total_award,
        to_number(f_split_fields(frvsra1_concat_py_amounts,1),999999999999999.99),
        to_number(f_split_fields(frvsra1_concat_py_amounts,2),999999999999999.99),
        to_number(f_split_fields(frvsra1_concat_py_amounts,3),999999999999999.99),
        to_number(f_split_fields(frvsra1_concat_py_amounts,4),999999999999999.99),
        to_number(f_split_fields(frvsra1_concat_mem_amounts,1),999999999999999.99),
        frvsra1_ytd_accr_budg_orig,
        frvsra1_ytd_accr_budg_adjust,
        frvsra1_ytd_accr_actual,
        frvsra1_ytd_accr_commitments,
        to_number(f_split_fields(frvsra1_concat_mem_amounts,2),999999999999999.99),
        frvsra1_cpd_budg_change,
        frvsra1_cpd_actual,
        frvsra1_cpd_commitments,
        to_number(f_split_fields(frvsra1_concat_mem_amounts,3),999999999999999.99)
from    frvsra1"
"BANINST1","FRVSFE0","Grant Ledger Available Balance View for the End Period for the Fund Code within the Grant Code for Sponsor Accounts","select frvgle0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvgle0_adj_bud_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvgle0_acct_code, '') ,1 ,1 ),'R',
                        frvgle0_adj_bud_amt,frvgle0_adj_bud_amt*(-1)))) ,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvgle0_cmt_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvgle0_acct_code, '') ,1 ,1 ),'R',
                        frvgle0_cmt_amt,frvgle0_cmt_amt*(-1)))),
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvgle0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvgle0_acct_code, '') ,1 ,1 ),'R',
                        frvgle0_ytd_actv_amt,frvgle0_ytd_actv_amt*(-1))))
  from frvgle0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvgle0_acct_code, '') ,1 ,1 )) = 'Y'
  and f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvgle0_acct_code,
                          ''
                        ) <> ' '
  group by frvgle0_fund_code"
"BANINST1","FRVSFB0","Grant Ledger Available Balance View for the Begin Period for the Fund Code within the Grant Code for Sponsor Accounts","select frvglb0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvglb0_adj_bud_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvglb0_acct_code, '') ,1 ,1 ),'R',
                        frvglb0_adj_bud_amt,frvglb0_adj_bud_amt*(-1)))) ,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvglb0_cmt_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvglb0_acct_code, '') ,1 ,1 ),'R',
                        frvglb0_cmt_amt,frvglb0_cmt_amt*(-1)))),
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvglb0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvglb0_acct_code, '') ,1 ,1 ),'R',
                        frvglb0_ytd_actv_amt,frvglb0_ytd_actv_amt*(-1))))
  from frvglb0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvglb0_acct_code, '') ,1 ,1 )) = 'Y'
  and f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvglb0_acct_code,
                          ''
                        ) <> ' '
  group by frvglb0_fund_code"
"BANINST1","FRVSBLF","Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code for Sponsor Accounts","select frvsfe0_fund_code,
       substr(f_fund_title(frkgvar.f_get_coas_code,frvsfe0_fund_code),1,35 ),
       frvsfe0_adj_bud_amt - frvsfb0_adj_bud_amt,
       frvsfe0_cmt_amt - frvsfb0_cmt_amt ,
       frvsfe0_ytd_actv_amt - frvsfb0_ytd_actv_amt,
       (frvsfe0_adj_bud_amt - frvsfb0_adj_bud_amt) -
             (frvsfe0_cmt_amt - frvsfb0_cmt_amt) -
             (frvsfe0_ytd_actv_amt - frvsfb0_ytd_actv_amt)
  from frvsfe0,frvsfb0
  where frvsfe0_fund_code = frvsfb0_fund_code"
"BANINST1","FRVSBAL","Grant Ledger Available Balance View from End Period to Begin Period for Sponsored Accounts","select substr(frvgse1_acct_code,1,10),
       frvgse1_adj_bud_amt - frvgsb1_adj_bud_amt ,
       frvgse1_cmt_amt - frvgsb1_cmt_amt ,
       frvgse1_ytd_actv_amt - frvgsb1_ytd_actv_amt,
       (frvgse1_adj_bud_amt - frvgsb1_adj_bud_amt) -
             (frvgse1_cmt_amt - frvgsb1_cmt_amt) -
             (frvgse1_ytd_actv_amt - frvgsb1_ytd_actv_amt)
  from frvgsb1,frvgse1
  where frvgsb1_acct_code = frvgse1_acct_code"
"BANINST1","FRVSBAA","Grant Ledger Available Balance View from End Period to Begin Period based on account type for Sponsor Accounts","select substr(frvsae1_atyp_code,1,10),
       frvsae1_adj_bud_amt - frvsab1_adj_bud_amt ,
       frvsae1_cmt_amt - frvsab1_cmt_amt ,
       frvsae1_ytd_actv_amt - frvsab1_ytd_actv_amt,
       (frvsae1_adj_bud_amt - frvsab1_adj_bud_amt) -
       (frvsae1_cmt_amt - frvsab1_cmt_amt) -
       (frvsae1_ytd_actv_amt - frvsab1_ytd_actv_amt)
  from frvsae1,frvsab1
  where frvsae1_atyp_code = frvsab1_atyp_code"
"BANINST1","FRVSAE1","","select f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvgae0_atyp_code
                         ),
       sum(frvgae0_adj_bud_amt) ,
       sum(frvgae0_cmt_amt) ,
       sum(frvgae0_ytd_actv_amt)
  from frvgae0
 where f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvgae0_atyp_code
                         ) <> ' '
  group by f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvgae0_atyp_code
                             )
 "
"BANINST1","FRVSAB1","","select f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvgab0_atyp_code
                         ),
       sum(frvgab0_adj_bud_amt) ,
       sum(frvgab0_cmt_amt) ,
       sum(frvgab0_ytd_actv_amt)
  from frvgab0
 where f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvgab0_atyp_code
                         ) <> ' '
  group by f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvgab0_atyp_code
                             )
 "
"BANINST1","FRVPMS0","This view provides the total amounts of all the grants for a
 PMS code in a particular period.","select FRBGBIL_PMSC_CODE,
       FRRFFRR_PERIOD_FROM_DATE,
       FRRFFRR_PERIOD_TO_DATE,
       FRRFFRR_REP_TYPE,
       FRRFFRR_FINAL_IND,
       NVL(SUM(FRRFFRR_CASH_RCPT_TOTAL),0), 	      --a
       NVL(SUM(FRRFFRR_CASH_DISB_TOTAL),0),	      --b
       NVL(SUM(FRRFFRR_FED_FUNDS_AUTH),0),	      --d
       NVL(SUM(FRRFFRR_FED_SHARE_EXP),0),             --e
       NVL(SUM(FRRFFRR_FED_SHARE_UNLIQ_OBLIG),0),     --f
       NVL(SUM(FRRFFRR_RCPT_SHARE_REQUIRED),0),       --i
       NVL(SUM(FRRFFRR_RCPT_SHARE_EXP),0),            --j
       NVL(SUM(FRRFFRR_PROG_INCOME_FED),0),           --n
       NVL(SUM(FRRFFRR_PROG_INCOME_EXP_DED),0),       --o
       NVL(SUM(FRRFFRR_PROG_INCOME_EXP_ADD),0),       --p
       NVL(SUM(FRRFFRR_INDR_RATE_BASE),0),	      --11c
       NVL(SUM(FRRFFRR_INDR_TOTAL),0)	              --11d
from frrffrr a, frbgbil b
where a.frrffrr_grnt_code = b.frbgbil_grnt_code
  and b.frbgbil_pmsc_code is not null
group by frbgbil_pmsc_code,
         frrffrr_period_from_date,
         frrffrr_period_to_date,
         frrffrr_rep_type,
         frrffrr_final_ind
order by frrffrr_period_to_date desc"
"BANINST1","FRVPLE1","Grant Ledger View for the End Grant Period for budget Pool Accounts","SELECT fgkbavl.get_bgt_pool_acct(frkgvar.f_get_coas_code, frvgle0_acct_code),
            SUM (frvgle0_adj_bud_amt),
            SUM (frvgle0_cmt_amt),
            SUM (frvgle0_ytd_actv_amt)
       FROM frvgle0
   GROUP BY fgkbavl.get_bgt_pool_acct(frkgvar.f_get_coas_code, frvgle0_acct_code)"
"BANINST1","FRVPLB1","Grant Ledger View for the Begin Grant Period for budget Pool Accounts","SELECT fgkbavl.get_bgt_pool_acct(frkgvar.f_get_coas_code, frvglb0_acct_code),
            SUM (frvglb0_adj_bud_amt),
            SUM (frvglb0_cmt_amt),
            SUM (frvglb0_ytd_actv_amt)
       FROM frvglb0
   GROUP BY fgkbavl.get_bgt_pool_acct(frkgvar.f_get_coas_code, frvglb0_acct_code)"
"BANINST1","FRVPBAA","Grant Ledger Available Balance View from End Period to Begin Period based on account type or budget pool account","SELECT frvgae1_atyp_code,
          SUBSTR(f_atyp_title(frkgvar.f_get_coas_code, frvgae1_atyp_code),1,35),
          SUBSTR(f_int_atyp_desc(frkgvar.f_get_coas_code, '',
                 frvgae1_atyp_code),1,1),
          frvgae1_adj_bud_amt - frvgab1_adj_bud_amt,
          frvgae1_cmt_amt - frvgab1_cmt_amt,
          frvgae1_ytd_actv_amt - frvgab1_ytd_actv_amt,
          (frvgae1_adj_bud_amt - frvgab1_adj_bud_amt)
          - (frvgae1_cmt_amt - frvgab1_cmt_amt)
          - (frvgae1_ytd_actv_amt - frvgab1_ytd_actv_amt)
   FROM   frvgae1, frvgab1
   WHERE  frvgae1_atyp_code = frvgab1_atyp_code
   AND    f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                              SUBSTR(f_int_atyp_desc (frkgvar.f_get_coas_code,'',
                                     frvgae1_atyp_code),1, 1)) = 'Y'
   AND    frkgvar.f_get_atyp_level_1_2_ind <> 3
   UNION
   SELECT frvple1_pool,
          SUBSTR(f_acct_title(frkgvar.f_get_coas_code, frvple1_pool),1,35),
          SUBSTR(f_int_atyp_desc(frkgvar.f_get_coas_code, frvple1_pool, ''),1,1),
          frvple1_adj_bud_amt - frvplb1_adj_bud_amt,
          frvple1_cmt_amt - frvplb1_cmt_amt,
          frvple1_ytd_actv_amt - frvplb1_ytd_actv_amt,
          (frvple1_adj_bud_amt - frvplb1_adj_bud_amt)
          - (frvple1_cmt_amt - frvplb1_cmt_amt)
          - (frvple1_ytd_actv_amt - frvplb1_ytd_actv_amt)
   FROM   frvplb1, frvple1
   WHERE  frvplb1_pool = frvple1_pool
   AND    f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                              SUBSTR(f_int_atyp_desc (frkgvar.f_get_coas_code,
                                     frvple1_pool,''),1,1)) = 'Y'
   AND    frkgvar.f_get_atyp_level_1_2_ind = 3"
"BANINST1","FRVMLE1","","select frvmle0_acct_code,
       sum(frvmle0_ytd_actv_amt)
  from frvmle0
  group by frvmle0_acct_code
 "
"BANINST1","FRVMLE0","Memo Grant Ledger View for the End Grand Period","select
       a.frrmeml_fund_code,
       a.frrmeml_orgn_code,
       a.frrmeml_acct_code,
       a.frrmeml_prog_code,
       a.frrmeml_actv_code,
       a.frrmeml_locn_code,
       sum( nvl((decode(f_get_max_grnt_prd_memo(
                                     a.frrmeml_coas_code,
                                     a.frrmeml_grnt_code,
                                     a.frrmeml_fund_code,
                                     a.frrmeml_orgn_code,
                                     a.frrmeml_acct_code,
                                     a.frrmeml_prog_code,
                                     a.frrmeml_actv_code,
                                     a.frrmeml_locn_code),
                '00', a.frrmeml_00_ytd_actv,
                '01', a.frrmeml_01_ytd_actv,
                '02', a.frrmeml_02_ytd_actv,
                '03', a.frrmeml_03_ytd_actv,
                '04', a.frrmeml_04_ytd_actv,
                '05', a.frrmeml_05_ytd_actv,
                '06', a.frrmeml_06_ytd_actv,
                '07', a.frrmeml_07_ytd_actv,
                '08', a.frrmeml_08_ytd_actv,
                '09', a.frrmeml_09_ytd_actv,
                '10', a.frrmeml_10_ytd_actv,
                '11', a.frrmeml_11_ytd_actv,
                '12', a.frrmeml_12_ytd_actv,
                '13', a.frrmeml_13_ytd_actv,
                '14', a.frrmeml_14_ytd_actv)), 0))
         FROM frrmeml a
         WHERE a.frrmeml_coas_code   =  frkgvar.f_get_coas_code
         AND   a.frrmeml_grnt_yr   = f_get_max_grnt_yr_memo(
                                     a.frrmeml_coas_code,
                                     a.frrmeml_grnt_code,
                                     a.frrmeml_fund_code,
                                     a.frrmeml_orgn_code,
                                     a.frrmeml_acct_code,
                                     a.frrmeml_prog_code,
                                     a.frrmeml_actv_code,
                                     a.frrmeml_locn_code)
         AND a.frrmeml_grnt_code   =  frkgvar.f_get_grnt_code
         AND (a.frrmeml_fund_code  = frkgvar.f_get_fund_code
              or frkgvar.f_get_fund_code is null)
         AND (a.frrmeml_orgn_code = frkgvar.f_get_orgn_code
              or frkgvar.f_get_orgn_code is null)
         AND (a.frrmeml_acct_code = frkgvar.f_get_acct_code
              or frkgvar.f_get_acct_code is null)
         AND EXISTS
             (select 'X'
               from ftvacct
                where ftvacct_coas_code = a.frrmeml_coas_code
                  and ftvacct_acct_code = a.frrmeml_acct_code
                  and ftvacct_atyp_code =
                          decode(frkgvar.f_get_atyp_code,'',
                                 ftvacct_atyp_code,frkgvar.f_get_atyp_code)
                  and ftvacct_eff_date <= sysdate
                  and ftvacct_nchg_date > sysdate)
        AND (a.frrmeml_prog_code = frkgvar.f_get_prog_code
             or frkgvar.f_get_prog_code is null)
        AND (a.frrmeml_actv_code = frkgvar.f_get_actv_code
             or frkgvar.f_get_actv_code is null)
        AND (a.frrmeml_locn_code = frkgvar.f_get_locn_code
             or frkgvar.f_get_locn_code is null)
    GROUP BY a.frrmeml_fund_code, a.frrmeml_orgn_code,
             a.frrmeml_prog_code, a.frrmeml_actv_code,
             a.frrmeml_locn_code, a.frrmeml_acct_code
 "
"BANINST1","FRVMLB1","","select frvmlb0_acct_code,
       sum(frvmlb0_ytd_actv_amt)
  from frvmlb0
  group by frvmlb0_acct_code
 "
"BANINST1","FRVMLB0","Memo Grant Ledger View for the Begin Grand Period","select
       a.frrmeml_fund_code,
       a.frrmeml_orgn_code,
       a.frrmeml_acct_code,
       a.frrmeml_prog_code,
       a.frrmeml_actv_code,
       a.frrmeml_locn_code,
       sum( nvl((decode(f_get_min_grnt_prd_memo(
                                     a.frrmeml_coas_code,
                                     a.frrmeml_grnt_code,
                                     a.frrmeml_fund_code,
                                     a.frrmeml_orgn_code,
                                     a.frrmeml_acct_code,
                                     a.frrmeml_prog_code,
                                     a.frrmeml_actv_code,
                                     a.frrmeml_locn_code),
                '00', decode(frkgvar.f_get_trail_in_prd_ind,
                            'Y', 0, a.frrmeml_00_ytd_actv),
                '01', a.frrmeml_01_ytd_actv,
                '02', a.frrmeml_02_ytd_actv,
                '03', a.frrmeml_03_ytd_actv,
                '04', a.frrmeml_04_ytd_actv,
                '05', a.frrmeml_05_ytd_actv,
                '06', a.frrmeml_06_ytd_actv,
                '07', a.frrmeml_07_ytd_actv,
                '08', a.frrmeml_08_ytd_actv,
                '09', a.frrmeml_09_ytd_actv,
                '10', a.frrmeml_10_ytd_actv,
                '11', a.frrmeml_11_ytd_actv,
                '12', a.frrmeml_12_ytd_actv,
                '13', a.frrmeml_13_ytd_actv,
                '14', a.frrmeml_14_ytd_actv)), 0))
         FROM frrmeml a
         WHERE a.frrmeml_coas_code   =  frkgvar.f_get_coas_code
         AND   a.frrmeml_grnt_yr   = f_get_min_grnt_yr_memo(
                                     a.frrmeml_coas_code,
                                     a.frrmeml_grnt_code,
                                     a.frrmeml_fund_code,
                                     a.frrmeml_orgn_code,
                                     a.frrmeml_acct_code,
                                     a.frrmeml_prog_code,
                                     a.frrmeml_actv_code,
                                     a.frrmeml_locn_code)
         AND a.frrmeml_grnt_code   =  frkgvar.f_get_grnt_code
         AND (a.frrmeml_fund_code  = frkgvar.f_get_fund_code
              or frkgvar.f_get_fund_code is null)
         AND (a.frrmeml_orgn_code = frkgvar.f_get_orgn_code
              or frkgvar.f_get_orgn_code is null)
         AND (a.frrmeml_acct_code = frkgvar.f_get_acct_code
              or frkgvar.f_get_acct_code is null)
         AND EXISTS
             (select 'X'
               from ftvacct
                where ftvacct_coas_code = a.frrmeml_coas_code
                  and ftvacct_acct_code = a.frrmeml_acct_code
                  and ftvacct_atyp_code =
                          decode(frkgvar.f_get_atyp_code,'',
                                 ftvacct_atyp_code,frkgvar.f_get_atyp_code)
                  and ftvacct_eff_date <= sysdate
                  and ftvacct_nchg_date > sysdate)
        AND (a.frrmeml_prog_code = frkgvar.f_get_prog_code
             or frkgvar.f_get_prog_code is null)
        AND (a.frrmeml_actv_code = frkgvar.f_get_actv_code
             or frkgvar.f_get_actv_code is null)
        AND (a.frrmeml_locn_code = frkgvar.f_get_locn_code
             or frkgvar.f_get_locn_code is null)
    GROUP BY a.frrmeml_fund_code, a.frrmeml_orgn_code,
             a.frrmeml_prog_code, a.frrmeml_actv_code,
             a.frrmeml_locn_code, a.frrmeml_acct_code
 "
"BANINST1","FRVMFE0","Memo Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code","select frvmle0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvmle0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvmle0_acct_code, '') ,1 ,1 ),'R',
                        frvmle0_ytd_actv_amt,frvmle0_ytd_actv_amt*(-1))))
  from frvmle0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvmle0_acct_code, '') ,1 ,1 )) = 'Y'
  group by frvmle0_fund_code"
"BANINST1","FRVMFB0","Memo Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code","select frvmlb0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvmlb0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvmlb0_acct_code, '') ,1 ,1 ),'R',
                        frvmlb0_ytd_actv_amt,frvmlb0_ytd_actv_amt*(-1))))
  from frvmlb0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvmlb0_acct_code, '') ,1 ,1 )) = 'Y'
  group by frvmlb0_fund_code"
"BANINST1","FRVMEML","","select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '00',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_00_ytd_actv
from    frrmeml
where   frrmeml_00_ytd_actv <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '01',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_01_ytd_actv - frrmeml_00_ytd_actv
from    frrmeml
where  (frrmeml_01_ytd_actv - frrmeml_00_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '02',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_02_ytd_actv - frrmeml_01_ytd_actv
from    frrmeml
where  (frrmeml_02_ytd_actv - frrmeml_01_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '03',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_03_ytd_actv - frrmeml_02_ytd_actv
from    frrmeml
where  (frrmeml_03_ytd_actv - frrmeml_02_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '04',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_04_ytd_actv - frrmeml_03_ytd_actv
from    frrmeml
where  (frrmeml_04_ytd_actv - frrmeml_03_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '05',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_05_ytd_actv - frrmeml_04_ytd_actv
from    frrmeml
where  (frrmeml_05_ytd_actv - frrmeml_04_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '06',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_06_ytd_actv - frrmeml_05_ytd_actv
from    frrmeml
where  (frrmeml_06_ytd_actv - frrmeml_05_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '07',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_07_ytd_actv - frrmeml_06_ytd_actv
from    frrmeml
where  (frrmeml_07_ytd_actv - frrmeml_06_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '08',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_08_ytd_actv - frrmeml_07_ytd_actv
from    frrmeml
where  (frrmeml_08_ytd_actv - frrmeml_07_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '09',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_09_ytd_actv - frrmeml_08_ytd_actv
from    frrmeml
where  (frrmeml_09_ytd_actv - frrmeml_08_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '10',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_10_ytd_actv - frrmeml_09_ytd_actv
from    frrmeml
where  (frrmeml_10_ytd_actv - frrmeml_09_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '11',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_11_ytd_actv - frrmeml_10_ytd_actv
from    frrmeml
where  (frrmeml_11_ytd_actv - frrmeml_10_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '12',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_12_ytd_actv - frrmeml_11_ytd_actv
from    frrmeml
where  (frrmeml_12_ytd_actv - frrmeml_11_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '13',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_13_ytd_actv - frrmeml_12_ytd_actv
from    frrmeml
where  (frrmeml_13_ytd_actv - frrmeml_12_ytd_actv) <> 0
union all
select  frrmeml_coas_code,
        substr(to_char(to_date(frrmeml_grnt_yr,'RR'),'YYYY'),1,4),
        '14',
        frrmeml_grnt_code,
        frrmeml_fund_code,
        frrmeml_orgn_code,
        frrmeml_acct_code,
        frrmeml_prog_code,
        frrmeml_actv_code,
        frrmeml_locn_code,
        frrmeml_14_ytd_actv - frrmeml_13_ytd_actv
from    frrmeml
where  (frrmeml_14_ytd_actv - frrmeml_13_ytd_actv) <> 0
 "
"BANINST1","FRVMBLF","Memo Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code","select frvmfe0_fund_code,
       substr(f_fund_title(frkgvar.f_get_coas_code,frvmfe0_fund_code),1,35 ),
       frvmfe0_ytd_actv_amt - frvmfb0_ytd_actv_amt
  from frvmfe0,frvmfb0
  where frvmfe0_fund_code = frvmfb0_fund_code"
"BANINST1","FRVMBAL","Memo Grant Ledger Available Balance View from End Period to Begin Period","select frvmle1_acct_code,
       substr(f_acct_title(frkgvar.f_get_coas_code,frvmle1_acct_code),1,35 ),
       substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
              frvmle1_acct_code, '') ,1 ,1 ) ,
       frvmle1_ytd_actv_amt - frvmlb1_ytd_actv_amt
  from frvmlb1,frvmle1
  where frvmlb1_acct_code = frvmle1_acct_code
 "
"BANINST1","FRVMBAA","Memo Grant Ledger Available Balance View from End Period to Begin Period based on account type","select frvmae1_atyp_code,
       substr(f_atyp_title(frkgvar.f_get_coas_code,frvmae1_atyp_code),1,35 ),
       substr(f_int_atyp_desc(frkgvar.f_get_coas_code,'',
              frvmae1_atyp_code) ,1 ,1 ) ,
       frvmae1_ytd_actv_amt - frvmab1_ytd_actv_amt
  from frvmae1,frvmab1
  where frvmae1_atyp_code = frvmab1_atyp_code"
"BANINST1","FRVMAE1","","select frvmae0_atyp_code,
       sum(frvmae0_ytd_actv_amt)
  from frvmae0
  group by frvmae0_atyp_code
 "
"BANINST1","FRVMAE0","Memo Grant Ledger View for the End Grand Period based on atyp level_1 and level_2","select f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                               frkgvar.f_get_coas_code,
                               a.frrmeml_acct_code,
                               frkgvar.f_get_atyp_code
                               ),
       sum( nvl((decode(f_get_max_grnt_prd_memo(
                                     a.frrmeml_coas_code,
                                     a.frrmeml_grnt_code,
                                     a.frrmeml_fund_code,
                                     a.frrmeml_orgn_code,
                                     a.frrmeml_acct_code,
                                     a.frrmeml_prog_code,
                                     a.frrmeml_actv_code,
                                     a.frrmeml_locn_code),
                '00', a.frrmeml_00_ytd_actv,
                '01', a.frrmeml_01_ytd_actv,
                '02', a.frrmeml_02_ytd_actv,
                '03', a.frrmeml_03_ytd_actv,
                '04', a.frrmeml_04_ytd_actv,
                '05', a.frrmeml_05_ytd_actv,
                '06', a.frrmeml_06_ytd_actv,
                '07', a.frrmeml_07_ytd_actv,
                '08', a.frrmeml_08_ytd_actv,
                '09', a.frrmeml_09_ytd_actv,
                '10', a.frrmeml_10_ytd_actv,
                '11', a.frrmeml_11_ytd_actv,
                '12', a.frrmeml_12_ytd_actv,
                '13', a.frrmeml_13_ytd_actv,
                '14', a.frrmeml_14_ytd_actv)), 0))
         FROM frrmeml a
         WHERE a.frrmeml_coas_code   =  frkgvar.f_get_coas_code
           AND a.frrmeml_grnt_yr   = f_get_max_grnt_yr_memo(
                                     a.frrmeml_coas_code,
                                     a.frrmeml_grnt_code,
                                     a.frrmeml_fund_code,
                                     a.frrmeml_orgn_code,
                                     a.frrmeml_acct_code,
                                     a.frrmeml_prog_code,
                                     a.frrmeml_actv_code,
                                     a.frrmeml_locn_code)
         AND a.frrmeml_grnt_code   =  frkgvar.f_get_grnt_code
         AND f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrmeml_acct_code,
                                  frkgvar.f_get_atyp_code
                                 ) <> ' '
         AND EXISTS
            (select 'X'
               from ftvacct,ftvatyp
               where ftvacct_coas_code = ftvatyp_coas_code
                 and ftvacct_acct_code = a.frrmeml_acct_code
                 and ftvacct_atyp_code = ftvatyp_atyp_code
                 and ftvacct_atyp_code = decode(frkgvar.f_get_atyp_code,'',
                                     ftvacct_atyp_code,frkgvar.f_get_atyp_code))
         AND a.frrmeml_fund_code  =
                       decode(frkgvar.f_get_fund_code,'',
                       a.frrmeml_fund_code, frkgvar.f_get_fund_code)
         AND a.frrmeml_orgn_code =
                       decode(frkgvar.f_get_orgn_code,'',
                       a.frrmeml_orgn_code, frkgvar.f_get_orgn_code)
         AND a.frrmeml_prog_code =
                       decode(frkgvar.f_get_prog_code,'',
                       a.frrmeml_prog_code, frkgvar.f_get_prog_code)
         AND a.frrmeml_actv_code =
                       decode(frkgvar.f_get_actv_code,'',
                       a.frrmeml_actv_code , frkgvar.f_get_actv_code)
         AND a.frrmeml_locn_code =
                       decode(frkgvar.f_get_locn_code,'',
                       a.frrmeml_locn_code , frkgvar.f_get_locn_code)
    GROUP BY a.frrmeml_fund_code, a.frrmeml_orgn_code,
             a.frrmeml_prog_code, a.frrmeml_actv_code,
             a.frrmeml_locn_code,
             f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrmeml_acct_code,
                                  frkgvar.f_get_atyp_code
                                 )
 "
"BANINST1","FRVMAB1","","select frvmab0_atyp_code,
       sum(frvmab0_ytd_actv_amt)
  from frvmab0
  group by frvmab0_atyp_code
 "
"BANINST1","FRVMAB0","Memo Grant Ledger View for the Begin Grand Period based on atyp level_1 and level_2","select f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                               frkgvar.f_get_coas_code,
                               a.frrmeml_acct_code,
                               frkgvar.f_get_atyp_code
                               ),
       sum( nvl((decode(f_get_min_grnt_prd_memo(
                                     a.frrmeml_coas_code,
                                     a.frrmeml_grnt_code,
                                     a.frrmeml_fund_code,
                                     a.frrmeml_orgn_code,
                                     a.frrmeml_acct_code,
                                     a.frrmeml_prog_code,
                                     a.frrmeml_actv_code,
                                     a.frrmeml_locn_code),
                '00', decode(frkgvar.f_get_trail_in_prd_ind,
                            'Y', 0, a.frrmeml_00_ytd_actv),
                '01', a.frrmeml_01_ytd_actv,
                '02', a.frrmeml_02_ytd_actv,
                '03', a.frrmeml_03_ytd_actv,
                '04', a.frrmeml_04_ytd_actv,
                '05', a.frrmeml_05_ytd_actv,
                '06', a.frrmeml_06_ytd_actv,
                '07', a.frrmeml_07_ytd_actv,
                '08', a.frrmeml_08_ytd_actv,
                '09', a.frrmeml_09_ytd_actv,
                '10', a.frrmeml_10_ytd_actv,
                '11', a.frrmeml_11_ytd_actv,
                '12', a.frrmeml_12_ytd_actv,
                '13', a.frrmeml_13_ytd_actv,
                '14', a.frrmeml_14_ytd_actv)), 0))
         FROM frrmeml a
         WHERE a.frrmeml_COAS_CODE   =  frkgvar.f_get_coas_code
           AND a.frrmeml_GRNT_YR   = f_get_min_grnt_yr_memo(
                                     a.frrmeml_coas_code,
                                     a.frrmeml_grnt_code,
                                     a.frrmeml_fund_code,
                                     a.frrmeml_orgn_code,
                                     a.frrmeml_acct_code,
                                     a.frrmeml_prog_code,
                                     a.frrmeml_actv_code,
                                     a.frrmeml_locn_code)
         AND a.frrmeml_GRNT_CODE   =  frkgvar.f_get_grnt_code
         AND f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrmeml_acct_code,
                                  frkgvar.f_get_atyp_code
                                 ) <> ' '
         AND EXISTS
            (select 'X'
               from ftvacct,ftvatyp
               where ftvacct_coas_code = ftvatyp_coas_code
                 and ftvacct_acct_code = a.frrmeml_acct_code
                 and ftvacct_atyp_code = ftvatyp_atyp_code
                 and ftvacct_atyp_code = decode(frkgvar.f_get_atyp_code,'',
                                     ftvacct_atyp_code,frkgvar.f_get_atyp_code))
         AND a.frrmeml_fund_code  =
                       decode(frkgvar.f_get_fund_code,'',
                       a.frrmeml_fund_code, frkgvar.f_get_fund_code)
         AND a.frrmeml_orgn_code =
                       decode(frkgvar.f_get_orgn_code,'',
                       a.frrmeml_orgn_code, frkgvar.f_get_orgn_code)
         AND a.frrmeml_prog_code =
                       decode(frkgvar.f_get_prog_code,'',
                       a.frrmeml_prog_code, frkgvar.f_get_prog_code)
         AND a.frrmeml_actv_code =
                       decode(frkgvar.f_get_actv_code,'',
                       a.frrmeml_actv_code , frkgvar.f_get_actv_code)
         AND a.frrmeml_locn_code =
                       decode(frkgvar.f_get_locn_code,'',
                       a.frrmeml_locn_code , frkgvar.f_get_locn_code)
    GROUP BY a.frrmeml_fund_code, a.frrmeml_orgn_code,
             a.frrmeml_prog_code, a.frrmeml_actv_code,
             a.frrmeml_locn_code,
             f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrmeml_acct_code,
                                  frkgvar.f_get_atyp_code
                                 )
 "
"BANINST1","FRVHSFE","Grant Ledger Available Balance View with the Hierarchy for the End Period for the Fund Code within the Grant Code for Sponsor Accounts","select frvghe0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghe0_adj_bud_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghe0_acct_code, '') ,1 ,1 ),'R',
                        frvghe0_adj_bud_amt,frvghe0_adj_bud_amt*(-1)))) ,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghe0_cmt_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghe0_acct_code, '') ,1 ,1 ),'R',
                        frvghe0_cmt_amt,frvghe0_cmt_amt*(-1)))),
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghe0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghe0_acct_code, '') ,1 ,1 ),'R',
                        frvghe0_ytd_actv_amt,frvghe0_ytd_actv_amt*(-1))))
  from frvghe0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvghe0_acct_code, '') ,1 ,1 )) = 'Y'
  and f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvghe0_acct_code,
                          ''
                        ) <> ' '
  group by frvghe0_fund_code
 "
"BANINST1","FRVHSFB","Grant Ledger Available Balance View with the Hierarchy for the Begin Period for the Fund Code within the Grant Code for Sponsor Accounts","select frvghb0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghb0_adj_bud_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghb0_acct_code, '') ,1 ,1 ),'R',
                        frvghb0_adj_bud_amt,frvghb0_adj_bud_amt*(-1)))) ,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghb0_cmt_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghb0_acct_code, '') ,1 ,1 ),'R',
                        frvghb0_cmt_amt,frvghb0_cmt_amt*(-1)))),
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghb0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghb0_acct_code, '') ,1 ,1 ),'R',
                        frvghb0_ytd_actv_amt,frvghb0_ytd_actv_amt*(-1))))
  from frvghb0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvghb0_acct_code, '') ,1 ,1 )) = 'Y'
  and f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvghb0_acct_code,
                          ''
                        ) <> ' '
  group by frvghb0_fund_code
 "
"BANINST1","FRVHSE1","Grant Ledger Available Balance View with the Hierarchy for the End Period and Sponsor Accounts","select f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvghe0_acct_code,
                          ''),
       sum(frvghe0_adj_bud_amt) ,
       sum(frvghe0_cmt_amt) ,
       sum(frvghe0_ytd_actv_amt)
  from frvghe0
  where f_get_sponsor_acct(
                            'GRNT',
                            frkgvar.f_get_grnt_code,
                            frkgvar.f_get_coas_code,
                            frvghe0_acct_code,
                            '') <> ' '
  group by f_get_sponsor_acct(
                              'GRNT',
                              frkgvar.f_get_grnt_code,
                              frkgvar.f_get_coas_code,
                              frvghe0_acct_code,
                              ''
                             )"
"BANINST1","FRVHSBL","Grant Ledger Available Balance View with the Hierarchy from End Period to BeginPeriod for Sponsor Accounts","select substr(frvhse1_acct_code,1,10),
       frvhse1_adj_bud_amt - frvhsb1_adj_bud_amt ,
       frvhse1_cmt_amt - frvhsb1_cmt_amt ,
       frvhse1_ytd_actv_amt - frvhsb1_ytd_actv_amt,
       frvhse1_adj_bud_amt - frvhsb1_adj_bud_amt -
             frvhse1_cmt_amt - frvhsb1_cmt_amt -
             frvhse1_ytd_actv_amt - frvhsb1_ytd_actv_amt
  from frvhsb1,frvhse1
  where frvhsb1_acct_code = frvhse1_acct_code"
"BANINST1","FRVHSBF","Grant Ledger Available Balance View with Hierarchy from End Period to Begin Period by Fund Code within Grant Code for Sponsor Accounts","select frvhsfe_fund_code,
       substr(f_fund_title(frkgvar.f_get_coas_code,frvhsfe_fund_code),1,35 ),
       frvhsfe_adj_bud_amt - frvhsfb_adj_bud_amt,
       frvhsfe_cmt_amt - frvhsfb_cmt_amt ,
       frvhsfe_ytd_actv_amt - frvhsfb_ytd_actv_amt,
       (frvhsfe_adj_bud_amt - frvhsfb_adj_bud_amt) -
             (frvhsfe_cmt_amt - frvhsfb_cmt_amt) -
             (frvhsfe_ytd_actv_amt - frvhsfb_ytd_actv_amt)
  from frvhsfe,frvhsfb
  where frvhsfe_fund_code = frvhsfb_fund_code"
"BANINST1","FRVHSBA","Grant Ledger Available Balance View with Hierarchy from End Period to Begin Period based on account type for Sponsor Accounts","select substr(frvhsae_atyp_code,1,10),
       frvhsae_adj_bud_amt - frvhsab_adj_bud_amt ,
       frvhsae_cmt_amt - frvhsab_cmt_amt ,
       frvhsae_ytd_actv_amt - frvhsab_ytd_actv_amt,
       (frvhsae_adj_bud_amt - frvhsab_adj_bud_amt) -
       (frvhsae_cmt_amt - frvhsab_cmt_amt) -
       (frvhsae_ytd_actv_amt - frvhsab_ytd_actv_amt)
  from frvhsae,frvhsab
  where frvhsae_atyp_code = frvhsab_atyp_code"
"BANINST1","FRVHSB1","Grant Ledger Available Balance View with the Hierarchy for the Begin Period and Sponsor Accounts","select f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvghb0_acct_code,
                          ''),
       sum(frvghb0_adj_bud_amt) ,
       sum(frvghb0_cmt_amt) ,
       sum(frvghb0_ytd_actv_amt)
  from frvghb0
  where f_get_sponsor_acct(
                            'GRNT',
                            frkgvar.f_get_grnt_code,
                            frkgvar.f_get_coas_code,
                            frvghb0_acct_code,
                            '') <> ' '
  group by f_get_sponsor_acct(
                              'GRNT',
                              frkgvar.f_get_grnt_code,
                              frkgvar.f_get_coas_code,
                              frvghb0_acct_code,
                              ''
                             )"
"BANINST1","FRVHSAE","Grant Ledger Available Balance View with the Hierarchy for the End Period and Sponsor Accounts based on Account Type","select f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvhae0_atyp_code
                         ),
       sum(frvhae0_adj_bud_amt) ,
       sum(frvhae0_cmt_amt) ,
       sum(frvhae0_ytd_actv_amt)
  from frvhae0
 where f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvhae0_atyp_code
                         ) <> ' '
  group by f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvhae0_atyp_code
                             )"
"BANINST1","FRVHSAB","Grant Ledger Available Balance View with the Hierarchy for the Begin Period and Sponsor Accounts based on Account Type","select f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvhab0_atyp_code
                         ),
       sum(frvhab0_adj_bud_amt) ,
       sum(frvhab0_cmt_amt) ,
       sum(frvhab0_ytd_actv_amt)
  from frvhab0
 where f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvhab0_atyp_code
                         ) <> ' '
  group by f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          '',
                          frvhab0_atyp_code
                             )"
"BANINST1","FRVHAE1","","select frvhae0_atyp_code,
       sum(frvhae0_adj_bud_amt),
       sum(frvhae0_cmt_amt),
       sum(frvhae0_ytd_actv_amt)
  from frvhae0
  group by frvhae0_atyp_code
 "
"BANINST1","FRVHAE0","Grant Ledger View for the End Grand Period based on atyp level_1 and level_2","select f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                               frkgvar.f_get_coas_code,
                               a.frrgrnl_acct_code,
                               frkgvar.f_get_atyp_code
                               ),
       sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', a.frrgrnl_00_adopt_bud,
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', a.frrgrnl_00_bud_adjt,
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', a.frrgrnl_00_encumb,
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', a.frrgrnl_00_bud_rsrv,
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                '00', a.frrgrnl_00_ytd_actv,
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE a.frrgrnl_COAS_CODE   =  frkgvar.f_get_coas_code
           AND a.frrgrnl_GRNT_YR   = f_get_max_grnt_yr(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code)
         AND a.frrgrnl_GRNT_CODE   =  frkgvar.f_get_grnt_code
         AND f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                               frkgvar.f_get_coas_code,
                               a.frrgrnl_acct_code,
                               frkgvar.f_get_atyp_code
                               ) <> ' '
         AND EXISTS
            (select 'X'
               from ftvacct,ftvatyp
               where ftvacct_coas_code = ftvatyp_coas_code
                 and ftvacct_acct_code = a.frrgrnl_acct_code
                 and ftvacct_atyp_code = ftvatyp_atyp_code
                 and ftvacct_atyp_code = decode(frkgvar.f_get_atyp_code,'',
                                     ftvacct_atyp_code,frkgvar.f_get_atyp_code))
         AND (a.frrgrnl_fund_code  =
          decode(frkgvar.f_get_fund_code,'',
          a.frrgrnl_fund_code, frkgvar.f_get_fund_code)
      OR EXISTS
         (select 'X'
            from fgrfdhc
               where fgrfdhc_sess_id = userenv('SESSIONID')
                 and fgrfdhc_fund_code = a.frrgrnl_fund_code))
    AND (a.frrgrnl_orgn_code =
         decode(frkgvar.f_get_orgn_code,'',
         a.frrgrnl_orgn_code, frkgvar.f_get_orgn_code)
      OR EXISTS
          (select 'X'
             from fgrorhc
             where fgrorhc_sess_id = userenv('SESSIONID')
               and fgrorhc_orgn_code = a.frrgrnl_orgn_code))
    AND (a.frrgrnl_prog_code =
        decode(frkgvar.f_get_prog_code,'',
               a.frrgrnl_prog_code, frkgvar.f_get_prog_code)
     OR EXISTS
         (select 'X'
            from fgrpghc
             where fgrpghc_sess_id = userenv('SESSIONID')
               and fgrpghc_prog_code = a.frrgrnl_prog_code))
    AND a.frrgrnl_actv_code =
        decode(frkgvar.f_get_actv_code,'',
               a.frrgrnl_actv_code , frkgvar.f_get_actv_code)
    AND (a.frrgrnl_locn_code =
           decode(frkgvar.f_get_locn_code,'',
           a.frrgrnl_locn_code , frkgvar.f_get_locn_code)
      OR EXISTS
          (select 'X'
             from fgrlohc
             where fgrlohc_sess_id = userenv('SESSIONID')
               and fgrlohc_locn_code = a.frrgrnl_locn_code))
    GROUP BY a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_prog_code, a.frrgrnl_actv_code,
             a.frrgrnl_locn_code,
             f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrgrnl_acct_code,
                                  frkgvar.f_get_atyp_code
                                 )
 "
"BANINST1","FRVHAB1","","select frvhab0_atyp_code,
       sum(frvhab0_adj_bud_amt) ,
       sum(frvhab0_cmt_amt) ,
       sum(frvhab0_ytd_actv_amt)
  from frvhab0
  group by frvhab0_atyp_code
 "
"BANINST1","FRVHAB0","Grant Ledger View for the Begin Grand Period based on atyp level_1 and level_2","select f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                               frkgvar.f_get_coas_code,
                               a.frrgrnl_acct_code,
                               frkgvar.f_get_atyp_code
                               ),
       sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                              'Y', 0, a.frrgrnl_00_adopt_bud),
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', decode(frkgvar.f_get_trail_in_prd_ind,
                                                'Y', 0, a.frrgrnl_00_bud_adjt),
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', decode(frkgvar.f_get_trail_in_prd_ind,
                                        'Y', 0, a.frrgrnl_00_encumb),
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', decode(frkgvar.f_get_trail_in_prd_ind,
                                        'Y', 0, a.frrgrnl_00_bud_rsrv),
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                '00', decode(frkgvar.f_get_trail_in_prd_ind,
                            'Y', 0, a.frrgrnl_00_ytd_actv),
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE a.frrgrnl_COAS_CODE   =  frkgvar.f_get_coas_code
           AND a.frrgrnl_GRNT_YR   = f_get_min_grnt_yr(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code)
         AND a.frrgrnl_GRNT_CODE   =  frkgvar.f_get_grnt_code
         AND f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrgrnl_acct_code,
                                  frkgvar.f_get_atyp_code
                                 ) <> ' '
         AND EXISTS
            (select 'X'
               from ftvacct,ftvatyp
               where ftvacct_coas_code = ftvatyp_coas_code
                 and ftvacct_acct_code = a.frrgrnl_acct_code
                 and ftvacct_atyp_code = ftvatyp_atyp_code
                 and ftvacct_atyp_code = decode(frkgvar.f_get_atyp_code,'',
                                     ftvacct_atyp_code,frkgvar.f_get_atyp_code))
         AND (a.frrgrnl_fund_code  =
          decode(frkgvar.f_get_fund_code,'',
          a.frrgrnl_fund_code, frkgvar.f_get_fund_code)
      OR EXISTS
         (select 'X'
            from fgrfdhc
               where fgrfdhc_sess_id = userenv('SESSIONID')
                 and fgrfdhc_fund_code = a.frrgrnl_fund_code))
    AND (a.frrgrnl_orgn_code =
         decode(frkgvar.f_get_orgn_code,'',
         a.frrgrnl_orgn_code, frkgvar.f_get_orgn_code)
      OR EXISTS
          (select 'X'
             from fgrorhc
             where fgrorhc_sess_id = userenv('SESSIONID')
               and fgrorhc_orgn_code = a.frrgrnl_orgn_code))
    AND (a.frrgrnl_prog_code =
        decode(frkgvar.f_get_prog_code,'',
               a.frrgrnl_prog_code, frkgvar.f_get_prog_code)
     OR EXISTS
         (select 'X'
            from fgrpghc
             where fgrpghc_sess_id = userenv('SESSIONID')
               and fgrpghc_prog_code = a.frrgrnl_prog_code))
    AND a.frrgrnl_actv_code =
        decode(frkgvar.f_get_actv_code,'',
               a.frrgrnl_actv_code , frkgvar.f_get_actv_code)
    AND (a.frrgrnl_locn_code =
    decode(frkgvar.f_get_locn_code,'',
           a.frrgrnl_locn_code , frkgvar.f_get_locn_code)
      OR EXISTS
          (select 'X'
             from fgrlohc
             where fgrlohc_sess_id = userenv('SESSIONID')
               and fgrlohc_locn_code = a.frrgrnl_locn_code))
    GROUP BY a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_prog_code, a.frrgrnl_actv_code,
             a.frrgrnl_locn_code,
             f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrgrnl_acct_code,
                                  frkgvar.f_get_atyp_code
                                 )
 "
"BANINST1","FRVGTRD","Grant Transaction Detail View","select
fgbtrnd_doc_code,
fgbtrnd_submission_number,
fgbtrnd_item_num,
fgbtrnd_seq_num,
fgbtrnd_reversal_ind,
fgbtrnd_ledger_ind,
fgbtrnd_field_code,
decode(fgbtrnd_field_code,
      '01','OBD','02','ABD','03','YTD','04','ENC','05','RSV','07','TMP'),
fgbtrnd_rucl_code,
fgbtrnd_rulp_code,
fgbtrnd_user_id,
fgbtrnh_doc_ref_num,
fgbtrnh_trans_date,
fgbtrnh_trans_desc,
ftvfund_grnt_code,
fgbtrnd_coas_code,
fgbtrnd_fund_code,
fgbtrnd_orgn_code,
fgbtrnd_acct_code,
fgbtrnd_prog_code,
fgbtrnd_actv_code,
fgbtrnd_locn_code,
fgbtrnh_bank_code,
fgbtrnd_trans_amt,
fgbtrnd_dr_cr_ind,
fgbtrnd_encd_num,
fgbtrnd_encd_item_num,
fgbtrnd_encd_seq_num,
fgbtrnd_cmt_type,
fgbtrnd_activity_date,
fgbtrnd_doc_seq_code,
fgkbavl.get_bgt_pool_acct(fgbtrnd_coas_code, fgbtrnd_acct_code)
from fgbtrnd,
     fgbtrnh,
     ftvfund
 where fgbtrnd_doc_code = fgbtrnh_doc_code
   and fgbtrnd_doc_seq_code = fgbtrnh_doc_seq_code
   and fgbtrnd_submission_number = fgbtrnh_submission_number
   and fgbtrnd_reversal_ind = fgbtrnh_reversal_ind
   and fgbtrnd_item_num = fgbtrnh_item_num
   and fgbtrnd_seq_num = fgbtrnh_seq_num
   and fgbtrnd_serial_num = fgbtrnh_serial_num
   and fgbtrnd_ledger_ind = 'O'
   and fgbtrnd_field_code <> '06'
   and (not exists (select ftvsdat_data
          from ftvsdat
         where ftvsdat_sdat_code_entity = 'FGBTRND'
           and ftvsdat_sdat_code_attr   = 'OTHER_DATA'
           and ftvsdat_sdat_code_opt_1  =  'EXCL_ITD'
           and ftvsdat_eff_date <= SYSDATE
           and (ftvsdat_nchg_date > SYSDATE
            or  ftvsdat_nchg_date is null)
           and rownum=1)
   OR NVL(fgbtrnd_other_data,'~') <> (select ftvsdat_data
                                        from ftvsdat
                                       where ftvsdat_sdat_code_entity = 'FGBTRND'
                                         and ftvsdat_sdat_code_attr   = 'OTHER_DATA'
                                         and ftvsdat_sdat_code_opt_1  =  'EXCL_ITD'
                                         and ftvsdat_eff_date <= SYSDATE
                                         and (ftvsdat_nchg_date > SYSDATE
                                          or  ftvsdat_nchg_date is null)
                                         and rownum=1))
   and ftvfund_coas_code = fgbtrnd_coas_code
   and ftvfund_fund_code = fgbtrnd_fund_code
   and ftvfund_eff_date <= fgbtrnh_trans_date
   and (ftvfund_nchg_date > fgbtrnh_trans_date
        or ftvfund_nchg_date is null)
   and ftvfund_grnt_code is not null
   and exists
     (select 'X' from ftvfsyr
       where fgbtrnd_coas_code = ftvfsyr_coas_code
         and fgbtrnd_fsyr_code <= ftvfsyr_fsyr_code
         and trunc(fgbtrnh_trans_date) between trunc(ftvfsyr_start_date) and trunc(ftvfsyr_end_date))
   and not exists
       (select 'X' from fgbyrlm
         where ((fgbtrnd_doc_code >=fgbyrlm_balf_doc_code
           and   fgbtrnd_doc_code <=fgbyrlm_balf_doc_code_end
           and   fgbtrnd_doc_seq_code = '20'
           and   fgbtrnd_coas_code = fgbyrlm_coas_code
           and   fgbtrnd_fsyr_code = substr(to_char(to_number(to_char(to_date(fgbyrlm_fsyr_code,'RR'),'YYYY'))+1),3,2))
            or  (fgbtrnd_doc_code >=fgbyrlm_encb_doc_code
           and   fgbtrnd_doc_code <=fgbyrlm_encb_doc_code_end
           and   fgbtrnd_doc_seq_code = '20'
           and   fgbtrnd_coas_code = fgbyrlm_coas_code
           and   fgbtrnd_fsyr_code = substr(to_char(to_number(to_char(to_date(fgbyrlm_fsyr_code,'RR'),'YYYY'))+1),3,2))
            or  (fgbtrnd_doc_code >=fgbyrlm_budcf_doc_code
           and   fgbtrnd_doc_code <=fgbyrlm_budcf_doc_code_end
           and   fgbtrnd_doc_seq_code = '20'
           and   fgbtrnd_coas_code = fgbyrlm_coas_code
           and   fgbtrnd_fsyr_code = substr(to_char(to_number(to_char(to_date(fgbyrlm_fsyr_code,'RR'),'YYYY'))+1),3,2))
            or  (fgbtrnd_doc_code >=fgbyrlm_opr_doc_code
           and   fgbtrnd_doc_code <=fgbyrlm_opr_doc_code_end
           and   fgbtrnd_doc_seq_code = '20'
           and   fgbtrnd_coas_code = fgbyrlm_coas_code
           and   fgbtrnd_fsyr_code = fgbyrlm_fsyr_code)))
   and not exists
       (select 'X' from fgbyrlm
         where fgbtrnd_doc_code >=fgbyrlm_lbr_enc_doc_beg
           and fgbtrnd_doc_code <=fgbyrlm_lbr_enc_doc_end
           and fgbtrnd_coas_code = fgbyrlm_coas_code
           and fgbtrnd_fsyr_code = substr(to_char(to_number(to_char(to_date(fgbyrlm_fsyr_code,'RR'),'YYYY'))+1),3,2)
           and fgbtrnd_posting_period = '00'
           and fgbtrnd_doc_seq_code = '20')"
"BANINST1","FRVGSUM","Grant Ledger Status Summary View","select
     frvgbs1_coas_code,frvgbs1_grnt_code,
     frvges1_adj_bud_amt - frvgbs1_adj_bud_amt,
     frvges1_cmt_amt - frvgbs1_cmt_amt,
     frvges1_ytd_actv_amt - frvgbs1_ytd_actv_amt,
     (frvges1_adj_bud_amt - frvgbs1_adj_bud_amt) -
     (frvges1_cmt_amt - frvgbs1_cmt_amt) -
     (frvges1_ytd_actv_amt - frvgbs1_ytd_actv_amt)
   from frvges1, frvgbs1
   where frvges1_coas_code = frvgbs1_coas_code
     and frvges1_grnt_code = frvgbs1_grnt_code
 "
"BANINST1","FRVGSE1","","select f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvgle0_acct_code,
                          ''
                          ),
       sum(frvgle0_adj_bud_amt) ,
       sum(frvgle0_cmt_amt) ,
       sum(frvgle0_ytd_actv_amt)
  from frvgle0
  where f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvgle0_acct_code,
                          ''
                          ) <> ' '
  group by f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvgle0_acct_code,
                          ''
                          )
 "
"BANINST1","FRVGSB1","","select f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvglb0_acct_code,
                          ''
                          ),
       sum(frvglb0_adj_bud_amt) ,
       sum(frvglb0_cmt_amt) ,
       sum(frvglb0_ytd_actv_amt)
  from frvglb0
  where f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvglb0_acct_code,
                          ''
                          ) <> ' '
  group by f_get_sponsor_acct(
                          'GRNT',
                          frkgvar.f_get_grnt_code,
                          frkgvar.f_get_coas_code,
                          frvglb0_acct_code,
                          ''
                          )
 "
"BANINST1","FRVGLE1","","select frvgle0_acct_code,
       sum(frvgle0_adj_bud_amt) ,
       sum(frvgle0_cmt_amt) ,
       sum(frvgle0_ytd_actv_amt)
  from frvgle0
  group by frvgle0_acct_code
 "
"BANINST1","FRVGLE0","Grant Ledger View for the End Grand Period","select
       a.frrgrnl_fund_code,
       a.frrgrnl_orgn_code,
       a.frrgrnl_acct_code,
       a.frrgrnl_prog_code,
       a.frrgrnl_actv_code,
       a.frrgrnl_locn_code,
       sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', a.frrgrnl_00_adopt_bud,
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', a.frrgrnl_00_bud_adjt,
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', a.frrgrnl_00_encumb,
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', a.frrgrnl_00_bud_rsrv,
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                '00', a.frrgrnl_00_ytd_actv,
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE a.frrgrnl_coas_code   =  frkgvar.f_get_coas_code
         AND   a.frrgrnl_grnt_yr   = f_get_max_grnt_yr(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code)
         AND a.frrgrnl_grnt_code   =  frkgvar.f_get_grnt_code
         AND a.frrgrnl_fund_code  =
                    decode(frkgvar.f_get_fund_code,'',
                           a.frrgrnl_fund_code, frkgvar.f_get_fund_code)
         AND a.frrgrnl_orgn_code =
               decode(frkgvar.f_get_orgn_code,'',
                      a.frrgrnl_orgn_code, frkgvar.f_get_orgn_code)
         AND a.frrgrnl_acct_code =
               decode(frkgvar.f_get_acct_code,'',
                      a.frrgrnl_acct_code, frkgvar.f_get_acct_code)
         AND EXISTS
             (select 'X'
               from ftvacct
                where ftvacct_coas_code = a.frrgrnl_coas_code
                  and ftvacct_acct_code = a.frrgrnl_acct_code
                  and ftvacct_atyp_code =
                          decode(frkgvar.f_get_atyp_code,'',
                                 ftvacct_atyp_code,frkgvar.f_get_atyp_code)
                  and ftvacct_eff_date <= sysdate
                  and ftvacct_nchg_date > sysdate)
         AND a.frrgrnl_prog_code =
                  decode(frkgvar.f_get_prog_code,'',
                         a.frrgrnl_prog_code, frkgvar.f_get_prog_code)
        AND a.frrgrnl_actv_code =
                  decode(frkgvar.f_get_actv_code,'',
                         a.frrgrnl_actv_code , frkgvar.f_get_actv_code)
        AND a.frrgrnl_locn_code =
                  decode(frkgvar.f_get_locn_code,'',
                         a.frrgrnl_locn_code , frkgvar.f_get_locn_code)
    GROUP BY a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_prog_code, a.frrgrnl_actv_code,
             a.frrgrnl_locn_code, a.frrgrnl_acct_code
 "
"BANINST1","FRVGLB1","","select frvglb0_acct_code,
       sum(frvglb0_adj_bud_amt) ,
       sum(frvglb0_cmt_amt) ,
       sum(frvglb0_ytd_actv_amt)
  from frvglb0
  group by frvglb0_acct_code
 "
"BANINST1","FRVGLB0","Grant Ledger View for the Begin Grand Period","select
       a.frrgrnl_fund_code,
       a.frrgrnl_orgn_code,
       a.frrgrnl_acct_code,
       a.frrgrnl_prog_code,
       a.frrgrnl_actv_code,
       a.frrgrnl_locn_code,
       sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                               'Y', 0,a.frrgrnl_00_adopt_bud),
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', decode(frkgvar.f_get_trail_in_prd_ind,
                                                'Y',0, a.frrgrnl_00_bud_adjt),
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                        'Y', 0, a.frrgrnl_00_encumb),
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                       'Y', 0, a.frrgrnl_00_bud_rsrv),
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                '00',decode(frkgvar.f_get_trail_in_prd_ind,
                     'Y', 0, a.frrgrnl_00_ytd_actv),
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE a.frrgrnl_coas_code   =  frkgvar.f_get_coas_code
         AND   a.frrgrnl_grnt_yr   = f_get_min_grnt_yr(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code)
         AND a.frrgrnl_grnt_code   =  frkgvar.f_get_grnt_code
         AND a.frrgrnl_fund_code  =
                  decode(frkgvar.f_get_fund_code,'',
                         a.frrgrnl_fund_code, frkgvar.f_get_fund_code)
         AND a.frrgrnl_orgn_code =
                  decode(frkgvar.f_get_orgn_code,'',
                         a.frrgrnl_orgn_code, frkgvar.f_get_orgn_code)
         AND a.frrgrnl_acct_code =
               decode(frkgvar.f_get_acct_code,'',
                      a.frrgrnl_acct_code, frkgvar.f_get_acct_code)
         AND EXISTS
             (select 'X'
               from ftvacct
                where ftvacct_coas_code = a.frrgrnl_coas_code
                  and ftvacct_acct_code = a.frrgrnl_acct_code
                  and ftvacct_atyp_code =
                          decode(frkgvar.f_get_atyp_code,'',
                                 ftvacct_atyp_code,frkgvar.f_get_atyp_code)
                  and ftvacct_eff_date <= sysdate
                  and ftvacct_nchg_date > sysdate)
        AND a.frrgrnl_prog_code =
                   decode(frkgvar.f_get_prog_code,'',
                          a.frrgrnl_prog_code, frkgvar.f_get_prog_code)
        AND a.frrgrnl_actv_code =
                   decode(frkgvar.f_get_actv_code,'',
                          a.frrgrnl_actv_code , frkgvar.f_get_actv_code)
       AND a.frrgrnl_locn_code =
                   decode(frkgvar.f_get_locn_code,'',
                          a.frrgrnl_locn_code , frkgvar.f_get_locn_code)
    GROUP BY a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_prog_code, a.frrgrnl_actv_code,
             a.frrgrnl_locn_code, a.frrgrnl_acct_code
 "
"BANINST1","FRVGITD","View of all FOAPAL combinations for a Grant from FRVGIT2 with Begin and End Grant Year","select
   FRVGIT2_COAS_CODE,
   FRVGIT2_GRNT_CODE,
   FRVGIT2_FUND_CODE,
   FRVGIT2_ORGN_CODE,
   FRVGIT2_ACCT_CODE,
   FRVGIT2_PROG_CODE,
   FRVGIT2_ACTV_CODE,
   FRVGIT2_LOCN_CODE,
   decode(least( (fofycnv(frkgvar.f_get_grnt_beg_yr)-FRVGIT2_GRNT_YR), 0),
          '0',substr(FRVGIT2_GRNT_YR,3,2),nvl(frkgvar.f_get_grnt_beg_yr,'')),
   decode(least( (fofycnv(frkgvar.f_get_grnt_end_yr)-FRVGIT2_GRNT_YR), 0),
          '0',substr(FRVGIT2_GRNT_YR,3,2),nvl(frkgvar.f_get_grnt_end_yr,''))
        from frvgit2
 "
"BANINST1","FRVGIT2","View of all FOAPAL combinations for a Grant from FRVGIT1 with maximum Grant Year","select
   FRVGIT1_COAS_CODE,
   FRVGIT1_GRNT_CODE,
   FRVGIT1_FUND_CODE,
   FRVGIT1_ORGN_CODE,
   FRVGIT1_ACCT_CODE,
   FRVGIT1_PROG_CODE,
   FRVGIT1_ACTV_CODE,
   FRVGIT1_LOCN_CODE,
   to_char(to_date(frkgvar.f_max_grnt_yr(
                     FRVGIT1_COAS_CODE,
                     FRVGIT1_GRNT_CODE,
                     FRVGIT1_FUND_CODE,
                     FRVGIT1_ORGN_CODE,
                     FRVGIT1_ACCT_CODE,
                     FRVGIT1_PROG_CODE,
                     FRVGIT1_ACTV_CODE,
                     FRVGIT1_LOCN_CODE),'RR'),'YYYY')
        from frvgit1 A
 "
"BANINST1","FRVGIT1","View of all distinct FOAPAL combinations for a Grant in the Grants Ledger.","select distinct
        frrgrnl_coas_code,
        frrgrnl_grnt_code,
        frrgrnl_fund_code,
        frrgrnl_orgn_code ,
        frrgrnl_acct_code,
        frrgrnl_prog_code,
        frrgrnl_actv_code,
        frrgrnl_locn_code
from frrgrnl
 where frrgrnl_coas_code = frkgvar.f_get_coas_code
   and frrgrnl_grnt_code = frkgvar.f_get_grnt_code
   and (frrgrnl_fund_code = frkgvar.f_get_fund_code
                        or frkgvar.f_get_fund_code is null)
   and (frrgrnl_orgn_code = frkgvar.f_get_orgn_code
                        or frkgvar.f_get_orgn_code is null)
   and (frrgrnl_acct_code = frkgvar.f_get_prog_code
                        or frkgvar.f_get_prog_code is null)
   and (frrgrnl_prog_code = frkgvar.f_get_acct_code
                        or frkgvar.f_get_acct_code is null)
   and (frrgrnl_actv_code = frkgvar.f_get_actv_code
                        or frkgvar.f_get_actv_code is null)
   and (frrgrnl_locn_code = frkgvar.f_get_locn_code
                        or frkgvar.f_get_locn_code is null)
   and to_char(to_date(frrgrnl_grnt_yr,'RR'),'YYYY') <=
             greatest(to_char(to_date(frkgvar.f_get_grnt_beg_yr,'RR'),'YYYY'),
                  nvl(to_char(to_date(frkgvar.f_get_grnt_end_yr,'RR'),'YYYY'),'0001'))
 "
"BANINST1","FRVGHE1","","select frvghe0_acct_code,
       sum(frvghe0_adj_bud_amt) ,
       sum(frvghe0_cmt_amt) ,
       sum(frvghe0_ytd_actv_amt)
  from frvghe0
  group by frvghe0_acct_code
 "
"BANINST1","FRVGHE0","Grant Ledger View for the End Grand Period based on Fund/Orgn/Prog/Actv/Locn hierarchy","select a.frrgrnl_fund_code,
          a.frrgrnl_orgn_code,
          a.frrgrnl_acct_code,
          a.frrgrnl_prog_code,
          a.frrgrnl_actv_code,
          a.frrgrnl_locn_code,
       sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', a.frrgrnl_00_adopt_bud,
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', a.frrgrnl_00_bud_adjt,
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', a.frrgrnl_00_encumb,
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', a.frrgrnl_00_bud_rsrv,
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                '00', a.frrgrnl_00_ytd_actv,
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE a.frrgrnl_coas_code  =  frkgvar.f_get_coas_code
           AND a.frrgrnl_grnt_yr   = f_get_max_grnt_yr(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code)
         AND a.frrgrnl_grnt_code   =  frkgvar.f_get_grnt_code
         AND (a.frrgrnl_fund_code  =
          decode(frkgvar.f_get_fund_code,'',
          a.frrgrnl_fund_code, frkgvar.f_get_fund_code)
      OR EXISTS
         (select 'X'
            from fgrfdhc
               where fgrfdhc_sess_id = userenv('SESSIONID')
                 and fgrfdhc_fund_code = a.frrgrnl_fund_code))
    AND (a.frrgrnl_orgn_code =
         decode(frkgvar.f_get_orgn_code,'',
         a.frrgrnl_orgn_code, frkgvar.f_get_orgn_code)
      OR EXISTS
          (select 'X'
             from fgrorhc
             where fgrorhc_sess_id = userenv('SESSIONID')
               and fgrorhc_orgn_code = a.frrgrnl_orgn_code))
         AND (a.frrgrnl_acct_code =
               decode(frkgvar.f_get_acct_code,'',
                      a.frrgrnl_acct_code, frkgvar.f_get_acct_code)
     OR EXISTS
         (select 'X'
            from fgrathc
              where fgrathc_sess_id = userenv('SESSIONID')
                and fgrathc_acct_code = a.frrgrnl_acct_code ))
    AND (a.frrgrnl_prog_code =
        decode(frkgvar.f_get_prog_code,'',
               a.frrgrnl_prog_code, frkgvar.f_get_prog_code)
     OR EXISTS
         (select 'X'
            from fgrpghc
             where fgrpghc_sess_id = userenv('SESSIONID')
               and fgrpghc_prog_code = a.frrgrnl_prog_code))
    AND a.frrgrnl_actv_code =
        decode(frkgvar.f_get_actv_code,'',
               a.frrgrnl_actv_code , frkgvar.f_get_actv_code)
    AND (a.frrgrnl_locn_code =
    decode(frkgvar.f_get_locn_code,'',
           a.frrgrnl_locn_code , frkgvar.f_get_locn_code)
      OR EXISTS
          (select 'X'
             from fgrlohc
             where fgrlohc_sess_id = userenv('SESSIONID')
               and fgrlohc_locn_code = a.frrgrnl_locn_code))
    GROUP BY a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_prog_code, a.frrgrnl_actv_code,
             a.frrgrnl_locn_code, a.frrgrnl_acct_code"
"BANINST1","FRVGHBL","Grant Ledger Available Balance View from End Period to Begin Period","select frvghe1_acct_code,
       substr(f_acct_title(frkgvar.f_get_coas_code,frvghe1_acct_code),1,35 ),
       substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
              frvghe1_acct_code, '') ,1 ,1 ) ,
       frvghe1_adj_bud_amt - frvghb1_adj_bud_amt ,
       frvghe1_cmt_amt - frvghb1_cmt_amt ,
       frvghe1_ytd_actv_amt - frvghb1_ytd_actv_amt,
       (frvghe1_adj_bud_amt - frvghb1_adj_bud_amt) -
             (frvghe1_cmt_amt - frvghb1_cmt_amt) -
             (frvghe1_ytd_actv_amt - frvghb1_ytd_actv_amt)
  from frvghb1,frvghe1
  where frvghb1_acct_code = frvghe1_acct_code
  and f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                          substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                 frvghe1_acct_code,''), 1, 1 )) = 'Y'"
"BANINST1","FRVGHBF","Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code","select frvfhe0_fund_code,
       substr(f_fund_title(frkgvar.f_get_coas_code,frvfhe0_fund_code),1,35 ),
       frvfhe0_adj_bud_amt - frvfhb0_adj_bud_amt,
       frvfhe0_cmt_amt - frvfhb0_cmt_amt ,
       frvfhe0_ytd_actv_amt - frvfhb0_ytd_actv_amt,
       (frvfhe0_adj_bud_amt - frvfhb0_adj_bud_amt) -
             (frvfhe0_cmt_amt - frvfhb0_cmt_amt) -
             (frvfhe0_ytd_actv_amt - frvfhb0_ytd_actv_amt)
  from frvfhe0,frvfhb0
  where frvfhe0_fund_code = frvfhb0_fund_code"
"BANINST1","FRVGHBA","Grant Ledger Available Balance View from End Period to Begin Period based on account type","select frvhae1_atyp_code,
       substr(f_atyp_title(frkgvar.f_get_coas_code,frvhae1_atyp_code),1,35 ),
       substr(f_int_atyp_desc(frkgvar.f_get_coas_code,'',
              frvhae1_atyp_code) ,1 ,1 ) ,
       frvhae1_adj_bud_amt - frvhab1_adj_bud_amt ,
       frvhae1_cmt_amt - frvhab1_cmt_amt ,
       frvhae1_ytd_actv_amt - frvhab1_ytd_actv_amt,
       (frvhae1_adj_bud_amt - frvhab1_adj_bud_amt) -
       (frvhae1_cmt_amt - frvhab1_cmt_amt) -
       (frvhae1_ytd_actv_amt - frvhab1_ytd_actv_amt)
  from frvhae1,frvhab1
  where frvhae1_atyp_code = frvhab1_atyp_code
  and   f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,'',
                                   frvhae1_atyp_code) ,1 ,1 )) = 'Y'"
"BANINST1","FRVGHB1","","select frvghb0_acct_code,
       sum(frvghb0_adj_bud_amt),
       sum(frvghb0_cmt_amt),
       sum(frvghb0_ytd_actv_amt)
  from frvghb0
  group by frvghb0_acct_code
 "
"BANINST1","FRVGHB0","Grant Ledger View for the Begin Grand Period","select a.frrgrnl_fund_code,
          a.frrgrnl_orgn_code,
          a.frrgrnl_acct_code,
          a.frrgrnl_prog_code,
          a.frrgrnl_actv_code,
          a.frrgrnl_locn_code,
       sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                              'Y', 0, a.frrgrnl_00_adopt_bud),
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                              'Y', 0, a.frrgrnl_00_bud_adjt),
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                       'Y', 0, a.frrgrnl_00_encumb),
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', decode(frkgvar.f_get_trail_in_prd_ind,
                                        'Y', 0, a.frrgrnl_00_bud_rsrv),
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                '00', decode(frkgvar.f_get_trail_in_prd_ind,
                            'Y', 0, a.frrgrnl_00_ytd_actv),
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE a.frrgrnl_coas_code  =  frkgvar.f_get_coas_code
           AND a.frrgrnl_grnt_yr   = f_get_min_grnt_yr(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code)
         AND a.frrgrnl_grnt_code   =  frkgvar.f_get_grnt_code
         AND (a.frrgrnl_fund_code  =
          decode(frkgvar.f_get_fund_code,'',
          a.frrgrnl_fund_code, frkgvar.f_get_fund_code)
      OR EXISTS
         (select 'X'
            from fgrfdhc
               where fgrfdhc_sess_id = userenv('SESSIONID')
                 and fgrfdhc_fund_code = a.frrgrnl_fund_code))
    AND (a.frrgrnl_orgn_code =
         decode(frkgvar.f_get_orgn_code,'',
         a.frrgrnl_orgn_code, frkgvar.f_get_orgn_code)
      OR EXISTS
          (select 'X'
             from fgrorhc
             where fgrorhc_sess_id = userenv('SESSIONID')
               and fgrorhc_orgn_code = a.frrgrnl_orgn_code))
         AND (a.frrgrnl_acct_code =
               decode(frkgvar.f_get_acct_code,'',
                      a.frrgrnl_acct_code, frkgvar.f_get_acct_code)
     OR EXISTS
         (select 'X'
            from fgrathc
              where fgrathc_sess_id = userenv('SESSIONID')
                and fgrathc_acct_code = a.frrgrnl_acct_code ))
    AND (a.frrgrnl_prog_code =
        decode(frkgvar.f_get_prog_code,'',
               a.frrgrnl_prog_code, frkgvar.f_get_prog_code)
     OR EXISTS
         (select 'X'
            from fgrpghc
             where fgrpghc_sess_id = userenv('SESSIONID')
               and fgrpghc_prog_code = a.frrgrnl_prog_code))
    AND a.frrgrnl_actv_code =
        decode(frkgvar.f_get_actv_code,'',
               a.frrgrnl_actv_code , frkgvar.f_get_actv_code)
    AND (a.frrgrnl_locn_code =
    decode(frkgvar.f_get_locn_code,'',
           a.frrgrnl_locn_code , frkgvar.f_get_locn_code)
      OR EXISTS
          (select 'X'
             from fgrlohc
             where fgrlohc_sess_id = userenv('SESSIONID')
               and fgrlohc_locn_code = a.frrgrnl_locn_code))
    GROUP BY a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_prog_code, a.frrgrnl_actv_code,
             a.frrgrnl_locn_code, a.frrgrnl_acct_code
 "
"BANINST1","FRVGFE0","Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code","select frvgle0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvgle0_adj_bud_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvgle0_acct_code, '') ,1 ,1 ),'R',
                        frvgle0_adj_bud_amt,frvgle0_adj_bud_amt*(-1)))) ,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvgle0_cmt_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvgle0_acct_code, '') ,1 ,1 ),'R',
                        frvgle0_cmt_amt,frvgle0_cmt_amt*(-1)))),
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvgle0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvgle0_acct_code, '') ,1 ,1 ),'R',
                        frvgle0_ytd_actv_amt,frvgle0_ytd_actv_amt*(-1))))
  from frvgle0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvgle0_acct_code, '') ,1 ,1 )) = 'Y'
  group by frvgle0_fund_code"
"BANINST1","FRVGFB0","Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code","select frvglb0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvglb0_adj_bud_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvglb0_acct_code, '') ,1 ,1 ),'R',
                        frvglb0_adj_bud_amt,frvglb0_adj_bud_amt*(-1)))) ,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvglb0_cmt_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvglb0_acct_code, '') ,1 ,1 ),'R',
                        frvglb0_cmt_amt,frvglb0_cmt_amt*(-1)))),
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvglb0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvglb0_acct_code, '') ,1 ,1 ),'R',
                        frvglb0_ytd_actv_amt,frvglb0_ytd_actv_amt*(-1))))
  from frvglb0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvglb0_acct_code, '') ,1 ,1 )) = 'Y'
  group by frvglb0_fund_code"
"BANINST1","FRVGES2","Grant Ledger Status View for the End Grand Period grouped by Coas Code, Grant Code and Account Class Code","select
     frvges0_coas_code,
     frvges0_grnt_code,
     f_get_cost_acct(frvges0_coas_code,frvges0_acct_code,sysdate),
     sum(frvges0_adj_bud_amt),
     sum(frvges0_cmt_amt),
     sum(frvges0_ytd_actv_amt)
       from frvges0
        group by frvges0_coas_code,
                 frvges0_grnt_code,
     f_get_cost_acct(frvges0_coas_code,frvges0_acct_code,sysdate)"
"BANINST1","FRVGES1","Grant Ledger Status View for the End Grand Period grouped by Coas Code and Grant Code","select
     frvges0_coas_code,
     frvges0_grnt_code,
     sum(frvges0_adj_bud_amt),
     sum(frvges0_cmt_amt),
     sum(frvges0_ytd_actv_amt)
       from frvges0
        group by frvges0_coas_code,
                 frvges0_grnt_code"
"BANINST1","FRVGES0","Grant Ledger Status View for the End Grand Period","select
       a.frrgrnl_coas_code,
       a.frrgrnl_grnt_code,
       a.frrgrnl_fund_code,
       a.frrgrnl_orgn_code,
       a.frrgrnl_acct_code,
       a.frrgrnl_prog_code,
       a.frrgrnl_actv_code,
       a.frrgrnl_locn_code,
       sum(nvl((decode(decode(sign(to_char(to_date(f_get_max_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                              f_get_sdax('FRVGRBS','DATE_TO'),
                              'YEAR'),'RR'),'YYYY')),-1,'14',
                   f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                                   f_get_sdax('FRVGRBS','DATE_TO'),'PERIOD')) ,
                                   '00', a.frrgrnl_00_adopt_bud,
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(decode(sign(to_char(to_date(f_get_max_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
        f_get_sdax('FRVGRBS','DATE_TO'),'YEAR'),'RR'),'YYYY')),-1,'14',
                f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                                   f_get_sdax('FRVGRBS','DATE_TO'),'PERIOD')),
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(decode(sign(to_char(to_date(f_get_max_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
        f_get_sdax('FRVGRBS','DATE_TO'),'YEAR'),'RR'),'YYYY')),-1,'14',
                       f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                                  f_get_sdax('FRVGRBS','DATE_TO'),'PERIOD')),
                            '00', a.frrgrnl_00_encumb,
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(decode(sign(to_char(to_date(f_get_max_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
        f_get_sdax('FRVGRBS','DATE_TO'),'YEAR'),'RR'),'YYYY')),-1,'14',
                    f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                            f_get_sdax('FRVGRBS','DATE_TO'),'PERIOD')),
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(decode(sign(to_char(to_date(f_get_max_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
        f_get_sdax('FRVGRBS','DATE_TO'),'YEAR'),'RR'),'YYYY')),-1,'14',
                  f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                  f_get_sdax('FRVGRBS','DATE_TO'),'PERIOD')),
                '00', a.frrgrnl_00_ytd_actv,
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE   a.frrgrnl_grnt_yr   = f_get_max_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code)
        AND f_chk_fobsysc(a.frrgrnl_coas_code,
                          a.frrgrnl_fund_code, a.frrgrnl_orgn_code) = 'Y'
    GROUP BY a.frrgrnl_coas_code,a.frrgrnl_grnt_code,
             a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_acct_code, a.frrgrnl_prog_code,
             a.frrgrnl_actv_code, a.frrgrnl_locn_code
 "
"BANINST1","FRVGBS2","Grant Ledger Status View for the Begin Grand Period grouped by Coas Code, Grant Code and Account Class Code","select
     frvgbs0_coas_code,
     frvgbs0_grnt_code,
     f_get_cost_acct(frvgbs0_coas_code,frvgbs0_acct_code,sysdate),
     sum(frvgbs0_adj_bud_amt),
     sum(frvgbs0_cmt_amt),
     sum(frvgbs0_ytd_actv_amt)
       from frvgbs0
        group by frvgbs0_coas_code,
                 frvgbs0_grnt_code,
     f_get_cost_acct(frvgbs0_coas_code,frvgbs0_acct_code,sysdate)"
"BANINST1","FRVGBS1","Grant Ledger Status View for the Begin Grand Period grouped by Coas Code and Grant Code","select
     frvgbs0_coas_code,
     frvgbs0_grnt_code,
     sum(frvgbs0_adj_bud_amt),
     sum(frvgbs0_cmt_amt),
     sum(frvgbs0_ytd_actv_amt)
       from frvgbs0
        group by frvgbs0_coas_code,
                 frvgbs0_grnt_code"
"BANINST1","FRVGBS0","Grant Ledger Status View for the Begin Grand Period","select
       a.frrgrnl_coas_code,
       a.frrgrnl_grnt_code,
       a.frrgrnl_fund_code,
       a.frrgrnl_orgn_code,
       a.frrgrnl_acct_code,
       a.frrgrnl_prog_code,
       a.frrgrnl_actv_code,
       a.frrgrnl_locn_code,
       sum(nvl((decode(decode(sign(to_char(to_date(f_get_min_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
        f_get_sdax('FRVGRBS','DATE_FROM'),'YEAR'),'RR'),'YYYY')),1,'00',
                   f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                                  f_get_sdax('FRVGRBS','DATE_FROM'),'PERIOD')),
                                   '00', 0,
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(decode(sign(to_char(to_date(f_get_min_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
        f_get_sdax('FRVGRBS','DATE_FROM'),'YEAR'),'RR'),'YYYY')),1,'00',
                f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                                  f_get_sdax('FRVGRBS','DATE_FROM'),'PERIOD')),
                                   '00', 0,
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(decode(sign(to_char(to_date(f_get_min_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
        f_get_sdax('FRVGRBS','DATE_FROM'),'YEAR'),'RR'),'YYYY')),1,'00',
                       f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                                  f_get_sdax('FRVGRBS','DATE_FROM'),'PERIOD')),
                            '00', 0,
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(decode(sign(to_char(to_date(f_get_min_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
        f_get_sdax('FRVGRBS','DATE_FROM'),'YEAR'),'RR'),'YYYY')),1,'00',
                    f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                            f_get_sdax('FRVGRBS','DATE_FROM'),'PERIOD')),
                            '00', 0,
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(decode(sign(to_char(to_date(f_get_min_grnt_yr_sda(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),'RR'),'YYYY') -
    to_char(to_date(f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
        f_get_sdax('FRVGRBS','DATE_FROM'),'YEAR'),'RR'),'YYYY')),1,'00',
                  f_trn_grnt_yr_prd(a.frrgrnl_grnt_code,
                  f_get_sdax('FRVGRBS','DATE_FROM'),'PERIOD')),
                '00', 0,
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE   a.frrgrnl_grnt_yr   = f_get_min_grnt_yr_sda(
                                                            a.frrgrnl_coas_code,
                                                            a.frrgrnl_grnt_code,
                                                            a.frrgrnl_fund_code,
                                                            a.frrgrnl_orgn_code,
                                                            a.frrgrnl_acct_code,
                                                            a.frrgrnl_prog_code,
                                                            a.frrgrnl_actv_code,
                                                            a.frrgrnl_locn_code)
         AND f_chk_fobsysc(a.frrgrnl_coas_code,
                              a.frrgrnl_fund_code, a.frrgrnl_orgn_code) = 'Y'
    GROUP BY a.frrgrnl_coas_code,a.frrgrnl_grnt_code,
             a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_acct_code, a.frrgrnl_prog_code,
             a.frrgrnl_actv_code, a.frrgrnl_locn_code
 "
"BANINST1","FRVGBLF","Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code","select frvgfe0_fund_code,
       substr(f_fund_title(frkgvar.f_get_coas_code,frvgfe0_fund_code),1,35 ),
       frvgfe0_adj_bud_amt - frvgfb0_adj_bud_amt,
       frvgfe0_cmt_amt - frvgfb0_cmt_amt ,
       frvgfe0_ytd_actv_amt - frvgfb0_ytd_actv_amt,
       (frvgfe0_adj_bud_amt - frvgfb0_adj_bud_amt) -
             (frvgfe0_cmt_amt - frvgfb0_cmt_amt) -
             (frvgfe0_ytd_actv_amt - frvgfb0_ytd_actv_amt)
  from frvgfe0,frvgfb0
  where frvgfe0_fund_code = frvgfb0_fund_code"
"BANINST1","FRVGBAL","Grant Ledger Available Balance View from End Period to Begin Period","select frvgle1_acct_code,
       substr(f_acct_title(frkgvar.f_get_coas_code,frvgle1_acct_code),1,35 ),
       substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
              frvgle1_acct_code, '') ,1 ,1 ) ,
       frvgle1_adj_bud_amt - frvglb1_adj_bud_amt ,
       frvgle1_cmt_amt - frvglb1_cmt_amt ,
       frvgle1_ytd_actv_amt - frvglb1_ytd_actv_amt,
       (frvgle1_adj_bud_amt - frvglb1_adj_bud_amt) -
             (frvgle1_cmt_amt - frvglb1_cmt_amt) -
             (frvgle1_ytd_actv_amt - frvglb1_ytd_actv_amt)
  from frvglb1,frvgle1
  where frvglb1_acct_code = frvgle1_acct_code
  and   f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvgle1_acct_code, '') ,1 ,1 )) = 'Y'"
"BANINST1","FRVGBAA","Grant Ledger Available Balance View from End Period to Begin Period based on account type","select frvgae1_atyp_code,
       substr(f_atyp_title(frkgvar.f_get_coas_code,frvgae1_atyp_code),1,35 ),
       substr(f_int_atyp_desc(frkgvar.f_get_coas_code,'',
              frvgae1_atyp_code) ,1 ,1 ) ,
       frvgae1_adj_bud_amt - frvgab1_adj_bud_amt ,
       frvgae1_cmt_amt - frvgab1_cmt_amt ,
       frvgae1_ytd_actv_amt - frvgab1_ytd_actv_amt,
       (frvgae1_adj_bud_amt - frvgab1_adj_bud_amt) -
       (frvgae1_cmt_amt - frvgab1_cmt_amt) -
       (frvgae1_ytd_actv_amt - frvgab1_ytd_actv_amt)
  from frvgae1,frvgab1
  where frvgae1_atyp_code = frvgab1_atyp_code
  and   f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,'',
                                   frvgae1_atyp_code) ,1 ,1 )) = 'Y'"
"BANINST1","FRVGAE1","","select frvgae0_atyp_code,
       sum(frvgae0_adj_bud_amt) ,
       sum(frvgae0_cmt_amt) ,
       sum(frvgae0_ytd_actv_amt)
  from frvgae0
  group by frvgae0_atyp_code
 "
"BANINST1","FRVGAE0","Grant Ledger View for the End Grand Period based on atyp level_1 and level_2","select f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                               frkgvar.f_get_coas_code,
                               a.frrgrnl_acct_code,
                               frkgvar.f_get_atyp_code
                               ),
       sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', a.frrgrnl_00_adopt_bud,
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', a.frrgrnl_00_bud_adjt,
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', a.frrgrnl_00_encumb,
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00', a.frrgrnl_00_bud_rsrv,
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(f_get_max_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                '00', a.frrgrnl_00_ytd_actv,
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE a.frrgrnl_coas_code   =  frkgvar.f_get_coas_code
           AND a.frrgrnl_grnt_yr   = f_get_max_grnt_yr(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code)
         AND a.frrgrnl_grnt_code   =  frkgvar.f_get_grnt_code
         AND f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrgrnl_acct_code,
                                  frkgvar.f_get_atyp_code
                                 ) <> ' '
         AND EXISTS
            (select 'X'
               from ftvacct,ftvatyp
               where ftvacct_coas_code = ftvatyp_coas_code
                 and ftvacct_acct_code = a.frrgrnl_acct_code
                 and ftvacct_atyp_code = ftvatyp_atyp_code
                 and ftvacct_atyp_code = decode(frkgvar.f_get_atyp_code,'',
                                     ftvacct_atyp_code,frkgvar.f_get_atyp_code))
         AND a.frrgrnl_fund_code  =
                       decode(frkgvar.f_get_fund_code,'',
                       a.frrgrnl_fund_code, frkgvar.f_get_fund_code)
         AND a.frrgrnl_orgn_code =
                       decode(frkgvar.f_get_orgn_code,'',
                       a.frrgrnl_orgn_code, frkgvar.f_get_orgn_code)
         AND a.frrgrnl_prog_code =
                       decode(frkgvar.f_get_prog_code,'',
                       a.frrgrnl_prog_code, frkgvar.f_get_prog_code)
         AND a.frrgrnl_actv_code =
                       decode(frkgvar.f_get_actv_code,'',
                       a.frrgrnl_actv_code , frkgvar.f_get_actv_code)
         AND a.frrgrnl_locn_code =
                       decode(frkgvar.f_get_locn_code,'',
                       a.frrgrnl_locn_code , frkgvar.f_get_locn_code)
    GROUP BY a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_prog_code, a.frrgrnl_actv_code,
             a.frrgrnl_locn_code,
             f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrgrnl_acct_code,
                                  frkgvar.f_get_atyp_code
                                 )
 "
"BANINST1","FRVGAB1","","select frvgab0_atyp_code,
       sum(frvgab0_adj_bud_amt) ,
       sum(frvgab0_cmt_amt) ,
       sum(frvgab0_ytd_actv_amt)
  from frvgab0
  group by frvgab0_atyp_code
 "
"BANINST1","FRVGAB0","Grant Ledger View for the Begin Grand Period based on atyp level_1 and level_2","select f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                               frkgvar.f_get_coas_code,
                               a.frrgrnl_acct_code,
                               frkgvar.f_get_atyp_code
                               ),
       sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00', decode(frkgvar.f_get_trail_in_prd_ind,
                                               'Y', 0, a.frrgrnl_00_adopt_bud),
                                   '01', a.frrgrnl_01_adopt_bud,
                                   '02', a.frrgrnl_02_adopt_bud,
                                   '03', a.frrgrnl_03_adopt_bud,
                                   '04', a.frrgrnl_04_adopt_bud,
                                   '05', a.frrgrnl_05_adopt_bud,
                                   '06', a.frrgrnl_06_adopt_bud,
                                   '07', a.frrgrnl_07_adopt_bud,
                                   '08', a.frrgrnl_08_adopt_bud,
                                   '09', a.frrgrnl_09_adopt_bud,
                                   '10', a.frrgrnl_10_adopt_bud,
                                   '11', a.frrgrnl_11_adopt_bud,
                                   '12', a.frrgrnl_12_adopt_bud,
                                   '13', a.frrgrnl_13_adopt_bud,
                                   '14', a.frrgrnl_14_adopt_bud)), 0))
        +
        sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                                   '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                              'Y', 0, a.frrgrnl_00_bud_adjt),
                                   '01', a.frrgrnl_01_bud_adjt,
                                   '02', a.frrgrnl_02_bud_adjt,
                                   '03', a.frrgrnl_03_bud_adjt,
                                   '04', a.frrgrnl_04_bud_adjt,
                                   '05', a.frrgrnl_05_bud_adjt,
                                   '06', a.frrgrnl_06_bud_adjt,
                                   '07', a.frrgrnl_07_bud_adjt,
                                   '08', a.frrgrnl_08_bud_adjt,
                                   '09', a.frrgrnl_09_bud_adjt,
                                   '10', a.frrgrnl_10_bud_adjt,
                                   '11', a.frrgrnl_11_bud_adjt,
                                   '12', a.frrgrnl_12_bud_adjt,
                                   '13', a.frrgrnl_13_bud_adjt,
                                   '14', a.frrgrnl_14_bud_adjt)), 0)) ,
       sum(nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                       'Y', 0, a.frrgrnl_00_encumb),
                            '01', a.frrgrnl_01_encumb,
                            '02', a.frrgrnl_02_encumb,
                            '03', a.frrgrnl_03_encumb,
                            '04', a.frrgrnl_04_encumb,
                            '05', a.frrgrnl_05_encumb,
                            '06', a.frrgrnl_06_encumb,
                            '07', a.frrgrnl_07_encumb,
                            '08', a.frrgrnl_08_encumb,
                            '09', a.frrgrnl_09_encumb,
                            '10', a.frrgrnl_10_encumb,
                            '11', a.frrgrnl_11_encumb,
                            '12', a.frrgrnl_12_encumb,
                            '13', a.frrgrnl_13_encumb,
                            '14', a.frrgrnl_14_encumb)), 0))
           +
       sum( nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                            '00',decode(frkgvar.f_get_trail_in_prd_ind,
                                       'Y', 0, a.frrgrnl_00_bud_rsrv),
                            '01', a.frrgrnl_01_bud_rsrv,
                            '02', a.frrgrnl_02_bud_rsrv,
                            '03', a.frrgrnl_03_bud_rsrv,
                            '04', a.frrgrnl_04_bud_rsrv,
                            '05', a.frrgrnl_05_bud_rsrv,
                            '06', a.frrgrnl_06_bud_rsrv,
                            '07', a.frrgrnl_07_bud_rsrv,
                            '08', a.frrgrnl_08_bud_rsrv,
                            '09', a.frrgrnl_09_bud_rsrv,
                            '10', a.frrgrnl_10_bud_rsrv,
                            '11', a.frrgrnl_11_bud_rsrv,
                            '12', a.frrgrnl_12_bud_rsrv,
                            '13', a.frrgrnl_13_bud_rsrv,
                            '14', a.frrgrnl_14_bud_rsrv)), 0)) ,
       sum( nvl((decode(f_get_min_grnt_prd(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code),
                '00',decode(frkgvar.f_get_trail_in_prd_ind,
                            'Y', 0, a.frrgrnl_00_ytd_actv),
                '01', a.frrgrnl_01_ytd_actv,
                '02', a.frrgrnl_02_ytd_actv,
                '03', a.frrgrnl_03_ytd_actv,
                '04', a.frrgrnl_04_ytd_actv,
                '05', a.frrgrnl_05_ytd_actv,
                '06', a.frrgrnl_06_ytd_actv,
                '07', a.frrgrnl_07_ytd_actv,
                '08', a.frrgrnl_08_ytd_actv,
                '09', a.frrgrnl_09_ytd_actv,
                '10', a.frrgrnl_10_ytd_actv,
                '11', a.frrgrnl_11_ytd_actv,
                '12', a.frrgrnl_12_ytd_actv,
                '13', a.frrgrnl_13_ytd_actv,
                '14', a.frrgrnl_14_ytd_actv)), 0))
         FROM frrgrnl a
         WHERE a.frrgrnl_COAS_CODE   =  frkgvar.f_get_coas_code
           AND a.frrgrnl_GRNT_YR   = f_get_min_grnt_yr(
                                     a.frrgrnl_coas_code,
                                     a.frrgrnl_grnt_code,
                                     a.frrgrnl_fund_code,
                                     a.frrgrnl_orgn_code,
                                     a.frrgrnl_acct_code,
                                     a.frrgrnl_prog_code,
                                     a.frrgrnl_actv_code,
                                     a.frrgrnl_locn_code)
         AND a.frrgrnl_GRNT_CODE   =  frkgvar.f_get_grnt_code
         AND f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrgrnl_acct_code,
                                  frkgvar.f_get_atyp_code
                                 ) <> ' '
         AND EXISTS
            (select 'X'
               from ftvacct,ftvatyp
               where ftvacct_coas_code = ftvatyp_coas_code
                 and ftvacct_acct_code = a.frrgrnl_acct_code
                 and ftvacct_atyp_code = ftvatyp_atyp_code
                 and ftvacct_atyp_code = decode(frkgvar.f_get_atyp_code,'',
                                     ftvacct_atyp_code,frkgvar.f_get_atyp_code))
         AND a.frrgrnl_fund_code  =
                       decode(frkgvar.f_get_fund_code,'',
                       a.frrgrnl_fund_code, frkgvar.f_get_fund_code)
         AND a.frrgrnl_orgn_code =
                       decode(frkgvar.f_get_orgn_code,'',
                       a.frrgrnl_orgn_code, frkgvar.f_get_orgn_code)
         AND a.frrgrnl_prog_code =
                       decode(frkgvar.f_get_prog_code,'',
                       a.frrgrnl_prog_code, frkgvar.f_get_prog_code)
         AND a.frrgrnl_actv_code =
                       decode(frkgvar.f_get_actv_code,'',
                       a.frrgrnl_actv_code , frkgvar.f_get_actv_code)
         AND a.frrgrnl_locn_code =
                       decode(frkgvar.f_get_locn_code,'',
                       a.frrgrnl_locn_code , frkgvar.f_get_locn_code)
    GROUP BY a.frrgrnl_fund_code, a.frrgrnl_orgn_code,
             a.frrgrnl_prog_code, a.frrgrnl_actv_code,
             a.frrgrnl_locn_code,
             f_get_atyp_level_1_2(frkgvar.f_get_atyp_level_1_2_ind,
                                  frkgvar.f_get_coas_code,
                                  a.frrgrnl_acct_code,
                                  frkgvar.f_get_atyp_code
                                 )
 "
"BANINST1","FRVFHE0","Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code","select frvghe0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghe0_adj_bud_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghe0_acct_code, '') ,1 ,1 ),'R',
                        frvghe0_adj_bud_amt,frvghe0_adj_bud_amt*(-1)))) ,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghe0_cmt_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghe0_acct_code, '') ,1 ,1 ),'R',
                        frvghe0_cmt_amt,frvghe0_cmt_amt*(-1)))),
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghe0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghe0_acct_code, '') ,1 ,1 ),'R',
                        frvghe0_ytd_actv_amt,frvghe0_ytd_actv_amt*(-1))))
  from frvghe0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvghe0_acct_code, '') ,1 ,1 )) = 'Y'
  group by frvghe0_fund_code"
"BANINST1","FRVFHB0","Grant Ledger Available Balance View from End Period to Begin Period by Fund Code within Grant Code","select frvghb0_fund_code,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghb0_adj_bud_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghb0_acct_code, '') ,1 ,1 ),'R',
                        frvghb0_adj_bud_amt,frvghb0_adj_bud_amt*(-1)))) ,
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghb0_cmt_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghb0_acct_code, '') ,1 ,1 ),'R',
                        frvghb0_cmt_amt,frvghb0_cmt_amt*(-1)))),
       sum(decode(frkgvar.f_get_incl_revenue_acct,
           'N',
                  frvghb0_ytd_actv_amt,
           'Y',
                  decode(substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                        frvghb0_acct_code, '') ,1 ,1 ),'R',
                        frvghb0_ytd_actv_amt,frvghb0_ytd_actv_amt*(-1))))
  from frvghb0
  where  f_incl_revenue_acct(frkgvar.f_get_incl_revenue_acct,
                            substr(f_int_atyp_desc(frkgvar.f_get_coas_code,
                                   frvghb0_acct_code, '') ,1 ,1 )) = 'Y'
  group by frvghb0_fund_code"
"BANINST1","FRVCSUM","Grant Ledger Status Summary View based on Acct Class Code","select
     frvgbs2_coas_code,frvgbs2_grnt_code, frvgbs2_acct_class_code,
     frvges2_adj_bud_amt - frvgbs2_adj_bud_amt,
     frvges2_cmt_amt - frvgbs2_cmt_amt,
     frvges2_ytd_actv_amt - frvgbs2_ytd_actv_amt,
     (frvges2_adj_bud_amt - frvgbs2_adj_bud_amt) -
     (frvges2_cmt_amt - frvgbs2_cmt_amt) -
     (frvges2_ytd_actv_amt - frvgbs2_ytd_actv_amt)
   from frvges2, frvgbs2
   where frvges2_coas_code = frvgbs2_coas_code
     and frvges2_grnt_code = frvgbs2_grnt_code
     and frvges2_acct_class_code = frvgbs2_acct_class_code
 "
"BANINST1","FPVVVOL","","SELECT FPBPOHD_COAS_CODE,
                 SPRIDEN_ID,
                 FABINVH_VEND_PIDM,
                 FABINVH_INVOICE_DATE,
                 FARINVC_COMM_CODE,
                 FARINVC_COMM_DESC,
                 FARINVC_UOMS_CODE,
                 FPRPODT_QTY,
                 FARINVC_ACCEPT_QTY,
                 FARINVC_APPR_QTY,
                 FARINVC_APPR_UNIT_PRICE
            FROM FPBPOHD,
                 SPRIDEN,
                 FABINVH,
                 FPRPODT,
                 FARINVC
           WHERE FARINVC_INVH_CODE     = FABINVH_CODE
             AND FPRPODT_POHD_CODE     = FARINVC_POHD_CODE
             AND FPRPODT_COMM_CODE     = FARINVC_COMM_CODE
             AND FPRPODT_ITEM          = FARINVC_PO_ITEM
             AND FPBPOHD_CODE          = FABINVH_POHD_CODE
             AND (SPRIDEN_PIDM         = FABINVH_VEND_PIDM
             AND  FABINVH_VEND_PIDM IS NOT NULL
             and  spriden_change_ind is null)
             AND FABINVH_COMPLETE_IND  = 'Y'
             AND FARINVC_OPEN_PAID_IND = 'P'
             AND FABINVH_CANCEL_IND    = 'N'
UNION
          SELECT DISTINCT(FARINVA_COAS_CODE),
                 SPRIDEN_ID,
                 FABINVH_VEND_PIDM,
                 FABINVH_INVOICE_DATE,
                 FARINVC_COMM_CODE,
                 FARINVC_COMM_DESC,
                 FARINVC_UOMS_CODE,
                 FARINVC_INVD_QTY,
                 FARINVC_ACCEPT_QTY,
                 FARINVC_APPR_QTY,
                 FARINVC_APPR_UNIT_PRICE
            FROM FARINVC,
                 SPRIDEN,
                 FABINVH,
                 FARINVA
           WHERE FARINVC_INVH_CODE     = FABINVH_CODE
             AND FARINVC_INVH_CODE     = FARINVA_INVH_CODE
             AND FARINVC_POHD_CODE IS NULL
             AND (SPRIDEN_PIDM         = FABINVH_VEND_PIDM
             AND  FABINVH_VEND_PIDM IS NOT NULL
             and  spriden_change_ind is null)
             AND FABINVH_COMPLETE_IND  = 'Y'
             AND FARINVC_OPEN_PAID_IND = 'P'
             AND FABINVH_CANCEL_IND    = 'N'

 "
"BANINST1","FPVVNPO","","( SELECT FPBPOHD_CODE,
                 FPBPOHD_PO_TYPE_IND,
                 SPRIDEN_ID,
                 spriden_surname_prefix,
                 SPRIDEN_LAST_NAME,
                 SPRIDEN_FIRST_NAME,
                 SPRIDEN_MI,
                 SPRIDEN_ENTITY_IND,
                 FPBPOHD_ACTIVITY_DATE,
                 FPBPOHD_BUYR_CODE
            FROM SPRIDEN,
                 FPBPOHD
           WHERE FPBPOHD_CODE IS NOT NULL
             AND FPBPOHD_CHANGE_SEQ_NUM IS NULL
             AND (SPRIDEN_PIDM = FPBPOHD_VEND_PIDM
             AND  FPBPOHD_VEND_PIDM IS NOT NULL)
             AND SPRIDEN_CHANGE_IND IS NULL
             AND (FPBPOHD_BLANKET_IND = 'N'
              OR  FPBPOHD_BLANKET_IND IS NULL)
             AND (FPBPOHD_CLOSED_IND = 'N'
              OR  FPBPOHD_CLOSED_IND IS NULL)
             AND (FPBPOHD_CANCEL_IND = 'N'
              OR  FPBPOHD_CANCEL_IND IS NULL)
             AND FPBPOHD_APPR_IND = 'Y'
             AND FPBPOHD_COMPLETE_IND = 'Y')
"
"BANINST1","FPVREQH","Requisition view for BANNERQuest ","SELECT  FPBREQH_CODE,
 FPBREQH_ACTIVITY_DATE,
 FPBREQH_USER_ID,
 FPBREQH_REQH_DATE,
 FPBREQH_TRANS_DATE,
 FPBREQH_NAME,
 fpbreqh_ctry_code_phone,
 FPBREQH_PHONE_AREA,
 FPBREQH_PHONE_NUM,
 FPBREQH_PHONE_EXT,
 FPBREQH_VEND_PIDM,
 FPBREQH_ATYP_CODE,
 FPBREQH_ATYP_SEQ_NUM,
 FPBREQH_COAS_CODE,
 FPBREQH_ORGN_CODE,
 FPBREQH_REQD_DATE,
 FPBREQH_COMPLETE_IND,
 FPBREQH_PRINT_IND,
 FPBREQH_ENCUMB_IND,
 FPBREQH_SUSP_IND,
 FPBREQH_CANCEL_IND,
 FPBREQH_CANCEL_DATE,
 FPBREQH_POST_DATE,
 FPBREQH_APPR_IND,
 FPBREQH_TEXT_IND,
 FPBREQH_EDIT_DEFER_IND,
 FPBREQH_CLOSED_IND,
 FPBREQH_SHIP_CODE,
 FPBREQH_RQST_TYPE_IND,
 FPBREQH_INVENTORY_REQ_IND,
 SUM(NVL(FPRREQD_QTY,0) * NVL(FPRREQD_UNIT_PRICE,0))
FROM FPBREQH, FPRREQD
WHERE FPBREQH_CODE = FPRREQD_REQH_CODE
GROUP BY FPBREQH_CODE,
 FPBREQH_ACTIVITY_DATE,
 FPBREQH_USER_ID,
 FPBREQH_REQH_DATE,
 FPBREQH_TRANS_DATE,
 FPBREQH_NAME,
 fpbreqh_ctry_code_phone,
 FPBREQH_PHONE_AREA,
 FPBREQH_PHONE_NUM,
 FPBREQH_PHONE_EXT,
 FPBREQH_VEND_PIDM,
 FPBREQH_ATYP_CODE,
 FPBREQH_ATYP_SEQ_NUM,
 FPBREQH_COAS_CODE,
 FPBREQH_ORGN_CODE,
 FPBREQH_REQD_DATE,
 FPBREQH_COMPLETE_IND,
 FPBREQH_PRINT_IND,
 FPBREQH_ENCUMB_IND,
 FPBREQH_SUSP_IND,
 FPBREQH_CANCEL_IND,
 FPBREQH_CANCEL_DATE,
 FPBREQH_POST_DATE,
 FPBREQH_APPR_IND,
 FPBREQH_TEXT_IND,
 FPBREQH_EDIT_DEFER_IND,
 FPBREQH_CLOSED_IND,
 FPBREQH_SHIP_CODE,
 FPBREQH_RQST_TYPE_IND,
 FPBREQH_INVENTORY_REQ_IND
"
"BANINST1","FPVRCPO","","( SELECT FPBPOHD_CODE,
            FPBPOHD_COAS_CODE,
            FPBPOHD_PO_DATE,
            FPBPOHD_PO_TYPE_IND,
            SPRIDEN_ID,
            spriden_surname_prefix,
            SPRIDEN_LAST_NAME,
            SPRIDEN_FIRST_NAME,
            SPRIDEN_MI,
            SPRIDEN_ENTITY_IND
       FROM SPRIDEN,
            FPBPOHD
      WHERE SPRIDEN_PIDM = FPBPOHD_VEND_PIDM
        AND SPRIDEN_CHANGE_IND IS NULL
        AND FPBPOHD_CHANGE_SEQ_NUM IS NULL
        AND (FPBPOHD_BLANKET_IND   = 'N'
             OR  FPBPOHD_BLANKET_IND IS NULL)
        AND (FPBPOHD_CLOSED_IND    = 'N'
             OR  FPBPOHD_CLOSED_IND IS NULL)
        AND (FPBPOHD_CANCEL_IND    = 'N'
             OR  FPBPOHD_CANCEL_IND IS NULL)
        AND FPBPOHD_COMPLETE_IND   = 'Y')
"
"BANINST1","FPVPOHD","Purchase Order View for BANNERQuest ","SELECT FPBPOHD_CODE,
 FPBPOHD_CHANGE_SEQ_NUM,
 FPBPOHD_ACTIVITY_DATE,
 FPBPOHD_USER_ID,
 FPBPOHD_PO_DATE,
 FPBPOHD_TRANS_DATE,
 FPBPOHD_BLANKET_CODE,
 FPBPOHD_BLANKET_IND,
 FPBPOHD_BLANKET_TERM_DATE,
 FPBPOHD_CLOSED_IND,
 FPBPOHD_COMPLETE_IND,
 FPBPOHD_PRINT_IND,
 FPBPOHD_PO_PRINTED_DATE,
 FPBPOHD_VEND_PIDM,
 FPBPOHD_ATYP_CODE,
 FPBPOHD_ATYP_SEQ_NUM,
 FPBPOHD_BUYR_CODE,
 FPBPOHD_REQD_DATE,
 FPBPOHD_COAS_CODE,
 FPBPOHD_ORGN_CODE,
 FPBPOHD_SHIP_CODE,
 FPBPOHD_TRAT_CODE,
 FPBPOHD_FOB_CODE,
 FPBPOHD_DISC_CODE,
 FPBPOHD_TEXT_IND,
 FPBPOHD_CLAUSE_IND,
 FPBPOHD_CARRIER_PIDM,
 FPBPOHD_TRSK_CODE,
 FPBPOHD_PMNT_CODE,
 FPBPOHD_PRT_ACK,
 FPBPOHD_ACK_DATE,
 FPBPOHD_APPR_IND,
 FPBPOHD_RUSH_IND,
 FPBPOHD_REXP_DATE,
 FPBPOHD_ADDL_CHRG_AMT,
 FPBPOHD_RUSH_AMT,
 FPBPOHD_SUSP_IND,
 FPBPOHD_SUSP_IND_ADDL,
 FPBPOHD_CANCEL_IND,
 FPBPOHD_CANCEL_DATE,
 FPBPOHD_POST_DATE,
 FPBPOHD_REQ_BID_IND,
 FPBPOHD_EDIT_DEFER_IND,
 FPBPOHD_PCLS_CODE,
 FPBPOHD_TGRP_CODE,
 SUM(NVL(FPRPODT_QTY,0) * NVL(FPRPODT_UNIT_PRICE,0)
     + NVL(FPRPODT_ADDL_CHRG_AMT,0) + NVL(FPRPODT_TAX_AMT,0)
     - NVL(FPRPODT_DISC_AMT,0))
FROM FPBPOHD, FPRPODT
WHERE FPBPOHD_CODE = FPRPODT_POHD_CODE
AND FPBPOHD_CHANGE_SEQ_NUM IS NULL
AND FPRPODT_CHANGE_SEQ_NUM IS NULL
GROUP BY FPBPOHD_CODE,
 FPBPOHD_CHANGE_SEQ_NUM,
 FPBPOHD_ACTIVITY_DATE,
 FPBPOHD_USER_ID,
 FPBPOHD_PO_DATE,
 FPBPOHD_TRANS_DATE,
 FPBPOHD_BLANKET_CODE,
 FPBPOHD_BLANKET_IND,
 FPBPOHD_BLANKET_TERM_DATE,
 FPBPOHD_CLOSED_IND,
 FPBPOHD_COMPLETE_IND,
 FPBPOHD_PRINT_IND,
 FPBPOHD_PO_PRINTED_DATE,
 FPBPOHD_VEND_PIDM,
 FPBPOHD_ATYP_CODE,
 FPBPOHD_ATYP_SEQ_NUM,
 FPBPOHD_BUYR_CODE,
 FPBPOHD_REQD_DATE,
 FPBPOHD_COAS_CODE,
 FPBPOHD_ORGN_CODE,
 FPBPOHD_SHIP_CODE,
 FPBPOHD_TRAT_CODE,
 FPBPOHD_FOB_CODE,
 FPBPOHD_DISC_CODE,
 FPBPOHD_TEXT_IND,
 FPBPOHD_CLAUSE_IND,
 FPBPOHD_CARRIER_PIDM,
 FPBPOHD_TRSK_CODE,
 FPBPOHD_PMNT_CODE,
 FPBPOHD_PRT_ACK,
 FPBPOHD_ACK_DATE,
 FPBPOHD_APPR_IND,
 FPBPOHD_RUSH_IND,
 FPBPOHD_REXP_DATE,
 FPBPOHD_ADDL_CHRG_AMT,
 FPBPOHD_RUSH_AMT,
 FPBPOHD_SUSP_IND,
 FPBPOHD_SUSP_IND_ADDL,
 FPBPOHD_CANCEL_IND,
 FPBPOHD_CANCEL_DATE,
 FPBPOHD_POST_DATE,
 FPBPOHD_REQ_BID_IND,
 FPBPOHD_EDIT_DEFER_IND,
 FPBPOHD_PCLS_CODE,
 FPBPOHD_TGRP_CODE

 "
"BANINST1","FPVCOHD","Change Order View for BANNERQuest ","SELECT FPBPOHD_CODE,
 FPBPOHD_CHANGE_SEQ_NUM,
 FPRPODT_ITEM,
 FPBPOHD_ACTIVITY_DATE,
 FPBPOHD_USER_ID,
 FPBPOHD_PO_DATE,
 FPBPOHD_TRANS_DATE,
 FPBPOHD_BLANKET_CODE,
 FPBPOHD_BLANKET_IND,
 FPBPOHD_BLANKET_TERM_DATE,
 FPBPOHD_CLOSED_IND,
 FPBPOHD_COMPLETE_IND,
 FPBPOHD_PRINT_IND,
 FPBPOHD_PO_PRINTED_DATE,
 FPBPOHD_VEND_PIDM,
 fPBPOHD_ATYP_CODE,
 FPBPOHD_ATYP_SEQ_NUM,
 FPBPOHD_BUYR_CODE,
 FPBPOHD_REQD_DATE,
 FPBPOHD_COAS_CODE,
 FPBPOHD_ORGN_CODE,
 FPBPOHD_SHIP_CODE,
 FPBPOHD_TRAT_CODE,
 FPBPOHD_FOB_CODE,
 FPBPOHD_DISC_CODE,
 FPBPOHD_TEXT_IND,
 FPBPOHD_CLAUSE_IND,
 FPBPOHD_CARRIER_PIDM,
 FPBPOHD_TRSK_CODE,
 FPBPOHD_PMNT_CODE,
 FPBPOHD_PRT_ACK,
 FPBPOHD_ACK_DATE,
 FPBPOHD_APPR_IND,
 FPBPOHD_RUSH_IND,
 FPBPOHD_REXP_DATE,
 FPBPOHD_ADDL_CHRG_AMT,
 FPBPOHD_RUSH_AMT,
 FPBPOHD_SUSP_IND,
 FPBPOHD_SUSP_IND_ADDL,
 FPBPOHD_CANCEL_IND,
 FPBPOHD_CANCEL_DATE,
 FPBPOHD_POST_DATE,
 FPBPOHD_REQ_BID_IND,
 FPBPOHD_EDIT_DEFER_IND,
 FPBPOHD_PCLS_CODE,
 FPBPOHD_TGRP_CODE,
 FPRPODT_QTY,
 FPRPODT_UNIT_PRICE
FROM FPBPOHD, FPRPODT
WHERE FPBPOHD_CODE = FPRPODT_POHD_CODE
AND FPBPOHD_CHANGE_SEQ_NUM = FPRPODT_CHANGE_SEQ_NUM
AND FPBPOHD_CHANGE_SEQ_NUM > 0

 "
"BANINST1","FPVBIDD","","SELECT FPRBIDD_BIDH_CODE,
              FPRBIDD_VEND_PIDM
         FROM FPRBIDD
     GROUP BY FPRBIDD_BIDH_CODE,
              FPRBIDD_VEND_PIDM

 "
"BANINST1","FOVUAPP","","select distinct fobuapp_doc_code,ftvdtyp_code,fobuapp_chg_seq_num,
fobuapp_submission_number,trunc(fobuapp_activity_date)
from fobainp, fobuapp, ftvdtyp
where fobuapp_doc_code=fobainp_doc_num
  and fobuapp_seq_num=fobainp_doc_type
  and ((fobuapp_chg_seq_num=fobainp_chg_seq_num)
    or (fobuapp_chg_seq_num is null
        and fobainp_chg_seq_num is null))
  and ((fobuapp_submission_number=fobainp_submission_num)
    or (fobuapp_submission_number is null
        and fobainp_submission_num is null))
  and fobuapp_seq_num=ftvdtyp_seq_num
  and nvl(fobuapp_status_ind,'Y')<>'N'
 "
"BANINST1","FOVREC2","","select
 decode(tbbdetc_type_ind, 'C', a.fgbgenl_fsyr_code,
                          'P', b.fgbgenl_fsyr_code),
 decode(tbbdetc_type_ind, 'C', nvl(tbracct_a_coas_code, a.fgbgenl_coas_code),
                          'P', nvl(tbracct_b_coas_code, b.fgbgenl_coas_code)),
 decode(tbbdetc_type_ind, 'C', nvl(tbracct_a_fund_code, a.fgbgenl_fund_code),
                          'P', nvl(tbracct_b_fund_code, b.fgbgenl_fund_code)),
 decode(tbbdetc_type_ind, 'C', nvl(tbracct_a_acct_code, a.fgbgenl_acct_code),
                          'P', nvl(tbracct_b_acct_code, b.fgbgenl_acct_code)),
 tbbdetc_detail_code
from
 tbbdetc,
 fgbgenl a,
 fgbgenl b,
 tbracct,
 tbbeact
where
     tbracct_a_coas_code = a.fgbgenl_coas_code
 and tbracct_b_coas_code = b.fgbgenl_coas_code
 and tbracct_a_fund_code = a.fgbgenl_fund_code
 and tbracct_b_fund_code = b.fgbgenl_fund_code
 and tbracct_a_acct_code = a.fgbgenl_acct_code
 and tbracct_b_acct_code = b.fgbgenl_acct_code
 and tbracct_detail_code = tbbdetc_detail_code
 and tbbdetc_detail_code = tbbeact_detail_code
 and tbbeact_eff_date = tbracct_detc_eff_date
 and tbbeact_eff_date <= sysdate
 and tbbeact_nchg_date > sysdate
 and (tbbeact_term_date > sysdate
     or tbbeact_term_date is null)
group by
 decode(tbbdetc_type_ind, 'C', a.fgbgenl_fsyr_code,
                          'P', b.fgbgenl_fsyr_code),
 decode(tbbdetc_type_ind, 'C', nvl(tbracct_a_coas_code, a.fgbgenl_coas_code),
                          'P', nvl(tbracct_b_coas_code, b.fgbgenl_coas_code)),
 decode(tbbdetc_type_ind, 'C', nvl(tbracct_a_fund_code, a.fgbgenl_fund_code),
                          'P', nvl(tbracct_b_fund_code, b.fgbgenl_fund_code)),
 decode(tbbdetc_type_ind, 'C', nvl(tbracct_a_acct_code, a.fgbgenl_acct_code),
                          'P', nvl(tbracct_b_acct_code, b.fgbgenl_acct_code)),
 tbbdetc_detail_code
 "
"BANINST1","FOVREC1","","select
 fovrec2_fiscal_year_key,
 fovrec2_coas_code_key,
 fovrec2_fund_code_key,
 fovrec2_acct_code_key,
 tbbdetc_desc,
 tbbdetc_dcat_code,
 tbbdetc_type_ind,
 f_accd_balance(fovrec2_fiscal_year_key, fovrec2_coas_code_key,
                fovrec2_fund_code_key, fovrec2_acct_code_key, tbbdetc_type_ind),
 f_appl_not_fed(fovrec2_fiscal_year_key, fovrec2_coas_code_key,
                fovrec2_fund_code_key, fovrec2_acct_code_key, tbbdetc_type_ind),
 f_gl_balance(fovrec2_fiscal_year_key, fovrec2_coas_code_key,
              fovrec2_fund_code_key, fovrec2_acct_code_key)
from tbbdetc, fovrec2
where tbbdetc_detail_code  = fovrec2_detail_code
 "
"BANINST1","FOVDOCU","This view gathers certain information from header/detail tables by document.","select  fprreqa_coas_code,
        fprreqa_fsyr_code,
        fpbreqh_user_id,
        decode(
         fpbreqh_cancel_ind,
          'Y','X',
              decode(
               nvl(fpbreqh_complete_ind,'N') || nvl(fpbreqh_appr_ind,'N'),
                 'YY', 'A',
                 'CY', 'A',
                 'YN', 'C',
                 'CN', 'C',
                       'I')),
        decode(
         fpbreqh_cancel_ind,
          'Y','Cancelled',
              decode(
               nvl(fpbreqh_complete_ind,'N') || nvl(fpbreqh_appr_ind,'N'),
                 'YY', 'Approved',
                 'CY', 'Approved',
                 'YN', 'Completed',
                 'CN', 'Completed',
                       'Incomplete')),
        FTVDTYP_CODE,
        'Requisition',
        fpbreqh_code,
        to_number(null),
        to_number(null),
        nvl(fpbreqh_complete_ind, 'N'),
        nvl(fpbreqh_appr_ind, 'N'),
        nvl(substr(spriden_last_name,1,35),
            substr(fpbreqh_name,1,35)),
        fpbreqh_activity_date,
        nvl(fpbreqh_cancel_ind, 'N'),
        sum(nvl(fprreqa_amt, 0) + nvl(fprreqa_tax_amt,0) + nvl(fprreqa_addl_chrg_amt,0) - nvl(fprreqa_disc_amt,0))
from    spriden,
        fprreqa,
        fpbreqh,
        FTVDTYP
where   fpbreqh_vend_pidm = spriden_pidm (+)
and     spriden_change_ind is null
and     fpbreqh_code = fprreqa_reqh_code(+)
and     ftvdtyp_seq_num = 1
group by
        fprreqa_coas_code,
        fprreqa_fsyr_code,
        fpbreqh_user_id,
        fpbreqh_code,
        fpbreqh_complete_ind,
        fpbreqh_appr_ind,
        nvl(substr(spriden_last_name,1,35),
            substr(fpbreqh_name,1,35)),
        fpbreqh_activity_date,
        fpbreqh_cancel_ind,
        ftvdtyp_code
union all
select  fprpoda_coas_code,
        fprpoda_fsyr_code,
        fpbpohd_user_id,
        decode(
         fpbpohd_cancel_ind,
          'Y','X',
              decode(
               nvl(fpbpohd_complete_ind,'N') || nvl(fpbpohd_appr_ind,'N'),
                 'YY', 'A',
                 'CY', 'A',
                 'YN', 'C',
                 'CN', 'C',
                       'I')),
        decode(
         fpbpohd_cancel_ind,
          'Y','Cancelled',
              decode(
               nvl(fpbpohd_complete_ind,'N') || nvl(fpbpohd_appr_ind,'N'),
                 'YY', 'Approved',
                 'CY', 'Approved',
                 'YN', 'Completed',
                 'CN', 'Completed',
                       'Incomplete')),
        FTVDTYP_CODE,
        'Purchase Order',
        fpbpohd_code,
        fpbpohd_change_seq_num,
        to_number(null),
        nvl(fpbpohd_complete_ind, 'N'),
        nvl(fpbpohd_appr_ind, 'N'),
        substr(spriden_last_name,1,35),
        fpbpohd_activity_date,
        nvl(fpbpohd_cancel_ind, 'N'),
        sum(nvl(fprpoda_amt, 0) - nvl(fprpoda_disc_amt, 0) +
            nvl(fprpoda_tax_amt,0) + nvl(fprpoda_addl_chrg_amt,0))
from    spriden,
        fprpoda,
        fpbpohd h,
        FTVDTYP
where   h.fpbpohd_vend_pidm = spriden_pidm
and     spriden_change_ind is null
and    (nvl(h.fpbpohd_change_seq_num,-1) >= 0
     or (    h.fpbpohd_change_seq_num is null
         and (select max(nvl(a.fpbpohd_change_seq_num,0))
                from fpbpohd a
               where a.fpbpohd_code= h.fpbpohd_code)=0))
and     h.fpbpohd_code = fprpoda_pohd_code(+)
and     nvl(h.fpbpohd_change_seq_num,999) =
        nvl(fprpoda_change_seq_num(+),999)
and     ftvdtyp_seq_num = 2
group by
        fprpoda_coas_code,
        fprpoda_fsyr_code,
        h.fpbpohd_user_id,
        h.fpbpohd_code,
        h.fpbpohd_change_seq_num,
        h.fpbpohd_complete_ind,
        h.fpbpohd_appr_ind,
        spriden_last_name,
        h.fpbpohd_activity_date,
        h.fpbpohd_cancel_ind,
        FTVDTYP_CODE
union all
select  farinva_coas_code,
        farinva_fsyr_code,
        fabinvh_user_id,
        decode(
         fabinvh_cancel_ind,
          'Y','X',
              decode(
               nvl(fabinvh_complete_ind,'N') || nvl(fabinvh_appr_ind,'N'),
                 'YY', 'A',
                 'CY', 'A',
                 'YN', 'C',
                 'CN', 'C',
                       'I')),
        decode(
         fabinvh_cancel_ind,
          'Y','Cancelled',
              decode(
               nvl(fabinvh_complete_ind,'N') || nvl(fabinvh_appr_ind,'N'),
                 'YY', 'Approved',
                 'CY', 'Approved',
                 'YN', 'Completed',
                 'CN', 'Completed',
                       'Incomplete')),
        FTVDTYP_CODE,
        'Invoice',
        fabinvh_code,
        to_number(null),
        fabinvh_submission_number,
        nvl(fabinvh_complete_ind, 'N'),
        nvl(fabinvh_appr_ind, 'N'),
        nvl(substr(spriden_last_name,1,35),
            substr(fabinvh_one_time_vend_name,1,35)),
        fabinvh_activity_date,
        nvl(fabinvh_cancel_ind, 'N'),
        sum(nvl(farinva_appr_amt,0) - nvl(farinva_disc_amt, 0) +
            nvl(farinva_tax_amt, 0) + nvl(farinva_addl_chrg_amt,0))
from    spriden,
        farinva,
        fabinvh,
        FTVDTYP
where   fabinvh_vend_pidm = spriden_pidm(+)
and     spriden_change_ind is null
and     fabinvh_code = farinva_invh_code(+)
and     ftvdtyp_seq_num = 3
group by
        farinva_coas_code,
        farinva_fsyr_code,
        fabinvh_user_id,
        fabinvh_code,
        fabinvh_submission_number,
        fabinvh_complete_ind,
        fabinvh_appr_ind,
        nvl(substr(spriden_last_name,1,35),
            substr(fabinvh_one_time_vend_name,1,35)),
        fabinvh_activity_date,
        fabinvh_cancel_ind,
        FTVDTYP_CODE
union all
select  fgbencd_coas_code,
        fgbencd_fsyr_code,
        fgbench_user_id,
        decode(
         nvl(fgbench_status,'N') || nvl(fgbench_appr_ind,'N'),
            'YY', 'A',
            'CY', 'A',
            'YN', 'C',
            'CN', 'C',
                  'I'),
        decode(
         nvl(fgbench_status,'N') || nvl(fgbench_appr_ind,'N'),
            'YY', 'Approved',
            'CY', 'Approved',
            'YN', 'Completed',
            'CN', 'Completed',
                  'Incomplete'),
        FTVDTYP_CODE,
        'General Encumbrance',
        nvl(fgbench_doc_change_num,fgbench_num),
        to_number(null),
        to_number(null),
        decode(fgbench_status,'C','Y','N'),
        nvl(fgbench_appr_ind, 'N'),
        substr(nvl(fgbench_change_desc,fgbench_desc),1,35),
        trunc(fgbench_activity_date),
        'N',
        sum(nvl(FGBENCD_PEND_AMT,0))
from    fgbencd,
        fgbench,
        ftvdtyp
where   fgbench_type not in ('P', 'R')
and     fgbench_num = fgbencd_num(+)
and     ftvdtyp_seq_num = 25
and nvl(fgbench_doc_change_num,fgbench_num) not in (select fgbtrnh_doc_code from fgbtrnh where fgbtrnh_doc_seq_code = 25)
group by
        fgbencd_coas_code,
        fgbencd_fsyr_code,
        fgbench_user_id,
       nvl(fgbench_doc_change_num,fgbench_num),
        fgbench_status,
        fgbench_appr_ind,
        nvl(fgbench_change_desc,fgbench_desc),
        trunc(fgbench_activity_date),
        FTVDTYP_CODE
union all
select  A.fgbjvcd_coas_code,
        A.fgbjvcd_fsyr_code,
        fgbjvch_user_id,
        decode(
         nvl(fgbjvch_status_ind,'N') || nvl(fgbjvch_approval_ind,'N'),
            'YY', 'A',
            'CY', 'A',
            'YN', 'C',
            'CN', 'C',
                  'I'),
        decode(
         nvl(fgbjvch_status_ind,'N') || nvl(fgbjvch_approval_ind,'N'),
            'YY', 'Approved',
            'CY', 'Approved',
            'YN', 'Completed',
            'CN', 'Completed',
                  'Incomplete'),
        FTVDTYP_CODE,
        'Journal Voucher',
        fgbjvch_doc_num,
        to_number(null),
        fgbjvch_submission_number,
        decode(fgbjvch_status_ind,'C','Y','N'),
        nvl(fgbjvch_approval_ind, 'N'),
        --substr(fgbjvcd_trans_desc,1,35),
         decode(substr(fgbjvch_doc_description,1,35),NULL,(SELECT SUBSTR(fgbjvcd_trans_desc,1,35)
                                                                   FROM fgbjvcd
                                              WHERE fgbjvcd_doc_num =  A.fgbjvcd_doc_num
                                                AND fgbjvcd_seq_num = 1)
                                              ),
        trunc(fgbjvch_activity_date),
        'N',
        sum(nvl(fgbjvcd_trans_amt, 0))
from    fgbjvcd A,
        fgbjvch,
        ftvdtyp
where   fgbjvch_doc_num = A.fgbjvcd_doc_num(+)
and     fgbjvch_submission_number = fgbjvcd_submission_number(+)
and     ftvdtyp_seq_num = 20
group by
        A.fgbjvcd_coas_code,
        A.fgbjvcd_fsyr_code,
        A.fgbjvcd_doc_num,
        fgbjvch_user_id,
        fgbjvch_doc_num,
        fgbjvch_submission_number,
        fgbjvch_status_ind,
        fgbjvch_approval_ind,
        --fgbjvcd_trans_desc,
        fgbjvch_doc_description,
        trunc(fgbjvch_activity_date),
        ftvdtyp_code
union all
select  a.fgbtrnh_coas_code,
        a.fgbtrnh_fsyr_code,
        rtrim(a.fgbtrnh_user_id),
        'P',
        'Approved',
        FTVDTYP_CODE,
        'Journal Voucher',
        a.fgbtrnh_doc_code,
        to_number(null),
        a.fgbtrnh_submission_number,
        'C',
        'Y',
        a.fgbtrnh_trans_desc,
        trunc(a.fgbtrnh_activity_date),
        'N',
        sum(nvl(a.fgbtrnh_trans_amt, 0))
from    fgbtrnh a,
        ftvdtyp
where   a.fgbtrnh_doc_seq_code = 20
  and   ftvdtyp_seq_num = 20
group by
        a.fgbtrnh_coas_code,
        a.fgbtrnh_fsyr_code,
        rtrim(a.fgbtrnh_user_id),
        a.fgbtrnh_doc_code,
        a.fgbtrnh_submission_number,
        a.fgbtrnh_trans_desc,
        trunc(a.fgbtrnh_activity_date),
        FTVDTYP_CODE
union all
select fgbtrnh_coas_code,
        fgbtrnh_fsyr_code,
        rtrim(fgbtrnh_user_id),
        'P',
        'Approved',
        FTVDTYP_CODE,
        'General Encumbrance',
        a.fgbtrnh_doc_code,
        to_number(null),
        a.fgbtrnh_submission_number,
         'C',
        'Y',
        a.fgbtrnh_trans_desc,
        trunc(a.fgbtrnh_activity_date),
        'N',
        sum(nvl(a.fgbtrnh_trans_amt, 0))
from    fgbtrnh a,
        ftvdtyp
where   a.fgbtrnh_doc_seq_code = 25
  and   ftvdtyp_seq_num = 25
group by
        a.fgbtrnh_coas_code,
        a.fgbtrnh_fsyr_code,
        rtrim(a.fgbtrnh_user_id),
        a.fgbtrnh_doc_code,
        a.fgbtrnh_submission_number,
        a.fgbtrnh_trans_desc,
        trunc(a.fgbtrnh_activity_date),
        FTVDTYP_CODE"
"BANINST1","FOVDATA","Web for Executives Finance Cleansing View","SELECT 'FINANCE',
             'CHART',
             'B',
             null,
             ftvcoas_coas_code,
             substr(to_char(ftvcoas_eff_date,'YYYYMMDDHH24MISS'),1,16),
             ftvcoas_title,
             substr(ftvcoas_title,1,15)
        FROM ftvcoas
UNION ALL
      SELECT 'FINANCE',
             'FUND',
             'B',
             ftvfund_coas_code,
             ftvfund_fund_code,
             substr(to_char(ftvfund_eff_date,'YYYYMMDDHH24MISS'),1,16),
             ftvfund_title,
             substr(ftvfund_title,1,15)
        FROM ftvfund
UNION ALL
      SELECT 'FINANCE',
             'FUND TYPE',
             'B',
             ftvftyp_coas_code,
             ftvftyp_ftyp_code,
             substr(to_char(ftvftyp_eff_date,'YYYYMMDDHH24MISS'),1,16),
             ftvftyp_title,
             substr(ftvftyp_title,1,15)
        FROM ftvftyp
UNION ALL
      SELECT 'FINANCE',
             'ORGANIZATION',
             'B',
             ftvorgn_coas_code,
             ftvorgn_orgn_code,
             substr(to_char(ftvorgn_eff_date,'YYYYMMDDHH24MISS'),1,16),
             ftvorgn_title,
             substr(ftvorgn_title,1,15)
         FROM ftvorgn
UNION ALL
       SELECT 'FINANCE',
              'ACCOUNT',
              'B',
              ftvacct_coas_code,
              ftvacct_acct_code,
              substr(to_char(ftvacct_eff_date,'YYYYMMDDHH24MISS'),1,16),
              ftvacct_title,
              substr(ftvacct_title,1,15)
         FROM ftvacct
UNION ALL
       SELECT 'FINANCE',
              'ACCOUNT TYPE',
              'B',
              ftvatyp_coas_code,
              ftvatyp_atyp_code,
              substr(to_char(ftvatyp_eff_date,'YYYYMMDDHH24MISS'),1,16),
              ftvatyp_title,
              substr(ftvatyp_title,1,15)
         FROM ftvatyp
UNION ALL
       SELECT 'FINANCE',
              'PROGRAM',
              'B',
              ftvprog_coas_code,
              ftvprog_prog_code,
              substr(to_char(ftvprog_eff_date,'YYYYMMDDHH24MISS'),1,16),
              ftvprog_title,
              substr(ftvprog_title,1,15)
         FROM ftvprog
UNION ALL
       SELECT 'FINANCE',
              'LOCATION',
              'B',
              ftvlocn_coas_code,
              ftvlocn_locn_code,
              substr(to_char(ftvlocn_eff_date,'YYYYMMDDHH24MISS'),1,16),
              ftvlocn_title,
              substr(ftvlocn_title,1,15)
         FROM ftvlocn
UNION ALL
       SELECT 'FINANCE',
              'GRANT',
              'B',
              frbgrnt_coas_code,
              frbgrnt_code,
              null,
              frbgrnt_title,
              substr(frbgrnt_title,1,15)
         FROM frbgrnt
UNION ALL
       SELECT 'FINANCE',
              'GRANT CATEGORY',
              'B',
              ftvsdat_coas_code,
              ftvsdat_sdat_code_opt_1,
              null,
              ftvsdat_title,
              substr(ftvsdat_short_title,1,15)
         FROM ftvsdat
        WHERE ftvsdat_sdat_code_entity = 'FRBGRNT'
          AND ftvsdat_sdat_code_attr = 'CATEGORY'
UNION ALL
       SELECT 'FINANCE',
              'GRANT TYPE',
              'B',
              ftvsdat_coas_code,
              ftvsdat_sdat_code_opt_1,
              null,
              ftvsdat_title,
              substr(ftvsdat_short_title,1,15)
         FROM ftvsdat
        WHERE ftvsdat_sdat_code_entity = 'FRBGRNT'
          AND ftvsdat_sdat_code_attr = 'GRANT_TYPE'
UNION ALL
       SELECT 'FINANCE',
              'GRANT SUBCATEG',
              'B',
              ftvsdat_coas_code,
              ftvsdat_sdat_code_opt_1,
              null,
              ftvsdat_title,
              substr(ftvsdat_short_title,1,15)
         FROM ftvsdat
        WHERE ftvsdat_sdat_code_entity = 'FRBGRNT'
          AND ftvsdat_sdat_code_attr = 'SUB_CATEGORY'
 "
"BANINST1","FOVAQRC","","select foraqrc_queue_id,
         foraqrc_ftyp_code,
         foraqrc_fund_code,
         foraqrc_orgn_code,
         foraqrc_atyp_code,
         foraqrc_acct_code,
         foraqrc_prog_code
    from foraqrc, fobcolr
   where foraqrc_coas_code = fobcolr_coas_code
     and foraqrc_rule_group = fobcolr_rule_group
     and foraqrc_doc_type = fobcolr_doc_type
     and (foraqrc_orgn_code is null or
          (foraqrc_orgn_code is not null and
           fobcolr_orgn_code is not null and
           foraqrc_orgn_code in
            (select ftvorgn_orgn_code
               from ftvorgn
               connect by ftvorgn_orgn_code = prior ftvorgn_orgn_code_pred
                      and ftvorgn_coas_code = prior ftvorgn_coas_code
                      and ftvorgn_eff_date <= sysdate
                      and (ftvorgn_nchg_date is null or
                          ftvorgn_nchg_date > sysdate)
               start with ftvorgn_orgn_code = fobcolr_orgn_code
                      and ftvorgn_coas_code = fobcolr_coas_code
                      and ftvorgn_eff_date <= sysdate
                      and (ftvorgn_nchg_date is null or
                          ftvorgn_nchg_date > sysdate))))
     and ((foraqrc_fund_code is null and foraqrc_ftyp_code is null) or
          (foraqrc_fund_code is not null and
           fobcolr_fund_code is not null and
           foraqrc_fund_code in
            (select ftvfund_fund_code
               from ftvfund
         connect by ftvfund_fund_code = prior ftvfund_fund_code_pred
                and ftvfund_coas_code = prior ftvfund_coas_code
                and ftvfund_eff_date <= sysdate
                and (ftvfund_nchg_date is null or
                     ftvfund_nchg_date > sysdate)
          start with ftvfund_fund_code = fobcolr_fund_code
                 and ftvfund_coas_code = fobcolr_coas_code
                 and ftvfund_eff_date <= sysdate
                 and (ftvfund_nchg_date is null or
                      ftvfund_nchg_date > sysdate))) or
          (foraqrc_ftyp_code is not null and
           fobcolr_ftyp_code is not null and
           foraqrc_ftyp_code in
            (select ftvftyp_ftyp_code
               from ftvftyp
         connect by ftvftyp_ftyp_code = prior ftvftyp_ftyp_code_pred
                and ftvftyp_coas_code = prior ftvftyp_coas_code
                and ftvftyp_eff_date <= sysdate
                and (ftvftyp_nchg_date is null or
                     ftvftyp_nchg_date > sysdate)
          start with ftvftyp_ftyp_code = fobcolr_ftyp_code
                 and ftvftyp_coas_code = fobcolr_coas_code
                 and ftvftyp_eff_date <= sysdate
                 and (ftvftyp_nchg_date is null or
                      ftvftyp_nchg_date > sysdate))))
     and ((foraqrc_acct_code is null and foraqrc_atyp_code is null) or
          (foraqrc_acct_code is not null and
           fobcolr_acct_code is not null and
           foraqrc_acct_code in
            (select ftvacct_acct_code
               from ftvacct
         connect by ftvacct_acct_code = prior ftvacct_acct_code_pred
                and ftvacct_coas_code = prior ftvacct_coas_code
                and ftvacct_eff_date <= sysdate
                and (ftvacct_nchg_date is null or
                     ftvacct_nchg_date > sysdate)
          start with ftvacct_acct_code = fobcolr_acct_code
                 and ftvacct_coas_code = fobcolr_coas_code
                 and ftvacct_eff_date <= sysdate
                 and (ftvacct_nchg_date is null or
                      ftvacct_nchg_date > sysdate))) or
          (foraqrc_atyp_code is not null and
           fobcolr_atyp_code is not null and
           foraqrc_atyp_code in
            (select ftvatyp_atyp_code
               from ftvatyp
         connect by ftvatyp_atyp_code = prior ftvatyp_atyp_code_pred
                and ftvatyp_coas_code = prior ftvatyp_coas_code
                and ftvatyp_eff_date <= sysdate
                and (ftvatyp_nchg_date is null or
                     ftvatyp_nchg_date > sysdate)
          start with ftvatyp_atyp_code = fobcolr_atyp_code
                 and ftvatyp_coas_code = fobcolr_coas_code
                 and ftvatyp_eff_date <= sysdate
                 and (ftvatyp_nchg_date is null or
                      ftvatyp_nchg_date > sysdate))))
     and   (foraqrc_prog_code is null or
            (foraqrc_prog_code is not null and
           fobcolr_prog_code is not null and
           foraqrc_prog_code in
            (select ftvprog_prog_code
               from ftvprog
         connect by ftvprog_prog_code = prior ftvprog_prog_code_pred
                and ftvprog_coas_code = prior ftvprog_coas_code
                and ftvprog_eff_date <= sysdate
                and (ftvprog_nchg_date is null or
                     ftvprog_nchg_date > sysdate)
          start with ftvprog_prog_code = fobcolr_prog_code
                 and ftvprog_coas_code = fobcolr_coas_code
                 and ftvprog_eff_date <= sysdate
                 and (ftvprog_nchg_date is null or
                      ftvprog_nchg_date > sysdate))))
 "
"BANINST1","FOVAPPH","","select fobapph_doc_code,fobapph_chg_seq_num,
ftvdtyp_code,fobapph_submission_number,fobapph_seq_num
from fobapph,ftvdtyp
where ftvdtyp_seq_num=fobapph_seq_num
group by fobapph_doc_code,fobapph_chg_seq_num,
fobapph_submission_number,fobapph_seq_num,ftvdtyp_code
 "
"BANINST1","FOVAPHT","","select fobapph_doc_code,fobapph_chg_seq_num,fobapph_seq_num,
ftvdtyp_code,fobapph_submission_number,fobapph_queue_level,
fobapph_user_id,trunc(fobapph_activity_date),fobapph_queue_id
from fobapph, ftvdtyp
where ftvdtyp_seq_num=fobapph_seq_num
 "
"BANINST1","FOVANP2","","select fovainp_doc_type,count(*)
from fovainp
group by fovainp_doc_type
 "
"BANINST1","FOVAINP","","select fobainp_doc_num,min(fobainp_approval_sequence),
fobainp_doc_type,fobainp_chg_seq_num,fobainp_submission_num
from fobainp,foraqus
where fobainp_queue_id=foraqus_queue_id
and fobainp_level=foraqus_queue_level
and foraqus_user_id_appr=user
and foraqus_eff_date<=sysdate
and (foraqus_term_date is null or foraqus_term_date>sysdate)
and (foraqus_nchg_date is null or foraqus_nchg_date>sysdate)
group by fobainp_doc_num,fobainp_doc_type,
fobainp_chg_seq_num,fobainp_submission_num
intersect
select fobainp_doc_num,min(fobainp_approval_sequence),
fobainp_doc_type,fobainp_chg_seq_num,fobainp_submission_num
from fobainp
group by fobainp_doc_num,fobainp_doc_type,
fobainp_chg_seq_num,fobainp_submission_num
 "
"BANINST1","FNVEBAL","Combined Operating and General Ledgers activitiy table. ","select
       FGBOPAL_COAS_CODE,
       to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'),
       FGBOPAL_FSYR_CODE,
       FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE,
       NVL(SUM(decode(FTVATYP_INTERNAL_ATYP_CODE,
               '50',FGBOPAL_14_YTD_ACTV,
                    FGBOPAL_14_YTD_ACTV*(-1))), 0)
  from FTVATYP,
       FTVACCT,
       FGBOPAL
 where FTVACCT_COAS_CODE = FGBOPAL_COAS_CODE
       AND FTVACCT_ACCT_CODE = FGBOPAL_ACCT_CODE
       AND FTVACCT_EFF_DATE <= SYSDATE
       AND FTVACCT_NCHG_DATE > SYSDATE
       AND FTVACCT_COAS_CODE = FTVATYP_COAS_CODE
       AND FTVACCT_ATYP_CODE = FTVATYP_ATYP_CODE
       AND FTVATYP_EFF_DATE <= SYSDATE
       AND FTVATYP_NCHG_DATE > SYSDATE
       AND FTVATYP_INTERNAL_ATYP_CODE in ('50', '60', '70', '80')
 group by FGBOPAL_COAS_CODE,
          FGBOPAL_FSYR_CODE,
          FGBOPAL_FUND_CODE,
          FGBOPAL_ACCT_CODE
UNION ALL
select FGBGENL_COAS_CODE,
       to_char(to_date(FGBGENL_FSYR_CODE,'RR'),'YYYY'),
       FGBGENL_FSYR_CODE,
       FGBGENL_FUND_CODE,
       FGBGENL_ACCT_CODE,
       (NVL(SUM(FGBGENL_SUM_PERIODIC_CR), 0) - NVL(SUM(FGBGENL_SUM_PERIODIC_DR), 0))
  from FTVATYP,
       FTVACCT,
       FGBGENL
 where FTVACCT_COAS_CODE = FGBGENL_COAS_CODE
       AND FTVACCT_ACCT_CODE = FGBGENL_ACCT_CODE
       AND FTVACCT_EFF_DATE <= SYSDATE
       AND FTVACCT_NCHG_DATE > SYSDATE
       AND FTVACCT_COAS_CODE = FTVATYP_COAS_CODE
       AND FTVACCT_ATYP_CODE = FTVATYP_ATYP_CODE
       AND FTVATYP_EFF_DATE <= SYSDATE
       AND FTVATYP_NCHG_DATE > SYSDATE
       AND FTVATYP_INTERNAL_ATYP_CODE in ('90', '95')
       AND FGBGENL_PERIOD < '14'
 group by FGBGENL_COAS_CODE,
          FGBGENL_FSYR_CODE,
          FGBGENL_FUND_CODE,
          FGBGENL_ACCT_CODE

 "
"BANINST1","FIVIMKT","","SELECT distinct fibstck_cusip_number,
               '',
               ftvfund_FUND_CODE,
               fibstck_coas_code,
               fibcusp_ivtp_code,
               fibstck_imgr_code_pidm,
               fircuuv_unit_market_value,
               fibcusp_eff_date,
               fibcusp_nchg_date,
               fibcusp_eff_date,
               fibcusp_nchg_date,
               ftvfund_eff_date,
               ftvfund_nchg_date,
               fircuuv_market_value_date,
               fircuuv_next_valuation_date,
               ftvfund_pool_ind,
               ftvuvms_unit_value_base_curr,
               ftvuvms_eff_date,
               ftvuvms_nchg_date
        FROM   FTVFUND,
               FIRCUUV,
               FTVUVMS,
               FIBCUSP,
               FIBSTCK
        where   FIBSTCK_COAS_CODE = ftvfund_coas_code
          and   FTVFUND_FUND_CODE = FIBSTCK_FUND_CODE
          and   fibstck_cusip_number = fibcusp_cusip_number
          and   fibstck_cusip_number = fircuuv_cusip_number
          and   fibcusp_uvms_code = ftvuvms_uvms_code
      union (
	SELECT distinct fibbond_cusip_number,
               '',
               ftvfund_FUND_CODE,
               fibbond_coas_code,
               fibcusp_ivtp_code,
               fibbond_imgr_code_pidm,
               fircuuv_unit_market_value,
               fibcusp_eff_date,
               fibcusp_nchg_date,
               fibcusp_eff_date,
               fibcusp_nchg_date,
               ftvfund_eff_date,
               ftvfund_nchg_date,
               fircuuv_market_value_date,
               fircuuv_next_valuation_date,
               ftvfund_pool_ind,
               ftvuvms_unit_value_base_curr,
               ftvuvms_eff_date,
               ftvuvms_nchg_date
        FROM   ftvfund,
               FIRCUUV,
               FTVUVMS,
               fibcusp,
               fibbond
        where   fibbond_COAS_CODE = ftvfund_coas_code
          and   FTVFUND_FUND_CODE = fibbond_FUND_CODE
          and   fibbond_cusip_number = fibcusp_cusip_number
          and   fibbond_cusip_number = fircuuv_cusip_number
          and   fibcusp_uvms_code = ftvuvms_uvms_code
        )
        union (
	SELECT distinct fibstop_cusip_number,
               fibstop_os_cusip_number,
               ftvfund_FUND_CODE,
               fibstop_coas_code,
               stop.fibcusp_ivtp_code,
               fibstop_imgr_code_pidm,
               fircuuv_unit_market_value,
               stop.fibcusp_eff_date,
               stop.fibcusp_nchg_date,
               os.fibcusp_eff_date,
               os.fibcusp_nchg_date,
               ftvfund_eff_date,
               ftvfund_nchg_date,
               fircuuv_market_value_date,
               fircuuv_next_valuation_date ,
               ftvfund_pool_ind,
               ftvuvms_unit_value_base_curr,
               ftvuvms_eff_date,
               ftvuvms_nchg_date
        FROM
               ftvfund,
               FIRCUUV,
               FTVUVMS,
               fibcusp os,
               fibcusp stop,
               fibstop
        where   fibstop_COAS_CODE = ftvfund_coas_code
          and   FTVFUND_FUND_CODE = fibstop_FUND_CODE
          and   fibstop_os_cusip_number = os.fibcusp_cusip_number
          and   fibstop_cusip_number = stop.fibcusp_cusip_number
          and   fibstop_os_cusip_number = fircuuv_cusip_number
          and   os.fibcusp_uvms_code = ftvuvms_uvms_code
       )
      union (
	SELECT distinct fibprty_cusip_number,
               '',
               ftvfund_FUND_CODE,
               fibprty_coas_code,
               fibcusp_ivtp_code,
               fibprty_imgr_code_pidm,
               fircuuv_unit_market_value,
               fibcusp_eff_date,
               fibcusp_nchg_date,
               fibcusp_eff_date,
               fibcusp_nchg_date,
               ftvfund_eff_date,
               ftvfund_nchg_date,
               fircuuv_market_value_date,
               fircuuv_next_valuation_date,
               ftvfund_pool_ind,
               ftvuvms_unit_value_base_curr,
               ftvuvms_eff_date,
               ftvuvms_nchg_date
        FROM FTVFUND,
             FIRCUUV,
             FTVUVMS,
             FIBCUSP,
             FIBPRTY
        WHERE   FIBPRTY_COAS_CODE = FTVFUND_COAS_CODE
          AND   FTVFUND_FUND_CODE = FIBPRTY_FUND_CODE
          AND   FIBPRTY_CUSIP_NUMBER = FIBCUSP_CUSIP_NUMBER
          AND   FIBPRTY_CUSIP_NUMBER = FIRCUUV_CUSIP_NUMBER
          AND   FIBCUSP_UVMS_CODE = FTVUVMS_UVMS_CODE
      )
 "
"BANINST1","FIVCUDV","","SELECT rowid,
		     fircudv_cusip_number,
                     fircudv_dividend_payable_date,
                     fircudv_activity_date,
                     fircudv_ex_dividend_date,
                     fircudv_dividend_by_cash,
                     fircudv_dividend_by_split,
                     fircudv_dividend_by_stock,
                     fircudv_applied_date,
      		     fircudv_reverse_date
                FROM fircudv x
               WHERE fircudv_activity_date =
                     (SELECT MAX(fircudv_activity_date)
                        FROM fircudv y
                       WHERE y.fircudv_cusip_number = x.fircudv_cusip_number
                         AND y.fircudv_dividend_payable_date =
                             x.fircudv_dividend_payable_date)
 "
"BANINST1","FIVCASH","","SELECT DISTINCT GXVBANK_COAS_CODE,
                 GXVBANK_ACCT_CODE_INTERFUND
          FROM GXVBANK
 "
"BANINST1","FHDA_RPT_WEBTIME_RELATIONSHIPS","","select
  (spriden_first_name || ' ' || spriden_last_name || ', ' || spriden_id) as ""Student"",
  (nbbposn_posn || ', ' || nbbposn_title) as ""Position"",
  (select spriden_first_name || ' ' || spriden_last_name || ', ' || spriden_id from spriden where spriden_pidm = nbrrjqe_appr_pidm and spriden_change_ind is null) as ""Approver""
from 
  nbrrjqe,
  nbbposn,
  spriden
  
where
  spriden_pidm = nbrrjqe_pidm
  and spriden_change_ind is null
  and nbbposn_posn = nbrrjqe_posn
  and nbrrjqe_appr_action_ind = 'A'
  and nbrrjqe_appr_seq_no = 1

order by
  spriden_last_name asc"
"BANINST1","FHDA_RPT_WEBTIME_MISSINGAPPR","","select
  (spriden_first_name || ' ' || spriden_last_name || ', ' || spriden_id) as ""Students Missing Approvers"",
  (nbbposn_posn || ', ' || nbbposn_title) as ""Position""
from
  spriden sp,
  pebempl emp,
  nbrjobs jobs,
  nbbposn posn

where
  sp.spriden_change_ind is null
  and pebempl_pidm = sp.spriden_pidm
  and pebempl_ecls_code in ('S1', 'T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7')
  and not exists (select * from nbrrjqe where nbrrjqe_pidm = emp.pebempl_pidm)
  and nbrjobs_pidm = emp.pebempl_pidm
  and nbrjobs_status = 'A'
  and nbbposn_posn = nbrjobs_posn

order by
  spriden_last_name asc"
"BANINST1","FHDA_RPT_1099EXTRACT","","SELECT spriden_id AS ""Vendor ID"",
    (DECODE(spriden_first_name, NULL, spriden_last_name, (spriden_last_name
    || ', '
    || spriden_first_name))) AS ""Owner"",
    spriden_first_name as ""First Name"",
    spriden_last_name as ""Last Name"",
    fab1099_rpt_id           AS ""Tax ID"",
    (SELECT FTVVTYP_DESC FROM ftvvtyp WHERE ftvvtyp_code = ftvvent_vtyp_code
    ) AS ""Vendor Type"",
    (spraddr_street_line1
    || ' '
    || spraddr_street_line2)                 AS ""Address"",
    spraddr_city                             AS ""City"",
    spraddr_stat_code                        AS ""State"",
    spraddr_zip                              AS ""Zip"",
    fab1099_ityp_seq_code                    AS ""Income Type"",
    TO_CHAR(fab1099_rpt_amt, '999999999.99') AS ""Payment Amt."",
    fab1099_bank_code                        AS ""Bank Code"",
    fab1099_rpt_yr                           AS ""Report Year""
  FROM ftvvend,
    ftvvent,
    fab1099,
    spriden,
    spraddr,
    fabinvh
  WHERE ftvvent_pidm         = ftvvend_pidm
  AND ftvvent_vtyp_code     IN ('I', 'P', 'S')
  and ftvvend_vend_check_atyp_code  in ('AP', null)
  AND fab1099_vend_pidm      = ftvvent_pidm
  AND fab1099_bank_code NOT IN (19, 21, 49, 51)
  AND fab1099_rpt_yr        IN ('09')
  AND spriden_pidm           = f_fhda_1099_getownerpidm(ftvvend_pidm)
  AND spriden_change_ind    IS NULL
  AND spraddr_pidm           = spriden_pidm
    /* AND spraddr_seqno          = 1 */
  AND spraddr_atyp_code IN ('AP', NULL)
    /* AND spraddr_status_ind    IS NULL */
  AND (fab1099_check_date >= '01-JUL-09'
  AND fab1099_check_date   < '01-JAN-10')
  AND fabinvh_code         = fab1099_invh_code
  AND fabinvh_user_id NOT LIKE '05-07%'
  ORDER BY spriden_last_name ASC,
    fab1099_activity_date ASC"
"BANINST1","FGVTRNH","Transaction History Document List View.","SELECT DISTINCT
  fgbtrnh_doc_code,
  fgbtrnh_doc_seq_code,
  fgbtrnh_submission_number,
  (SELECT fgbtrnh_trans_desc
     FROM fgbtrnh a
    WHERE a.fgbtrnh_doc_code = b.fgbtrnh_doc_code
      AND a.fgbtrnh_doc_seq_code = b.fgbtrnh_doc_seq_code
      AND a.fgbtrnh_submission_number = b.fgbtrnh_submission_number
      AND ROWNUM = 1),
  trunc(fgbtrnh_trans_date),
  trunc(fgbtrnh_activity_date),
  fgbtrnh_cmt_type
FROM fgbtrnh b"
"BANINST1","FGVTRND","Detail Transaction Activity View.","SELECT
  fgbtrnd_coas_code,
  fgbtrnd_fsyr_code,
  fgbtrnd_submission_number,
  fgbtrnd_item_num,
  fgbtrnd_seq_num,
  fgbtrnd_field_code,
  decode(fgbtrnd_field_code,'01','OBD','02','ABD','03','YTD','04','ENC','05','RSV','07','TMP'),
  fgbtrnd_acct_code,
  fgbtrnd_prog_code,
  fgbtrnd_doc_seq_code,
  fgbtrnd_encd_num,
  fgbtrnd_reversal_ind,
  fgbtrnd_serial_num,
  fgbtrnd_orgn_code,
  fgbtrnd_activity_date,
  fgbtrnd_rucl_code,
  fgbtrnd_doc_code,
  fgbtrnd_cmt_type,
  fgbtrnd_fund_code,
  fgbtrnd_actv_code,
  fgbtrnd_locn_code,
  fgbtrnd_trans_amt,
  fgbtrnd_dr_cr_ind,
  fgbtrnd_ledger_ind,
  fgbtrnd_posting_period,
  fgbtrnh_trans_date,
  fgbtrnh_trans_desc
FROM fgbtrnd,
     fgbtrnh
WHERE fgbtrnd_doc_code = fgbtrnh_doc_code
  AND fgbtrnd_doc_seq_code = fgbtrnh_doc_seq_code
  AND fgbtrnd_submission_number = fgbtrnh_submission_number
  AND fgbtrnd_reversal_ind = fgbtrnh_reversal_ind
  AND fgbtrnd_item_num = fgbtrnh_item_num
  AND fgbtrnd_seq_num = fgbtrnh_seq_num
  AND fgbtrnd_serial_num = fgbtrnh_serial_num
  AND fgbtrnd_rucl_code = fgbtrnh_rucl_code"
"BANINST1","FGVTBL3","","SELECT FGBGENL_FSYR_CODE,
       FTVACCT_COAS_CODE,
       FTVACCT_ACCT_CODE,
       FTVACCT_TITLE,
       FTVACCT_NORMAL_BAL,
       FTVATYP_ATYP_CODE,
       FTVATYP_INTERNAL_ATYP_CODE,
       FTVATYP_ATYP_CODE_PRED,
       SUM(DECODE(FGBGENL_PERIOD,'00',
       NVL(FGBGENL_SUM_PERIODIC_DR,0) - NVL(FGBGENL_SUM_PERIODIC_CR,0), 0)),
       SUM(NVL(FGBGENL_SUM_PERIODIC_DR,0) - NVL(FGBGENL_SUM_PERIODIC_CR,0))
FROM   FGBGENL, FTVACCT, FTVATYP, FGRPARC
WHERE  FTVAtyp_COAS_CODE = FTVAcct_COAS_CODE
AND    FTVAtyp_ATYP_CODE = FTVAcct_ATYP_CODE
AND    FTVATYP_EFF_DATE <= SYSDATE
AND   (FTVATYP_NCHG_DATE IS NULL
OR     FTVATYP_NCHG_DATE > SYSDATE)
AND    FTVACCT_COAS_CODE = FGBGENL_COAS_CODE
AND    FTVACCT_ACCT_CODE = FGBGENL_ACCT_CODE
AND    FTVACCT_EFF_DATE <= SYSDATE
AND   (FTVACCT_NCHG_DATE IS NULL
        OR FTVACCT_NCHG_DATE > SYSDATE)
AND    FGBGENL_COAS_CODE    =  FGRPARC_COAS_CODE
AND    FGBGENL_FSYR_CODE    =  FGRPARC_FSYR_CODE
AND    FGRPARC_SESS_ID   = USERENV('SESSIONID')
AND   (FGBGENL_FUND_CODE IN (SELECT FTVFUND_FUND_CODE
                             FROM FTVFUND
                             CONNECT BY PRIOR FTVFUND_COAS_CODE=
                                              FTVFUND_COAS_CODE
                             AND PRIOR FTVFUND_FUND_CODE=
                                       FTVFUND_FUND_CODE_PRED
                             AND FTVFUND_EFF_DATE <= SYSDATE
                             AND FTVFUND_NCHG_DATE > SYSDATE
                             START WITH FTVFUND_COAS_CODE=FGRPARC_COAS_CODE
                             AND        FTVFUND_FUND_CODE=FGRPARC_FUND_CODE
                             AND        FTVFUND_EFF_DATE<=SYSDATE
                             AND        FTVFUND_NCHG_DATE > SYSDATE)
OR    FGBGENL_FUND_CODE IN (SELECT FTVFUND_FUND_CODE
                            FROM FTVFUND
                            WHERE FTVFUND_FTYP_CODE IN (
                                   SELECT FTVFTYP_FTYP_CODE
                                   FROM FTVFTYP
                                   WHERE (FTVFTYP_FTYP_CODE = FGRPARC_DOC_TYPE
                                   OR FTVFTYP_FTYP_CODE_PRED = FGRPARC_DOC_TYPE)
                                   AND FTVFTYP_COAS_CODE = FGRPARC_COAS_CODE
                                   AND FTVFTYP_EFF_DATE <= SYSDATE
                                   AND FTVFTYP_NCHG_DATE > SYSDATE)
                                   AND FTVFUND_COAS_CODE = FGRPARC_COAS_CODE
                                   AND FTVFUND_EFF_DATE <= SYSDATE
                                   AND FTVFUND_NCHG_DATE > SYSDATE)
         )
GROUP BY
       FGBGENL_FSYR_CODE,
       FTVACCT_COAS_CODE,
       FTVACCT_ACCT_CODE,
       FTVACCT_TITLE,
       FTVACCT_NORMAL_BAL,
       FTVATYP_ATYP_CODE,
       FTVATYP_INTERNAL_ATYP_CODE,
       FTVATYP_ATYP_CODE_PRED

 "
"BANINST1","FGVTBL2","General Ledger Current Balance View for Focus","SELECT fgbgenl_fsyr_code,
       FTVACCT_COAS_CODE,
       ftvfund_fund_code,
       ftvfund_title,
       FTVACCT_ACCT_CODE,
       ftvacct_title,
       FTVACCT_NORMAL_BAL,
       FTVATYP_ATYP_CODE,
       FTVATYP_INTERNAL_ATYP_CODE,
       FTVATYP_ATYP_CODE_PRED,
       fgbgenl_period,
       SUM(DECODE(FGBGENL_PERIOD,'00',
       NVL(FGBGENL_SUM_PERIODIC_DR,0) - NVL(FGBGENL_SUM_PERIODIC_CR,0), 0)),
       SUM(NVL(FGBGENL_SUM_PERIODIC_DR,0) - NVL(FGBGENL_SUM_PERIODIC_CR,0))
FROM  FGBGENL, FTVACCT, ftvfund,
      ftvftyp, FTVATYP
WHERE FTVAtyp_COAS_CODE = FTVAcct_COAS_CODE
AND   FTVAtyp_ATYP_CODE = FTVAcct_ATYP_CODE
AND   FTVATYP_EFF_DATE <= SYSDATE
and   FTVATYP_NCHG_DATE > SYSDATE
AND   FTVACCT_COAS_CODE = FGBGENL_COAS_CODE
AND   FTVACCT_ACCT_CODE = FGBGENL_ACCT_CODE
AND   FTVACCT_EFF_DATE <= SYSDATE
and   FTVACCT_NCHG_DATE > SYSDATE
and   FTVfund_COAS_CODE = FTVfund_COAS_CODE
AND   FTVfund_ftyp_CODE = FTVfund_fTYP_CODE
AND   FTVftyp_EFF_DATE <= SYSDATE
and   FTVftyp_NCHG_DATE > SYSDATE
AND   FTVfund_COAS_CODE = FGBGENL_COAS_CODE
AND   FTVfund_fund_CODE = FGBGENL_fund_CODE
AND   FTVfund_EFF_DATE <= SYSDATE
and   FTVfund_NCHG_DATE > SYSDATE
group by
       fgbgenl_fsyr_code,
       FTVACCT_COAS_CODE,
       ftvfund_fund_code,
       ftvfund_title,
       FTVACCT_ACCT_CODE,
       ftvacct_title,
       FTVACCT_NORMAL_BAL,
       FTVATYP_ATYP_CODE,
       FTVATYP_INTERNAL_ATYP_CODE,
       FTVATYP_ATYP_CODE_PRED,
       fgbgenl_period
 "
"BANINST1","FGVTBL1","","SELECT fgbgenl_fsyr_code,
       FTVACCT_COAS_CODE,
       fgbgenl_fund_code,
       FTVACCT_ACCT_CODE,
       ftvacct_title,
       FTVACCT_NORMAL_BAL,
       FTVATYP_ATYP_CODE,
       FTVATYP_INTERNAL_ATYP_CODE,
       FTVATYP_ATYP_CODE_PRED,
       SUM(DECODE(FGBGENL_PERIOD,'00',
       NVL(FGBGENL_SUM_PERIODIC_DR,0) - NVL(FGBGENL_SUM_PERIODIC_CR,0), 0)),
       SUM(NVL(FGBGENL_SUM_PERIODIC_DR,0) - NVL(FGBGENL_SUM_PERIODIC_CR,0))
FROM  FGBGENL, FTVACCT, FTVATYP, FGRPARC
WHERE FTVAtyp_COAS_CODE = FTVAcct_COAS_CODE
AND   FTVAtyp_ATYP_CODE = FTVAcct_ATYP_CODE
AND   FTVATYP_EFF_DATE <= NVL(fgrparc_trans_date,SYSDATE)
AND   (FTVATYP_NCHG_DATE IS NULL
        OR FTVATYP_NCHG_DATE > NVL(fgrparc_trans_date,SYSDATE))
AND   FTVACCT_COAS_CODE = FGBGENL_COAS_CODE
AND   FTVACCT_ACCT_CODE = FGBGENL_ACCT_CODE
AND   FTVACCT_EFF_DATE <= NVL(fgrparc_trans_date,SYSDATE)
AND   (FTVACCT_NCHG_DATE IS NULL
        OR FTVACCT_NCHG_DATE > NVL(fgrparc_trans_date,SYSDATE))
and   fgbgenl_coas_code    =  fgrparc_coas_code
and   fgbgenl_fsyr_code    =  fgrparc_fsyr_code
and   fgbgenl_fund_code    =  fgrparc_fund_code
and   fgrparc_sess_id      =  to_char(userenv('sessionid'))
group by
       fgbgenl_fsyr_code,
       FTVACCT_COAS_CODE,
       fgbgenl_fund_code,
       FTVACCT_ACCT_CODE,
       ftvacct_title,
       FTVACCT_NORMAL_BAL,
       FTVATYP_ATYP_CODE,
       FTVATYP_INTERNAL_ATYP_CODE,
       FTVATYP_ATYP_CODE_PRED
"
"BANINST1","FGVTBAL","","SELECT      FTVACCT_COAS_CODE,
               FTVACCT_ACCT_CODE,
               FTVACCT_NORMAL_BAL,
               FTVATYP_ATYP_CODE, FTVATYP_INTERNAL_ATYP_CODE,
               FTVATYP_ATYP_CODE_PRED
FROM FTVACCT, FTVATYP
WHERE FTVACCT_ACCT_CODE IN
     (SELECT FGBGENL_ACCT_CODE FROM FGBGENL
      WHERE FTVACCT_ACCT_CODE = FGBGENL_ACCT_CODE
      AND   FTVACCT_COAS_CODE = FGBGENL_COAS_CODE)
AND   FTVACCT_EFF_DATE <= SYSDATE
AND   (FTVACCT_NCHG_DATE IS NULL
        OR FTVACCT_NCHG_DATE > SYSDATE)
AND   FTVACCT_ATYP_CODE = FTVATYP_ATYP_CODE
AND   FTVATYP_COAS_CODE = FTVACCT_COAS_CODE
AND   FTVATYP_EFF_DATE <= SYSDATE
AND   (FTVATYP_NCHG_DATE IS NULL
        OR FTVATYP_NCHG_DATE > SYSDATE)

 "
"BANINST1","FGVOPQ2","","select  fgbopal_coas_code,
        fgbopal_fsyr_code,
        a.ftvfspd_fspd_code,
        a.ftvfspd_prd_end_date,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code,
        sum(fgbopal_14_adopt_bud),
        sum(fgbopal_14_bud_adjt),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_adopt_bud,
            '02', fgbopal_02_adopt_bud,
            '03', fgbopal_03_adopt_bud,
            '04', fgbopal_04_adopt_bud,
            '05', fgbopal_05_adopt_bud,
            '06', fgbopal_06_adopt_bud,
            '07', fgbopal_07_adopt_bud,
            '08', fgbopal_08_adopt_bud,
            '09', fgbopal_09_adopt_bud,
            '10', fgbopal_10_adopt_bud,
            '11', fgbopal_11_adopt_bud,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_adopt_bud,
                               fgbopal_12_adopt_bud),
            '13', fgbopal_14_adopt_bud)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_adjt,
            '02', fgbopal_02_bud_adjt,
            '03', fgbopal_03_bud_adjt,
            '04', fgbopal_04_bud_adjt,
            '05', fgbopal_05_bud_adjt,
            '06', fgbopal_06_bud_adjt,
            '07', fgbopal_07_bud_adjt,
            '08', fgbopal_08_bud_adjt,
            '09', fgbopal_09_bud_adjt,
            '10', fgbopal_10_bud_adjt,
            '11', fgbopal_11_bud_adjt,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_bud_adjt,
                               fgbopal_12_bud_adjt),
            '13', fgbopal_14_bud_adjt)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv,
            '02', fgbopal_02_ytd_actv,
            '03', fgbopal_03_ytd_actv,
            '04', fgbopal_04_ytd_actv,
            '05', fgbopal_05_ytd_actv,
            '06', fgbopal_06_ytd_actv,
            '07', fgbopal_07_ytd_actv,
            '08', fgbopal_08_ytd_actv,
            '09', fgbopal_09_ytd_actv,
            '10', fgbopal_10_ytd_actv,
            '11', fgbopal_11_ytd_actv,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_ytd_actv,
                               fgbopal_12_ytd_actv),
            '13', fgbopal_14_ytd_actv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb,
            '02', fgbopal_02_encumb,
            '03', fgbopal_03_encumb,
            '04', fgbopal_04_encumb,
            '05', fgbopal_05_encumb,
            '06', fgbopal_06_encumb,
            '07', fgbopal_07_encumb,
            '08', fgbopal_08_encumb,
            '09', fgbopal_09_encumb,
            '10', fgbopal_10_encumb,
            '11', fgbopal_11_encumb,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_encumb,
                               fgbopal_12_encumb),
            '13', fgbopal_14_encumb)) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv,
            '02', fgbopal_02_bud_rsrv,
            '03', fgbopal_03_bud_rsrv,
            '04', fgbopal_04_bud_rsrv,
            '05', fgbopal_05_bud_rsrv,
            '06', fgbopal_06_bud_rsrv,
            '07', fgbopal_07_bud_rsrv,
            '08', fgbopal_08_bud_rsrv,
            '09', fgbopal_09_bud_rsrv,
            '10', fgbopal_10_bud_rsrv,
            '11', fgbopal_11_bud_rsrv,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_bud_rsrv,
                               fgbopal_12_bud_rsrv),
            '13', fgbopal_14_bud_rsrv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_acctd_bud - fgbopal_00_acctd_bud,
            '02', fgbopal_02_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                              fgbopal_00_acctd_bud),
            '03', fgbopal_03_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                              fgbopal_00_acctd_bud),
            '04', fgbopal_04_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                              fgbopal_00_acctd_bud),
            '05', fgbopal_05_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                              fgbopal_00_acctd_bud),
            '06', fgbopal_06_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                              fgbopal_00_acctd_bud),
            '07', fgbopal_07_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                              fgbopal_00_acctd_bud),
            '08', fgbopal_08_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                              fgbopal_00_acctd_bud),
            '09', fgbopal_09_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                              fgbopal_00_acctd_bud),
            '10', fgbopal_10_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                              fgbopal_00_acctd_bud),
            '11', fgbopal_11_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                              fgbopal_00_acctd_bud),
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_acctd_bud,
                               fgbopal_12_acctd_bud) -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                        '11', fgbopal_11_acctd_bud,
                              fgbopal_00_acctd_bud),
            '13', fgbopal_14_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                        '11', fgbopal_11_acctd_bud,
                        '12', fgbopal_12_acctd_bud,
                              fgbopal_00_acctd_bud) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv - fgbopal_00_ytd_actv,
            '02', fgbopal_02_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                              fgbopal_00_ytd_actv),
            '03', fgbopal_03_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                              fgbopal_00_ytd_actv),
            '04', fgbopal_04_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                              fgbopal_00_ytd_actv),
            '05', fgbopal_05_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                              fgbopal_00_ytd_actv),
            '06', fgbopal_06_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                              fgbopal_00_ytd_actv),
            '07', fgbopal_07_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                              fgbopal_00_ytd_actv),
            '08', fgbopal_08_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                              fgbopal_00_ytd_actv),
            '09', fgbopal_09_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                              fgbopal_00_ytd_actv),
            '10', fgbopal_10_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                              fgbopal_00_ytd_actv),
            '11', fgbopal_11_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                              fgbopal_00_ytd_actv),
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_ytd_actv,
                               fgbopal_12_ytd_actv) -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                        '11', fgbopal_11_ytd_actv,
                              fgbopal_00_ytd_actv),
            '13', fgbopal_14_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                        '11', fgbopal_11_ytd_actv,
                        '12', fgbopal_12_ytd_actv,
                              fgbopal_00_ytd_actv) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb - fgbopal_00_encumb,
            '02', fgbopal_02_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                              fgbopal_00_encumb),
            '03', fgbopal_03_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                              fgbopal_00_encumb),
            '04', fgbopal_04_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                              fgbopal_00_encumb),
            '05', fgbopal_05_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                              fgbopal_00_encumb),
            '06', fgbopal_06_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                              fgbopal_00_encumb),
            '07', fgbopal_07_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                              fgbopal_00_encumb),
            '08', fgbopal_08_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                              fgbopal_00_encumb),
            '09', fgbopal_09_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                              fgbopal_00_encumb),
            '10', fgbopal_10_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                              fgbopal_00_encumb),
            '11', fgbopal_11_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                              fgbopal_00_encumb),
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_encumb,
                               fgbopal_12_encumb) -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                        '11', fgbopal_11_encumb,
                              fgbopal_00_encumb),
            '13', fgbopal_14_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                        '11', fgbopal_11_encumb,
                        '12', fgbopal_12_encumb,
                              fgbopal_00_encumb) )) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv - fgbopal_00_bud_rsrv,
            '02', fgbopal_02_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '03', fgbopal_03_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '04', fgbopal_04_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '05', fgbopal_05_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '06', fgbopal_06_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '07', fgbopal_07_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '08', fgbopal_08_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '09', fgbopal_09_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '10', fgbopal_10_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '11', fgbopal_11_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_bud_rsrv,
                               fgbopal_12_bud_rsrv) -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                        '11', fgbopal_11_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '13', fgbopal_14_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                        '11', fgbopal_11_bud_rsrv,
                        '12', fgbopal_12_bud_rsrv,
                              fgbopal_00_bud_rsrv) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_acctd_bud - fgbopal_00_acctd_bud,
            '02', fgbopal_02_acctd_bud - fgbopal_01_acctd_bud,
            '03', fgbopal_03_acctd_bud - fgbopal_02_acctd_bud,
            '04', fgbopal_04_acctd_bud - fgbopal_03_acctd_bud,
            '05', fgbopal_05_acctd_bud - fgbopal_04_acctd_bud,
            '06', fgbopal_06_acctd_bud - fgbopal_05_acctd_bud,
            '07', fgbopal_07_acctd_bud - fgbopal_06_acctd_bud,
            '08', fgbopal_08_acctd_bud - fgbopal_07_acctd_bud,
            '09', fgbopal_09_acctd_bud - fgbopal_08_acctd_bud,
            '10', fgbopal_10_acctd_bud - fgbopal_09_acctd_bud,
            '11', fgbopal_11_acctd_bud - fgbopal_10_acctd_bud,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_acctd_bud,
                               fgbopal_12_acctd_bud)
                                       - fgbopal_11_acctd_bud,
            '13', fgbopal_14_acctd_bud - fgbopal_12_acctd_bud)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv - fgbopal_00_ytd_actv,
            '02', fgbopal_02_ytd_actv - fgbopal_01_ytd_actv,
            '03', fgbopal_03_ytd_actv - fgbopal_02_ytd_actv,
            '04', fgbopal_04_ytd_actv - fgbopal_03_ytd_actv,
            '05', fgbopal_05_ytd_actv - fgbopal_04_ytd_actv,
            '06', fgbopal_06_ytd_actv - fgbopal_05_ytd_actv,
            '07', fgbopal_07_ytd_actv - fgbopal_06_ytd_actv,
            '08', fgbopal_08_ytd_actv - fgbopal_07_ytd_actv,
            '09', fgbopal_09_ytd_actv - fgbopal_08_ytd_actv,
            '10', fgbopal_10_ytd_actv - fgbopal_09_ytd_actv,
            '11', fgbopal_11_ytd_actv - fgbopal_10_ytd_actv,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_ytd_actv,
                               fgbopal_12_ytd_actv)
                                       - fgbopal_11_ytd_actv,
            '13', fgbopal_14_ytd_actv - fgbopal_12_ytd_actv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb - fgbopal_00_encumb,
            '02', fgbopal_02_encumb - fgbopal_01_encumb,
            '03', fgbopal_03_encumb - fgbopal_02_encumb,
            '04', fgbopal_04_encumb - fgbopal_03_encumb,
            '05', fgbopal_05_encumb - fgbopal_04_encumb,
            '06', fgbopal_06_encumb - fgbopal_05_encumb,
            '07', fgbopal_07_encumb - fgbopal_06_encumb,
            '08', fgbopal_08_encumb - fgbopal_07_encumb,
            '09', fgbopal_09_encumb - fgbopal_08_encumb,
            '10', fgbopal_10_encumb - fgbopal_09_encumb,
            '11', fgbopal_11_encumb - fgbopal_10_encumb,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_encumb,
                               fgbopal_12_encumb)
                                       - fgbopal_11_encumb,
            '13', fgbopal_14_encumb - fgbopal_12_encumb)) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv - fgbopal_00_bud_rsrv,
            '02', fgbopal_02_bud_rsrv - fgbopal_01_bud_rsrv,
            '03', fgbopal_03_bud_rsrv - fgbopal_02_bud_rsrv,
            '04', fgbopal_04_bud_rsrv - fgbopal_03_bud_rsrv,
            '05', fgbopal_05_bud_rsrv - fgbopal_04_bud_rsrv,
            '06', fgbopal_06_bud_rsrv - fgbopal_05_bud_rsrv,
            '07', fgbopal_07_bud_rsrv - fgbopal_06_bud_rsrv,
            '08', fgbopal_08_bud_rsrv - fgbopal_07_bud_rsrv,
            '09', fgbopal_09_bud_rsrv - fgbopal_08_bud_rsrv,
            '10', fgbopal_10_bud_rsrv - fgbopal_09_bud_rsrv,
            '11', fgbopal_11_bud_rsrv - fgbopal_10_bud_rsrv,
            '12', decode(ftvfsyr_last_period,
                         '12', fgbopal_14_bud_rsrv,
                               fgbopal_12_bud_rsrv)
                                       - fgbopal_11_bud_rsrv,
            '13', fgbopal_14_bud_rsrv - fgbopal_12_bud_rsrv))
from    ftvfspd a,
        ftvfspd b,
        ftvfsyr,
        fgbopal
where   a.ftvfspd_coas_code = fgbopal_coas_code
and     a.ftvfspd_fsyr_code = fgbopal_fsyr_code
and     b.rowid(+) =
            f_prior_eoq_rowid(
                a.ftvfspd_coas_code,
                a.ftvfspd_fsyr_code,
                a.ftvfspd_fspd_code)
and     ftvfsyr_coas_code   = fgbopal_coas_code
and     ftvfsyr_fsyr_code   = fgbopal_fsyr_code
group by
        fgbopal_coas_code,
        fgbopal_fsyr_code,
        a.ftvfspd_fspd_code,
        a.ftvfspd_prd_end_date,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code
 "
"BANINST1","FGVOPQ1","","select  fgvopq2_coas_code,
        fgvopq2_fsyr_code,
        fgvopq2_fspd_code,
        fgvopq2_prd_end_date,
        substr(f_get_acci
            ('O',fgvopq2_coas_code,null,null,fgvopq2_fund_code,
             fgvopq2_orgn_code,fgvopq2_acct_code,fgvopq2_prog_code,
             fgvopq2_prd_end_date),1,50),
        fgvopq2_fund_code,
        ftvfund_fund_code_bavl,
        fgvopq2_orgn_code,
        ftvorgn_orgn_code_nsf,
        fgvopq2_acct_code,
        ftvacct_acct_code_pool,
        fgvopq2_prog_code,
        substr(f_coa_hierarchy
            ('FTYP',fgvopq2_coas_code,ftvfund_ftyp_code,null,
                    null,fgvopq2_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('FUND',fgvopq2_coas_code,fgvopq2_fund_code,null,
                    null,fgvopq2_prd_end_date),1,250),
        substr(f_coa_hierarchy
            ('ORGN',fgvopq2_coas_code,fgvopq2_orgn_code,null,
                    null,fgvopq2_prd_end_date),1,400),
        substr(f_coa_hierarchy
            ('ATYP',fgvopq2_coas_code,ftvacct_atyp_code,null,
                    null,fgvopq2_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('ACCT',fgvopq2_coas_code,fgvopq2_acct_code,null,
                    null,fgvopq2_prd_end_date),1,200),
        substr(f_coa_hierarchy
            ('PROG',fgvopq2_coas_code,fgvopq2_prog_code,null,
                    null,fgvopq2_prd_end_date),1,250),
        fgvopq2_ann_budg_orig,
        fgvopq2_ann_budg_adjust,
        fgvopq2_ytd_budg_orig,
        fgvopq2_ytd_budg_adjust,
        fgvopq2_ytd_actual,
        fgvopq2_ytd_commitments,
        fgvopq2_qtd_budg_change,
        fgvopq2_qtd_actual,
        fgvopq2_qtd_commitments,
        fgvopq2_cpd_budg_change,
        fgvopq2_cpd_actual,
        fgvopq2_cpd_commitments
from    ftvfund,
        ftvorgn,
        ftvacct,
        fgvopq2
where   ftvfund_coas_code = fgvopq2_coas_code
and     ftvfund_fund_code = fgvopq2_fund_code
and     ftvfund_eff_date <= fgvopq2_prd_end_date
and     ftvfund_nchg_date > fgvopq2_prd_end_date
and     ftvorgn_coas_code = fgvopq2_coas_code
and     ftvorgn_orgn_code = fgvopq2_orgn_code
and     ftvorgn_eff_date <= fgvopq2_prd_end_date
and     ftvorgn_nchg_date > fgvopq2_prd_end_date
and     ftvacct_coas_code = fgvopq2_coas_code
and     ftvacct_acct_code = fgvopq2_acct_code
and     ftvacct_eff_date <= fgvopq2_prd_end_date
and     ftvacct_nchg_date > fgvopq2_prd_end_date
 "
"BANINST1","FGVOPQ0","Web for Executives Operating Ledger 01-13 Including Accruals View","select  'B',
        fgvopq1_coas_code,
        substr(to_char(to_date(fgvopq1_fsyr_code,'RR'),'YYYY'),1,4),
        substr(f_calc_quarter
            (fgvopq1_coas_code,fgvopq1_fsyr_code,fgvopq1_fspd_code),1,1),
        fgvopq1_fspd_code,
        fgvopq1_prd_end_date,
        substr(f_split_fields(fgvopq1_concat_acci,1),1,6),
        fgvopq1_fund_code,
        fgvopq1_orgn_code,
        fgvopq1_acct_code,
        fgvopq1_prog_code,
        substr(f_split_fields(fgvopq1_concat_ftyp_hier,1),1,2),
        substr(f_split_fields(fgvopq1_concat_ftyp_hier,4),1,2),
        substr(f_split_fields(fgvopq1_concat_fund_hier,1),1,6),
        substr(f_split_fields(fgvopq1_concat_fund_hier,4),1,6),
        substr(f_split_fields(fgvopq1_concat_fund_hier,7),1,6),
        substr(f_split_fields(fgvopq1_concat_fund_hier,10),1,6),
        substr(f_split_fields(fgvopq1_concat_fund_hier,13),1,6),
        nvl(fgvopq1_fund_code_bavl,fgvopq1_fund_code),
        substr(f_split_fields(fgvopq1_concat_orgn_hier,1),1,6),
        substr(f_split_fields(fgvopq1_concat_orgn_hier,4),1,6),
        substr(f_split_fields(fgvopq1_concat_orgn_hier,7),1,6),
        substr(f_split_fields(fgvopq1_concat_orgn_hier,10),1,6),
        substr(f_split_fields(fgvopq1_concat_orgn_hier,13),1,6),
        substr(f_split_fields(fgvopq1_concat_orgn_hier,16),1,6),
        substr(f_split_fields(fgvopq1_concat_orgn_hier,19),1,6),
        substr(f_split_fields(fgvopq1_concat_orgn_hier,22),1,6),
        nvl(fgvopq1_orgn_code_nsf,fgvopq1_orgn_code),
        substr(f_split_fields(fgvopq1_concat_atyp_hier,1),1,2),
        substr(f_split_fields(fgvopq1_concat_atyp_hier,4),1,2),
        substr(f_split_fields(fgvopq1_concat_acct_hier,1),1,6),
        substr(f_split_fields(fgvopq1_concat_acct_hier,4),1,6),
        substr(f_split_fields(fgvopq1_concat_acct_hier,7),1,6),
        substr(f_split_fields(fgvopq1_concat_acct_hier,10),1,6),
        nvl(fgvopq1_acct_code_pool,fgvopq1_acct_code),
        substr(f_split_fields(fgvopq1_concat_prog_hier,1),1,6),
        substr(f_split_fields(fgvopq1_concat_prog_hier,4),1,6),
        substr(f_split_fields(fgvopq1_concat_prog_hier,7),1,6),
        substr(f_split_fields(fgvopq1_concat_prog_hier,10),1,6),
        substr(f_split_fields(fgvopq1_concat_prog_hier,13),1,6),
        fgvopq1_ann_budg_orig,
        fgvopq1_ann_budg_adjust,
        fgvopq1_ytd_budg_orig,
        fgvopq1_ytd_budg_adjust,
        fgvopq1_ytd_actual,
        fgvopq1_ytd_commitments,
        fgvopq1_qtd_budg_change,
        fgvopq1_qtd_actual,
        fgvopq1_qtd_commitments,
        fgvopq1_cpd_budg_change,
        fgvopq1_cpd_actual,
        fgvopq1_cpd_commitments
from    fgvopq1
 "
"BANINST1","FGVOPP2","","select  fgbopal_coas_code,
        fgbopal_fsyr_code,
        a.ftvfspd_fspd_code,
        a.ftvfspd_prd_end_date,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code,
        sum(fgbopal_13_adopt_bud),
        sum(fgbopal_13_bud_adjt),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_adopt_bud,
            '02', fgbopal_02_adopt_bud,
            '03', fgbopal_03_adopt_bud,
            '04', fgbopal_04_adopt_bud,
            '05', fgbopal_05_adopt_bud,
            '06', fgbopal_06_adopt_bud,
            '07', fgbopal_07_adopt_bud,
            '08', fgbopal_08_adopt_bud,
            '09', fgbopal_09_adopt_bud,
            '10', fgbopal_10_adopt_bud,
            '11', fgbopal_11_adopt_bud,
            '12', fgbopal_12_adopt_bud,
            '13', fgbopal_13_adopt_bud)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_adjt,
            '02', fgbopal_02_bud_adjt,
            '03', fgbopal_03_bud_adjt,
            '04', fgbopal_04_bud_adjt,
            '05', fgbopal_05_bud_adjt,
            '06', fgbopal_06_bud_adjt,
            '07', fgbopal_07_bud_adjt,
            '08', fgbopal_08_bud_adjt,
            '09', fgbopal_09_bud_adjt,
            '10', fgbopal_10_bud_adjt,
            '11', fgbopal_11_bud_adjt,
            '12', fgbopal_12_bud_adjt,
            '13', fgbopal_13_bud_adjt)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv,
            '02', fgbopal_02_ytd_actv,
            '03', fgbopal_03_ytd_actv,
            '04', fgbopal_04_ytd_actv,
            '05', fgbopal_05_ytd_actv,
            '06', fgbopal_06_ytd_actv,
            '07', fgbopal_07_ytd_actv,
            '08', fgbopal_08_ytd_actv,
            '09', fgbopal_09_ytd_actv,
            '10', fgbopal_10_ytd_actv,
            '11', fgbopal_11_ytd_actv,
            '12', fgbopal_12_ytd_actv,
            '13', fgbopal_13_ytd_actv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb,
            '02', fgbopal_02_encumb,
            '03', fgbopal_03_encumb,
            '04', fgbopal_04_encumb,
            '05', fgbopal_05_encumb,
            '06', fgbopal_06_encumb,
            '07', fgbopal_07_encumb,
            '08', fgbopal_08_encumb,
            '09', fgbopal_09_encumb,
            '10', fgbopal_10_encumb,
            '11', fgbopal_11_encumb,
            '12', fgbopal_12_encumb,
            '13', fgbopal_13_encumb)) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv,
            '02', fgbopal_02_bud_rsrv,
            '03', fgbopal_03_bud_rsrv,
            '04', fgbopal_04_bud_rsrv,
            '05', fgbopal_05_bud_rsrv,
            '06', fgbopal_06_bud_rsrv,
            '07', fgbopal_07_bud_rsrv,
            '08', fgbopal_08_bud_rsrv,
            '09', fgbopal_09_bud_rsrv,
            '10', fgbopal_10_bud_rsrv,
            '11', fgbopal_11_bud_rsrv,
            '12', fgbopal_12_bud_rsrv,
            '13', fgbopal_13_bud_rsrv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_acctd_bud - fgbopal_00_acctd_bud,
            '02', fgbopal_02_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                              fgbopal_00_acctd_bud),
            '03', fgbopal_03_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                              fgbopal_00_acctd_bud),
            '04', fgbopal_04_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                              fgbopal_00_acctd_bud),
            '05', fgbopal_05_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                              fgbopal_00_acctd_bud),
            '06', fgbopal_06_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                              fgbopal_00_acctd_bud),
            '07', fgbopal_07_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                              fgbopal_00_acctd_bud),
            '08', fgbopal_08_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                              fgbopal_00_acctd_bud),
            '09', fgbopal_09_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                              fgbopal_00_acctd_bud),
            '10', fgbopal_10_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                              fgbopal_00_acctd_bud),
            '11', fgbopal_11_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                              fgbopal_00_acctd_bud),
            '12', fgbopal_12_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                        '11', fgbopal_11_acctd_bud,
                              fgbopal_00_acctd_bud),
            '13', fgbopal_13_acctd_bud -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_acctd_bud,
                        '02', fgbopal_02_acctd_bud,
                        '03', fgbopal_03_acctd_bud,
                        '04', fgbopal_04_acctd_bud,
                        '05', fgbopal_05_acctd_bud,
                        '06', fgbopal_06_acctd_bud,
                        '07', fgbopal_07_acctd_bud,
                        '08', fgbopal_08_acctd_bud,
                        '09', fgbopal_09_acctd_bud,
                        '10', fgbopal_10_acctd_bud,
                        '11', fgbopal_11_acctd_bud,
                        '12', fgbopal_12_acctd_bud,
                              fgbopal_00_acctd_bud) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv - fgbopal_00_ytd_actv,
            '02', fgbopal_02_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                              fgbopal_00_ytd_actv),
            '03', fgbopal_03_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                              fgbopal_00_ytd_actv),
            '04', fgbopal_04_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                              fgbopal_00_ytd_actv),
            '05', fgbopal_05_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                              fgbopal_00_ytd_actv),
            '06', fgbopal_06_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                              fgbopal_00_ytd_actv),
            '07', fgbopal_07_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                              fgbopal_00_ytd_actv),
            '08', fgbopal_08_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                              fgbopal_00_ytd_actv),
            '09', fgbopal_09_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                              fgbopal_00_ytd_actv),
            '10', fgbopal_10_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                              fgbopal_00_ytd_actv),
            '11', fgbopal_11_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                              fgbopal_00_ytd_actv),
            '12', fgbopal_12_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                        '11', fgbopal_11_ytd_actv,
                              fgbopal_00_ytd_actv),
            '13', fgbopal_13_ytd_actv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_ytd_actv,
                        '02', fgbopal_02_ytd_actv,
                        '03', fgbopal_03_ytd_actv,
                        '04', fgbopal_04_ytd_actv,
                        '05', fgbopal_05_ytd_actv,
                        '06', fgbopal_06_ytd_actv,
                        '07', fgbopal_07_ytd_actv,
                        '08', fgbopal_08_ytd_actv,
                        '09', fgbopal_09_ytd_actv,
                        '10', fgbopal_10_ytd_actv,
                        '11', fgbopal_11_ytd_actv,
                        '12', fgbopal_12_ytd_actv,
                              fgbopal_00_ytd_actv) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb - fgbopal_00_encumb,
            '02', fgbopal_02_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                              fgbopal_00_encumb),
            '03', fgbopal_03_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                              fgbopal_00_encumb),
            '04', fgbopal_04_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                              fgbopal_00_encumb),
            '05', fgbopal_05_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                              fgbopal_00_encumb),
            '06', fgbopal_06_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                              fgbopal_00_encumb),
            '07', fgbopal_07_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                              fgbopal_00_encumb),
            '08', fgbopal_08_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                              fgbopal_00_encumb),
            '09', fgbopal_09_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                              fgbopal_00_encumb),
            '10', fgbopal_10_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                              fgbopal_00_encumb),
            '11', fgbopal_11_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                              fgbopal_00_encumb),
            '12', fgbopal_12_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                        '11', fgbopal_11_encumb,
                              fgbopal_00_encumb),
            '13', fgbopal_13_encumb -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_encumb,
                        '02', fgbopal_02_encumb,
                        '03', fgbopal_03_encumb,
                        '04', fgbopal_04_encumb,
                        '05', fgbopal_05_encumb,
                        '06', fgbopal_06_encumb,
                        '07', fgbopal_07_encumb,
                        '08', fgbopal_08_encumb,
                        '09', fgbopal_09_encumb,
                        '10', fgbopal_10_encumb,
                        '11', fgbopal_11_encumb,
                        '12', fgbopal_12_encumb,
                              fgbopal_00_encumb) )) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv - fgbopal_00_bud_rsrv,
            '02', fgbopal_02_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '03', fgbopal_03_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '04', fgbopal_04_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '05', fgbopal_05_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '06', fgbopal_06_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '07', fgbopal_07_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '08', fgbopal_08_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '09', fgbopal_09_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '10', fgbopal_10_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '11', fgbopal_11_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '12', fgbopal_12_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                        '11', fgbopal_11_bud_rsrv,
                              fgbopal_00_bud_rsrv),
            '13', fgbopal_13_bud_rsrv -
                    decode(b.ftvfspd_fspd_code,
                        '01', fgbopal_01_bud_rsrv,
                        '02', fgbopal_02_bud_rsrv,
                        '03', fgbopal_03_bud_rsrv,
                        '04', fgbopal_04_bud_rsrv,
                        '05', fgbopal_05_bud_rsrv,
                        '06', fgbopal_06_bud_rsrv,
                        '07', fgbopal_07_bud_rsrv,
                        '08', fgbopal_08_bud_rsrv,
                        '09', fgbopal_09_bud_rsrv,
                        '10', fgbopal_10_bud_rsrv,
                        '11', fgbopal_11_bud_rsrv,
                        '12', fgbopal_12_bud_rsrv,
                              fgbopal_00_bud_rsrv) )),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_acctd_bud - fgbopal_00_acctd_bud,
            '02', fgbopal_02_acctd_bud - fgbopal_01_acctd_bud,
            '03', fgbopal_03_acctd_bud - fgbopal_02_acctd_bud,
            '04', fgbopal_04_acctd_bud - fgbopal_03_acctd_bud,
            '05', fgbopal_05_acctd_bud - fgbopal_04_acctd_bud,
            '06', fgbopal_06_acctd_bud - fgbopal_05_acctd_bud,
            '07', fgbopal_07_acctd_bud - fgbopal_06_acctd_bud,
            '08', fgbopal_08_acctd_bud - fgbopal_07_acctd_bud,
            '09', fgbopal_09_acctd_bud - fgbopal_08_acctd_bud,
            '10', fgbopal_10_acctd_bud - fgbopal_09_acctd_bud,
            '11', fgbopal_11_acctd_bud - fgbopal_10_acctd_bud,
            '12', fgbopal_12_acctd_bud - fgbopal_11_acctd_bud,
            '13', fgbopal_13_acctd_bud - fgbopal_12_acctd_bud)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_ytd_actv - fgbopal_00_ytd_actv,
            '02', fgbopal_02_ytd_actv - fgbopal_01_ytd_actv,
            '03', fgbopal_03_ytd_actv - fgbopal_02_ytd_actv,
            '04', fgbopal_04_ytd_actv - fgbopal_03_ytd_actv,
            '05', fgbopal_05_ytd_actv - fgbopal_04_ytd_actv,
            '06', fgbopal_06_ytd_actv - fgbopal_05_ytd_actv,
            '07', fgbopal_07_ytd_actv - fgbopal_06_ytd_actv,
            '08', fgbopal_08_ytd_actv - fgbopal_07_ytd_actv,
            '09', fgbopal_09_ytd_actv - fgbopal_08_ytd_actv,
            '10', fgbopal_10_ytd_actv - fgbopal_09_ytd_actv,
            '11', fgbopal_11_ytd_actv - fgbopal_10_ytd_actv,
            '12', fgbopal_12_ytd_actv - fgbopal_11_ytd_actv,
            '13', fgbopal_13_ytd_actv - fgbopal_12_ytd_actv)),
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_encumb - fgbopal_00_encumb,
            '02', fgbopal_02_encumb - fgbopal_01_encumb,
            '03', fgbopal_03_encumb - fgbopal_02_encumb,
            '04', fgbopal_04_encumb - fgbopal_03_encumb,
            '05', fgbopal_05_encumb - fgbopal_04_encumb,
            '06', fgbopal_06_encumb - fgbopal_05_encumb,
            '07', fgbopal_07_encumb - fgbopal_06_encumb,
            '08', fgbopal_08_encumb - fgbopal_07_encumb,
            '09', fgbopal_09_encumb - fgbopal_08_encumb,
            '10', fgbopal_10_encumb - fgbopal_09_encumb,
            '11', fgbopal_11_encumb - fgbopal_10_encumb,
            '12', fgbopal_12_encumb - fgbopal_11_encumb,
            '13', fgbopal_13_encumb - fgbopal_12_encumb)) +
        sum(decode(a.ftvfspd_fspd_code,
            '01', fgbopal_01_bud_rsrv - fgbopal_00_bud_rsrv,
            '02', fgbopal_02_bud_rsrv - fgbopal_01_bud_rsrv,
            '03', fgbopal_03_bud_rsrv - fgbopal_02_bud_rsrv,
            '04', fgbopal_04_bud_rsrv - fgbopal_03_bud_rsrv,
            '05', fgbopal_05_bud_rsrv - fgbopal_04_bud_rsrv,
            '06', fgbopal_06_bud_rsrv - fgbopal_05_bud_rsrv,
            '07', fgbopal_07_bud_rsrv - fgbopal_06_bud_rsrv,
            '08', fgbopal_08_bud_rsrv - fgbopal_07_bud_rsrv,
            '09', fgbopal_09_bud_rsrv - fgbopal_08_bud_rsrv,
            '10', fgbopal_10_bud_rsrv - fgbopal_09_bud_rsrv,
            '11', fgbopal_11_bud_rsrv - fgbopal_10_bud_rsrv,
            '12', fgbopal_12_bud_rsrv - fgbopal_11_bud_rsrv,
            '13', fgbopal_13_bud_rsrv - fgbopal_12_bud_rsrv))
from    ftvfspd a,
        ftvfspd b,
        fgbopal
where   a.ftvfspd_coas_code = fgbopal_coas_code
and     a.ftvfspd_fsyr_code = fgbopal_fsyr_code
and     b.rowid(+) =
            f_prior_eoq_rowid(
                a.ftvfspd_coas_code,
                a.ftvfspd_fsyr_code,
                a.ftvfspd_fspd_code)
group by
        fgbopal_coas_code,
        fgbopal_fsyr_code,
        a.ftvfspd_fspd_code,
        a.ftvfspd_prd_end_date,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code
 "
"BANINST1","FGVOPP1","","select  fgvopp2_coas_code,
        fgvopp2_fsyr_code,
        fgvopp2_fspd_code,
        fgvopp2_prd_end_date,
        substr(f_get_acci
            ('O',fgvopp2_coas_code,null,null,fgvopp2_fund_code,
             fgvopp2_orgn_code,fgvopp2_acct_code,fgvopp2_prog_code,
             fgvopp2_prd_end_date),1,50),
        fgvopp2_fund_code,
        ftvfund_fund_code_bavl,
        fgvopp2_orgn_code,
        ftvorgn_orgn_code_nsf,
        fgvopp2_acct_code,
        ftvacct_acct_code_pool,
        fgvopp2_prog_code,
        substr(f_coa_hierarchy
            ('FTYP',fgvopp2_coas_code,ftvfund_ftyp_code,null,
                    null,fgvopp2_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('FUND',fgvopp2_coas_code,fgvopp2_fund_code,null,
                    null,fgvopp2_prd_end_date),1,250),
        substr(f_coa_hierarchy
            ('ORGN',fgvopp2_coas_code,fgvopp2_orgn_code,null,
                    null,fgvopp2_prd_end_date),1,400),
        substr(f_coa_hierarchy
            ('ATYP',fgvopp2_coas_code,ftvacct_atyp_code,null,
                    null,fgvopp2_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('ACCT',fgvopp2_coas_code,fgvopp2_acct_code,null,
                    null,fgvopp2_prd_end_date),1,200),
        substr(f_coa_hierarchy
            ('PROG',fgvopp2_coas_code,fgvopp2_prog_code,null,
                    null,fgvopp2_prd_end_date),1,250),
        fgvopp2_ann_budg_orig,
        fgvopp2_ann_budg_adjust,
        fgvopp2_ytd_budg_orig,
        fgvopp2_ytd_budg_adjust,
        fgvopp2_ytd_actual,
        fgvopp2_ytd_commitments,
        fgvopp2_qtd_budg_change,
        fgvopp2_qtd_actual,
        fgvopp2_qtd_commitments,
        fgvopp2_cpd_budg_change,
        fgvopp2_cpd_actual,
        fgvopp2_cpd_commitments
from    ftvfund,
        ftvorgn,
        ftvacct,
        fgvopp2
where   ftvfund_coas_code = fgvopp2_coas_code
and     ftvfund_fund_code = fgvopp2_fund_code
and     ftvfund_eff_date <= fgvopp2_prd_end_date
and     ftvfund_nchg_date > fgvopp2_prd_end_date
and     ftvorgn_coas_code = fgvopp2_coas_code
and     ftvorgn_orgn_code = fgvopp2_orgn_code
and     ftvorgn_eff_date <= fgvopp2_prd_end_date
and     ftvorgn_nchg_date > fgvopp2_prd_end_date
and     ftvacct_coas_code = fgvopp2_coas_code
and     ftvacct_acct_code = fgvopp2_acct_code
and     ftvacct_eff_date <= fgvopp2_prd_end_date
and     ftvacct_nchg_date > fgvopp2_prd_end_date
 "
"BANINST1","FGVOPP0","Web for Executives Operating Ledger 01-13 Excluding Accruals View","select  'B',
        fgvopp1_coas_code,
        substr(to_char(to_date(fgvopp1_fsyr_code,'RR'),'YYYY'),1,4),
        substr(f_calc_quarter
            (fgvopp1_coas_code,fgvopp1_fsyr_code,fgvopp1_fspd_code),1,1),
        fgvopp1_fspd_code,
        fgvopp1_prd_end_date,
        substr(f_split_fields(fgvopp1_concat_acci,1),1,6),
        fgvopp1_fund_code,
        fgvopp1_orgn_code,
        fgvopp1_acct_code,
        fgvopp1_prog_code,
        substr(f_split_fields(fgvopp1_concat_ftyp_hier,1),1,2),
        substr(f_split_fields(fgvopp1_concat_ftyp_hier,4),1,2),
        substr(f_split_fields(fgvopp1_concat_fund_hier,1),1,6),
        substr(f_split_fields(fgvopp1_concat_fund_hier,4),1,6),
        substr(f_split_fields(fgvopp1_concat_fund_hier,7),1,6),
        substr(f_split_fields(fgvopp1_concat_fund_hier,10),1,6),
        substr(f_split_fields(fgvopp1_concat_fund_hier,13),1,6),
        nvl(fgvopp1_fund_code_bavl,fgvopp1_fund_code),
        substr(f_split_fields(fgvopp1_concat_orgn_hier,1),1,6),
        substr(f_split_fields(fgvopp1_concat_orgn_hier,4),1,6),
        substr(f_split_fields(fgvopp1_concat_orgn_hier,7),1,6),
        substr(f_split_fields(fgvopp1_concat_orgn_hier,10),1,6),
        substr(f_split_fields(fgvopp1_concat_orgn_hier,13),1,6),
        substr(f_split_fields(fgvopp1_concat_orgn_hier,16),1,6),
        substr(f_split_fields(fgvopp1_concat_orgn_hier,19),1,6),
        substr(f_split_fields(fgvopp1_concat_orgn_hier,22),1,6),
        nvl(fgvopp1_orgn_code_nsf,fgvopp1_orgn_code),
        substr(f_split_fields(fgvopp1_concat_atyp_hier,1),1,2),
        substr(f_split_fields(fgvopp1_concat_atyp_hier,4),1,2),
        substr(f_split_fields(fgvopp1_concat_acct_hier,1),1,6),
        substr(f_split_fields(fgvopp1_concat_acct_hier,4),1,6),
        substr(f_split_fields(fgvopp1_concat_acct_hier,7),1,6),
        substr(f_split_fields(fgvopp1_concat_acct_hier,10),1,6),
        nvl(fgvopp1_acct_code_pool,fgvopp1_acct_code),
        substr(f_split_fields(fgvopp1_concat_prog_hier,1),1,6),
        substr(f_split_fields(fgvopp1_concat_prog_hier,4),1,6),
        substr(f_split_fields(fgvopp1_concat_prog_hier,7),1,6),
        substr(f_split_fields(fgvopp1_concat_prog_hier,10),1,6),
        substr(f_split_fields(fgvopp1_concat_prog_hier,13),1,6),
        fgvopp1_ann_budg_orig,
        fgvopp1_ann_budg_adjust,
        fgvopp1_ytd_budg_orig,
        fgvopp1_ytd_budg_adjust,
        fgvopp1_ytd_actual,
        fgvopp1_ytd_commitments,
        fgvopp1_qtd_budg_change,
        fgvopp1_qtd_actual,
        fgvopp1_qtd_commitments,
        fgvopp1_cpd_budg_change,
        fgvopp1_cpd_actual,
        fgvopp1_cpd_commitments
from    fgvopp1
 "
"BANINST1","FGVOPAL2","SDA Work Table used in conjuction with the periodic operating satement view","select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '00',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_00_ADOPT_BUD, FGBOPAL_00_BUD_ADJT, FGBOPAL_00_YTD_ACTV,
       FGBOPAL_00_ENCUMB,    FGBOPAL_00_BUD_RSRV, FGBOPAL_00_ACCTD_BUD,
       FGBOPAL_00_TEMP_BUD,  FGBOPAL_00_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '01',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_01_ADOPT_BUD, FGBOPAL_01_BUD_ADJT, FGBOPAL_01_YTD_ACTV,
       FGBOPAL_01_ENCUMB,    FGBOPAL_01_BUD_RSRV, FGBOPAL_01_ACCTD_BUD,
       FGBOPAL_01_TEMP_BUD,  FGBOPAL_01_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '02',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_02_ADOPT_BUD, FGBOPAL_02_BUD_ADJT, FGBOPAL_02_YTD_ACTV,
       FGBOPAL_02_ENCUMB,    FGBOPAL_02_BUD_RSRV, FGBOPAL_02_ACCTD_BUD,
       FGBOPAL_02_TEMP_BUD,  FGBOPAL_02_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '03',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_03_ADOPT_BUD, FGBOPAL_03_BUD_ADJT, FGBOPAL_03_YTD_ACTV,
       FGBOPAL_03_ENCUMB,    FGBOPAL_03_BUD_RSRV, FGBOPAL_03_ACCTD_BUD,
       FGBOPAL_03_TEMP_BUD,  FGBOPAL_03_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '04',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_04_ADOPT_BUD, FGBOPAL_04_BUD_ADJT, FGBOPAL_04_YTD_ACTV,
       FGBOPAL_04_ENCUMB,    FGBOPAL_04_BUD_RSRV, FGBOPAL_04_ACCTD_BUD,
       FGBOPAL_04_TEMP_BUD,  FGBOPAL_04_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '05',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_05_ADOPT_BUD, FGBOPAL_05_BUD_ADJT, FGBOPAL_05_YTD_ACTV,
       FGBOPAL_05_ENCUMB,    FGBOPAL_05_BUD_RSRV, FGBOPAL_05_ACCTD_BUD,
       FGBOPAL_05_TEMP_BUD,  FGBOPAL_05_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '06',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_06_ADOPT_BUD, FGBOPAL_06_BUD_ADJT, FGBOPAL_06_YTD_ACTV,
       FGBOPAL_06_ENCUMB,    FGBOPAL_06_BUD_RSRV, FGBOPAL_06_ACCTD_BUD,
       FGBOPAL_06_TEMP_BUD,  FGBOPAL_06_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '07',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_07_ADOPT_BUD, FGBOPAL_07_BUD_ADJT, FGBOPAL_07_YTD_ACTV,
       FGBOPAL_07_ENCUMB,    FGBOPAL_07_BUD_RSRV, FGBOPAL_07_ACCTD_BUD,
       FGBOPAL_07_TEMP_BUD,  FGBOPAL_07_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '08',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_08_ADOPT_BUD, FGBOPAL_08_BUD_ADJT, FGBOPAL_08_YTD_ACTV,
       FGBOPAL_08_ENCUMB,    FGBOPAL_08_BUD_RSRV, FGBOPAL_08_ACCTD_BUD,
       FGBOPAL_08_TEMP_BUD,  FGBOPAL_08_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '09',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_09_ADOPT_BUD, FGBOPAL_09_BUD_ADJT, FGBOPAL_09_YTD_ACTV,
       FGBOPAL_09_ENCUMB,    FGBOPAL_09_BUD_RSRV, FGBOPAL_09_ACCTD_BUD,
       FGBOPAL_09_TEMP_BUD,  FGBOPAL_09_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '10',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_10_ADOPT_BUD, FGBOPAL_10_BUD_ADJT, FGBOPAL_10_YTD_ACTV,
       FGBOPAL_10_ENCUMB,    FGBOPAL_10_BUD_RSRV, FGBOPAL_10_ACCTD_BUD,
       FGBOPAL_10_TEMP_BUD,  FGBOPAL_10_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '11',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_11_ADOPT_BUD, FGBOPAL_11_BUD_ADJT, FGBOPAL_11_YTD_ACTV,
       FGBOPAL_11_ENCUMB,    FGBOPAL_11_BUD_RSRV, FGBOPAL_11_ACCTD_BUD,
       FGBOPAL_11_TEMP_BUD,  FGBOPAL_11_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '12',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_12_ADOPT_BUD, FGBOPAL_12_BUD_ADJT, FGBOPAL_12_YTD_ACTV,
       FGBOPAL_12_ENCUMB,    FGBOPAL_12_BUD_RSRV, FGBOPAL_12_ACCTD_BUD,
       FGBOPAL_12_TEMP_BUD,  FGBOPAL_12_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '13',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_13_ADOPT_BUD, FGBOPAL_13_BUD_ADJT, FGBOPAL_13_YTD_ACTV,
       FGBOPAL_13_ENCUMB,    FGBOPAL_13_BUD_RSRV, FGBOPAL_13_ACCTD_BUD,
       FGBOPAL_13_TEMP_BUD,  FGBOPAL_13_GRANT_ACTV
  from fgbopal
UNION ALL
select FGBOPAL_COAS_CODE, FGBOPAL_FSYR_CODE, FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '14',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_14_ADOPT_BUD, FGBOPAL_14_BUD_ADJT, FGBOPAL_14_YTD_ACTV,
       FGBOPAL_14_ENCUMB,    FGBOPAL_14_BUD_RSRV, FGBOPAL_14_ACCTD_BUD,
       FGBOPAL_14_TEMP_BUD,  FGBOPAL_14_GRANT_ACTV
  from fgbopal
 "
"BANINST1","FGVOPAL","Normalized Operating Account Ledger view for BANNERQuest","select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '00',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_00_ADOPT_BUD, FGBOPAL_00_BUD_ADJT, FGBOPAL_00_YTD_ACTV,
       FGBOPAL_00_ENCUMB,    FGBOPAL_00_BUD_RSRV, FGBOPAL_00_ACCTD_BUD,
       FGBOPAL_00_TEMP_BUD,  FGBOPAL_00_GRANT_ACTV
  from fgbopal
 where FGBOPAL_00_ADOPT_BUD <> 0
    or FGBOPAL_00_BUD_ADJT <> 0
    or FGBOPAL_00_YTD_ACTV <> 0
    or FGBOPAL_00_ENCUMB <> 0
    or FGBOPAL_00_BUD_RSRV <> 0
    or FGBOPAL_00_ACCTD_BUD <> 0
    or FGBOPAL_00_TEMP_BUD <> 0
    or FGBOPAL_00_GRANT_ACTV <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '01',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_01_ADOPT_BUD  - FGBOPAL_00_ADOPT_BUD,
       FGBOPAL_01_BUD_ADJT   - FGBOPAL_00_BUD_ADJT,
       FGBOPAL_01_YTD_ACTV   - FGBOPAL_00_YTD_ACTV,
       FGBOPAL_01_ENCUMB     - FGBOPAL_00_ENCUMB,
       FGBOPAL_01_BUD_RSRV   - FGBOPAL_00_BUD_RSRV,
       FGBOPAL_01_ACCTD_BUD  - FGBOPAL_00_ACCTD_BUD,
       FGBOPAL_01_TEMP_BUD   - FGBOPAL_00_TEMP_BUD,
       FGBOPAL_01_GRANT_ACTV - FGBOPAL_00_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_01_ADOPT_BUD  - FGBOPAL_00_ADOPT_BUD) <> 0
    or (FGBOPAL_01_BUD_ADJT   - FGBOPAL_00_BUD_ADJT) <> 0
    or (FGBOPAL_01_YTD_ACTV   - FGBOPAL_00_YTD_ACTV) <> 0
    or (FGBOPAL_01_ENCUMB     - FGBOPAL_00_ENCUMB) <> 0
    or (FGBOPAL_01_BUD_RSRV   - FGBOPAL_00_BUD_RSRV) <> 0
    or (FGBOPAL_01_ACCTD_BUD  - FGBOPAL_00_ACCTD_BUD) <> 0
    or (FGBOPAL_01_TEMP_BUD   - FGBOPAL_00_TEMP_BUD) <> 0
    or (FGBOPAL_01_GRANT_ACTV - FGBOPAL_00_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '02',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_02_ADOPT_BUD  - FGBOPAL_01_ADOPT_BUD,
       FGBOPAL_02_BUD_ADJT   - FGBOPAL_01_BUD_ADJT,
       FGBOPAL_02_YTD_ACTV   - FGBOPAL_01_YTD_ACTV,
       FGBOPAL_02_ENCUMB     - FGBOPAL_01_ENCUMB,
       FGBOPAL_02_BUD_RSRV   - FGBOPAL_01_BUD_RSRV,
       FGBOPAL_02_ACCTD_BUD  - FGBOPAL_01_ACCTD_BUD,
       FGBOPAL_02_TEMP_BUD   - FGBOPAL_01_TEMP_BUD,
       FGBOPAL_02_GRANT_ACTV - FGBOPAL_01_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_02_ADOPT_BUD  - FGBOPAL_01_ADOPT_BUD) <> 0
    or (FGBOPAL_02_BUD_ADJT   - FGBOPAL_01_BUD_ADJT) <> 0
    or (FGBOPAL_02_YTD_ACTV   - FGBOPAL_01_YTD_ACTV) <> 0
    or (FGBOPAL_02_ENCUMB     - FGBOPAL_01_ENCUMB) <> 0
    or (FGBOPAL_02_BUD_RSRV   - FGBOPAL_01_BUD_RSRV) <> 0
    or (FGBOPAL_02_ACCTD_BUD  - FGBOPAL_01_ACCTD_BUD) <> 0
    or (FGBOPAL_02_TEMP_BUD   - FGBOPAL_01_TEMP_BUD) <> 0
    or (FGBOPAL_02_GRANT_ACTV - FGBOPAL_01_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '03',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_03_ADOPT_BUD  - FGBOPAL_02_ADOPT_BUD,
       FGBOPAL_03_BUD_ADJT   - FGBOPAL_02_BUD_ADJT,
       FGBOPAL_03_YTD_ACTV   - FGBOPAL_02_YTD_ACTV,
       FGBOPAL_03_ENCUMB     - FGBOPAL_02_ENCUMB,
       FGBOPAL_03_BUD_RSRV   - FGBOPAL_02_BUD_RSRV,
       FGBOPAL_03_ACCTD_BUD  - FGBOPAL_02_ACCTD_BUD,
       FGBOPAL_03_TEMP_BUD   - FGBOPAL_02_TEMP_BUD,
       FGBOPAL_03_GRANT_ACTV - FGBOPAL_02_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_03_ADOPT_BUD  - FGBOPAL_02_ADOPT_BUD) <> 0
    or (FGBOPAL_03_BUD_ADJT   - FGBOPAL_02_BUD_ADJT) <> 0
    or (FGBOPAL_03_YTD_ACTV   - FGBOPAL_02_YTD_ACTV) <> 0
    or (FGBOPAL_03_ENCUMB     - FGBOPAL_02_ENCUMB) <> 0
    or (FGBOPAL_03_BUD_RSRV   - FGBOPAL_02_BUD_RSRV) <> 0
    or (FGBOPAL_03_ACCTD_BUD  - FGBOPAL_02_ACCTD_BUD) <> 0
    or (FGBOPAL_03_TEMP_BUD   - FGBOPAL_02_TEMP_BUD) <> 0
    or (FGBOPAL_03_GRANT_ACTV - FGBOPAL_02_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '04',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_04_ADOPT_BUD  - FGBOPAL_03_ADOPT_BUD,
       FGBOPAL_04_BUD_ADJT   - FGBOPAL_03_BUD_ADJT,
       FGBOPAL_04_YTD_ACTV   - FGBOPAL_03_YTD_ACTV,
       FGBOPAL_04_ENCUMB     - FGBOPAL_03_ENCUMB,
       FGBOPAL_04_BUD_RSRV   - FGBOPAL_03_BUD_RSRV,
       FGBOPAL_04_ACCTD_BUD  - FGBOPAL_03_ACCTD_BUD,
       FGBOPAL_04_TEMP_BUD   - FGBOPAL_03_TEMP_BUD,
       FGBOPAL_04_GRANT_ACTV - FGBOPAL_03_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_04_ADOPT_BUD  - FGBOPAL_03_ADOPT_BUD) <> 0
    or (FGBOPAL_04_BUD_ADJT   - FGBOPAL_03_BUD_ADJT) <> 0
    or (FGBOPAL_04_YTD_ACTV   - FGBOPAL_03_YTD_ACTV) <> 0
    or (FGBOPAL_04_ENCUMB     - FGBOPAL_03_ENCUMB) <> 0
    or (FGBOPAL_04_BUD_RSRV   - FGBOPAL_03_BUD_RSRV) <> 0
    or (FGBOPAL_04_ACCTD_BUD  - FGBOPAL_03_ACCTD_BUD) <> 0
    or (FGBOPAL_04_TEMP_BUD   - FGBOPAL_03_TEMP_BUD) <> 0
    or (FGBOPAL_04_GRANT_ACTV - FGBOPAL_03_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '05',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_05_ADOPT_BUD  - FGBOPAL_04_ADOPT_BUD,
       FGBOPAL_05_BUD_ADJT   - FGBOPAL_04_BUD_ADJT,
       FGBOPAL_05_YTD_ACTV   - FGBOPAL_04_YTD_ACTV,
       FGBOPAL_05_ENCUMB     - FGBOPAL_04_ENCUMB,
       FGBOPAL_05_BUD_RSRV   - FGBOPAL_04_BUD_RSRV,
       FGBOPAL_05_ACCTD_BUD  - FGBOPAL_04_ACCTD_BUD,
       FGBOPAL_05_TEMP_BUD   - FGBOPAL_04_TEMP_BUD,
       FGBOPAL_05_GRANT_ACTV - FGBOPAL_04_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_05_ADOPT_BUD  - FGBOPAL_04_ADOPT_BUD) <> 0
    or (FGBOPAL_05_BUD_ADJT   - FGBOPAL_04_BUD_ADJT) <> 0
    or (FGBOPAL_05_YTD_ACTV   - FGBOPAL_04_YTD_ACTV) <> 0
    or (FGBOPAL_05_ENCUMB     - FGBOPAL_04_ENCUMB) <> 0
    or (FGBOPAL_05_BUD_RSRV   - FGBOPAL_04_BUD_RSRV) <> 0
    or (FGBOPAL_05_ACCTD_BUD  - FGBOPAL_04_ACCTD_BUD) <> 0
    or (FGBOPAL_05_TEMP_BUD   - FGBOPAL_04_TEMP_BUD) <> 0
    or (FGBOPAL_05_GRANT_ACTV - FGBOPAL_04_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '06',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_06_ADOPT_BUD  - FGBOPAL_05_ADOPT_BUD,
       FGBOPAL_06_BUD_ADJT   - FGBOPAL_05_BUD_ADJT,
       FGBOPAL_06_YTD_ACTV   - FGBOPAL_05_YTD_ACTV,
       FGBOPAL_06_ENCUMB     - FGBOPAL_05_ENCUMB,
       FGBOPAL_06_BUD_RSRV   - FGBOPAL_05_BUD_RSRV,
       FGBOPAL_06_ACCTD_BUD  - FGBOPAL_05_ACCTD_BUD,
       FGBOPAL_06_TEMP_BUD   - FGBOPAL_05_TEMP_BUD,
       FGBOPAL_06_GRANT_ACTV - FGBOPAL_05_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_06_ADOPT_BUD  - FGBOPAL_05_ADOPT_BUD) <> 0
    or (FGBOPAL_06_BUD_ADJT   - FGBOPAL_05_BUD_ADJT) <> 0
    or (FGBOPAL_06_YTD_ACTV   - FGBOPAL_05_YTD_ACTV) <> 0
    or (FGBOPAL_06_ENCUMB     - FGBOPAL_05_ENCUMB) <> 0
    or (FGBOPAL_06_BUD_RSRV   - FGBOPAL_05_BUD_RSRV) <> 0
    or (FGBOPAL_06_ACCTD_BUD  - FGBOPAL_05_ACCTD_BUD) <> 0
    or (FGBOPAL_06_TEMP_BUD   - FGBOPAL_05_TEMP_BUD) <> 0
    or (FGBOPAL_06_GRANT_ACTV - FGBOPAL_05_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '07',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_07_ADOPT_BUD  - FGBOPAL_06_ADOPT_BUD,
       FGBOPAL_07_BUD_ADJT   - FGBOPAL_06_BUD_ADJT,
       FGBOPAL_07_YTD_ACTV   - FGBOPAL_06_YTD_ACTV,
       FGBOPAL_07_ENCUMB     - FGBOPAL_06_ENCUMB,
       FGBOPAL_07_BUD_RSRV   - FGBOPAL_06_BUD_RSRV,
       FGBOPAL_07_ACCTD_BUD  - FGBOPAL_06_ACCTD_BUD,
       FGBOPAL_07_TEMP_BUD   - FGBOPAL_06_TEMP_BUD,
       FGBOPAL_07_GRANT_ACTV - FGBOPAL_06_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_07_ADOPT_BUD  - FGBOPAL_06_ADOPT_BUD) <> 0
    or (FGBOPAL_07_BUD_ADJT   - FGBOPAL_06_BUD_ADJT) <> 0
    or (FGBOPAL_07_YTD_ACTV   - FGBOPAL_06_YTD_ACTV) <> 0
    or (FGBOPAL_07_ENCUMB     - FGBOPAL_06_ENCUMB) <> 0
    or (FGBOPAL_07_BUD_RSRV   - FGBOPAL_06_BUD_RSRV) <> 0
    or (FGBOPAL_07_ACCTD_BUD  - FGBOPAL_06_ACCTD_BUD) <> 0
    or (FGBOPAL_07_TEMP_BUD   - FGBOPAL_06_TEMP_BUD) <> 0
    or (FGBOPAL_07_GRANT_ACTV - FGBOPAL_06_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '08',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_08_ADOPT_BUD  - FGBOPAL_07_ADOPT_BUD,
       FGBOPAL_08_BUD_ADJT   - FGBOPAL_07_BUD_ADJT,
       FGBOPAL_08_YTD_ACTV   - FGBOPAL_07_YTD_ACTV,
       FGBOPAL_08_ENCUMB     - FGBOPAL_07_ENCUMB,
       FGBOPAL_08_BUD_RSRV   - FGBOPAL_07_BUD_RSRV,
       FGBOPAL_08_ACCTD_BUD  - FGBOPAL_07_ACCTD_BUD,
       FGBOPAL_08_TEMP_BUD   - FGBOPAL_07_TEMP_BUD,
       FGBOPAL_08_GRANT_ACTV - FGBOPAL_07_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_08_ADOPT_BUD  - FGBOPAL_07_ADOPT_BUD) <> 0
    or (FGBOPAL_08_BUD_ADJT   - FGBOPAL_07_BUD_ADJT) <> 0
    or (FGBOPAL_08_YTD_ACTV   - FGBOPAL_07_YTD_ACTV) <> 0
    or (FGBOPAL_08_ENCUMB     - FGBOPAL_07_ENCUMB) <> 0
    or (FGBOPAL_08_BUD_RSRV   - FGBOPAL_07_BUD_RSRV) <> 0
    or (FGBOPAL_08_ACCTD_BUD  - FGBOPAL_07_ACCTD_BUD) <> 0
    or (FGBOPAL_08_TEMP_BUD   - FGBOPAL_07_TEMP_BUD) <> 0
    or (FGBOPAL_08_GRANT_ACTV - FGBOPAL_07_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '09',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_09_ADOPT_BUD  - FGBOPAL_08_ADOPT_BUD,
       FGBOPAL_09_BUD_ADJT   - FGBOPAL_08_BUD_ADJT,
       FGBOPAL_09_YTD_ACTV   - FGBOPAL_08_YTD_ACTV,
       FGBOPAL_09_ENCUMB     - FGBOPAL_08_ENCUMB,
       FGBOPAL_09_BUD_RSRV   - FGBOPAL_08_BUD_RSRV,
       FGBOPAL_09_ACCTD_BUD  - FGBOPAL_08_ACCTD_BUD,
       FGBOPAL_09_TEMP_BUD   - FGBOPAL_08_TEMP_BUD,
       FGBOPAL_09_GRANT_ACTV - FGBOPAL_08_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_09_ADOPT_BUD  - FGBOPAL_08_ADOPT_BUD) <> 0
    or (FGBOPAL_09_BUD_ADJT   - FGBOPAL_08_BUD_ADJT) <> 0
    or (FGBOPAL_09_YTD_ACTV   - FGBOPAL_08_YTD_ACTV) <> 0
    or (FGBOPAL_09_ENCUMB     - FGBOPAL_08_ENCUMB) <> 0
    or (FGBOPAL_09_BUD_RSRV   - FGBOPAL_08_BUD_RSRV) <> 0
    or (FGBOPAL_09_ACCTD_BUD  - FGBOPAL_08_ACCTD_BUD) <> 0
    or (FGBOPAL_09_TEMP_BUD   - FGBOPAL_08_TEMP_BUD) <> 0
    or (FGBOPAL_09_GRANT_ACTV - FGBOPAL_08_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '10',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_10_ADOPT_BUD  - FGBOPAL_09_ADOPT_BUD,
       FGBOPAL_10_BUD_ADJT   - FGBOPAL_09_BUD_ADJT,
       FGBOPAL_10_YTD_ACTV   - FGBOPAL_09_YTD_ACTV,
       FGBOPAL_10_ENCUMB     - FGBOPAL_09_ENCUMB,
       FGBOPAL_10_BUD_RSRV   - FGBOPAL_09_BUD_RSRV,
       FGBOPAL_10_ACCTD_BUD  - FGBOPAL_09_ACCTD_BUD,
       FGBOPAL_10_TEMP_BUD   - FGBOPAL_09_TEMP_BUD,
       FGBOPAL_10_GRANT_ACTV - FGBOPAL_09_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_10_ADOPT_BUD  - FGBOPAL_09_ADOPT_BUD) <> 0
    or (FGBOPAL_10_BUD_ADJT   - FGBOPAL_09_BUD_ADJT) <> 0
    or (FGBOPAL_10_YTD_ACTV   - FGBOPAL_09_YTD_ACTV) <> 0
    or (FGBOPAL_10_ENCUMB     - FGBOPAL_09_ENCUMB) <> 0
    or (FGBOPAL_10_BUD_RSRV   - FGBOPAL_09_BUD_RSRV) <> 0
    or (FGBOPAL_10_ACCTD_BUD  - FGBOPAL_09_ACCTD_BUD) <> 0
    or (FGBOPAL_10_TEMP_BUD   - FGBOPAL_09_TEMP_BUD) <> 0
    or (FGBOPAL_10_GRANT_ACTV - FGBOPAL_09_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '11',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_11_ADOPT_BUD  - FGBOPAL_10_ADOPT_BUD,
       FGBOPAL_11_BUD_ADJT   - FGBOPAL_10_BUD_ADJT,
       FGBOPAL_11_YTD_ACTV   - FGBOPAL_10_YTD_ACTV,
       FGBOPAL_11_ENCUMB     - FGBOPAL_10_ENCUMB,
       FGBOPAL_11_BUD_RSRV   - FGBOPAL_10_BUD_RSRV,
       FGBOPAL_11_ACCTD_BUD  - FGBOPAL_10_ACCTD_BUD,
       FGBOPAL_11_TEMP_BUD   - FGBOPAL_10_TEMP_BUD,
       FGBOPAL_11_GRANT_ACTV - FGBOPAL_10_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_11_ADOPT_BUD  - FGBOPAL_10_ADOPT_BUD) <> 0
    or (FGBOPAL_11_BUD_ADJT   - FGBOPAL_10_BUD_ADJT) <> 0
    or (FGBOPAL_11_YTD_ACTV   - FGBOPAL_10_YTD_ACTV) <> 0
    or (FGBOPAL_11_ENCUMB     - FGBOPAL_10_ENCUMB) <> 0
    or (FGBOPAL_11_BUD_RSRV   - FGBOPAL_10_BUD_RSRV) <> 0
    or (FGBOPAL_11_ACCTD_BUD  - FGBOPAL_10_ACCTD_BUD) <> 0
    or (FGBOPAL_11_TEMP_BUD   - FGBOPAL_10_TEMP_BUD) <> 0
    or (FGBOPAL_11_GRANT_ACTV - FGBOPAL_10_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '12',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_12_ADOPT_BUD  - FGBOPAL_11_ADOPT_BUD,
       FGBOPAL_12_BUD_ADJT   - FGBOPAL_11_BUD_ADJT,
       FGBOPAL_12_YTD_ACTV   - FGBOPAL_11_YTD_ACTV,
       FGBOPAL_12_ENCUMB     - FGBOPAL_11_ENCUMB,
       FGBOPAL_12_BUD_RSRV   - FGBOPAL_11_BUD_RSRV,
       FGBOPAL_12_ACCTD_BUD  - FGBOPAL_11_ACCTD_BUD,
       FGBOPAL_12_TEMP_BUD   - FGBOPAL_11_TEMP_BUD,
       FGBOPAL_12_GRANT_ACTV - FGBOPAL_11_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_12_ADOPT_BUD  - FGBOPAL_11_ADOPT_BUD) <> 0
    or (FGBOPAL_12_BUD_ADJT   - FGBOPAL_11_BUD_ADJT) <> 0
    or (FGBOPAL_12_YTD_ACTV   - FGBOPAL_11_YTD_ACTV) <> 0
    or (FGBOPAL_12_ENCUMB     - FGBOPAL_11_ENCUMB) <> 0
    or (FGBOPAL_12_BUD_RSRV   - FGBOPAL_11_BUD_RSRV) <> 0
    or (FGBOPAL_12_ACCTD_BUD  - FGBOPAL_11_ACCTD_BUD) <> 0
    or (FGBOPAL_12_TEMP_BUD   - FGBOPAL_11_TEMP_BUD) <> 0
    or (FGBOPAL_12_GRANT_ACTV - FGBOPAL_11_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '13',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_13_ADOPT_BUD  - FGBOPAL_12_ADOPT_BUD,
       FGBOPAL_13_BUD_ADJT   - FGBOPAL_12_BUD_ADJT,
       FGBOPAL_13_YTD_ACTV   - FGBOPAL_12_YTD_ACTV,
       FGBOPAL_13_ENCUMB     - FGBOPAL_12_ENCUMB,
       FGBOPAL_13_BUD_RSRV   - FGBOPAL_12_BUD_RSRV,
       FGBOPAL_13_ACCTD_BUD  - FGBOPAL_12_ACCTD_BUD,
       FGBOPAL_13_TEMP_BUD   - FGBOPAL_12_TEMP_BUD,
       FGBOPAL_13_GRANT_ACTV - FGBOPAL_12_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_13_ADOPT_BUD  - FGBOPAL_12_ADOPT_BUD) <> 0
    or (FGBOPAL_13_BUD_ADJT   - FGBOPAL_12_BUD_ADJT) <> 0
    or (FGBOPAL_13_YTD_ACTV   - FGBOPAL_12_YTD_ACTV) <> 0
    or (FGBOPAL_13_ENCUMB     - FGBOPAL_12_ENCUMB) <> 0
    or (FGBOPAL_13_BUD_RSRV   - FGBOPAL_12_BUD_RSRV) <> 0
    or (FGBOPAL_13_ACCTD_BUD  - FGBOPAL_12_ACCTD_BUD) <> 0
    or (FGBOPAL_13_TEMP_BUD   - FGBOPAL_12_TEMP_BUD) <> 0
    or (FGBOPAL_13_GRANT_ACTV - FGBOPAL_12_GRANT_ACTV) <> 0
UNION ALL
select FGBOPAL_COAS_CODE, to_char(to_date(FGBOPAL_FSYR_CODE,'RR'),'YYYY'), FGBOPAL_FUND_CODE,
       FGBOPAL_ACCT_CODE, FGBOPAL_ORGN_CODE, FGBOPAL_PROG_CODE,
       FGBOPAL_ACTV_CODE, FGBOPAL_LOCN_CODE, '14',
       FGBOPAL_CMT_TYPE, FGBOPAL_ACTIVITY_DATE,
       FGBOPAL_14_ADOPT_BUD  - FGBOPAL_13_ADOPT_BUD,
       FGBOPAL_14_BUD_ADJT   - FGBOPAL_13_BUD_ADJT,
       FGBOPAL_14_YTD_ACTV   - FGBOPAL_13_YTD_ACTV,
       FGBOPAL_14_ENCUMB     - FGBOPAL_13_ENCUMB,
       FGBOPAL_14_BUD_RSRV   - FGBOPAL_13_BUD_RSRV,
       FGBOPAL_14_ACCTD_BUD  - FGBOPAL_13_ACCTD_BUD,
       FGBOPAL_14_TEMP_BUD   - FGBOPAL_13_TEMP_BUD,
       FGBOPAL_14_GRANT_ACTV - FGBOPAL_13_GRANT_ACTV
  from fgbopal
 where (FGBOPAL_14_ADOPT_BUD  - FGBOPAL_13_ADOPT_BUD) <> 0
    or (FGBOPAL_14_BUD_ADJT   - FGBOPAL_13_BUD_ADJT) <> 0
    or (FGBOPAL_14_YTD_ACTV   - FGBOPAL_13_YTD_ACTV) <> 0
    or (FGBOPAL_14_ENCUMB     - FGBOPAL_13_ENCUMB) <> 0
    or (FGBOPAL_14_BUD_RSRV   - FGBOPAL_13_BUD_RSRV) <> 0
    or (FGBOPAL_14_ACCTD_BUD  - FGBOPAL_13_ACCTD_BUD) <> 0
    or (FGBOPAL_14_TEMP_BUD   - FGBOPAL_13_TEMP_BUD) <> 0
    or (FGBOPAL_14_GRANT_ACTV - FGBOPAL_13_GRANT_ACTV) <> 0

 "
"BANINST1","FGVOPA2","","select  fgbopal_coas_code,
        fgbopal_fsyr_code,
        '14',
        ftvfsyr_start_date,
        ftvfsyr_end_date,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code,
        sum(fgbopal_14_adopt_bud),
        sum(fgbopal_14_bud_adjt),
        sum(fgbopal_14_ytd_actv),
        sum(fgbopal_14_encumb) + sum(fgbopal_14_bud_rsrv),
        sum(fgbopal_14_acctd_bud -
            decode(a.ftvfspd_fspd_code,
                '01', fgbopal_01_acctd_bud,
                '02', fgbopal_02_acctd_bud,
                '03', fgbopal_03_acctd_bud,
                '04', fgbopal_04_acctd_bud,
                '05', fgbopal_05_acctd_bud,
                '06', fgbopal_06_acctd_bud,
                '07', fgbopal_07_acctd_bud,
                '08', fgbopal_08_acctd_bud,
                '09', fgbopal_09_acctd_bud,
                '10', fgbopal_10_acctd_bud,
                '11', fgbopal_11_acctd_bud,
                '12', fgbopal_12_acctd_bud,
                '13', fgbopal_13_acctd_bud,
                      fgbopal_00_acctd_bud)),
        sum(fgbopal_14_ytd_actv -
            decode(a.ftvfspd_fspd_code,
                '01', fgbopal_01_ytd_actv,
                '02', fgbopal_02_ytd_actv,
                '03', fgbopal_03_ytd_actv,
                '04', fgbopal_04_ytd_actv,
                '05', fgbopal_05_ytd_actv,
                '06', fgbopal_06_ytd_actv,
                '07', fgbopal_07_ytd_actv,
                '08', fgbopal_08_ytd_actv,
                '09', fgbopal_09_ytd_actv,
                '10', fgbopal_10_ytd_actv,
                '11', fgbopal_11_ytd_actv,
                '12', fgbopal_12_ytd_actv,
                '13', fgbopal_13_ytd_actv,
                      fgbopal_00_ytd_actv)),
        sum(fgbopal_14_encumb -
            decode(a.ftvfspd_fspd_code,
                '01', fgbopal_01_encumb,
                '02', fgbopal_02_encumb,
                '03', fgbopal_03_encumb,
                '04', fgbopal_04_encumb,
                '05', fgbopal_05_encumb,
                '06', fgbopal_06_encumb,
                '07', fgbopal_07_encumb,
                '08', fgbopal_08_encumb,
                '09', fgbopal_09_encumb,
                '10', fgbopal_10_encumb,
                '11', fgbopal_11_encumb,
                '12', fgbopal_12_encumb,
                '13', fgbopal_13_encumb,
                      fgbopal_00_encumb)) +
        sum(fgbopal_14_bud_rsrv -
            decode(a.ftvfspd_fspd_code,
                '01', fgbopal_01_bud_rsrv,
                '02', fgbopal_02_bud_rsrv,
                '03', fgbopal_03_bud_rsrv,
                '04', fgbopal_04_bud_rsrv,
                '05', fgbopal_05_bud_rsrv,
                '06', fgbopal_06_bud_rsrv,
                '07', fgbopal_07_bud_rsrv,
                '08', fgbopal_08_bud_rsrv,
                '09', fgbopal_09_bud_rsrv,
                '10', fgbopal_10_bud_rsrv,
                '11', fgbopal_11_bud_rsrv,
                '12', fgbopal_12_bud_rsrv,
                '13', fgbopal_13_bud_rsrv,
                      fgbopal_00_bud_rsrv)),
        sum(fgbopal_14_acctd_bud - fgbopal_13_acctd_bud),
        sum(fgbopal_14_ytd_actv - fgbopal_13_ytd_actv),
        sum(fgbopal_14_encumb - fgbopal_13_encumb) +
            sum(fgbopal_14_bud_rsrv - fgbopal_13_bud_rsrv)
from    ftvfsyr,
        ftvfspd a,
        fgbopal
where   ftvfsyr_coas_code = fgbopal_coas_code
and     ftvfsyr_fsyr_code = fgbopal_fsyr_code
and     a.rowid(+) =
            f_prior_eoq_rowid(
                fgbopal_coas_code,
                fgbopal_fsyr_code,
                '13')
group by
        fgbopal_coas_code,
        fgbopal_fsyr_code,
        ftvfsyr_start_date,
        ftvfsyr_end_date,
        fgbopal_fund_code,
        fgbopal_orgn_code,
        fgbopal_acct_code,
        fgbopal_prog_code
 "
"BANINST1","FGVOPA1","","select  fgvopa2_coas_code,
        fgvopa2_fsyr_code,
        fgvopa2_fspd_code,
        fgvopa2_end_date,
        substr(f_get_acci
            ('O',fgvopa2_coas_code,null,null,fgvopa2_fund_code,
             fgvopa2_orgn_code,fgvopa2_acct_code,fgvopa2_prog_code,
             fgvopa2_end_date),1,50),
        fgvopa2_fund_code,
        ftvfund_fund_code_bavl,
        fgvopa2_orgn_code,
        ftvorgn_orgn_code_nsf,
        fgvopa2_acct_code,
        ftvacct_acct_code_pool,
        fgvopa2_prog_code,
        substr(f_coa_hierarchy
            ('FTYP',fgvopa2_coas_code,ftvfund_ftyp_code,null,
                    null,fgvopa2_end_date),1,100),
        substr(f_coa_hierarchy
            ('FUND',fgvopa2_coas_code,fgvopa2_fund_code,null,
                    null,fgvopa2_end_date),1,250),
        substr(f_coa_hierarchy
            ('ORGN',fgvopa2_coas_code,fgvopa2_orgn_code,null,
                    null,fgvopa2_end_date),1,400),
        substr(f_coa_hierarchy
            ('ATYP',fgvopa2_coas_code,ftvacct_atyp_code,null,
                    null,fgvopa2_end_date),1,100),
        substr(f_coa_hierarchy
            ('ACCT',fgvopa2_coas_code,fgvopa2_acct_code,null,
                    null,fgvopa2_end_date),1,200),
        substr(f_coa_hierarchy
            ('PROG',fgvopa2_coas_code,fgvopa2_prog_code,null,
                    null,fgvopa2_end_date),1,250),
        fgvopa2_ytd_accr_budg_orig,
        fgvopa2_ytd_accr_budg_adjust,
        fgvopa2_ytd_accr_actual,
        fgvopa2_ytd_accr_commitments,
        fgvopa2_qtd_budg_change,
        fgvopa2_qtd_actual,
        fgvopa2_qtd_commitments,
        fgvopa2_cpd_budg_change,
        fgvopa2_cpd_actual,
        fgvopa2_cpd_commitments
from    ftvfund,
        ftvorgn,
        ftvacct,
        fgvopa2
where   ftvfund_coas_code = fgvopa2_coas_code
and     ftvfund_fund_code = fgvopa2_fund_code
and     ftvfund_eff_date <= fgvopa2_end_date
and     ftvfund_nchg_date > fgvopa2_end_date
and     ftvorgn_coas_code = fgvopa2_coas_code
and     ftvorgn_orgn_code = fgvopa2_orgn_code
and     ftvorgn_eff_date <= fgvopa2_end_date
and     ftvorgn_nchg_date > fgvopa2_end_date
and     ftvacct_coas_code = fgvopa2_coas_code
and     ftvacct_acct_code = fgvopa2_acct_code
and     ftvacct_eff_date <= fgvopa2_end_date
and     ftvacct_nchg_date > fgvopa2_end_date
 "
"BANINST1","FGVOPA0","Web for Executives Operating Ledger Period 14 View","select  'B',
        fgvopa1_coas_code,
        substr(to_char(to_date(fgvopa1_fsyr_code,'RR'),'YYYY'),1,4),
        substr(f_calc_quarter
            (fgvopa1_coas_code,fgvopa1_fsyr_code,fgvopa1_fspd_code),1,1),
        fgvopa1_fspd_code,
        fgvopa1_end_date,
        substr(f_split_fields(fgvopa1_concat_acci,1),1,6),
        fgvopa1_fund_code,
        fgvopa1_orgn_code,
        fgvopa1_acct_code,
        fgvopa1_prog_code,
        substr(f_split_fields(fgvopa1_concat_ftyp_hier,1),1,2),
        substr(f_split_fields(fgvopa1_concat_ftyp_hier,4),1,2),
        substr(f_split_fields(fgvopa1_concat_fund_hier,1),1,6),
        substr(f_split_fields(fgvopa1_concat_fund_hier,4),1,6),
        substr(f_split_fields(fgvopa1_concat_fund_hier,7),1,6),
        substr(f_split_fields(fgvopa1_concat_fund_hier,10),1,6),
        substr(f_split_fields(fgvopa1_concat_fund_hier,13),1,6),
        nvl(fgvopa1_fund_code_bavl,fgvopa1_fund_code),
        substr(f_split_fields(fgvopa1_concat_orgn_hier,1),1,6),
        substr(f_split_fields(fgvopa1_concat_orgn_hier,4),1,6),
        substr(f_split_fields(fgvopa1_concat_orgn_hier,7),1,6),
        substr(f_split_fields(fgvopa1_concat_orgn_hier,10),1,6),
        substr(f_split_fields(fgvopa1_concat_orgn_hier,13),1,6),
        substr(f_split_fields(fgvopa1_concat_orgn_hier,16),1,6),
        substr(f_split_fields(fgvopa1_concat_orgn_hier,19),1,6),
        substr(f_split_fields(fgvopa1_concat_orgn_hier,22),1,6),
        nvl(fgvopa1_orgn_code_nsf,fgvopa1_orgn_code),
        substr(f_split_fields(fgvopa1_concat_atyp_hier,1),1,2),
        substr(f_split_fields(fgvopa1_concat_atyp_hier,4),1,2),
        substr(f_split_fields(fgvopa1_concat_acct_hier,1),1,6),
        substr(f_split_fields(fgvopa1_concat_acct_hier,4),1,6),
        substr(f_split_fields(fgvopa1_concat_acct_hier,7),1,6),
        substr(f_split_fields(fgvopa1_concat_acct_hier,10),1,6),
        nvl(fgvopa1_acct_code_pool,fgvopa1_acct_code),
        substr(f_split_fields(fgvopa1_concat_prog_hier,1),1,6),
        substr(f_split_fields(fgvopa1_concat_prog_hier,4),1,6),
        substr(f_split_fields(fgvopa1_concat_prog_hier,7),1,6),
        substr(f_split_fields(fgvopa1_concat_prog_hier,10),1,6),
        substr(f_split_fields(fgvopa1_concat_prog_hier,13),1,6),
        fgvopa1_ytd_accr_budg_orig,
        fgvopa1_ytd_accr_budg_adjust,
        fgvopa1_ytd_accr_budg_orig,
        fgvopa1_ytd_accr_budg_adjust,
        fgvopa1_ytd_accr_actual,
        fgvopa1_ytd_accr_commitments,
        fgvopa1_qtd_budg_change,
        fgvopa1_qtd_actual,
        fgvopa1_qtd_commitments,
        fgvopa1_cpd_budg_change,
        fgvopa1_cpd_actual,
        fgvopa1_cpd_commitments
from    fgvopa1
 "
"BANINST1","FGVGSRY","GASB reports summary data view.","select
FGWREPT_REPORT_TYPE,
FGWREPT_COAS_CODE,
FGWREPT_FSYR_CODE,
FGWREPT_FSPD_CODE,
FGWREPT_FUND_ATTT_CODE,
FGWREPT_FUND_ATTV_CODE,
FGWREPT_ACCT_ATTT_CODE,
FGWREPT_ACCT_ATTV_CODE,
FGWREPT_PROG_ATTT_CODE,
FGWREPT_PROG_ATTV_CODE,
sum(FGWREPT_GASB_AMT),
FGWREPT_NET_ASSET_ATTT_CODE,
FGWREPT_NET_ASSET_ATTV_CODE,
sum(FGWREPT_NET_ASSET_GASB_AMT)
from fgwrept
group by fgwrept_report_type,fgwrept_coas_code,fgwrept_fsyr_code, fgwrept_fspd_code,
fgwrept_fund_attt_code, fgwrept_fund_attv_code,fgwrept_acct_attt_code,
fgwrept_acct_attv_code, fgwrept_prog_attt_code, fgwrept_prog_attv_code,
fgwrept_net_asset_attt_code, fgwrept_net_asset_attv_code
UNION ALL
select
FGRRCLE_REPORT_TYPE,
FGRRCLE_COAS_CODE,
FGRRCLE_FSYR_CODE,
FGRRCLE_FSPD_CODE,
FGRRCLE_FUND_ATTT_CODE,
FGRRCLE_FUND_ATTV_CODE,
FGRRCLE_ACCT_ATTT_CODE,
FGRRCLE_ACCT_ATTV_CODE,
FGRRCLE_PROG_ATTT_CODE,
FGRRCLE_PROG_ATTV_CODE,
sum(FGRRCLE_GASB_AMT),
FGRRCLE_NET_ASSET_ATTT_CODE,
FGRRCLE_NET_ASSET_ATTV_CODE,
sum(FGRRCLE_NET_ASSET_GASB_AMT)
from fgbrcle, fgrrcle
where fgbrcle_complete_ind = 'Y'
and fgbrcle_doc_code = fgrrcle_doc_code
group by fgrrcle_report_type,fgrrcle_coas_code,fgrrcle_fsyr_code, fgrrcle_fspd_code,
fgrrcle_fund_attt_code, fgrrcle_fund_attv_code,fgrrcle_acct_attt_code,
fgrrcle_acct_attv_code, fgrrcle_prog_attt_code, fgrrcle_prog_attv_code,
fgrrcle_net_asset_attt_code, fgrrcle_net_asset_attv_code
 "
"BANINST1","FGVGSBM","GASB reports summary data view.","select
FGVGSRY_REPORT_TYPE,
FGVGSRY_COAS_CODE,
FGVGSRY_FSYR_CODE,
FGVGSRY_FSPD_CODE,
FGVGSRY_FUND_ATTT_CODE,
a.ftvattt_DESC,
FGVGSRY_FUND_ATTV_CODE,
b.ftrattv_DESC,
FGVGSRY_ACCT_ATTT_CODE,
c.ftvattt_DESC,
FGVGSRY_ACCT_ATTV_CODE,
d.ftrattv_DESC,
d.ftrattv_gasb_defer_ind,
FGVGSRY_PROG_ATTT_CODE,
e.ftvattt_DESC,
FGVGSRY_PROG_ATTV_CODE,
f.ftrattv_DESC,
FGVGSRY_GASB_AMT,
FGVGSRY_NET_ASSET_ATTT_CODE,
g.ftvattt_DESC,
FGVGSRY_NET_ASSET_ATTV_CODE,
h.ftrattv_DESC,
FGVGSRY_NET_ASSET_GASB_AMT
from ftvattt a, ftrattv b, ftvattt c, ftrattv d, ftvattt e, ftrattv f,
ftvattt g, ftrattv h, fgvgsry
where
FGVGSRY_coas_code = a.ftvattt_coas_code and
FGVGSRY_fund_attt_code = a.ftvattt_code and
FGVGSRY_coas_code = b.ftrattv_coas_code and
FGVGSRY_fund_attt_code = b.ftrattv_attt_code and
FGVGSRY_fund_attv_code = b.ftrattv_code and
FGVGSRY_coas_code = c.ftvattt_coas_code(+) and
FGVGSRY_acct_attt_code = c.ftvattt_code(+) and
FGVGSRY_coas_code = d.ftrattv_coas_code(+)  and
FGVGSRY_acct_attt_code = d.ftrattv_attt_code(+)  and
FGVGSRY_acct_attv_code = d.ftrattv_code(+)  and
FGVGSRY_coas_code = e.ftvattt_coas_code(+)  and
FGVGSRY_prog_attt_code = e.ftvattt_code(+)  and
FGVGSRY_coas_code = f.ftrattv_coas_code(+)  and
FGVGSRY_prog_attt_code = f.ftrattv_attt_code(+)  and
FGVGSRY_prog_attv_code = f.ftrattv_code(+)  and
FGVGSRY_coas_code = g.ftvattt_coas_code(+)  and
FGVGSRY_net_asset_attt_code = g.ftvattt_code(+)  and
FGVGSRY_coas_code = h.ftrattv_coas_code(+)  and
FGVGSRY_net_asset_attt_code = h.ftrattv_attt_code(+)  and
FGVGSRY_net_asset_attv_code = h.ftrattv_code(+)"
"BANINST1","FGVGLP2","","select  fgbgenl_coas_code,
        fgbgenl_fsyr_code,
        fgbgenl_fund_code,
        fgbgenl_acct_code,
        sum(
            decode(fgbgenl_period,
                '00', fgbgenl_sum_periodic_dr-fgbgenl_sum_periodic_cr,
                      0 ) ),
        sum(
            decode(fgbgenl_period,
                '00', 0,
                      fgbgenl_sum_periodic_dr ) ),
        sum(
            decode(fgbgenl_period,
                '00', 0,
                      fgbgenl_sum_periodic_cr ) ),
        sum(fgbgenl_sum_periodic_dr-fgbgenl_sum_periodic_cr)
from    fgbgenl
group by
        fgbgenl_coas_code,
        fgbgenl_fsyr_code,
        fgbgenl_fund_code,
        fgbgenl_acct_code
 "
"BANINST1","FGVGLP1","","select	fgvglp2_coas_code,
        fgvglp2_fsyr_code,
        ftvfspd_fspd_code,
        ftvfspd_prd_end_date,
        substr(f_get_acci
            ('G',fgvglp2_coas_code,null,null,fgvglp2_fund_code,
             null,fgvglp2_acct_code,null,
             ftvfspd_prd_end_date),1,50),
        fgvglp2_fund_code,
        fgvglp2_acct_code,
        substr(f_coa_hierarchy
            ('FTYP',fgvglp2_coas_code,ftvfund_ftyp_code,null,
                    null,ftvfspd_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('FUND',fgvglp2_coas_code,fgvglp2_fund_code,null,
                    null,ftvfspd_prd_end_date),1,250),
        substr(f_coa_hierarchy
            ('ATYP',fgvglp2_coas_code,ftvacct_atyp_code,null,
                    null,ftvfspd_prd_end_date),1,100),
        substr(f_coa_hierarchy
            ('ACCT',fgvglp2_coas_code,fgvglp2_acct_code,null,
                    null,ftvfspd_prd_end_date),1,200),
        fgvglp2_begin_balance,
        fgvglp2_cyr_debits,
        fgvglp2_cyr_credits,
        fgvglp2_end_balance,
        substr(f_calc_gl_activity
            (fgvglp2_coas_code,fgvglp2_fsyr_code,ftvfspd_fspd_code,
             fgvglp2_fund_code,fgvglp2_acct_code),1,60)
from    ftvfspd,
        ftvfund,
        ftvacct,
        fgvglp2
where	ftvfspd_coas_code = fgvglp2_coas_code
and     ftvfspd_fsyr_code = fgvglp2_fsyr_code
and     ftvfund_coas_code = fgvglp2_coas_code
and     ftvfund_fund_code = fgvglp2_fund_code
and     ftvfund_eff_date <= ftvfspd_prd_end_date
and     ftvfund_nchg_date > ftvfspd_prd_end_date
and     ftvacct_coas_code = fgvglp2_coas_code
and     ftvacct_acct_code = fgvglp2_acct_code
and     ftvacct_eff_date <= ftvfspd_prd_end_date
and     ftvacct_nchg_date > ftvfspd_prd_end_date
union all
select	fgvglp2_coas_code,
        fgvglp2_fsyr_code,
        '14',
        ftvfsyr_end_date,
        substr(f_get_acci
            ('G',fgvglp2_coas_code,null,null,fgvglp2_fund_code,
             null,fgvglp2_acct_code,null,
             ftvfsyr_end_date),1,50),
        fgvglp2_fund_code,
        fgvglp2_acct_code,
        substr(f_coa_hierarchy
            ('FTYP',fgvglp2_coas_code,ftvfund_ftyp_code,null,
                    null,ftvfsyr_end_date),1,100),
        substr(f_coa_hierarchy
            ('FUND',fgvglp2_coas_code,fgvglp2_fund_code,null,
                    null,ftvfsyr_end_date),1,250),
        substr(f_coa_hierarchy
            ('ATYP',fgvglp2_coas_code,ftvacct_atyp_code,null,
                    null,ftvfsyr_end_date),1,100),
        substr(f_coa_hierarchy
            ('ACCT',fgvglp2_coas_code,fgvglp2_acct_code,null,
                    null,ftvfsyr_end_date),1,200),
        fgvglp2_begin_balance,
        fgvglp2_cyr_debits,
        fgvglp2_cyr_credits,
        fgvglp2_end_balance,
        substr(f_calc_gl_activity
            (fgvglp2_coas_code,fgvglp2_fsyr_code,'14',
             fgvglp2_fund_code,fgvglp2_acct_code),1,60)
from    ftvfsyr,
        ftvfund,
        ftvacct,
        fgvglp2
where	ftvfsyr_coas_code = fgvglp2_coas_code
and     ftvfsyr_fsyr_code = fgvglp2_fsyr_code
and     ftvfund_coas_code = fgvglp2_coas_code
and     ftvfund_fund_code = fgvglp2_fund_code
and     ftvfund_eff_date <= ftvfsyr_end_date
and     ftvfund_nchg_date > ftvfsyr_end_date
and     ftvacct_coas_code = fgvglp2_coas_code
and     ftvacct_acct_code = fgvglp2_acct_code
and     ftvacct_eff_date <= ftvfsyr_end_date
and     ftvacct_nchg_date > ftvfsyr_end_date
 "
"BANINST1","FGVGLP0","Web for Executives General Ledger View","select  'B',
        fgvglp1_coas_code,
        substr(to_char(to_date(fgvglp1_fsyr_code,'RR'),'YYYY'),1,4),
        fgvglp1_fspd_code,
        fgvglp1_effective_date,
        substr(f_split_fields(fgvglp1_concat_acci,1),1,6),
        fgvglp1_fund_code,
        fgvglp1_acct_code,
        substr(f_split_fields(fgvglp1_concat_ftyp_hier,1),1,2),
        substr(f_split_fields(fgvglp1_concat_ftyp_hier,4),1,2),
        substr(f_split_fields(fgvglp1_concat_fund_hier,1),1,6),
        substr(f_split_fields(fgvglp1_concat_fund_hier,4),1,6),
        substr(f_split_fields(fgvglp1_concat_fund_hier,7),1,6),
        substr(f_split_fields(fgvglp1_concat_fund_hier,10),1,6),
        substr(f_split_fields(fgvglp1_concat_fund_hier,13),1,6),
        substr(f_split_fields(fgvglp1_concat_atyp_hier,1),1,2),
        substr(f_split_fields(fgvglp1_concat_atyp_hier,4),1,2),
        substr(f_split_fields(fgvglp1_concat_acct_hier,1),1,6),
        substr(f_split_fields(fgvglp1_concat_acct_hier,4),1,6),
        substr(f_split_fields(fgvglp1_concat_acct_hier,7),1,6),
        substr(f_split_fields(fgvglp1_concat_acct_hier,10),1,6),
        fgvglp1_begin_balance,
        fgvglp1_cyr_debits,
        fgvglp1_cyr_credits,
        to_number(f_split_fields(fgvglp1_concat_gl_amounts,1),999999999999999.99),
        to_number(f_split_fields(fgvglp1_concat_gl_amounts,2),999999999999999.99),
        to_number(f_split_fields(fgvglp1_concat_gl_amounts,3),999999999999999.99),
        to_number(f_split_fields(fgvglp1_concat_gl_amounts,4),999999999999999.99),
        fgvglp1_end_balance
from    fgvglp1"
"BANINST1","FGVGDET","GASB reports data extract warehouse table.","select
FGWREPT_REPORT_TYPE,
FGWREPT_COAS_CODE,
FGWREPT_FSYR_CODE,
FGWREPT_FSPD_CODE,
FGWREPT_FUND_CODE,
FGWREPT_FUND_TITLE,
FGWREPT_FUND_HIER_CODE,
FGWREPT_FUND_HIER_TITLE,
FGWREPT_FTYP_CODE,
FGWREPT_FTYP_TITLE,
FGWREPT_FUND_ATTT_CODE,
FGWREPT_FUND_ATTV_CODE,
FGWREPT_ACCT_CODE,
FGWREPT_ACCT_TITLE,
FGWREPT_ACCT_HIER_CODE,
FGWREPT_ACCT_HIER_TITLE,
FGWREPT_ATYP_CODE,
FGWREPT_ATYP_TITLE,
FGWREPT_INT_ATYP_CODE,
FGWREPT_ACCT_ATTT_CODE,
FGWREPT_ACCT_ATTV_CODE,
FGWREPT_PROG_CODE,
FGWREPT_PROG_TITLE,
FGWREPT_PROG_HIER_CODE,
FGWREPT_PROG_HIER_TITLE,
FGWREPT_PROG_ATTT_CODE,
FGWREPT_PROG_ATTV_CODE,
FGWREPT_LEDG_AMT,
FGWREPT_GASB_AMT,
FGWREPT_NET_ASSET_ACCT_CODE,
FGWREPT_NET_ASSET_ATTT_CODE,
FGWREPT_NET_ASSET_ATTV_CODE,
FGWREPT_NET_ASSET_LEDG_AMT ,
FGWREPT_NET_ASSET_GASB_AMT ,
'LEDGER'
from fgwrept
UNION ALL
select
FGRRCLE_REPORT_TYPE,
FGRRCLE_COAS_CODE,
FGRRCLE_FSYR_CODE,
FGRRCLE_FSPD_CODE,
FGRRCLE_FUND_CODE,
ftvfund_title,
substr(f_fund_hier1_fnc(fgrrcle_coas_code,fgrrcle_fund_code,
                        1,sysdate),1,6),
substr(f_fund_hier2_fnc(fgrrcle_coas_code,fgrrcle_fund_code,
                        1,sysdate),1,35),
FTVFUND_FTYP_CODE,
FTVFTYP_TITLE,
FGRRCLE_FUND_ATTT_CODE,
FGRRCLE_FUND_ATTV_CODE,
FGRRCLE_ACCT_CODE,
a.ftvacct_title,
decode(fgkgasb.f_gasb_acct_hierarchy(fgrrcle_coas_code,sysdate),
            'PRED',nvl(A.ftvacct_acct_code_pred,fgrrcle_acct_code),
            'LEVEL1',substr(f_acct_hier1_fnc(fgrrcle_coas_code,
             fgrrcle_acct_code,1,sysdate),1,6),
            'LEVEL2',substr(f_acct_hier1_fnc(fgrrcle_coas_code,
             fgrrcle_acct_code,2,sysdate),1,6),fgrrcle_acct_code),
decode(fgkgasb.f_gasb_acct_hierarchy(fgrrcle_coas_code,sysdate),
           'PRED',B.ftvacct_title,
           'LEVEL1',substr(f_acct_hier2_fnc(fgrrcle_coas_code,
            fgrrcle_acct_code,1,sysdate),1,35),
           'LEVEL2',substr(f_acct_hier2_fnc(fgrrcle_coas_code,
            fgrrcle_acct_code,2,sysdate),1,35),a.ftvacct_title),
a.ftvacct_atyp_code,
ftvatyp_title,
FGRRCLE_INT_ATYP_CODE,
FGRRCLE_ACCT_ATTT_CODE,
FGRRCLE_ACCT_ATTV_CODE,
FGRRCLE_PROG_CODE,
ftvprog_title,
substr(f_prog_hier1_fnc(fgrrcle_coas_code,fgrrcle_prog_code,1,sysdate),1,6),
substr(f_prog_hier2_fnc(fgrrcle_coas_Code,fgrrcle_prog_code,1,sysdate),1,35),
FGRRCLE_PROG_ATTT_CODE,
FGRRCLE_PROG_ATTV_CODE,
FGRRCLE_LEDG_AMT,
FGRRCLE_GASB_AMT,
FGRRCLE_NET_ASSET_ACCT_CODE,
FGRRCLE_NET_ASSET_ATTT_CODE,
FGRRCLE_NET_ASSET_ATTV_CODE,
FGRRCLE_NET_ASSET_LEDG_AMT,
FGRRCLE_NET_ASSET_GASB_AMT,
'RECLASS'
From ftvatyp, ftvacct b, ftvacct a, ftvprog, ftvftyp,ftvfund,fgbrcle, fgrrcle
where fgbrcle_complete_ind = 'Y'
and fgbrcle_doc_code = fgrrcle_doc_code
and ftvfund_coas_code = fgrrcle_coas_code
and ftvfund_fund_code = fgrrcle_fund_code
and ftvfund_eff_date <= sysdate
and ftvfund_nchg_date > sysdate
and ftvftyp_coas_code = ftvfund_coas_code
and FTVFTYP_FTYP_COdE = FTVFUND_FTYP_CODE
and FTVFTYP_EFF_DATE <= sysdate
and FTVFTYP_NCHG_DATE > sysdate
and fgrrcle_coas_code = ftvprog_coas_code(+)
and fgrrcle_prog_code = ftvprog_prog_code(+)
and ftvprog_eff_date(+) <= sysdate
and ftvprog_nchg_date(+) > sysdate
and fgrrcle_coas_code = a.ftvacct_coas_code
and fgrrcle_acct_code = a.ftvacct_acct_code
and a.ftvacct_eff_date <= sysdate
and a.ftvacct_nchg_date > sysdate
and a.ftvacct_coas_code = b.ftvacct_coas_code(+)
and a.ftvacct_acct_code_pred = b.ftvacct_acct_code(+)
and b.ftvacct_eff_date(+) <= sysdate
and b.ftvacct_nchg_date(+) > sysdate
and ftvatyp_coas_code = a.ftvacct_coas_code
and ftvatyp_atyp_code = a.ftvacct_atyp_code
and ftvatyp_eff_date <= sysdate
and ftvatyp_nchg_date > sysdate"
"BANINST1","FGVFUND","General Ledger Fund Code and Title View for Focus","SELECT ftvfund_coas_code,
       ftvfund_fund_code,
       ftvfund_title
FROM  FTVfund, fgbgenl
WHERE Fgbgenl_COAS_CODE = FTVfund_COAS_CODE
and   fgbgenl_fund_code = ftvfund_fund_code
AND   FTVfund_EFF_DATE <= SYSDATE
and   FTVfund_NCHG_DATE > SYSDATE
 "
"BANINST1","FGVFMGR","","SELECT SPRIDEN_ID,
	     f_format_name(spriden_pidm, 'LFMI'),
       FTVFMGR_COAS_CODE,
	     FTVFMGR_ORGN_CODE,
	     FTVFMGR_LOCN_CODE,
       SPRIDEN_CHANGE_IND,
	     SPRIDEN_ACTIVITY_DATE
FROM   SPRIDEN,
 	     FTVFMGR
WHERE (SPRIDEN_PIDM = FTVFMGR_FMGR_CODE_PIDM
	AND  FTVFMGR_FMGR_CODE_PIDM IS NOT NULL)
	AND  SPRIDEN_ENTITY_IND =  'P'
"
"BANINST1","FGVAGCY","","SELECT   SPRIDEN_ID,
	    SPRIDEN_LAST_NAME,
	    SPRIDEN_CHANGE_IND,
	    SPRIDEN_ACTIVITY_DATE
      FROM  SPRIDEN,
	    FTVAGCY
     WHERE  (SPRIDEN_PIDM = FTVAGCY_AGCY_CODE_PIDM
       AND   FTVAGCY_AGCY_CODE_PIDM IS NOT NULL)
       AND   SPRIDEN_ENTITY_IND = 'C'
UNION
     SELECT SPRIDEN_ID,
	    (DECODE(SPRIDEN_MI,
		'',(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME)
		  ,(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME
				      || ' '  || SPRIDEN_MI  || '.'))),
            SPRIDEN_CHANGE_IND,
	    SPRIDEN_ACTIVITY_DATE
       FROM SPRIDEN,
	    FTVAGCY
      WHERE (SPRIDEN_PIDM = FTVAGCY_AGCY_CODE_PIDM
	AND  FTVAGCY_AGCY_CODE_PIDM IS NOT NULL)
	AND  SPRIDEN_ENTITY_IND <> 'C'

 "
"BANINST1","FGVACCT","General Ledger Account Code and Title View for Focus","SELECT distinct ftvacct_coas_code,
       ftvacct_acct_code,
       ftvacct_title
FROM  Fgbgenl, ftvacct
WHERE Fgbgenl_COAS_CODE = FTVAcct_COAS_CODE
AND   Fgbgenl_acct_CODE = FTVAcct_acct_CODE
AND   FTVACCT_EFF_DATE <= SYSDATE
and   FTVACCT_NCHG_DATE > SYSDATE
 "
"BANINST1","FFVDTAG","This view retrieves all the columns from FFBDTGH, FFRDTGA, AND FFRDTGD tables","SELECT
  ffbdtgh_doc_code,
  ffbdtgh_dtyp_num,
  ffbdtgh_submission_num,
  ffbdtgh_trans_date,
  ffbdtgh_dtag_extract_date,
  ffbdtgh_complete_ind,
  ffrdtga_seq_num,
  ffrdtga_acct_status_ind,
  ffrdtga_fsyr_code,
  ffrdtga_rucl_code,
  ffrdtga_acci_code,
  ffrdtga_coas_code,
  ffrdtga_fund_code,
  ffrdtga_orgn_code,
  ffrdtga_acct_code,
  ffrdtga_prog_code,
  ffrdtga_actv_code,
  ffrdtga_locn_code,
  ffrdtga_trans_amt,
  ffrdtga_trans_desc,
  ffrdtga_dr_cr_ind,
  ffrdtga_encd_num,
  ffrdtga_doc_ref_num,
  ffrdtga_dep_num,
  ffrdtgd_dtag_seq_num,
  ffrdtgd_dtag_code,
  ffrdtgd_dtag_date,
  ffrdtgd_dtag_status_code,
  ffrdtgd_otag_code,
  ffrdtgd_ptag_code,
  ffrdtgd_clearing_dtag_code,
  ffrdtgd_dtag_desc,
  ffrdtgd_amt,
  ffrdtgd_cap_ind,
  ffrdtgd_action_code,
  ffrdtgd_action_date,
  ffrdtgd_pohd_code,
  ffrdtgd_podt_item,
  ffrdtgd_invh_code,
  ffrdtgd_invc_item,
  ffrdtgd_other_src_doc_code,
  ffrdtgd_other_src_dtyp_num,
  ffrdtgd_other_src_sub_num,
  ffrdtgd_other_src_seq_num,
  decode(ffrdtgd_clearing_dtag_code, null, decode(ffrdtgd_ptag_code, null,
         ffrdtgd_otag_code, ffrdtgd_ptag_code),ffrdtgd_clearing_dtag_code),
  ftvdtyp_code,
  ftvdtyp_desc,
  decode(ffrdtgd_dtag_status_code,'R','R','P')
from ffbdtgh, ffrdtga, ffrdtgd, ftvdtyp
where ffbdtgh_doc_code = ffrdtga_doc_code
  and ffbdtgh_dtyp_num = ffrdtga_dtyp_num
  and ffbdtgh_submission_num = ffrdtga_submission_num
  and ffrdtga_doc_code = ffrdtgd_doc_code
  and ffrdtga_dtyp_num = ffrdtgd_dtyp_num
  and ffrdtga_submission_num = ffrdtgd_submission_num
  and ffrdtga_seq_num = ffrdtgd_seq_num
  and ftvdtyp_seq_num = ffbdtgh_dtyp_num"
"BANINST1","FFVADJH","Fixed Asset Adjustment history view.","SELECT FFBADJH_CODE,
         60,
         FFBADJH_DESC,
         FFBADJH_FUNCTION_CODE,
         FFBADJH_TRANS_DATE,
         0,
         FFBMAST_OTAG_CODE,
         FFBMAST_PTAG_CODE,
         FFBADJH_COMPLETE_IND,
         FFBADJH_APPR_IND
    FROM FFBMAST, FFRADJD, FFBADJH
   WHERE FFBADJH_CODE = FFRADJD_ADJH_CODE
     AND FFRADJD_OTAG_CODE = FFBMAST_OTAG_CODE
   UNION
  SELECT FFRDTGD_DOC_CODE,
         FFRDTGD_DTYP_NUM,
         decode(FFRDTGD_DTYP_NUM,20,'Dtag from Journal Voucher',
                                 21,'Dtag from Stores Issue',
                                 80,'Dtag from Direct cash Receipt',NULL),
         FFRDTGD_ACTION_CODE,
         FFRDTGD_DTAG_DATE,
         FFRDTGD_SUBMISSION_NUM,
         FFRDTGD_OTAG_CODE,
         FFRDTGD_PTAG_CODE,
         FFBDTGH_COMPLETE_IND,
         'Y'
    FROM FFRDTGD, FFBDTGH
   WHERE FFRDTGD_DOC_CODE = FFBDTGH_DOC_CODE"
"BANINST1","FCVPTOT","","SELECT 'G',
       FCBPRJC_PROJ_CODE,
       0,
       FCBPRJC_RTYP_SEQNO,
       SUM(FCBPRJC_UNITS),
       SUM(FCBPRJC_TOT_COST)
FROM   FCBPRJC
GROUP  BY FCBPRJC_PROJ_CODE,
          FCBPRJC_RTYP_SEQNO
UNION
SELECT 'I',
       FCBPRJC_PROJ_CODE,
       FCBPRJC_CUST_PIDM,
       FCBPRJC_RTYP_SEQNO,
       FCBPRJC_UNITS,
       FCBPRJC_TOT_COST
FROM   FCBPRJC
 "
"BANINST1","FCVPRJC","","SELECT FCBPRJC_PROJ_CODE,
       FCBPRJC_RTYP_SEQNO,
       SUM(FCBPRJC_UNITS),
       SUM(FCBPRJC_TOT_COST)
FROM   FCBPRJC
WHERE  FCBPRJC_PROJ_CODE IS NOT NULL
GROUP  BY FCBPRJC_PROJ_CODE, FCBPRJC_RTYP_SEQNO
 "
"BANINST1","FCVEMPL","","SELECT DISTINCT SPRIDEN_PIDM,
       SPRIDEN_ID,
       spriden_surname_prefix,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI,
       SPRIDEN_ENTITY_IND,
       FCREMPO_COAS_CODE,
       FCREMPO_ORGN_CODE
FROM   SPRIDEN,
       FCREMPO
WHERE  SPRIDEN_PIDM = FCREMPO_PIDM
AND    SPRIDEN_CHANGE_IND is null
AND    EXISTS
           (SELECT 'X'
            FROM   FTVORGN
            WHERE  FTVORGN_COAS_CODE = FCREMPO_COAS_CODE
	    AND    FTVORGN_ORGN_CODE = FCREMPO_ORGN_CODE
	    AND    FTVORGN_EFF_DATE <= SYSDATE
            AND    FTVORGN_NCHG_DATE > SYSDATE
            AND    (FTVORGN_TERM_DATE >= SYSDATE
            OR     FTVORGN_TERM_DATE IS NULL)
            AND    FTVORGN_STATUS_IND = 'A')
"
"BANINST1","FCVCUST","","SELECT SPRIDEN_PIDM,
       SPRIDEN_ID,
       spriden_surname_prefix,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI,
       SPRIDEN_ENTITY_IND,
       FTVCUST_EFF_DATE,
       FTVCUST_TERM_DATE
FROM   SPRIDEN,
       FTVCUST
WHERE  SPRIDEN_PIDM = FTVCUST_PIDM
  AND  SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","FCVCTOT","","SELECT 'G',
       '',
       FCBPRJC_CUST_PIDM,
       FCBPRJC_RTYP_SEQNO,
       SUM(FCBPRJC_UNITS),
       SUM(FCBPRJC_TOT_COST)
FROM   FCBPRJC
GROUP  BY FCBPRJC_CUST_PIDM,
          FCBPRJC_RTYP_SEQNO
UNION
SELECT 'I',
       FCBPRJC_PROJ_CODE,
       FCBPRJC_CUST_PIDM,
       FCBPRJC_RTYP_SEQNO,
       FCBPRJC_UNITS,
       FCBPRJC_TOT_COST
FROM   FCBPRJC
 "
"BANINST1","FBVBLDL","View of all Budget Line rows from FBBBLIN and Deleted Budget Line records from FBRAUDT","SELECT
      FBBBLIN_COAS_CODE,
      FBBBLIN_OBUD_CODE,
      FBBBLIN_OBPH_CODE,
      FBBBLIN_BUDG_DUR_CODE,
      FBBBLIN_BUDG_MEAS_TYPE,
      FBBBLIN_BUDG_PRD_TYPE,
      'N',
      FBBBLIN_AUDIT_EXISTS_IND,
      FBBBLIN_SEQ_DISPLAY_NUM,
      FBBBLIN_BUDG_AMT,
      FBBBLIN_ACTIVITY_DATE,
      FBBBLIN_USER_ID,
      FBBBLIN_FUND_CODE,
      FBBBLIN_ORGN_CODE,
      FBBBLIN_ACCT_CODE,
      FBBBLIN_PROG_CODE,
      FBBBLIN_ACTV_CODE,
      FBBBLIN_LOCN_CODE,
      FBBBLIN_TEXT_SEQ_NUM,
      FBBBLIN_ADJT_AMT,
      FBBBLIN_ROLL_AMT,
      FBBBLIN_ADOPT_BUD_AMT,
      FBBBLIN_TEMP_ADOPT_AMT,
      FBBBLIN_TEMP_ADJT_AMT,
      FBBBLIN_ADJT_BUD_AMT,
      FBBBLIN_BASE_BUDG_AMT,
      FBBBLIN_BASE_COAS_CODE,
      FBBBLIN_BASE_FSYR_CODE,
      FBBBLIN_ORIGIN_POINT,
      FBKBUDG.F_GET_BUDGET_EFFECTIVE_DATE(FBBBLIN_COAS_CODE,FBBBLIN_OBUD_CODE)
   FROM FBBBLIN
   UNION SELECT
      FBRAUDT_COAS_CODE,
      FBRAUDT_OBUD_CODE,
      FBRAUDT_OBPH_CODE,
      FBRAUDT_BUDG_DUR_CODE,
      FBRAUDT_BUDG_MEAS_TYPE,
      FBRAUDT_BUDG_PRD_TYPE,
      FBRAUDT_DELETED_IND,
      'Y',
      FBRAUDT_SEQ_DISPLAY_NUM,
      0,
      FBRAUDT_ACTIVITY_DATE,
      FBRAUDT_USER_ID,
      FBRAUDT_FUND_CODE,
      FBRAUDT_ORGN_CODE,
      FBRAUDT_ACCT_CODE,
      FBRAUDT_PROG_CODE,
      FBRAUDT_ACTV_CODE,
      FBRAUDT_LOCN_CODE,
      FBRAUDT_TEXT_SEQ_NUM,
      TO_NUMBER(NULL),
      TO_NUMBER(NULL),
      FBRAUDT_ADOPT_BUD_AMT,
      FBRAUDT_TEMP_ADOPT_AMT,
      FBRAUDT_TEMP_ADJT_AMT,
      FBRAUDT_ADJT_BUD_AMT,
      FBRAUDT_BASE_BUDG_AMT,
      FBRAUDT_BASE_COAS_CODE,
      FBRAUDT_BASE_FSYR_CODE,
      FBRAUDT_ORIGIN_POINT,
      FBKBUDG.F_GET_BUDGET_EFFECTIVE_DATE(FBRAUDT_COAS_CODE,FBRAUDT_OBUD_CODE)
   FROM FBRAUDT A
  WHERE A.FBRAUDT_DELETED_IND = 'Y'
    AND A.FBRAUDT_SEQ_NUM =
         (SELECT MAX(B.FBRAUDT_SEQ_NUM)
            FROM FBRAUDT B
         WHERE B.FBRAUDT_COAS_CODE = A.FBRAUDT_COAS_CODE
           AND B.FBRAUDT_OBUD_CODE = A.FBRAUDT_OBUD_CODE
           AND B.FBRAUDT_OBPH_CODE = A.FBRAUDT_OBPH_CODE
           AND B.FBRAUDT_FUND_CODE = A.FBRAUDT_FUND_CODE
           AND B.FBRAUDT_ORGN_CODE = A.FBRAUDT_ORGN_CODE
           AND B.FBRAUDT_PROG_CODE = A.FBRAUDT_PROG_CODE
           AND B.FBRAUDT_ACCT_CODE = A.FBRAUDT_ACCT_CODE
           AND NVL(B.FBRAUDT_ACTV_CODE,'NoActv') = NVL(A.FBRAUDT_ACTV_CODE,'NoActv')
           AND NVL(B.FBRAUDT_LOCN_CODE,'NoLocn') = NVL(A.FBRAUDT_LOCN_CODE,'NoLocn')
           AND B.FBRAUDT_BUDG_DUR_CODE = A.FBRAUDT_BUDG_DUR_CODE)
 "
"BANINST1","FAVVRCK","","SELECT FABINVH_CODE,
                 'N',
                 FABINVH_CR_MEMO_IND,
                 FABINVH_VEND_INV_CODE,
                 SPRIDEN_ID,
                 FABINVH_VEND_CHECK_PIDM,
                 FABINVH_ACTIVITY_DATE,
                 FABINVH_INVOICE_DATE,
                 FABINCK_CHECK_NUM,
                 FABINCK_CHECK_DATE,
                 FABINCK_NET_AMT,
                 FABINCK_BANK_CODE
            FROM SPRIDEN,
                 FABINVH,
                 FABINCK
           WHERE FABINCK_INVH_CODE = FABINVH_CODE
             AND ( FABINVH_MULTIPLE_INV_IND = 'N' or
                   FABINVH_MULTIPLE_INV_IND is null)
             AND (SPRIDEN_PIDM = FABINVH_VEND_PIDM
             AND  FABINVH_VEND_PIDM IS NOT NULL
             and  spriden_change_ind is null)
             AND 0 <
                     (SELECT COUNT(FARINVC_ITEM)
                        FROM FARINVC
                       WHERE FARINVC_INVH_CODE     = FABINVH_CODE
                         AND FARINVC_OPEN_PAID_IND = 'P')
union
SELECT FABINVH_CODE,
                 'Y',
                 FABINVH_CR_MEMO_IND,
                 FARVINV_VEND_INV_CODE,
                 SPRIDEN_ID,
                 FABINVH_VEND_CHECK_PIDM,
                 FABINVH_ACTIVITY_DATE,
                 FABINVH_INVOICE_DATE,
                 FABINCK_CHECK_NUM,
                 FABINCK_CHECK_DATE,
                 FARVINV_VEND_INV_TOTAL,
                 FABINCK_BANK_CODE
            FROM SPRIDEN,
                 FABINVH,
                 FARVINV,
                 FABINCK
           WHERE FABINCK_INVH_CODE = FABINVH_CODE
             AND FABINVH_CODE = FARVINV_INVH_CODE
             AND FABINVH_MULTIPLE_INV_IND = 'Y'
             AND (SPRIDEN_PIDM = FABINVH_VEND_PIDM
             AND  FABINVH_VEND_PIDM IS NOT NULL
             and  spriden_change_ind is null)
             AND 0 <
                     (SELECT COUNT(FARINVC_ITEM)
                        FROM FARINVC
                       WHERE FARINVC_INVH_CODE     = FABINVH_CODE
                         AND FARINVC_OPEN_PAID_IND = 'P')

 "
"BANINST1","FAVVNDR","","SELECT   f_format_name(spriden_pidm, 'LFMI'),
	       SPRIDEN_ID,
	       FTVVEND_PIDM,
	       FTVVEND_1099_RPT_ID,
	       FTVVEND_TRAT_CODE,
	       FTVVEND_GROUPING_IND,
	       FTVVEND_CONTACT,
	       FTVVEND_DISC_CODE
	  FROM SPRIDEN,
	       FTVVEND
	 WHERE SPRIDEN_PIDM = FTVVEND_PIDM
	   AND FTVVEND_PIDM IS NOT NULL
"
"BANINST1","FAVVNAL","","( SELECT SPRIDEN_ID,
                 SPRIDEN_LAST_NAME,
                 FTVVEND_CARRIER_IND,
                 SPRIDEN_CHANGE_IND,
                 SPRIDEN_ACTIVITY_DATE
            FROM SPRIDEN,
                 FTVVEND
           WHERE (SPRIDEN_PIDM = FTVVEND_PIDM
             AND  FTVVEND_PIDM IS NOT NULL)
             AND SPRIDEN_ENTITY_IND = 'C'
UNION
          SELECT SPRIDEN_ID,
                 (DECODE(SPRIDEN_MI,
                     '',(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME)
                       ,(SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME
                                           || ' '  || SPRIDEN_MI || '.'))),
                 FTVVEND_CARRIER_IND,
                 SPRIDEN_CHANGE_IND,
                 SPRIDEN_ACTIVITY_DATE
            FROM SPRIDEN,
                 FTVVEND
           WHERE (SPRIDEN_PIDM = FTVVEND_PIDM
             AND  FTVVEND_PIDM IS NOT NULL)
             AND SPRIDEN_ENTITY_IND <> 'C')

 "
"BANINST1","FAVVIC3","Vendor Invoice Consolidated View 3","select	favvic1_invh_code,
        favvic1_multiple_inv_ind,
        favvic1_vend_inv_code,
        favvic1_vend_pidm,
        favvic1_vend_inv_date,
        favvic1_vend_inv_total,
        favtaxl_taxl_amt
from    favvic1, favtaxl
where   favvic1_invh_code = favtaxl_invh_code
        and favvic1_multiple_inv_ind = 'N'
union
select	farvinv_invh_code,
        'Y',
        farvinv_vend_inv_code,
        farvinv_vend_pidm,
        farvinv_vend_inv_date,
        farvinv_vend_inv_total,
        farvinv_vend_inv_taxl_amt
from    farvinv"
"BANINST1","FAVVIC2","Vendor Invoice Consolidated View 2","select	favvic1_invh_code,
        favvic1_vend_inv_code,
        favvic1_vend_pidm,
        fabinvh_appr_ind,
        fabinvh_cr_memo_ind,
        fabinvh_open_paid_ind,
        fabinvh_cancel_ind,
        fabinvh_pmt_due_date,
        fabinvh_trans_date,
        fabinvh_invoice_date
from   fabinvh,favvic1
where  favvic1_invh_code = fabinvh_code
 "
"BANINST1","FAVVIC1","Vendor Invoice Consolidated View 1","select fabinvh_code,
       'N',
       fabinvh_vend_inv_code,
       fabinvh_vend_pidm,
       fabinvh_invoice_date,
       round(sum(nvl(farinva_appr_amt,0) -
           nvl(farinva_disc_amt,0)+
           nvl(farinva_tax_amt,0) +
           nvl(farinva_addl_chrg_amt,0) ),2)
from   fabinvh, farinva
where  fabinvh_code = farinva_invh_code
       and (fabinvh_multiple_inv_ind = 'N'
           or fabinvh_multiple_inv_ind is NULL)
group by fabinvh_code,fabinvh_vend_inv_code,fabinvh_vend_pidm,
         fabinvh_invoice_date
union
select	farvinv_invh_code,
        'Y',
        farvinv_vend_inv_code,
        farvinv_vend_pidm,
        farvinv_vend_inv_date,
        farvinv_vend_inv_total
from    farvinv"
"BANINST1","FAVVHI6","Vendor History (Open Invoices,Paid Invoices,Credit Memos) by Fiscal Year View","SELECT favvhi5_pidm,
          favvhi5_fsyr_code,
          SUM(favvhi5_credit_memo_count),
          SUM(favvhi5_credit_memo_amt),
          SUM(favvhi5_open_count),
          SUM(favvhi5_open_amt),
          SUM(favvhi5_paid_count),
          SUM(favvhi5_paid_amt)
     FROM favvhi5
 GROUP BY favvhi5_pidm, favvhi5_FSYR_CODE
 "
"BANINST1","FAVVHI5","Vendor History (Open Invoices,Paid Invoices,Credit Memos) by Fiscal Year View","SELECT favvhi4_pidm,
       favvhi4_fsyr_code,
       nvl(fakvhi2.f_get_credit_memo_count(favvhi4_pidm,favvhi4_fsyr_code,favvhi4_cancel_ind),0),
       nvl(fakvhi2.f_get_credit_memo_amt(favvhi4_pidm,favvhi4_fsyr_code,favvhi4_cancel_ind),0),
       nvl(fakvhi2.f_get_open_count(favvhi4_pidm,favvhi4_fsyr_code,favvhi4_cancel_ind),0),
       nvl(fakvhi2.f_get_open_amt(favvhi4_pidm,favvhi4_fsyr_code,favvhi4_cancel_ind),0),
       nvl(fakvhi2.f_get_paid_count(favvhi4_pidm,favvhi4_fsyr_code,favvhi4_cancel_ind),0),
       nvl(fakvhi2.f_get_paid_amt(favvhi4_pidm,favvhi4_fsyr_code,favvhi4_cancel_ind),0),
       favvhi4_cancel_ind
FROM   favvhi4
 "
"BANINST1","FAVVHI4","Vendor History (Open Invoices,Paid Invoices,Credit Memos) by Fiscal Year View","SELECT DISTINCT fabinvh_vend_pidm,
       farinva_fsyr_code,
       fabinvh_cancel_ind
  FROM  fabinvh a,farinva
 WHERE fabinvh_code = farinva_invh_code
   AND farinva.rowid = (SELECT rowid
                          FROM farinva
                         WHERE farinva_invh_code = a.fabinvh_code
                           AND rownum = 1)
 "
"BANINST1","FAVVHI3","Document Summary View for Vendor History View/Query","SELECT fabinvh_vend_pidm,
       farinva_fsyr_code,
       fabinvh_code,
       fakvhi1.f_get_invoice_amt(fabinvh_code),
       fabinvh_open_paid_ind,
       fabinvh_cr_memo_ind,
       fabinvh_cancel_ind,
       fabinvh_complete_ind,
       fabinvh_appr_ind
  FROM fabinvh a, farinva
 WHERE fabinvh_code = farinva_invh_code
   AND farinva.rowid = (SELECT rowid
                          FROM farinva
                         WHERE farinva_invh_code = a.fabinvh_code
                           AND rownum = 1)
 "
"BANINST1","FAVVEND","","SELECT SPRIDEN_PIDM,
               SPRIDEN_ID,
               spriden_surname_prefix,
               SPRIDEN_LAST_NAME,
               SPRIDEN_FIRST_NAME,
               SPRIDEN_MI,
               SPRIDEN_ENTITY_IND,
               FTVVEND_EFF_DATE,
               FTVVEND_TERM_DATE,
               FTVVEND_CONTACT
          FROM SPRIDEN,
               FTVVEND
         WHERE SPRIDEN_PIDM = FTVVEND_PIDM"
"BANINST1","FAVTAXL","Vendor Invoice Taxliabilty View ","select fabinvh_code,
       fabinvh_multiple_inv_ind,
       round(sum(farintx_tax_amt),2)
from   fabinvh, farintx
where  fabinvh_code = farintx_invh_code
   and fabinvh_multiple_inv_ind = 'N'
   and farintx_pay_tax_to = 'T'
   and farintx_seq_num is null
group by fabinvh_code,fabinvh_multiple_inv_ind"
"BANINST1","FAVINVQ","This view retrieves Invoice\Credit Memo List detail information","SELECT
   fabinvh_code,
   fabinvh_pohd_code,
   fabinvh_vend_pidm,
   (SELECT spriden_id
      FROM spriden
     WHERE spriden_pidm = fabinvh_vend_pidm
       AND spriden_change_ind IS NULL),
   NVL(fabinvh_one_time_vend_name, f_format_name(fabinvh_vend_pidm,'LFMI')),
   fabinvh_open_paid_ind,
   fabinvh_activity_date,
   fabinvh_user_id,
   fabinvh_vend_inv_code,
   fabinvh_invoice_date,
   fabinvh_pmt_due_date,
   fabinvh_trans_date,
   fabinvh_cr_memo_ind,
   fabinvh_1099_ind,
   fabinvh_1099_id,
   (SELECT ftvityp_code
      FROM ftvityp
     WHERE ftvityp_seq_code = fabinvh_ityp_seq_code),
   (SELECT ftvityp_desc
      FROM ftvityp
     WHERE ftvityp_seq_code = fabinvh_ityp_seq_code),
   fabinvh_text_ind,
   fabinvh_appr_ind,
   fabinvh_complete_ind,
   fabinvh_disc_code,
   fabinvh_hold_ind,
   fabinvh_susp_ind,
   fabinvh_susp_ind_addl,
   fabinvh_cancel_ind,
   fabinvh_cancel_date,
   fabinvh_atyp_code,
   fabinvh_atyp_seq_num,
   fabinvh_grouping_ind,
   fabinvh_bank_code,
   fabinvh_ruiv_ind,
   fabinvh_edit_defer_ind,
   fabinvh_tgrp_code,
   fabinvh_submission_number,
   fabinvh_vend_check_pidm,
   (SELECT spriden_id
      FROM spriden
     WHERE spriden_pidm = fabinvh_vend_check_pidm
       AND spriden_change_ind IS NULL),
   fabinvh_invoice_type_ind,
   fabinvh_curr_code,
   fabinvh_disb_agent_ind,
   fabinvh_atyp_code,
   fabinvh_atyp_seq_num,
   fabinvh_nsf_on_off_ind,
   fabinvh_single_acctg_ind,
   fabinvh_ruiv_installment_ind,
   fabinvh_multiple_inv_ind,
   fabinvh_cancel_code,
   fabinvh_ach_override_ind,
   DECODE(fabinvh_origin_code,NULL,'N','FAPINVTZ','Y','FAPINVT','Y','N'),
   fabinvh_match_required,
   fabinvh_create_user,
   fabinvh_create_date,
   fabinvh_complete_user,
   fabinvh_complete_date,
   fabinvh_data_origin,
   fabinvh_create_source,
   (SELECT SUM((ROUND(NVL(farinvc_appr_qty,0) * NVL(farinvc_appr_unit_price,0),2)) + NVL(farinvc_addl_chrg_amt,0) +
           NVL(farinvc_tax_amt,0) - NVL(farinvc_disc_amt,0))
      FROM farinvc
     WHERE farinvc_invh_code = fabinvh_code),
   (SELECT ftvvend_pmt_hold_rsn_code
      FROM ftvvend
     WHERE ftvvend_pidm = fabinvh_vend_pidm)
     FROM fabinvh"
"BANINST1","FAVINVH","Invoice View for BANNERQuest ","SELECT FABINVH_CODE,
 FABINVH_POHD_CODE,
 FABINVH_INVOICE_DATE,
 FABINVH_ADDL_CHRG_AMT,
 SUM(NVL(FARINVC_APPR_QTY,0) * NVL(FARINVC_APPR_UNIT_PRICE,0)
             + NVL(FARINVC_ADDL_CHRG_AMT,0) + NVL(FARINVC_TAX_AMT,0)
             - NVL(FARINVC_DISC_AMT,0)),
 FABINVH_VEND_PIDM,
 FABINVH_OPEN_PAID_IND,
 FABINVH_ACTIVITY_DATE,
 FABINVH_USER_ID,
 FABINVH_VEND_INV_CODE,
 FABINVH_PMT_DUE_DATE,
 FABINVH_TRANS_DATE,
 FABINVH_CR_MEMO_IND,
 FABINVH_ADJT_CODE,
 FABINVH_ADJT_DATE,
 FABINVH_1099_IND,
 FABINVH_1099_ID,
 FABINVH_ITYP_SEQ_CODE,
 FABINVH_TEXT_IND,
 FABINVH_APPR_IND,
 FABINVH_COMPLETE_IND,
 FABINVH_DISC_CODE,
 FABINVH_TRAT_CODE,
 FABINVH_HOLD_IND,
 FABINVH_SUSP_IND,
 FABINVH_SUSP_IND_ADDL,
 FABINVH_CANCEL_IND,
 FABINVH_CANCEL_DATE,
 FABINVH_POST_DATE,
 FABINVH_ATYP_CODE,
 FABINVH_ATYP_SEQ_NUM,
 FABINVH_GROUPING_IND,
 FABINVH_BANK_CODE,
 FABINVH_RUIV_IND,
 FABINVH_EDIT_DEFER_IND,
 FABINVH_OVERRIDE_TAX_AMT,
 FABINVH_TGRP_CODE,
 FABINVH_SUBMISSION_NUMBER,
 FABINVH_VEND_CHECK_PIDM
FROM FABINVH, FARINVC
WHERE FABINVH_CODE = FARINVC_INVH_CODE
GROUP BY FABINVH_CODE,
 FABINVH_POHD_CODE,
 FABINVH_INVOICE_DATE,
 FABINVH_ADDL_CHRG_AMT,
 FABINVH_VEND_PIDM,
 FABINVH_OPEN_PAID_IND,
 FABINVH_ACTIVITY_DATE,
 FABINVH_USER_ID,
 FABINVH_VEND_INV_CODE,
 FABINVH_PMT_DUE_DATE,
 FABINVH_TRANS_DATE,
 FABINVH_CR_MEMO_IND,
 FABINVH_ADJT_CODE,
 FABINVH_ADJT_DATE,
 FABINVH_1099_IND,
 FABINVH_1099_ID,
 FABINVH_ITYP_SEQ_CODE,
 FABINVH_TEXT_IND,
 FABINVH_APPR_IND,
 FABINVH_COMPLETE_IND,
 FABINVH_DISC_CODE,
 FABINVH_TRAT_CODE,
 FABINVH_HOLD_IND,
 FABINVH_SUSP_IND,
 FABINVH_SUSP_IND_ADDL,
 FABINVH_CANCEL_IND,
 FABINVH_CANCEL_DATE,
 FABINVH_POST_DATE,
 FABINVH_ATYP_CODE,
 FABINVH_ATYP_SEQ_NUM,
 FABINVH_GROUPING_IND,
 FABINVH_BANK_CODE,
 FABINVH_RUIV_IND,
 FABINVH_EDIT_DEFER_IND,
 FABINVH_OVERRIDE_TAX_AMT,
 FABINVH_TGRP_CODE,
 FABINVH_SUBMISSION_NUMBER,
 FABINVH_VEND_CHECK_PIDM

 "
"BANINST1","FAVINSE","","SELECT FABINVH_BANK_CODE,
                 SPRIDEN_ID,
                 FABINVH_CODE,
                 FABINVH_ACTIVITY_DATE,
                 FABINVH_INVOICE_DATE,
                 FABINVH_PMT_DUE_DATE,
                 FABINVH_ADDL_CHRG_AMT,
                 FABINVH_DISC_CODE,
                 SPRIDEN_PIDM,
                 SPRIDEN_ENTITY_IND,
                 spriden_surname_prefix,
                 SPRIDEN_LAST_NAME,
                 SPRIDEN_FIRST_NAME,
                 SPRIDEN_MI,
                 FABINVH_ATYP_CODE,
                 FABINVH_ATYP_SEQ_NUM,
                 FABINVH_ACH_OVERRIDE_IND,
                 FABINVH_VEND_HOLD_OVRD_IND
            FROM SPRIDEN,
                 FABINVH
           WHERE (SPRIDEN_PIDM =
                    decode(FABINVH_VEND_CHECK_PIDM,'', FABINVH_VEND_PIDM,
                           FABINVH_VEND_CHECK_PIDM)
             and  spriden_change_ind is null)
             AND FABINVH_APPR_IND      = 'Y'
             AND FABINVH_OPEN_PAID_IND = 'O'
             AND FABINVH_HOLD_IND      = 'N'
             AND FABINVH_CANCEL_IND    = 'N'
             AND FABINVH_BANK_CODE IS NOT NULL
UNION
          SELECT FARINVA_BANK_CODE,
                 SPRIDEN_ID,
                 FABINVH_CODE,
                 FABINVH_ACTIVITY_DATE,
                 FABINVH_INVOICE_DATE,
                 FABINVH_PMT_DUE_DATE,
                 FABINVH_ADDL_CHRG_AMT,
                 FABINVH_DISC_CODE,
                 SPRIDEN_PIDM,
                 SPRIDEN_ENTITY_IND,
                 spriden_surname_prefix,
                 SPRIDEN_LAST_NAME,
                 SPRIDEN_FIRST_NAME,
                 SPRIDEN_MI,
                 FABINVH_ATYP_CODE,
                 FABINVH_ATYP_SEQ_NUM,
                 FABINVH_ACH_OVERRIDE_IND,
                 FABINVH_VEND_HOLD_OVRD_IND
            FROM SPRIDEN,
                 FABINVH,
                 FARINVC,
                 FARINVA
           WHERE (SPRIDEN_PIDM =
                    decode(FABINVH_VEND_CHECK_PIDM,'', FABINVH_VEND_PIDM,
                           FABINVH_VEND_CHECK_PIDM)
             and  spriden_change_ind is null)
             AND FARINVC_INVH_CODE     = FABINVH_CODE
             AND FARINVA_INVH_CODE     = FABINVH_CODE
             AND (FARINVA_ITEM          = FARINVC_ITEM
              or farinva_item = 0)
             AND FARINVC_HOLD_IND      = 'N'
             AND FARINVC_OPEN_PAID_IND = 'O'
             AND FABINVH_APPR_IND      = 'Y'
             AND FABINVH_OPEN_PAID_IND = 'O'
             AND FABINVH_HOLD_IND      = 'N'
             AND FABINVH_CANCEL_IND    = 'N'
             AND FABINVH_BANK_CODE IS NULL
"
"BANINST1","FAVINCK","","( SELECT FABINVH_VEND_PIDM,
                 FABINVH_GROUPING_IND
            FROM FABINVH,
                 FTVVEND
           WHERE FABINVH_APPR_IND      = 'Y'
             AND FABINVH_OPEN_PAID_IND = 'O'
             AND FABINVH_HOLD_IND      = 'N'
             AND FABINVH_CANCEL_IND    = 'N'
             AND FABINVH_GROUPING_IND  = FTVVEND_GROUPING_IND
             AND FTVVEND_PIDM          = FABINVH_VEND_PIDM
             AND FABINVH_VEND_PIDM IS NOT NULL
UNION
          SELECT FABINVH_VEND_PIDM,
                 'M'
            FROM FABINVH,
                 FTVVEND
           WHERE FABINVH_APPR_IND      = 'Y'
             AND FABINVH_OPEN_PAID_IND = 'O'
             AND FABINVH_HOLD_IND      = 'N'
             AND FABINVH_CANCEL_IND    = 'N'
             AND FABINVH_GROUPING_IND <> FTVVEND_GROUPING_IND
             AND FTVVEND_PIDM          = FABINVH_VEND_PIDM
             AND FABINVH_VEND_PIDM IS NOT NULL)

 "
"BANINST1","FAVHOLD","","( SELECT FABINVH_VEND_PIDM,
                 FABINVH_CODE,
                 FABINVH_BANK_CODE,
                 FABINVH_PMT_DUE_DATE,
                 FABINVH_DISC_CODE,
                 FABINVH_1099_IND,
                 FABINVH_GROUPING_IND,
                 FABINVH_CR_MEMO_IND
            FROM FABINVH
           WHERE FABINVH_APPR_IND      = 'Y'
             AND FABINVH_OPEN_PAID_IND = 'O'
             AND FABINVH_HOLD_IND      = 'N'
             AND FABINVH_CANCEL_IND    = 'N'
             AND FABINVH_BANK_CODE IS NOT NULL
             AND FABINVH_VEND_PIDM IS NOT NULL
UNION
          SELECT FABINVH_VEND_PIDM,
                 FABINVH_CODE,
                 FARINVA_BANK_CODE,
                 FABINVH_PMT_DUE_DATE,
                 FABINVH_DISC_CODE,
                 FABINVH_1099_IND,
                 FABINVH_GROUPING_IND,
                 FABINVH_CR_MEMO_IND
            FROM FABINVH,
                 FARINVA
           WHERE FABINVH_APPR_IND      = 'Y'
             AND FABINVH_OPEN_PAID_IND = 'O'
             AND FABINVH_HOLD_IND      = 'N'
             AND FABINVH_CANCEL_IND    = 'N'
             AND FARINVA_INVH_CODE     = FABINVH_CODE
             AND FABINVH_VEND_PIDM IS NOT NULL
             AND FABINVH_BANK_CODE IS NULL)

 "
"BANINST1","FAVCASH","","SELECT FABINVH_BANK_CODE,
                FABINVH_CODE,
                FABINVH_INVOICE_DATE,
                FABINVH_PMT_DUE_DATE,
                FABINVH_DISC_CODE,
                FABINVH_ADDL_CHRG_AMT
           FROM FABINVH
          WHERE FABINVH_APPR_IND      = 'Y'
            AND FABINVH_OPEN_PAID_IND = 'O'
            AND FABINVH_HOLD_IND      = 'N'
            AND FABINVH_CANCEL_IND    = 'N'
            AND FABINVH_BANK_CODE IS NOT NULL
UNION
         SELECT FARINVA_BANK_CODE,
                FABINVH_CODE,
                FABINVH_INVOICE_DATE,
                FABINVH_PMT_DUE_DATE,
                FABINVH_DISC_CODE,
                FABINVH_ADDL_CHRG_AMT
           FROM FABINVH,
                FARINVC,
                FARINVA
          WHERE FARINVA_INVH_CODE     = FABINVH_CODE
            AND FARINVC_INVH_CODE     = FABINVH_CODE
            AND (FARINVA_ITEM          = FARINVC_ITEM
             or  farinva_item = 0)
            AND FARINVC_HOLD_IND      = 'N'
            AND FARINVC_OPEN_PAID_IND = 'O'
            AND FABINVH_APPR_IND      = 'Y'
            AND FABINVH_OPEN_PAID_IND = 'O'
            AND FABINVH_HOLD_IND      = 'N'
            AND FABINVH_CANCEL_IND    = 'N'
            AND FABINVH_BANK_CODE is null

 "
"BANINST1","FAVCARR","","SELECT SPRIDEN_PIDM,
               SPRIDEN_ID,
               spriden_surname_prefix,
               SPRIDEN_LAST_NAME,
               SPRIDEN_FIRST_NAME,
               SPRIDEN_MI,
               SPRIDEN_ENTITY_IND,
               FTVVEND_EFF_DATE,
               FTVVEND_CARRIER_IND,
               FTVVEND_CONTACT
          FROM SPRIDEN,
               FTVVEND
         WHERE SPRIDEN_PIDM = FTVVEND_PIDM
           AND (FTVVEND_CARRIER_IND = 'D'
            OR  FTVVEND_CARRIER_IND = 'F')
"
"BANINST1","FAVBREC","","(SELECT FABCHKS_BANK_CODE,
		NULL,
		NULL,
		FABCHKS_CHECK_NUM,
		'C',
		'C',
		NULL,
		FABCHKS_CHECK_DATE,
		FABCHKS_CHECK_AMT,
		FABCHKS_RECON_IND
	   FROM FABCHKS
	  WHERE (FABCHKS_CHECK_TYPE_IND = 'B'
	     OR  FABCHKS_CHECK_TYPE_IND = 'M'
	     OR  FABCHKS_CHECK_TYPE_IND = 'O')
	    AND (FABCHKS_CANCEL_IND = 'N'
	     OR  FABCHKS_CANCEL_IND IS NULL)
UNION
	SELECT FGBTRNH_BANK_CODE,
               FGBTRND_ACCT_CODE,
               FGBTRND_DOC_CODE,
               FGBTRNH_DEP_NUM,
	       'D',
	       'D',
               FGBTRND_DR_CR_IND,
               FGBTRNH_TRANS_DATE,
               FGBTRND_TRANS_AMT,
               FGBTRND_RECON_IND
          FROM FGBTRND,
               FGBTRNH
         WHERE FGBTRNH_DOC_SEQ_CODE      = FGBTRND_DOC_SEQ_CODE
           AND FGBTRNH_DOC_CODE          = FGBTRND_DOC_CODE
           AND FGBTRNH_SUBMISSION_NUMBER = FGBTRND_SUBMISSION_NUMBER
           AND FGBTRNH_ITEM_NUM          = FGBTRND_ITEM_NUM
           AND FGBTRNH_SEQ_NUM           = FGBTRND_SEQ_NUM
           and fgbtrnh_reversal_ind      = fgbtrnd_reversal_ind
           and fgbtrnh_serial_num        = fgbtrnd_serial_num
           AND FGBTRND_RUCL_CODE NOT IN
                       (SELECT FTVSDAT_DATA
                          FROM FTVSDAT
                         WHERE FTVSDAT_SDAT_CODE_ENTITY = 'FABCHKA'
                           AND FTVSDAT_STATUS_IND       = 'A')
UNION
	 SELECT FABBKTP_BANK_CODE,
		NULL,
		NULL,
		FABBKTP_CHECK_DEPOSIT_CODE,
		'T',
                FABBKTP_CHECK_DEPOSIT_IND,
		NULL,
		FABBKTP_TRANS_DATE,
		FABBKTP_AMT,
		FABBKTP_RECON_IND
           FROM FABBKTP
          WHERE (FABBKTP_CHECK_DEPOSIT_IND = 'C'
	    AND  FABBKTP_CHECK_DEPOSIT_CODE NOT IN
                        (SELECT FABCHKS_CHECK_NUM
                           FROM FABCHKS
                          WHERE FABCHKS_BANK_CODE = FABBKTP_BANK_CODE))
             OR (FABBKTP_CHECK_DEPOSIT_IND = 'D'
	    AND  FABBKTP_CHECK_DEPOSIT_CODE NOT IN
                        (SELECT FGBTRNH_DEP_NUM
                           FROM FGBTRNH
			  WHERE FGBTRNH_DEP_NUM IS NOT NULL
                            AND FGBTRNH_BANK_CODE = FABBKTP_BANK_CODE)))

 "
"BANINST1","AXVPINS","","SELECT AGBPLDG_PIDM,        AGBPLDG_PLEDGE_NO, AGBPLDG_PLEDGE_DATE,
             AGBPLDG_AMT_PLEDGED, AGBPLDG_FISC_CODE, AGBPLDG_PSTA_CODE,
             AGBPLDG_PRMD_CODE,   AGBPLDG_REM_COUNT, AGBPLDG_PLDG_CODE,
             AGBPLDG_PCLS_CODE,   AGRPDES_CAMPAIGN,  AGRPDES_DESG,
             AGRPINS_INSTALLMENT_NO, AGRPINS_INSTALLMENT_DATE,
             AGRPINS_AMT,
             AGRPINS_REM_DATE,
	     ROUND((AXRMDES_AMT/AGBPLDG_AMT_PLEDGED * AGRPINS_AMT),2),
	     AGRPDES_AMT_PAID,
	     DECODE(AGRPDES_AMT_PAID,0,0,
              agkcpap.f_calc_pins_amt(agbpldg_pidm,
	 			      agbpldg_pledge_no,
				      agrpdes_campaign,
				      agrpdes_desg,
				      agrpins_installment_no)),
	     ATVDCYR_CODE,
	     AFBCAMP_CMTP_CODE,   ADBDESG_DSTP_CODE,  ADBDESG_CFAE_CODE,
	     ADBDESG_COLL_CODE,
	     AGBPLDG_PCAT_CODE,
             AGBPLDG_PCLS_CODE_2,
             AGBPLDG_PCLS_CODE_3
      FROM   atvdcyr, adbdesg, afbcamp, axrmdes, axbmgid,
	     agrpdes, AGBPLDG, AGRPINS
      WHERE  AGBPLDG_PIDM      = AGRPINS_PIDM
      AND    AGBPLDG_PLEDGE_NO = AGRPINS_PLEDGE_NO
      and    agbpldg_pledge_no = agrpdes_pledge_no
      and    agbpldg_pidm      = agrpdes_pidm
      and    agbpldg_pledge_no = axrmdes_pledge_no
      and    agbpldg_pidm      = axrmdes_pidm
      AND    axrmdes_campaign  = AFBCAMP_CAMPAIGN
      AND    axrmdes_desg      = ADBDESG_DESG
      and    axbmgid_pledge_no = axrmdes_pledge_no
      and    axbmgid_pidm      = axrmdes_pidm
      and    axbmgid_void_ind is null
      and    agrpins_installment_date between
	     atvdcyr_start_date and atvdcyr_end_date
      AND    AGRPDES_CAMPAIGN = AFBCAMP_CAMPAIGN
      AND    AGRPDES_DESG     = ADBDESG_DESG
 "
"BANINST1","AUVIDEN","Advancement Connector Transfer In Constiuent View","SELECT DISTINCT(AUBTRIN_TRANS_ID),
       SPRIDEN_PIDM,
       F_FORMAT_NAME(SPRIDEN_PIDM,'LFMI'),
       SPRIDEN_ID,
       SPRIDEN_ENTITY_IND
  FROM SPRIDEN, AUBTRIN
 WHERE SPRIDEN_PIDM = AUBTRIN_PIDM
   AND SPRIDEN_CHANGE_IND IS NULL
"
"BANINST1","AT_INSTALLMENTS","BANNER reporting top layer view to the Installment View","select
 tovins1_pidm_key,
 tovins1_reference_number_key,
 tovins1_term_code_key,
 tovins1_id,
 tovins1_ssn,
 tovins1_surname_prefix,
 tovins1_last_name,
 tovins1_first_name,
 tovins1_middle_name,
 tovins1_name_prefix,
 tovins1_name_suffix,
 tovins1_installment_plan,
 tovins1_installment_plan_desc,
 tovins1_number_of_payments,
 tovins1_pay_period,
 tovins1_first_installment_date,
 tovins1_plan_amount,
 tovins1_interest_rate,
 tovins1_service_charge,
 tovins1_delinquency_code,
 substr(f_get_ar_desc('TTVDELI',tovins1_delinquency_code,30),1,30),
 tovins1_returned_check_counter,
 tovins1_hold_code1,
 substr(f_student_get_desc('STVHLDD',tovins1_hold_code1,30),1,30),
 tovins1_hold_from_date1,
 tovins1_hold_to_date1,
 tovins1_hold_amount_owed1,
 tovins1_hold_reason1,
 tovins1_hold_code2,
 substr(f_student_get_desc('STVHLDD',tovins1_hold_code2,30),1,30),
 tovins1_hold_from_date2,
 tovins1_hold_to_date2,
 tovins1_hold_amount_owed2,
 tovins1_hold_reason2,
 tovins1_hold_code3,
 substr(f_student_get_desc('STVHLDD',tovins1_hold_code3,30),1,30),
 tovins1_hold_from_date3,
 tovins1_hold_to_date3,
 tovins1_hold_amount_owed3,
 tovins1_hold_reason3,
 tovins1_hold_code4,
 substr(f_student_get_desc('STVHLDD',tovins1_hold_code4,30),1,30),
 tovins1_hold_from_date4,
 tovins1_hold_to_date4,
 tovins1_hold_amount_owed4,
 tovins1_hold_reason4,
 tovins1_hold_code5,
 substr(f_student_get_desc('STVHLDD',tovins1_hold_code5,30),1,30),
 tovins1_hold_from_date5,
 tovins1_hold_to_date5,
 tovins1_hold_amount_owed5,
 tovins1_hold_reason5,
 tovins1_additional_holds
from
 tovins1"
"BANINST1","AT_DEPOSITS","BANNER Reporting view to deposit information","select
 tovdep1_pidm_key,
 tovdep1_deposit_detl_code_key,
 tovdep1_deposit_detl_desc,
 tovdep1_deposit_term_code_key,
 tovdep1_deposit_trans_num_key,
 tovdep1_accounting_percent_key,
 tovdep1_id,
 tovdep1_ssn,
 tovdep1_surname_prefix,
 tovdep1_last_name,
 tovdep1_first_name,
 tovdep1_middle_name,
 tovdep1_middle_initial,
 tovdep1_name_prefix,
 tovdep1_name_suffix,
 tovdep1_fund_code,
 substr(f_get_finance_desc('FTVFUND',tovdep1_coas_code,
            tovdep1_fund_code,30),1,30),
 tovdep1_acct_code,
 substr(f_get_finance_desc('FTVACCT',tovdep1_coas_code,
            tovdep1_acct_code,30),1,30),
 tovdep1_coas_code,
 substr(f_get_finance_desc('FTVCOAS',tovdep1_coas_code, null, 30),1,30),
 tovdep1_dcat_code,
 substr(f_get_ar_desc('TTVDCAT',tovdep1_dcat_code,30),1,30),
 tovdep1_payment_detail_code,
 tovdep1_deposit_balance,
 tovdep1_auto_release_ind,
 tovdep1_acctg_feed_status,
 tovdep1_post_cashier,
 tovdep1_deposit_entry_date,
 tovdep1_deposit_receipt_num,
 tovdep1_min_remain_deposit_amt,
 tovdep1_deposit_expire_date,
 tovdep1_deposit_release_date,
 tovdep1_deposit_effective_date,
 tovdep1_deposit_activity_date,
 tovdep1_cashier_session_num,
 tovdep1_cashier_end_date,
 tovdep1_foreign_curr_code,
 tovdep1_deposit_trans_date,
 tovdep1_foreign_curr_amt,
 tovdep1_acctg_feed_date,
 tovdep1_acctg_feed_doc_code
from
 tovdep1"
"BANINST1","AT_AR_HISTORY_BY_TERM","BANNER Reporting view to AR History by Term information","select
 tovter1_term_code_key,
 substr(f_student_get_desc('STVTERM',tovter1_term_code_key,30),1,30),
 tovter1_dcat_code_key,
 substr(f_get_ar_desc('TTVDCAT',tovter1_dcat_code_key,30),1,30),
 tovter1_detail_code_key,
 substr(f_get_ar_desc('TBBDETC',tovter1_detail_code_key,30),1,30),
 tovter1_type_ind,
 tovter1_amount,
 tovter1_balance
from
 tovter1"
"BANINST1","AT_AR_HISTORY_BY_BALANCE","BANNER Reporting view to AR History by Balance information","select
 tovbal1_dcat_code,
 substr(f_get_ar_desc('TTVDCAT',tbbdetc_dcat_code,30),1,30),
 tovbal1_detail_code,
 tbbdetc_desc,
 tbbdetc_type_ind,
 f_sum_amount_balance(tbbdetc_dcat_code, tbbdetc_detail_code),
 f_sum_balance_balance(tbbdetc_dcat_code, tbbdetc_detail_code)
from
 tbbdetc,
 tovbal1
where
 tovbal1_detail_code = tbbdetc_detail_code"
"BANINST1","AT_AR_BALANCE_BY_ENTITY","BANNER Reporting top level view to AR Balances by Entity without student attributes","select
 spriden_pidm,
 spriden_entity_ind,
 spriden_id,
 spbpers_ssn,
 spriden_surname_prefix,
 spriden_last_name,
 spriden_first_name,
 spriden_mi,
 substr(spriden_mi,1,1),
 spbpers_name_prefix,
 spbpers_name_suffix,
 f_account_balance(spriden_pidm),
 f_amount_due(spriden_pidm),
 f_memo_balance(spriden_pidm),
 f_deposit_balance(spriden_pidm),
 f_oldest_effective_date(spriden_pidm)
 from spbpers, spriden
where spbpers_pidm(+) = spriden_pidm
 and spriden_change_ind is null
 and ((f_ar_deposit_ind(spriden_pidm) = 'Y') or
      (f_ar_detail_ind(spriden_pidm) = 'Y') or
      (f_ar_memo_ind(spriden_pidm) = 'Y'))"
"BANINST1","AT_APPLICATION_OF_PAYMENTS_PAY","BANNER Reporting view for the Application of Payments","select
 tovapp1_pidm_key,
 tovapp1_pay_term_code_key,
 substr(f_student_get_desc('STVTERM',tovapp1_pay_term_code_key,30),1,30),
 tovapp1_chg_tran_number_key,
 tovapp1_pay_tran_number_key,
 tovapp1_pay_percent_key,
 tovapp1_id,
 tovapp1_ssn,
 tovapp1_last_name,
 tovapp1_first_name,
 tovapp1_middle_name,
 tovapp1_middle_initial,
 tovapp1_name_prefix,
 tovapp1_name_suffix,
 tovapp1_pay_amount,
 tovapp1_dcat_code,
 substr(f_get_ar_desc('TTVDCAT',tovapp1_dcat_code,30),1,30),
 tovapp1_type_ind,
 tovapp1_pay_detail_code,
 substr(f_get_ar_desc('TBBDETC',tovapp1_pay_detail_code,30),1,30),
 tovapp1_chg_detail_code,
 substr(f_get_ar_desc('TBBDETC',tovapp1_chg_detail_code,30),1,30),
 tovapp1_chg_term_code,
 substr(f_student_get_desc('STVTERM',tovapp1_chg_term_code,30),1,30),
 tovapp1_direct_pay_ind,
 tovapp1_reappl_ind,
 tovapp1_acct_feed_ind,
 tovapp1_effective_date,
 tovapp1_pay_trans_date,
 tovapp1_chg_trans_date,
 tovapp1_feed_date,
 tovapp1_feed_doc_code,
 tovapp1_account_b,
 tovapp1_coas_code_b,
 substr(f_get_finance_desc('FTVCOAS',tovapp1_coas_code_b,null,30),1,30),
 tovapp1_fund_code_b,
 substr(f_get_finance_desc('FTVFUND',tovapp1_coas_code_b,
            tovapp1_fund_code_b,30),1,30),
 tovapp1_acct_code_b,
 substr(f_get_finance_desc('FTVACCT',tovapp1_coas_code_b,
            tovapp1_acct_code_b,30),1,30),
 tovapp1_payment_feed_ind,
 tovapp1_charge_feed_ind,
 tovapp1_appl_acct_feed_ind
from
 tovapp1"
"BANINST1","AT_APPLICATION_OF_PAYMENTS_CHG","BANNER Reporting view for the Application of Payments","select
 tovapc1_pidm_key,
 tovapc1_pay_term_code_key,
 substr(f_student_get_desc('STVTERM',tovapc1_pay_term_code_key,30),1,30),
 tovapc1_chg_tran_number_key,
 tovapc1_pay_tran_number_key,
 tovapc1_chg_percent_key,
 tovapc1_id,
 tovapc1_ssn,
 tovapc1_surname_prefix,
 tovapc1_last_name,
 tovapc1_first_name,
 tovapc1_middle_name,
 tovapc1_middle_initial,
 tovapc1_name_prefix,
 tovapc1_name_suffix,
 tovapc1_chg_amount,
 tovapc1_dcat_code,
 substr(f_get_ar_desc('TTVDCAT',tovapc1_dcat_code,30),1,30),
 tovapc1_type_ind,
 tovapc1_pay_detail_code,
 substr(f_get_ar_desc('TBBDETC',tovapc1_pay_detail_code,30),1,30),
 tovapc1_chg_detail_code,
 substr(f_get_ar_desc('TBBDETC',tovapc1_chg_detail_code,30),1,30),
 tovapc1_chg_term_code,
 substr(f_student_get_desc('STVTERM',tovapc1_chg_term_code,30),1,30),
 tovapc1_direct_pay_ind,
 tovapc1_reappl_ind,
 tovapc1_acct_feed_ind,
 tovapc1_effective_date,
 tovapc1_pay_trans_date,
 tovapc1_chg_trans_date,
 tovapc1_feed_date,
 tovapc1_feed_doc_code,
 tovapc1_account_a,
 tovapc1_coas_code_a,
 substr(f_get_finance_desc('FTVCOAS',tovapc1_coas_code_a,null,30),1,30),
 tovapc1_fund_code_a,
 substr(f_get_finance_desc('FTVFUND',tovapc1_coas_code_a,
            tovapc1_fund_code_a,30),1,30),
 tovapc1_acct_code_a,
 substr(f_get_finance_desc('FTVACCT',tovapc1_coas_code_a,
            tovapc1_acct_code_a,30),1,30),
 tovapc1_payment_feed_ind,
 tovapc1_charge_feed_ind,
 tovapc1_appl_acct_feed_ind
from
 tovapc1"
"BANINST1","AS_THIRD_PARTY_CONTRACTS","BANNER reporting top layer view to Third Party Contracts","select
 sovtpc1_term_code_key,
 substr(f_student_get_desc('STVTERM',sovtpc1_term_code_key,30),1,30),
 sovtpc1_tp_pidm_key,
 sovtpc1_st_pidm_key,
 sovtpc1_crn_key,
 sovtpc1_tp_last_name,
 sovtpc1_tp_id,
 sovtpc1_street1_line1,
 sovtpc1_street1_line2,
 sovtpc1_street1_line3,
 sovtpc1_city1,
 sovtpc1_stat1_code,
 sovtpc1_zip1,
 sovtpc1_cnty1_code,
 substr(f_student_get_desc('STVCNTY',sovtpc1_cnty1_code,30),1,30),
 sovtpc1_natn1_code,
 substr(f_student_get_desc('STVNATN',sovtpc1_natn1_code,30),1,30),
 sovtpc1_atyp1_code,
 sovtpc1_phone1_area,
 sovtpc1_phone1_number,
 sovtpc1_tele1_code,
 sovtpc1_street2_line1,
 sovtpc1_street2_line2,
 sovtpc1_street2_line3,
 sovtpc1_city2,
 sovtpc1_stat2_code,
 sovtpc1_zip2,
 sovtpc1_cnty2_code,
 substr(f_student_get_desc('STVCNTY',sovtpc1_cnty2_code,30),1,30),
 sovtpc1_natn2_code,
 substr(f_student_get_desc('STVNATN',sovtpc1_natn2_code,30),1,30),
 sovtpc1_atyp2_code,
 sovtpc1_phone2_area,
 sovtpc1_phone2_number,
 sovtpc1_tele2_code,
 sovtpc1_contract_number,
 sovtpc1_contract_desc,
 sovtpc1_enrolled_ind,
 sovtpc1_registered_ind,
 sovtpc1_applied_for_degree_ind,
 sovtpc1_st_id,
 sovtpc1_st_ssn,
 sovtpc1_st_last_name,
 sovtpc1_st_first_name,
 sovtpc1_st_middle_name,
 sovtpc1_st_middle_initial,
 sovtpc1_st_name_prefix,
 sovtpc1_st_name_suffix,
 sovtpc1_street3_line1,
 sovtpc1_street3_line2,
 sovtpc1_street3_line3,
 sovtpc1_city3,
 sovtpc1_stat3_code,
 sovtpc1_zip3,
 sovtpc1_cnty3_code,
 substr(f_student_get_desc('STVCNTY',sovtpc1_cnty3_code,30),1,30),
 sovtpc1_natn3_code,
 substr(f_student_get_desc('STVNATN',sovtpc1_natn3_code,30),1,30),
 sovtpc1_atyp3_code,
 sovtpc1_phone3_area,
 sovtpc1_phone3_number,
 sovtpc1_tele3_code,
 sovtpc1_street4_line1,
 sovtpc1_street4_line2,
 sovtpc1_street4_line3,
 sovtpc1_city4,
 sovtpc1_stat4_code,
 sovtpc1_zip4,
 sovtpc1_cnty4_code,
 substr(f_student_get_desc('STVCNTY',sovtpc1_cnty4_code,30),1,30),
 sovtpc1_natn4_code,
 substr(f_student_get_desc('STVNATN',sovtpc1_natn4_code,30),1,30),
 sovtpc1_atyp4_code,
 sovtpc1_phone4_area,
 sovtpc1_phone4_number,
 sovtpc1_tele4_code,
 sovtpc1_coll_code_1,
 substr(f_student_get_desc('STVCOLL',sovtpc1_coll_code_1,30),1,30),
 sovtpc1_camp_code,
 substr(f_student_get_desc('STVCAMP',sovtpc1_camp_code,30),1,30),
 sovtpc1_levl_code,
 substr(f_student_get_desc('STVLEVL',sovtpc1_levl_code,30),1,30),
 sovtpc1_clas_code,
 substr(f_student_get_desc('STVCLAS',sovtpc1_clas_code,30),1,30),
 sovtpc1_rate_code,
 substr(f_student_get_desc('STVRATE',sovtpc1_rate_code,30),1,30),
 sovtpc1_subj_code,
 sovtpc1_crse_numb,
 sovtpc1_crse_title,
 sovtpc1_seq_numb,
 sovtpc1_credit_hr,
 sovtpc1_bill_hr,
 sovtpc1_status_code,
 substr(f_student_get_desc('STVRSTS',sovtpc1_status_code,30),1,30),
 sovtpc1_auth_ind,
 sovtpc1_auth_number
from sovtpc1"
"BANINST1","AS_STUDENT_REGISTRATION_DETAIL","This view will access enrollment information and return one row of data per pidm per term per section.","select
 pidm_key,
 term_code_key,
 substr(decode(term_code_key,null,null,
     f_student_get_desc('STVTERM',term_code_key,30)),1,30),
 crn_key,
 enrolled_ind,
 registered_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 surname_prefix,
 birth_date,
 age,
 gender,
 substr(decode(ethn_code,null,null,f_get_ethn_category(ethn_code,'ETCT')),1,1),
 ethn_code,
 substr(decode(ethn_code,null,null,
     f_student_get_desc('STVETHN',ethn_code,30)),1,30),
 lgcy_code,
 substr(decode(lgcy_code,null,null,
     f_student_get_desc('STVLGCY',lgcy_code,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 full_part_time_ind,
 house_number1,
 street1_line1,
 street1_line2,
 street1_line3,
 street1_line4,
 city1,
 stat_code1,
 cnty_code1,
 substr(decode(cnty_code1,null,null,
     f_student_get_desc('STVCNTY',cnty_code1,30)),1,30),
 zip1,
 natn_code1,
 substr(decode(natn_code1,null,null,
     f_student_get_desc('STVNATN',natn_code1,30)),1,30),
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 phone_ctry_cde1,
 house_number2,
 street2_line1,
 street2_line2,
 street2_line3,
 street2_line4,
 city2,
 stat_code2,
 cnty_code2,
 substr(decode(cnty_code2,null,null,
     f_student_get_desc('STVCNTY',cnty_code2,30)),1,30),
 zip2,
 natn_code2,
 substr(decode(natn_code2,null,null,
     f_student_get_desc('STVNATN',natn_code2,30)),1,30),
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 phone_ctry_cde2,
 stst_code,
 substr(decode(stst_code,null,null,
     f_student_get_desc('STVSTST',stst_code,30)),1,30),
 levl_code,
 substr(decode(levl_code,null,null,
     f_student_get_desc('STVLEVL',levl_code,30)),1,30),
 styp_code,
 substr(decode(styp_code,null,null,
     f_student_get_desc('STVSTYP',styp_code,30)),1,30),
 camp_code,
 substr(decode(camp_code,null,null,
     f_student_get_desc('STVCAMP',camp_code,30)),1,30),
 resd_code,
 substr(decode(resd_code,null,null,
     f_student_get_desc('STVRESD',resd_code,30)),1,30),
 coll_code,
 substr(decode(coll_code,null,null,
     f_student_get_desc('STVCOLL',coll_code,30)),1,30),
 degc_code,
 substr(decode(degc_code,null,null,
     f_student_get_desc('STVDEGC',degc_code,30)),1,30),
 majr_code1,
 substr(decode(majr_code1,null,null,
     f_student_get_desc('STVMAJR',majr_code1,30)),1,30),
 majr_code2,
 substr(decode(majr_code2,null,null,
     f_student_get_desc('STVMAJR',majr_code2,30)),1,30),
 clas_code,
 substr(decode(clas_code,null,null,
     f_student_get_desc('STVCLAS',clas_code,30)),1,30),
 rate_code,
 substr(decode(rate_code,null,null,
     f_student_get_desc('STVRATE',rate_code,30)),1,30),
 term_code_eff_advisor1,
 advisor_last_name1,
 advisor_first_name1,
 advisor_surname_prefix1,
 advr_code1,
 substr(decode(advr_code1,null,null,
     f_student_get_desc('STVADVR',advr_code1,30)),1,30),
 primary_advisor_ind1,
 term_code_eff_advisor2,
 advisor_last_name2,
 advisor_first_name2,
 advisor_surname_prefix2,
 advr_code2,
 substr(decode(advr_code2,null,null,
     f_student_get_desc('STVADVR',advr_code2,30)),1,30),
 primary_advisor_ind2,
 ests_code,
 substr(decode(ests_code,null,null,
     f_student_get_desc('STVESTS',ests_code,30)),1,30),
 enrollment_ar_ind,
 assessment_date,
 enrollment_add_date,
 total_credit_hours,
 total_non_ceu_credit_hours,
 total_ceu_credit_hours,
 total_billing_hours,
 total_non_ceu_billing_hours,
 total_ceu_billing_hours,
 term_gpa_hours_attempted1,
 term_gpa_hours_earned1,
 term_gpa_hours1,
 term_gpa_quality_points1,
 term_gpa1,
 term_gpa_hours_passed1,
 term_gpa_hours_attempted2,
 term_gpa_hours_earned2,
 term_gpa_hours2,
 term_gpa_quality_points2,
 term_gpa2,
 term_gpa_hours_passed2,
 term_gpa_hours_attempted3,
 term_gpa_hours_earned3,
 term_gpa_hours3,
 term_gpa_quality_points3,
 term_gpa3,
 term_gpa_hours_passed3,
 prev_gpa_hours_attempted1,
 prev_gpa_hours_earned1,
 prev_gpa_hours1,
 prev_gpa_quality_points1,
 prev_gpa1,
 prev_gpa_hours_passed1,
 prev_gpa_hours_attempted2,
 prev_gpa_hours_earned2,
 prev_gpa_hours2,
 prev_gpa_quality_points2,
 prev_gpa2,
 prev_gpa_hours_passed2,
 prev_gpa_hours_attempted3,
 prev_gpa_hours_earned3,
 prev_gpa_hours3,
 prev_gpa_quality_points3,
 prev_gpa3,
 prev_gpa_hours_passed3,
 levl_gpa_hours_attempted1,
 levl_gpa_hours_earned1,
 levl_gpa_hours1,
 levl_gpa_quality_points1,
 levl_gpa1,
 levl_gpa_hours_passed1,
 levl_gpa_hours_attempted2,
 levl_gpa_hours_earned2,
 levl_gpa_hours2,
 levl_gpa_quality_points2,
 levl_gpa2,
 levl_gpa_hours_passed2,
 levl_gpa_hours_attempted3,
 levl_gpa_hours_earned3,
 levl_gpa_hours3,
 levl_gpa_quality_points3,
 levl_gpa3,
 levl_gpa_hours_passed3,
 deans_list_code,
 substr(decode(deans_list_code,null,null,
     f_student_get_desc('STVASTD',deans_list_code,30)),1,30),
 deans_list_date,
 astd_code_end_of_term,
 substr(decode(astd_code_end_of_term,null,null,
     f_student_get_desc('STVASTD',astd_code_end_of_term,30)),1,30),
 astd_date_end_of_term,
 astd_code_override_ind,
 registration_sequence_number,
 ptrm_code,
 substr(decode(ptrm_code,null,null,
     f_student_get_desc('STVPTRM',ptrm_code,30)),1,30),
 rsts_code,
 substr(decode(rsts_code,null,null,
     f_student_get_desc('STVRSTS',rsts_code,30)),1,30),
 registration_status_date,
 special_approval_ind,
 registration_error_flag,
 subj_code,
 substr(decode(subj_code,null,null,
     f_student_get_desc('STVSUBJ',subj_code,30)),1,30),
 course_number,
 course_title,
 section_number,
 section_billing_hours,
 section_credit_hours,
 hours_attended,
 gmod_code,
 substr(decode(gmod_code,null,null,
     f_student_get_desc('STVGMOD',gmod_code,30)),1,30),
 grde_code,
 grde_code_mid_term,
 final_grade_date,
 final_grade_term_code_eff,
 final_grade_quality_points,
 final_grade_traditional_ind,
 section_add_date,
 levl_code_section,
 substr(decode(levl_code_section,null,null,
     f_student_get_desc('STVLEVL',levl_code_section,30)),1,30),
 camp_code_section,
 substr(decode(camp_code_section,null,null,
     f_student_get_desc('STVCAMP',camp_code_section,30)),1,30),
 instructor_id,
 instructor_surname_prefix,
 instructor_last_name,
 instructor_first_name,
 instructor_middle_name,
 instructor_middle_initial,
 registration_user_id,
 waitlist_priority,
 deadline_start_time,
 deadline_end_time,
 reg_conf_status,
 email_address,
 email_type,
 email_type_description,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 SUBSTR(mre_race_data,1,3),
 SUBSTR(mre_race_data,4,60),
 SUBSTR(mre_race_data,64,1),
 SUBSTR(mre_race_data,65,1)
from sfvstc1"
"BANINST1","AS_STUDENT_ENROLLMENT_SUMMARY","This view will access enrollment information and return one row of data per pidm per term.","select
 pidm_key,
 term_code_key,
 substr(decode(term_code_key,null,null,
     f_student_get_desc('STVTERM',term_code_key,30)),1,30),
 enrolled_ind,
 registered_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 substr(decode(ethn_code,null,null,f_get_ethn_category(ethn_code,'ETCT')),1,1),
 ethn_code,
 substr(decode(ethn_code,null,null,
     f_student_get_desc('STVETHN',ethn_code,30)),1,30),
 lgcy_code,
 substr(decode(lgcy_code,null,null,
     f_student_get_desc('STVLGCY',lgcy_code,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 full_part_time_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 stat_code1,
 substr(decode(stat_code1,null,null,
     f_student_get_desc('STVSTAT',stat_code1,30)),1,30),
 cnty_code1,
 substr(decode(cnty_code1,null,null,
     f_student_get_desc('STVCNTY',cnty_code1,30)),1,30),
 zip1,
 natn_code1,
 substr(decode(natn_code1,null,null,
     f_student_get_desc('STVNATN',natn_code1,30)),1,30),
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 stat_code2,
 substr(decode(stat_code2,null,null,
     f_student_get_desc('STVSTAT',stat_code2,30)),1,30),
 cnty_code2,
 substr(decode(cnty_code2,null,null,
     f_student_get_desc('STVCNTY',cnty_code2,30)),1,30),
 zip2,
 natn_code2,
 substr(decode(natn_code2,null,null,
     f_student_get_desc('STVNATN',natn_code2,30)),1,30),
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 stst_code,
 substr(decode(stst_code,null,null,
     f_student_get_desc('STVSTST',stst_code,30)),1,30),
 levl_code,
 substr(decode(levl_code,null,null,
     f_student_get_desc('STVLEVL',levl_code,30)),1,30),
 styp_code,
 substr(decode(styp_code,null,null,
     f_student_get_desc('STVSTYP',styp_code,30)),1,30),
 camp_code,
 substr(decode(camp_code,null,null,
     f_student_get_desc('STVCAMP',camp_code,30)),1,30),
 resd_code,
 substr(decode(resd_code,null,null,
     f_student_get_desc('STVRESD',resd_code,30)),1,30),
 coll_code,
 substr(decode(coll_code,null,null,
     f_student_get_desc('STVCOLL',coll_code,30)),1,30),
 degc_code,
 substr(decode(degc_code,null,null,
     f_student_get_desc('STVDEGC',degc_code,30)),1,30),
 majr_code1,
 substr(decode(majr_code1,null,null,
     f_student_get_desc('STVMAJR',majr_code1,30)),1,30),
 majr_code2,
 substr(decode(majr_code2,null,null,
     f_student_get_desc('STVMAJR',majr_code2,30)),1,30),
 clas_code,
 substr(decode(clas_code,null,null,
     f_student_get_desc('STVCLAS',clas_code,30)),1,30),
 rate_code,
 substr(decode(rate_code,null,null,
     f_student_get_desc('STVRATE',rate_code,30)),1,30),
 term_code_eff_advisor1,
 advisor_last_name1,
 advisor_first_name1,
 advr_code1,
 substr(decode(advr_code1,null,null,
     f_student_get_desc('STVADVR',advr_code1,30)),1,30),
 primary_advisor_ind1,
 term_code_eff_advisor2,
 advisor_last_name2,
 advisor_first_name2,
 advr_code2,
 substr(decode(advr_code2,null,null,
     f_student_get_desc('STVADVR',advr_code2,30)),1,30),
 primary_advisor_ind2,
 ests_code,
 substr(decode(ests_code,null,null,
     f_student_get_desc('STVESTS',ests_code,30)),1,30),
 enrollment_ar_ind,
 assessment_date,
 enrollment_add_date,
 total_credit_hours,
 total_non_ceu_credit_hours,
 total_ceu_credit_hours,
 total_billing_hours,
 total_non_ceu_billing_hours,
 total_ceu_billing_hours,
 term_gpa_hours_attempted1,
 term_gpa_hours_earned1,
 term_gpa_hours1,
 term_gpa_quality_points1,
 term_gpa1,
 term_gpa_hours_passed1,
 term_gpa_hours_attempted2,
 term_gpa_hours_earned2,
 term_gpa_hours2,
 term_gpa_quality_points2,
 term_gpa2,
 term_gpa_hours_passed2,
 term_gpa_hours_attempted3,
 term_gpa_hours_earned3,
 term_gpa_hours3,
 term_gpa_quality_points3,
 term_gpa3,
 term_gpa_hours_passed3,
 prev_gpa_hours_attempted1,
 prev_gpa_hours_earned1,
 prev_gpa_hours1,
 prev_gpa_quality_points1,
 prev_gpa1,
 prev_gpa_hours_passed1,
 prev_gpa_hours_attempted2,
 prev_gpa_hours_earned2,
 prev_gpa_hours2,
 prev_gpa_quality_points2,
 prev_gpa2,
 prev_gpa_hours_passed2,
 prev_gpa_hours_attempted3,
 prev_gpa_hours_earned3,
 prev_gpa_hours3,
 prev_gpa_quality_points3,
 prev_gpa3,
 prev_gpa_hours_passed3,
 levl_gpa_hours_attempted1,
 levl_gpa_hours_earned1,
 levl_gpa_hours1,
 levl_gpa_quality_points1,
 levl_gpa1,
 levl_gpa_hours_passed1,
 levl_gpa_hours_attempted2,
 levl_gpa_hours_earned2,
 levl_gpa_hours2,
 levl_gpa_quality_points2,
 levl_gpa2,
 levl_gpa_hours_passed2,
 levl_gpa_hours_attempted3,
 levl_gpa_hours_earned3,
 levl_gpa_hours3,
 levl_gpa_quality_points3,
 levl_gpa3,
 levl_gpa_hours_passed3,
 deans_list_code,
 substr(decode(deans_list_code,null,null,
     f_student_get_desc('STVASTD',deans_list_code,30)),1,30),
 deans_list_date,
 astd_code_end_of_term,
 substr(decode(astd_code_end_of_term,null,null,
     f_student_get_desc('STVASTD',astd_code_end_of_term,30)),1,30),
 astd_date_end_of_term,
 astd_code_override_ind,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 SUBSTR(mre_race_data,1,3),
 SUBSTR(mre_race_data,4,60),
 SUBSTR(mre_race_data,64,1),
 SUBSTR(mre_race_data,65,1)
from sfvetr1"
"BANINST1","AS_STUDENT_DATA","This view will join in descriptions for coded fields to display student information.","select
 pidm_key,
 term_code_key,
  substr(decode(term_code_key,null,null,
      f_student_get_desc('STVTERM',term_code_key,30)),1,30),
 enrolled_ind,
 registered_ind,
 meal_plan_ind,
 housing_ind,
 term_code_last_attended,
  substr(decode(term_code_last_attended,null,null,
      f_student_get_desc('STVTERM',term_code_last_attended,30)),1,30),
 applied_for_degree_ind,
 graduated_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 surname_prefix,
 birth_date,
 age,
 gender,
 substr(decode(ethn_code,null,null,f_get_ethn_category(ethn_code,'ETCT')),1,1),
 ethn_code,
  substr(decode(ethn_code,null,null,
      f_student_get_desc('STVETHN',ethn_code,30)),1,30),
 lgcy_code,
  substr(decode(lgcy_code,null,null,
      f_student_get_desc('STVLGCY',lgcy_code,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 full_part_time_ind,
 clas_code,
  substr(decode(clas_code,null,null,
      f_student_get_desc('STVCLAS',clas_code,30)),1,30),
 house_number1,
 street1_line1,
 street1_line2,
 street1_line3,
 street1_line4,
 city1,
 state1,
 zip1,
 cnty_code1,
  substr(decode(cnty_code1,null,null,
      f_student_get_desc('STVCNTY',cnty_code1,30)),1,30),
 natn_code1,
  substr(decode(natn_code1,null,null,
      f_student_get_desc('STVNATN',natn_code1,30)),1,30),
 atyp_code1,
 phone_area_code1,
 phone_number1,
 tele_code1,
 phone_ctry_cde1,
 house_number2,
 street2_line1,
 street2_line2,
 street2_line3,
 street2_line4,
 city2,
 state2,
 zip2,
 cnty_code2,
  substr(decode(cnty_code2,null,null,
      f_student_get_desc('STVCNTY',cnty_code2,30)),1,30),
 natn_code2,
  substr(decode(natn_code2,null,null,
      f_student_get_desc('STVNATN',natn_code2,30)),1,30),
 atyp_code2,
 phone_area_code2,
 phone_number2,
 tele_code2,
 phone_ctry_cde2,
 term_code_effective,
  substr(decode(term_code_effective,null,null,
      f_student_get_desc('STVTERM',term_code_effective,30)),1,30),
 stst_code,
  substr(decode(stst_code,null,null,
      f_student_get_desc('STVSTST',stst_code,30)),1,30),
 levl_code,
  substr(decode(levl_code,null,null,
      f_student_get_desc('STVLEVL',levl_code,30)),1,30),
 styp_code,
  substr(decode(styp_code,null,null,
      f_student_get_desc('STVSTYP',styp_code,30)),1,30),
 term_code_matric,
 term_code_admit,
 camp_code,
  substr(decode(camp_code,null,null,
      f_student_get_desc('STVCAMP',camp_code,30)),1,30),
 sess_code,
  substr(decode(sess_code,null,null,
      f_student_get_desc('STVSESS',sess_code,30)),1,30),
 resd_code,
  substr(decode(resd_code,null,null,
      f_student_get_desc('STVRESD',resd_code,30)),1,30),
 in_out_state_ind,
 rate_code,
  substr(decode(rate_code,null,null,
      f_student_get_desc('STVRATE',RATE_code,30)),1,30),
 edlv_code,
  substr(decode(EDLV_code,null,null,
      f_student_get_desc('STVEDLV',EDLV_code,30)),1,30),
 admt_code,
  substr(decode(ADMT_code,null,null,
      f_student_get_desc('STVADMT',ADMT_code,30)),1,30),
 trcn_code,
  substr(decode(TRCN_code,null,null,
      f_student_get_desc('STVTRCN',TRCN_code,30)),1,30),
 blck_code,
  substr(decode(BLCK_code,null,null,
      f_student_get_desc('STVBLCK',BLCK_code,30)),1,30),
 site_code,
  substr(decode(SITE_code,null,null,
      f_student_get_desc('STVSITE',SITE_code,30)),1,30),
 egol_code,
  substr(decode(EGOL_code,null,null,
      f_student_get_desc('STVEGOL',EGOL_code,30)),1,30),
 coll_code,
  substr(decode(COLL_code,null,null,
      f_student_get_desc('STVCOLL',COLL_code,30)),1,30),
 degc_code,
  substr(decode(DEGC_code,null,null,
      f_student_get_desc('STVDEGC',DEGC_code,30)),1,30),
 majr_code,
  substr(decode(MAJR_code,null,null,
      f_student_get_desc('STVMAJR',MAJR_code,30)),1,30),
 majr_code_1_2,
  substr(decode(MAJR_CODE_1_2,null,null,
      f_student_get_desc('STVMAJR',MAJR_CODE_1_2,30)),1,30),
 majr_code_minor_1,
  substr(decode(majr_code_minor_1,null,null,
      f_student_get_desc('STVMAJR',majr_code_minor_1,30)),1,30),
 majr_code_minor_1_2,
  substr(decode(majr_code_minor_1_2,null,null,
      f_student_get_desc('STVMAJR',majr_code_minor_1_2,30)),1,30),
 majr_code_concentration_1,
  substr(decode(MAJR_CODE_CONCENTRATION_1,null,null,
      f_student_get_desc('STVMAJR',MAJR_CODE_CONCENTRATION_1,30)),1,30),
 majr_code_concentration_1_2,
  substr(decode(MAJR_CODE_CONCENTRATION_1_2,null,null,
      f_student_get_desc('STVMAJR',MAJR_CODE_CONCENTRATION_1_2,30)),1,30),
 majr_code_concentration_1_3,
  substr(decode(MAJR_CODE_CONCENTRATION_1_3,null,null,
      f_student_get_desc('STVMAJR',MAJR_CODE_CONCENTRATION_1_3,30)),1,30),
 majr_code_concentration_2_1,
  	substr(decode(MAJR_CODE_CONCENTRATION_2_1,null,null,
     f_student_get_desc('STVMAJR',MAJR_CODE_CONCENTRATION_2_1,30)),1,30),
 majr_code_concentration_2_2,
  	substr(decode(MAJR_CODE_CONCENTRATION_2_2,null,null,
     f_student_get_desc('STVMAJR',MAJR_CODE_CONCENTRATION_2_2,30)),1,30),
 majr_code_concentration_2_3,
  substr(decode(MAJR_CODE_CONCENTRATION_2_3,null,null,
      f_student_get_desc('STVMAJR',MAJR_CODE_CONCENTRATION_2_3,30)),1,30),
 dept_code1,
  substr(decode(DEPT_CODE1,null,null,
      f_student_get_desc('STVDEPT',DEPT_CODE1,30)),1,30),
 dept_code2,
  substr(decode(DEPT_CODE2,null,null,
      f_student_get_desc('STVDEPT',DEPT_CODE2,30)),1,30),
 graduate_credit_elig_ind,
 leav_code,
  substr(decode(LEAV_code,null,null,
      f_student_get_desc('STVLEAV',LEAV_code,30)),1,30),
 leav_from_date,
 leav_to_date,
 astd_code_end_of_term,
  substr(decode(astd_code_end_of_term,null,null,
      f_student_get_desc('STVASTD',astd_code_end_of_term,30)),1,30),
 astd_code_overriden,
  substr(decode(astd_code_overriden,null,null,
      f_student_get_desc('STVASTD',astd_code_overriden,30)),1,30),
 term_code_astd_overriden,
 term_code_intended_graduation,
 acyr_code_intended_graduation,
  substr(decode(acyr_code_intended_graduation,null,null,
      f_student_get_desc('STVACYR',acyr_code_intended_graduation,30)),1,30),
 expected_graduation_date,
 term_code_eff_advisor1,
 advisor_last_name1,
 advisor_first_name1,
 advisor_surname_prefix2,
 advr_code1,
  substr(decode(advr_code1,null,null,
      f_student_get_desc('STVADVR',advr_code1,30)),1,30),
 primary_advisor_ind1,
 term_code_eff_advisor2,
 advisor_last_name2,
 advisor_first_name2,
 advisor_surname_prefix2,
 advr_code2,
  substr(decode(advr_code2,null,null,
      f_student_get_desc('STVADVR',advr_code2,30)),1,30),
 primary_advisor_ind2,
 term_code_eff_cohort1,
 chrt_code1,
  substr(decode(chrt_code1,null,null,
      f_student_get_desc('STVCHRT',chrt_code1,30)),1,30),
 crea_code1,
  substr(decode(crea_code1,null,null,
      f_student_get_desc('STVCREA',crea_code1,30)),1,30),
 term_code_eff_cohort2,
 chrt_code2,
  substr(decode(chrt_code2,null,null,
      f_student_get_desc('STVCHRT',chrt_code2,30)),1,30),
 crea_code2,
  substr(decode(crea_code2,null,null,
      f_student_get_desc('STVCREA',crea_code2,30)),1,30),
 term_code_eff_cohort3,
 chrt_code3,
  substr(decode(chrt_code3,null,null,
      f_student_get_desc('STVCHRT',chrt_code3,30)),1,30),
 crea_code3,
  substr(decode(crea_code3,null,null,
      f_student_get_desc('STVCREA',crea_code3,30)),1,30),
 additional_cohorts_ind,
 actc_code1,
  substr(decode(actc_code1,null,null,
      f_student_get_desc('STVACTC',actc_code1,30)),1,30),
 spst_code1,
  substr(decode(spst_code1,null,null,
      f_student_get_desc('STVSPST',spst_code1,30)),1,30),
 elig_code1,
  substr(decode(elig_code1,null,null,
      f_student_get_desc('STVELIG',elig_code1,30)),1,30),
 athletic_aid_ind1,
 actc_code2,
  substr(decode(actc_code2,null,null,
      f_student_get_desc('STVACTC',actc_code2,30)),1,30),
 spst_code2,
  substr(decode(spst_code2,null,null,
      f_student_get_desc('STVSPST',spst_code2,30)),1,30),
 elig_code2,
  substr(decode(elig_code2,null,null,
      f_student_get_desc('STVELIG',elig_code2,30)),1,30),
 athletic_aid_ind2,
 additional_sports_ind,
 levl_gpa_hours_attempted1,
 levl_gpa_hours_earned1,
 levl_gpa_hours1,
 levl_gpa_quality_points1,
 levl_gpa1,
 levl_gpa_hours_passed1,
 levl_gpa_hours_attempted2,
 levl_gpa_hours_earned2,
 levl_gpa_hours2,
 levl_gpa_quality_points2,
 levl_gpa2,
 levl_gpa_hours_passed2,
 levl_gpa_hours_attempted3,
 levl_gpa_hours_earned3,
 levl_gpa_hours3,
 levl_gpa_quality_points3,
 levl_gpa3,
 levl_gpa_hours_passed3,
 hldd_code1,
  substr(decode(hldd_code1,null,null,
      f_student_get_desc('STVHLDD',hldd_code1,30)),1,30),
 hold_from_date1,
 hold_to_date1,
 hold_amount_owed1,
 hold_reason1,
 hldd_code2,
  substr(decode(hldd_code2,null,null,
      f_student_get_desc('STVHLDD',hldd_code2,30)),1,30),
 hold_from_date2,
 hold_to_date2,
 hold_amount_owed2,
 hold_reason2,
 hldd_code3,
  substr(decode(hldd_code3,null,null,
      f_student_get_desc('STVHLDD',hldd_code3,30)),1,30),
 hold_from_date3,
 hold_to_date3,
 hold_amount_owed3,
 hold_reason3,
 hldd_code4,
  substr(decode(hldd_code4,null,null,
      f_student_get_desc('STVHLDD',hldd_code4,30)),1,30),
 hold_from_date4,
 hold_to_date4,
 hold_amount_owed4,
 hold_reason4,
 hldd_code5,
  substr(decode(hldd_code5,null,null,
      f_student_get_desc('STVHLDD',hldd_code5,30)),1,30),
 hold_from_date5,
 hold_to_date5,
 hold_amount_owed5,
 hold_reason5,
 additional_holds_ind,
 medi_code1,
  substr(decode(medi_code1,null,null,
      f_student_get_desc('STVMEDI',medi_code1,30)),1,30),
 disability_ind1,
 spsr_code1,
  substr(decode(spsr_code1,null,null,
      f_student_get_desc('STVSPSR',spsr_code1,30)),1,30),
 medi_code2,
  substr(decode(medi_code2,null,null,
      f_student_get_desc('STVMEDI',medi_code2,30)),1,30),
 disability_ind2,
 spsr_code2,
  substr(decode(spsr_code2,null,null,
      f_student_get_desc('STVSPSR',spsr_code2,30)),1,30),
 medi_code3,
  substr(decode(medi_code3,null,null,
      f_student_get_desc('STVMEDI',medi_code3,30)),1,30),
 disability_ind3,
 spsr_code3,
  substr(decode(spsr_code3,null,null,
      f_student_get_desc('STVSPSR',spsr_code3,30)),1,30),
 additional_medical_data_ind,
 parent_last_name1,
 parent_first_name1,
 parent_middle_name1,
 parent_surname_prefix1,
 relt_code1,
  substr(decode(relt_code1,null,null,
      f_student_get_desc('STVRELT',relt_code1,30)),1,30),
 parent_last_name2,
 parent_first_name2,
 parent_middle_name2,
 parent_surname_prefix2,
 relt_code2,
  substr(decode(relt_code2,null,null,
      f_student_get_desc('STVRELT',relt_code2,30)),1,30),
 ar_account_balance,
 ar_amount_due,
 ar_memo_balance,
 ar_deposit_balance,
 ar_oldest_effective_date,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 SUBSTR(mre_race_data,1,3),
 SUBSTR(mre_race_data,4,60),
 SUBSTR(mre_race_data,64,1),
 SUBSTR(mre_race_data,65,1)
from sgvstd1"
"BANINST1","AS_RESIDENTIAL_LIFE_CHANGES","","select
 pidm_key,
 term_code_key,
 substr(decode(term_code_key,null,null,
     f_student_get_desc('STVTERM',term_code_key,30)),1,30),
 room_change_ind,
 phone_change_ind,
 meal_change_ind,
 enrolled_ind,
 registered_ind,
 meal_plan_ind,
 housing_ind,
 phone_ind,
 term_code_last_attended,
 substr(decode(term_code_last_attended,null,null,
     f_student_get_desc('STVTERM',term_code_last_attended,30)),1,30),
 id,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 substr(decode(ethn_code,null,null,f_get_ethn_category(ethn_code,'ETCT')),1,1),
 ethn_code,
 substr(decode(ethn_code,null,null,
     f_student_get_desc('STVETHN',ethn_code,30)),1,30),
 lgcy_code,
 substr(decode(lgcy_code,null,null,
     f_student_get_desc('STVLGCY',lgcy_code,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 stat_code1,
 cnty_code1,
 substr(decode(cnty_code1,null,null,
     f_student_get_desc('STVCNTY',cnty_code1,30)),1,30),
 zip1,
 natn_code1,
 substr(decode(natn_code1,null,null,
     f_student_get_desc('STVNATN',natn_code1,30)),1,30),
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 stat_code2,
 cnty_code2,
 substr(decode(cnty_code2,null,null,
     f_student_get_desc('STVCNTY',cnty_code2,30)),1,30),
 zip2,
 natn_code2,
 substr(decode(natn_code2,null,null,
     f_student_get_desc('STVNATN',natn_code2,30)),1,30),
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 term_code_effective,
 substr(decode(term_code_effective,null,null,
     f_student_get_desc('STVTERM',term_code_effective,30)),1,30),
 full_part_time_ind,
 stst_code,
 substr(decode(stst_code,null,null,
     f_student_get_desc('STVSTST',stst_code,30)),1,30),
 levl_code,
 substr(decode(levl_code,null,null,
     f_student_get_desc('STVLEVL',levl_code,30)),1,30),
 styp_code,
 substr(decode(styp_code,null,null,
     f_student_get_desc('STVSTYP',styp_code,30)),1,30),
 camp_code,
 substr(decode(camp_code,null,null,
     f_student_get_desc('STVCAMP',camp_code,30)),1,30),
 resd_code,
 substr(decode(resd_code,null,null,
     f_student_get_desc('STVRESD',resd_code,30)),1,30),
 coll_code,
 substr(decode(coll_code,null,null,
     f_student_get_desc('STVCOLL',coll_code,30)),1,30),
 degc_code,
 substr(decode(degc_code,null,null,
     f_student_get_desc('STVDEGC',degc_code,30)),1,30),
 majr_code1,
 substr(decode(majr_code1,null,null,
     f_student_get_desc('STVMAJR',majr_code1,30)),1,30),
 majr_code2,
 substr(decode(majr_code2,null,null,
     f_student_get_desc('STVMAJR',majr_code2,30)),1,30),
 clas_code,
 substr(decode(clas_code,null,null,
     f_student_get_desc('STVCLAS',clas_code,30)),1,30),
 rate_code,
 substr(decode(rate_code,null,null,
     f_student_get_desc('STVRATE',rate_code,30)),1,30),
 ests_code,
 substr(decode(ests_code,null,null,
     f_student_get_desc('STVESTS',ests_code,30)),1,30),
 artp_code,
 substr(decode(artp_code,null,null,
     f_student_get_desc('STVARTP',artp_code,30)),1,30),
 term_code_from,
 substr(decode(term_code_from,null,null,
     f_student_get_desc('STVTERM',term_code_from,30)),1,30),
 term_code_to,
 substr(decode(term_code_to,null,null,
     f_student_get_desc('STVTERM',term_code_to,30)),1,30),
 bldg_code_prefered,
 substr(decode(bldg_code_prefered,null,null,
     f_student_get_desc('STVBLDG',bldg_code_prefered,30)),1,30),
 prefered_room,
 bcat_code_prefered,
 substr(slksels.f_get_bcat_desc(bldg_code_prefered,bcat_code_prefered),1,30),
 camp_code_prefered,
 substr(decode(camp_code_prefered,null,null,
     f_student_get_desc('STVCAMP',camp_code_prefered,30)),1,30),
 mrcd_code_application,
 substr(decode(mrcd_code_application,null,null,
     f_student_get_desc('STVMRCD',mrcd_code_application,30)),1,30),
 haps_code,
 substr(decode(haps_code,null,null,
     f_student_get_desc('STVHAPS',haps_code,30)),1,30),
 housing_application_date,
 housing_application_add_date,
 room_phone_area,
 room_phone_number,
 room_phone_extension,
 bldg_code_room,
 substr(decode(bldg_code_room,null,null,
     f_student_get_desc('STVBLDG',bldg_code_room,30)),1,30),
 room_type,
 room_number,
 maximum_capacity_of_room,
 building_capacity,
 maximum_capacity_of_building,
 bldg_phone_area,
 bldg_phone_number,
 bldg_phone_extension,
 rrcd_code,
 substr(decode(rrcd_code,null,null,
     f_student_get_desc('STVRRCD',rrcd_code,30)),1,30),
 room_begin_date,
 room_end_date,
 room_total_days,
 room_total_months,
 room_total_terms,
 ascd_code,
 substr(decode(ascd_code,null,null,
     f_student_get_desc('STVASCD',ascd_code,30)),1,30),
 room_status_date,
 room_ar_ind,
 room_overload_ind,
 room_override_error,
 room_roll_ind,
 room_assess_needed,
 prcd_code,
 substr(decode(prcd_code,null,null,
     f_student_get_desc('STVPRCD',prcd_code,30)),1,30),
 phone_account_number,
 phone_area,
 phone_number,
 phone_extension,
 phone_begin_date,
 phone_end_date,
 pscd_code,
 substr(decode(pscd_code,null,null,
     f_student_get_desc('STVPSCD',pscd_code,30)),1,30),
 phone_status_date,
 mrcd_code,
 substr(decode(mrcd_code,null,null,
     f_student_get_desc('STVMRCD',mrcd_code,30)),1,30),
 meal_begin_date,
 meal_end_date,
 meal_total_days,
 meal_total_months,
 meal_total_terms,
 mscd_code,
 substr(decode(mscd_code,null,null,
     f_student_get_desc('STVMSCD',mscd_code,30)),1,30),
 meal_status_date,
 meal_ar_ind,
 p_room_phone_area,
 p_room_phone_number,
 p_room_phone_extension,
 p_bldg_code_room,
 substr(decode(p_bldg_code_room,null,null,
     f_student_get_desc('STVBLDG',p_bldg_code_room,30)),1,30),
 p_room_type,
 p_room_number,
 p_maximum_capacity_of_room,
 p_building_capacity,
 p_maximum_capacity_of_building,
 p_bldg_phone_area,
 p_bldg_phone_number,
 p_bldg_phone_extension,
 p_room_term_code,
 substr(decode(p_room_term_code,null,null,
     f_student_get_desc('STVTERM',p_room_term_code,30)),1,30),
 p_rrcd_code,
 substr(decode(p_rrcd_code,null,null,
     f_student_get_desc('STVRRCD',p_rrcd_code,30)),1,30),
 p_room_begin_date,
 p_room_end_date,
 p_room_total_days,
 p_room_total_months,
 p_room_total_terms,
 p_ascd_code,
 substr(decode(p_ascd_code,null,null,
     f_student_get_desc('STVASCD',p_ascd_code,30)),1,30),
 p_room_status_date,
 p_room_ar_ind,
 p_room_overload_ind,
 p_room_override_error,
 p_room_roll_ind,
 p_room_assess_needed,
 p_phone_term_code,
 substr(decode(p_phone_term_code,null,null,
     f_student_get_desc('STVTERM',p_phone_term_code,30)),1,30),
 p_prcd_code,
 substr(decode(p_prcd_code,null,null,
     f_student_get_desc('STVPRCD',p_prcd_code,30)),1,30),
 p_phone_account_number,
 p_phone_area,
 p_phone_number,
 p_phone_extension,
 p_phone_begin_date,
 p_phone_end_date,
 p_pscd_code,
 substr(decode(p_pscd_code,null,null,
     f_student_get_desc('STVPSCD',p_pscd_code,30)),1,30),
 p_phone_status_date,
 p_meal_term_code,
 substr(decode(p_meal_term_code,null,null,
     f_student_get_desc('STVTERM',p_meal_term_code,30)),1,30),
 p_mrcd_code,
 substr(decode(p_mrcd_code,null,null,
     f_student_get_desc('STVMRCD',p_mrcd_code,30)),1,30),
 p_meal_begin_date,
 p_meal_end_date,
 p_meal_total_days,
 p_meal_total_months,
 p_meal_total_terms,
 p_mscd_code,
 substr(decode(p_mscd_code,null,null,
     f_student_get_desc('STVMSCD',p_mscd_code,30)),1,30),
 p_meal_status_date,
 p_meal_ar_ind
from slvrsm2"
"BANINST1","AS_RESIDENTIAL_LIFE","This view joins in descriptions of coded fields to provide residential life information.","select
 pidm_key,
 term_code_key,
 substr(decode(term_code_key,null,null,
     f_student_get_desc('STVTERM',term_code_key,30)),1,30),
 enrolled_ind,
 registered_ind,
 meal_plan_ind,
 housing_ind,
 phone_ind,
 term_code_last_attended,
 substr(decode(term_code_last_attended,null,null,
     f_student_get_desc('STVTERM',term_code_last_attended,30)),1,30),
 id,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 substr(decode(ethn_code,null,null,f_get_ethn_category(ethn_code,'ETCT')),1,1),
 ethn_code,
 substr(decode(ethn_code,null,null,
     f_student_get_desc('STVETHN',ethn_code,30)),1,30),
 lgcy_code,
 substr(decode(lgcy_code,null,null,
     f_student_get_desc('STVLGCY',lgcy_code,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 stat_code1,
 cnty_code1,
 substr(decode(cnty_code1,null,null,
     f_student_get_desc('STVCNTY',cnty_code1,30)),1,30),
 zip1,
 natn_code1,
 substr(decode(natn_code1,null,null,
     f_student_get_desc('STVNATN',natn_code1,30)),1,30),
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 stat_code2,
 cnty_code2,
 substr(decode(cnty_code2,null,null,
     f_student_get_desc('STVCNTY',cnty_code2,30)),1,30),
 zip2,
 natn_code2,
 substr(decode(natn_code2,null,null,
     f_student_get_desc('STVNATN',natn_code2,30)),1,30),
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 term_code_effective,
 substr(decode(term_code_effective,null,null,
     f_student_get_desc('STVTERM',term_code_effective,30)),1,30),
 full_part_time_ind,
 stst_code,
 substr(decode(stst_code,null,null,
     f_student_get_desc('STVSTST',stst_code,30)),1,30),
 levl_code,
 substr(decode(levl_code,null,null,
     f_student_get_desc('STVLEVL',levl_code,30)),1,30),
 styp_code,
 substr(decode(styp_code,null,null,
     f_student_get_desc('STVSTYP',styp_code,30)),1,30),
 camp_code,
 substr(decode(camp_code,null,null,
     f_student_get_desc('STVCAMP',camp_code,30)),1,30),
 resd_code,
 substr(decode(resd_code,null,null,
     f_student_get_desc('STVRESD',resd_code,30)),1,30),
 coll_code,
 substr(decode(coll_code,null,null,
     f_student_get_desc('STVCOLL',coll_code,30)),1,30),
 degc_code,
 substr(decode(degc_code,null,null,
     f_student_get_desc('STVDEGC',degc_code,30)),1,30),
 majr_code1,
 substr(decode(majr_code1,null,null,
     f_student_get_desc('STVMAJR',majr_code1,30)),1,30),
 majr_code2,
 substr(decode(majr_code2,null,null,
     f_student_get_desc('STVMAJR',majr_code2,30)),1,30),
 clas_code,
 substr(decode(clas_code,null,null,
     f_student_get_desc('STVCLAS',clas_code,30)),1,30),
 rate_code,
 substr(decode(rate_code,null,null,
     f_student_get_desc('STVRATE',rate_code,30)),1,30),
 ests_code,
 substr(decode(ests_code,null,null,
     f_student_get_desc('STVESTS',ests_code,30)),1,30),
 artp_code,
 substr(decode(artp_code,null,null,
     f_student_get_desc('STVARTP',artp_code,30)),1,30),
 term_code_from,
 substr(decode(term_code_from,null,null,
     f_student_get_desc('STVTERM',term_code_from,30)),1,30),
 term_code_to,
 substr(decode(term_code_to,null,null,
     f_student_get_desc('STVTERM',term_code_to,30)),1,30),
 bldg_code_prefered,
 substr(decode(bldg_code_prefered,null,null,
     f_student_get_desc('STVBLDG',bldg_code_prefered,30)),1,30),
 prefered_room,
 bcat_code_prefered,
 substr(slksels.f_get_bcat_desc( bldg_code_prefered , bcat_code_prefered),1,30),
 camp_code_prefered,
 substr(decode(camp_code_prefered,null,null,
     f_student_get_desc('STVCAMP',camp_code_prefered,30)),1,30),
 mrcd_code_application,
 substr(decode(mrcd_code_application,null,null,
     f_student_get_desc('STVMRCD',mrcd_code_application,30)),1,30),
 haps_code,
 substr(decode(haps_code,null,null,
     f_student_get_desc('STVHAPS',haps_code,30)),1,30),
 housing_application_date,
 housing_application_add_date,
 room_phone_area,
 room_phone_number,
 room_phone_extension,
 bldg_code_room,
 substr(decode(bldg_code_room,null,null,
     f_student_get_desc('STVBLDG',bldg_code_room,30)),1,30),
 room_type,
 room_number,
 maximum_capacity_of_room,
 building_capacity,
 maximum_capacity_of_building,
 bldg_phone_area,
 bldg_phone_number,
 bldg_phone_extension,
 rrcd_code,
 substr(decode(rrcd_code,null,null,
     f_student_get_desc('STVRRCD',rrcd_code,30)),1,30),
 room_begin_date,
 room_end_date,
 room_total_days,
 room_total_months,
 room_total_terms,
 ascd_code,
 substr(decode(ascd_code,null,null,
     f_student_get_desc('STVASCD',ascd_code,30)),1,30),
 room_status_date,
 room_ar_ind,
 room_overload_ind,
 room_override_error,
 room_roll_ind,
 room_assess_needed,
 prcd_code,
 substr(decode(prcd_code,null,null,
     f_student_get_desc('STVPRCD',prcd_code,30)),1,30),
 phone_account_number,
 phone_area,
 phone_number,
 phone_extension,
 phone_begin_date,
 phone_end_date,
 pscd_code,
 substr(decode(pscd_code,null,null,
     f_student_get_desc('STVPSCD',pscd_code,30)),1,30),
 phone_status_date,
 mrcd_code,
 substr(decode(mrcd_code,null,null,
     f_student_get_desc('STVMRCD',mrcd_code,30)),1,30),
 meal_begin_date,
 meal_end_date,
 meal_total_days,
 meal_total_months,
 meal_total_terms,
 mscd_code,
 substr(decode(mscd_code,null,null,
     f_student_get_desc('STVMSCD',mscd_code,30)),1,30),
 meal_status_date,
 meal_ar_ind,
 hldd_code1,
 substr(decode(hldd_code1,null,null,
     f_student_get_desc('STVHLDD',hldd_code1,30)),1,30),
 hold_from_date1,
 hold_to_date1,
 hold_amount_owed1,
 hold_reason1,
 hldd_code2,
 substr(decode(hldd_code2,null,null,
     f_student_get_desc('STVHLDD',hldd_code2,30)),1,30),
 hold_from_date2,
 hold_to_date2,
 hold_amount_owed2,
 hold_reason2,
 hldd_code3,
 substr(decode(hldd_code3,null,null,
     f_student_get_desc('STVHLDD',hldd_code3,30)),1,30),
 hold_from_date3,
 hold_to_date3,
 hold_amount_owed3,
 hold_reason3,
 hldd_code4,
 substr(decode(hldd_code4,null,null,
     f_student_get_desc('STVHLDD',hldd_code4,30)),1,30),
 hold_from_date4,
 hold_to_date4,
 hold_amount_owed4,
 hold_reason4,
 hldd_code5,
 substr(decode(hldd_code5,null,null,
     f_student_get_desc('STVHLDD',hldd_code5,30)),1,30),
 hold_from_date5,
 hold_to_date5,
 hold_amount_owed5,
 hold_reason5,
 additional_holds_ind,
 overall_gpa_hours_attempted,
 overall_gpa_hours_earned,
 overall_gpa_hours,
 overall_gpa_quality_points,
 overall_gpa,
 overall_gpa_hours_passed,
 inst_gpa_hours_attempted,
 inst_gpa_hours_earned,
 inst_gpa_hours,
 inst_gpa_quality_points,
 inst_gpa,
 inst_gpa_hours_passed,
 transfer_gpa_hours_attempted,
 transfer_gpa_hours_earned,
 transfer_gpa_hours,
 transfer_gpa_quality_points,
 transfer_gpa,
 transfer_gpa_hours_passed,
 overall_tgpa_hours_attempted,
 overall_tgpa_hours_earned,
 overall_tgpa_hours,
 overall_tgpa_quality_points,
 overall_tgpa,
 overall_tgpa_hours_passed,
 inst_tgpa_hours_attempted,
 inst_tgpa_hours_earned,
 inst_tgpa_hours,
 inst_tgpa_quality_points,
 inst_tgpa,
 inst_tgpa_hours_passed,
 transfer_tgpa_hours_attempted,
 transfer_tgpa_hours_earned,
 transfer_tgpa_hours,
 transfer_tgpa_quality_points,
 transfer_tgpa,
 transfer_tgpa_hours_passed
from slvres1"
"BANINST1","AS_RECRUITING_SOURCE_ANALYSIS","This view retrieves recruiting information and source information using a series of base and repeating tables, along with associated functions to form the display of data fields and their
descriptions.","select
 pidm_key,
 term_code_key,
 substr(decode(term_code_key,null,null,f_student_get_desc
     ('STVTERM',term_code_key,30)),1,30),
 recruit_data_seq_no_key,
 source_key,
 substr(decode(source_key,null,null,f_student_get_desc
     ('STVSBGI',source_key,30)),1,30),
 primary_source_ind,
 applied_for_admissions_ind,
 student_accepted_ind,
 institution_accepted_ind,
 paid_deposit_ind,
 enrolled_this_term_ind,
 student_id_number,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 current_age,
 age_when_first_recruited,
 gender,
 substr(decode(ethnicity,null,null,f_get_ethn_category(ethnicity,'ETCT')),1,1),
 ethnicity,
 substr(decode(ethnicity,null,null,f_student_get_desc
     ('STVETHN',ethnicity,30)),1,30),
 legacy,
 substr(decode(legacy,null,null,f_student_get_desc
     ('STVLGCY',legacy,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 state1,
 county1,
 substr(decode(county1,null,null,f_student_get_desc
     ('STVCNTY',county1,30)),1,30),
 zip1,
 nation1,
 substr(decode(nation1,null,null,f_student_get_desc
     ('STVNATN',nation1,30)),1,30),
 address1_type,
 area1_code,
 phone1_number,
 phone1_type,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 state2,
 county2,
 substr(decode(county2,null,null,f_student_get_desc
     ('STVCNTY',county2,30)),1,30),
 zip2,
 nation2,
 substr(decode(nation2,null,null,f_student_get_desc
     ('STVNATN',nation2,30)),1,30),
 address2_type,
 area2_code,
 phone2_number,
 phone2_type,
 full_part_time_ind,
 department,
 substr(decode(department,null,null,f_student_get_desc
     ('STVDEPT',department,30)),1,30),
 level_code,
 substr(decode(level_code,null,null,f_student_get_desc
     ('STVLEVL',level_code,30)),1,30),
 degree,
 substr(decode(degree,null,null,f_student_get_desc
     ('STVDEGC',degree,30)),1,30),
 major,
 substr(decode(major,null,null,f_student_get_desc
     ('STVMAJR',major,30)),1,30),
 college,
 substr(decode(college,null,null,f_student_get_desc
     ('STVCOLL',college,30)),1,30),
 recruiter,
 substr(decode(recruiter,null,null,f_student_get_desc
     ('STVRECR',recruiter,30)),1,30),
 rating,
 substr(decode(rating,null,null,f_student_get_desc
     ('STVRSTA',rating,30)),1,30),
 selection_ind,
 add_date,
 campus,
 substr(decode(campus,null,null,f_student_get_desc
     ('STVCAMP',campus,30)),1,30),
 other_institution,
 substr(decode(other_institution,null,null,f_student_get_desc
     ('STVSBGI',other_institution,30)),1,30),
 withdrawal_reason,
 substr(decode(withdrawal_reason,null,null,f_student_get_desc
     ('STVWRSN',withdrawal_reason,30)),1,30),
 recruit_type,
 substr(decode(recruit_type,null,null,f_student_get_desc
     ('STVRTYP',recruit_type,30)),1,30),
 residency,
 substr(decode(residency,null,null,f_student_get_desc
     ('STVRESD',residency,30)),1,30),
 session_code,
 substr(decode(session_code,null,null,f_student_get_desc
     ('STVSESS',session_code,30)),1,30)
from srvrsr1
 "
"BANINST1","AS_RECRUITING_DATA","This view retrieves recruiting information using a series of base and repeating tables, along with associated functions to form the display of data fields and their descriptions.","select
 pidm_key,
 term_code_key,
 substr(decode(term_code_key,null,null,f_student_get_desc
     ('STVTERM',term_code_key,30)),1,30),
 recruit_data_seq_no_key,
 applied_for_admissions_ind,
 student_accepted_ind,
 institution_accepted_ind,
 paid_deposit_ind,
 enrolled_this_term_ind,
 student_id_number,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 surname_prefix,
 birth_date,
 current_age,
 age_when_first_recruited,
 gender,
 substr(decode(ethnicity,null,null,f_get_ethn_category(ethnicity,'ETCT')),1,1),
 ethnicity,
 substr(decode(ethnicity,null,null,f_student_get_desc
     ('STVETHN',ethnicity,30)),1,30),
 legacy,
 substr(decode(legacy,null,null,f_student_get_desc
     ('STVLGCY',legacy,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 house_number1,
 street1_line1,
 street1_line2,
 street1_line3,
 street1_line4,
 city1,
 state1,
 county1,
 substr(decode(county1,null,null,f_student_get_desc
     ('STVCNTY',county1,30)),1,30),
 zip1,
 nation1,
 substr(decode(nation1,null,null,f_student_get_desc
     ('STVNATN',nation1,30)),1,30),
 address1_type,
 area1_code,
 phone1_number,
 phone1_type,
 phone_ctry_cde1,
 house_number2,
 street2_line1,
 street2_line2,
 street2_line3,
 street2_line4,
 city2,
 state2,
 county2,
 substr(decode(county2,null,null,f_student_get_desc
     ('STVCNTY',county2,30)),1,30),
 zip2,
 nation2,
 substr(decode(nation2,null,null,f_student_get_desc
     ('STVNATN',nation2,30)),1,30),
 address2_type,
 area2_code,
 phone2_number,
 phone2_type,
 phone_ctry_cde2,
 full_part_time_ind,
 department,
 substr(decode(department,null,null,f_student_get_desc
     ('STVDEPT',department,30)),1,30),
 level_code,
 substr(decode(level_code,null,null,f_student_get_desc
     ('STVLEVL',level_code,30)),1,30),
 degree,
 substr(decode(degree,null,null,f_student_get_desc
     ('STVDEGC',degree,30)),1,30),
 major,
 substr(decode(major,null,null,f_student_get_desc
     ('STVMAJR',major,30)),1,30),
 college,
 substr(decode(college,null,null,f_student_get_desc
     ('STVCOLL',college,30)),1,30),
 recruiter,
 substr(decode(recruiter,null,null,f_student_get_desc
     ('STVRECR',recruiter,30)),1,30),
 rating,
 substr(decode(rating,null,null,f_student_get_desc
     ('STVRSTA',rating,30)),1,30),
 selection_ind,
 add_date,
 campus,
 substr(decode(campus,null,null,f_student_get_desc
     ('STVCAMP',campus,30)),1,30),
 other_institution,
 substr(decode(other_institution,null,null,f_student_get_desc
     ('STVSBGI',other_institution,30)),1,30),
 withdrawal_reason,
 substr(decode(withdrawal_reason,null,null,f_student_get_desc
     ('STVWRSN',withdrawal_reason,30)),1,30),
 recruit_type,
 substr(decode(recruit_type,null,null,f_student_get_desc
     ('STVRTYP',recruit_type,30)),1,30),
 residency,
 substr(decode(residency,null,null,f_student_get_desc
     ('STVRESD',residency,30)),1,30),
 session_code,
 substr(decode(session_code,null,null,f_student_get_desc
     ('STVSESS',session_code,30)),1,30),
 primary_source,
 substr(decode(primary_source,null,null,f_student_get_desc
     ('STVSBGI',primary_source,30)),1,30),
 primary_contact_person,
 primary_contact_position,
 substr(decode
     (primary_contact_position,null,null,f_student_get_desc
     ('STVPTYP',primary_contact_position,30)),1,30),
 source1,
 substr(decode(source1,null,null,f_student_get_desc
     ('STVSBGI',source1,30)),1,30),
 source2,
 substr(decode(source2,null,null,f_student_get_desc
     ('STVSBGI',source2,30)),1,30),
 source3,
 substr(decode(source3,null,null,f_student_get_desc
     ('STVSBGI',source3,30)),1,30),
 additional_sources,
 first_contact,
 substr(decode(first_contact,null,null,f_student_get_desc
     ('STVCTYP',first_contact,30)),1,30),
 first_contact_date,
 latest_contact,
 substr(decode(latest_contact,null,null,f_student_get_desc
     ('STVCTYP',latest_contact,30)),1,30),
 latest_contact_date,
 contact1,
 substr(decode(contact1,null,null,f_student_get_desc
     ('STVCTYP',contact1,30)),1,30),
 contact1_date,
 contact2,
 substr(decode(contact2,null,null,f_student_get_desc
     ('STVCTYP',contact2,30)),1,30),
 contact2_date,
 contact3,
 substr(decode(contact3,null,null,f_student_get_desc
     ('STVCTYP',contact3,30)),1,30),
 contact3_date,
 contact4,
 substr(decode(contact4,null,null,f_student_get_desc
     ('STVCTYP',contact4,30)),1,30),
 contact4_date,
 contact5,
 substr(decode(contact5,null,null,f_student_get_desc
     ('STVCTYP',contact5,30)),1,30),
 contact5_date,
 additional_contacts,
 interest1,
 substr(decode(interest1,null,null,f_student_get_desc
     ('STVINTS',interest1,30)),1,30),
 interest2,
 substr(decode(interest2,null,null,f_student_get_desc
     ('STVINTS',interest2,30)),1,30),
 interest3,
 substr(decode(interest3,null,null,f_student_get_desc
     ('STVINTS',interest3,30)),1,30),
 interest4,
 substr(decode(interest4,null,null,f_student_get_desc
     ('STVINTS',interest4,30)),1,30),
 interest5,
 substr(decode(interest5,null,null,f_student_get_desc
     ('STVINTS',interest5,30)),1,30),
 additional_interests,
 high_school,
 substr(decode(high_school,null,null,f_student_get_desc
     ('STVSBGI',high_school,30)),1,30),
 high_school_house_number,
 high_school_street1,
 high_school_street2,
 high_school_street3,
 high_school_street4,
 high_school_city,
 high_school_state,
 high_school_zip,
 high_school_grad_date,
 high_school_percentile,
 high_school_rank,
 high_school_size,
 high_school_reported_gpa,
 mail1_code,
 substr(decode(mail1_code,null,null,f_student_get_desc
     ('GTVLETR',mail1_code,30)),1,30),
 communication1_plan,
 system1_ind,
 module1,
 material1_code,
 substr(decode(material1_code,null,null,f_student_get_desc
     ('STVMATL',material1_code,30)),1,30),
 mail1_date_initiated,
 mail1_date_printed,
 pending1_letter_ind,
 mail2_code,
 substr(decode(mail2_code,null,null,f_student_get_desc
     ('GTVLETR',mail2_code,30)),1,30),
 communication2_plan,
 system2_ind,
 module2,
 material2_code,
 substr(decode(material2_code,null,null,f_student_get_desc
     ('STVMATL',material2_code,30)),1,30),
 mail2_date_initiated,
 mail2_date_printed,
 pending2_letter_ind,
 mail3_code,
 substr(decode(mail3_code,null,null,f_student_get_desc
     ('GTVLETR',mail3_code,30)),1,30),
 communication3_plan,
 system3_ind,
 module3,
 material3_code,
 substr(decode(material3_code,null,null,f_student_get_desc
     ('STVMATL',material3_code,30)),1,30),
 mail3_date_initiated,
 mail3_date_printed,
 pending3_letter_ind,
 mail4_code,
 substr(decode(mail4_code,null,null,f_student_get_desc
     ('GTVLETR',mail4_code,30)),1,30),
 communication4_plan,
 system4_ind,
 module4,
 material4_code,
 substr(decode(material4_code,null,null,f_student_get_desc
     ('STVMATL',material4_code,30)),1,30),
 mail4_date_initiated,
 mail4_date_printed,
 pending4_letter_ind,
 mail5_code,
 substr(decode(mail5_code,null,null,f_student_get_desc
     ('GTVLETR',mail5_code,30)),1,30),
 communication5_plan,
 system5_ind,
 module5,
 material5_code,
 substr(decode(material5_code,null,null,f_student_get_desc
     ('STVMATL',material5_code,30)),1,30),
 mail5_date_initiated,
 mail5_date_printed,
 pending5_letter_ind,
 additional_mail,
 learned,
 f_student_get_desc('STVLEND',learned,30),
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 SUBSTR(mre_race_data,1,3),
 SUBSTR(mre_race_data,4,60),
 SUBSTR(mre_race_data,64,1),
 SUBSTR(mre_race_data,65,1)
from srvrcr1"
"BANINST1","AS_FACULTY_DATA","This view will join in descriptions for coded fields to provide information about faculty members.","select
 term_code_key,
 substr(decode(term_code_key,null,null,
     f_student_get_desc('STVTERM',term_code_key,30)),1,30),
 pidm_key,
 eligible_to_advise_ind,
 advising_ind,
 eligible_to_be_scheduled_ind,
 scheduled_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 ethn_code,
 substr(decode(ethn_code,null,null,
     f_student_get_desc('STVETHN',ethn_code,30)),1,30),
 deceased_ind,
 deceased_date,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 state1,
 zip1,
 cnty_code1,
 substr(decode(cnty_code1,null,null,
     f_student_get_desc('STVCNTY',cnty_code1,30)),1,30),
 natn_code1,
 substr(decode(natn_code1,null,null,
     f_student_get_desc('STVNATN',natn_code1,30)),1,30),
 atyp_code1,
 phone_area_code1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 state2,
 zip2,
 cnty_code2,
 substr(decode(cnty_code2,null,null,
     f_student_get_desc('STVCNTY',cnty_code2,30)),1,30),
 natn_code2,
 substr(decode(natn_code2,null,null,
     f_student_get_desc('STVNATN',natn_code2,30)),1,30),
 atyp_code2,
 phone_area_code2,
 phone_number2,
 tele_code2,
 tenr_code,
 substr(decode(tenr_code,null,null,f_get_tenure_desc(tenr_code)),1,30),
 tenure_date,
 tenure_review_date,
 last_sabbatical_date,
 next_sabbatical_date,
 years_experience,
 birth_state,
 aaup_member_ind,
 academic_title,
 primary_activity,
 term_code_effective,
 fcst_code,
 substr(decode(fcst_code,null,null,
     f_student_get_desc('STVFCST',fcst_code,30)),1,30),
 faculty_member_status_date,
 fctg_code,
 substr(decode(fctg_code,null,null,
     f_student_get_desc('STVFCTG',fctg_code,30)),1,30),
 fstp_code,
 substr(decode(fstp_code,null,null,
     f_student_get_desc('STVFSTP',fstp_code,30)),1,30),
 term_code_effective_coll_dept,
 substr(decode(term_code_effective_coll_dept,null,null,
     f_student_get_desc('STVTERM',term_code_effective_coll_dept,30)),1,30),
 coll_code,
 substr(decode(coll_code,null,null,
     f_student_get_desc('STVCOLL',coll_code,30)),1,30),
 dept_code,
 substr(decode(dept_code,null,null,
     f_student_get_desc('STVDEPT',dept_code,30)),1,30),
 home_dept_coll_ind,
 percentage_of_responsibility,
 fatt_code1,
 substr(decode(fatt_code1,null,null,
     f_student_get_desc('STVFATT',fatt_code1,30)),1,30),
 fatt_code2,
 substr(decode(fatt_code2,null,null,
     f_student_get_desc('STVFATT',fatt_code2,30)),1,30),
 fatt_code3,
 substr(decode(fatt_code3,null,null,
     f_student_get_desc('STVFATT',fatt_code3,30)),1,30),
 fatt_code4,
 substr(decode(fatt_code4,null,null,
     f_student_get_desc('STVFATT',fatt_code4,30)),1,30),
 fatt_code5,
 substr(decode(fatt_code5,null,null,
     f_student_get_desc('STVFATT',fatt_code5,30)),1,30),
 additional_attributes_ind,
 nist_workload1,
 nist_code1,
 substr(decode(nist_code1,null,null,
     f_student_get_desc('STVNIST',nist_code1,30)),1,30),
 coll_code_nist1,
 substr(decode(coll_code_nist1,null,null,
     f_student_get_desc('STVCOLL',coll_code_nist1,30)),1,30),
 dept_code_nist1,
 substr(decode(dept_code_nist1,null,null,
     f_student_get_desc('STVDEPT',dept_code_nist1,30)),1,30),
 nist_workload2,
 nist_code2,
 substr(decode(nist_code2,null,null,
     f_student_get_desc('STVNIST',nist_code2,30)),1,30),
 coll_code_nist2,
 substr(decode(coll_code_nist2,null,null,
     f_student_get_desc('STVCOLL',coll_code_nist2,30)),1,30),
 dept_code_nist2,
 substr(decode(dept_code_nist2,null,null,
     f_student_get_desc('STVDEPT',dept_code_nist2,30)),1,30),
 nist_workload3,
 nist_code3,
 substr(decode(nist_code3,null,null,
     f_student_get_desc('STVNIST',nist_code3,30)),1,30),
 coll_code_nist3,
 substr(decode(coll_code_nist3,null,null,
     f_student_get_desc('STVCOLL',coll_code_nist3,30)),1,30),
 dept_code_nist3,
 substr(decode(dept_code_nist3,null,null,
     f_student_get_desc('STVDEPT',dept_code_nist3,30)),1,30),
 nist_workload4,
 nist_code4,
 substr(decode(nist_code4,null,null,
     f_student_get_desc('STVNIST',nist_code4,30)),1,30),
 coll_code_nist4,
 substr(decode(coll_code_nist4,null,null,
     f_student_get_desc('STVCOLL',coll_code_nist4,30)),1,30),
 dept_code_nist4,
 substr(decode(dept_code_nist4,null,null,
     f_student_get_desc('STVDEPT',dept_code_nist4,30)),1,30),
 nist_workload5,
 nist_code5,
 substr(decode(nist_code5,null,null,
     f_student_get_desc('STVNIST',nist_code5,30)),1,30),
 coll_code_nist5,
 substr(decode(coll_code_nist5,null,null,
     f_student_get_desc('STVCOLL',coll_code_nist5,30)),1,30),
 dept_code_nist5,
 substr(decode(dept_code_nist5,null,null,
     f_student_get_desc('STVDEPT',dept_code_nist5,30)),1,30),
 nist_workload6,
 nist_code6,
 substr(decode(nist_code6,null,null,
     f_student_get_desc('STVNIST',nist_code6,30)),1,30),
 coll_code_nist6,
 substr(decode(coll_code_nist6,null,null,
     f_student_get_desc('STVCOLL',coll_code_nist6,30)),1,30),
 dept_code_nist6,
 substr(decode(dept_code_nist6,null,null,
     f_student_get_desc('STVDEPT',dept_code_nist6,30)),1,30),
 additional_nist_ind
from sivfac1
 "
"BANINST1","AS_CLEARED_TO_ATTEND","BANNER reporting top layer view for the Cleared to Attend View","select
 sovcta1_pidm_key,
 sovcta1_term_code_key,
 substr(f_student_get_desc('STVTERM',sovcta1_term_code_key,30),1,30),
 sovcta1_reporting_date,
 sovcta1_enrolled_ind,
 sovcta1_registered_ind,
 sovcta1_applied_for_degree_ind,
 sovcta1_id,
 sovcta1_ssn,
 sovcta1_last_name,
 sovcta1_first_name,
 sovcta1_middle_name,
 sovcta1_middle_initial,
 sovcta1_name_prefix,
 sovcta1_name_suffix,
 sovcta1_street1_line1,
 sovcta1_street1_line2,
 sovcta1_street1_line3,
 sovcta1_city1,
 sovcta1_stat1_code,
 sovcta1_zip1,
 sovcta1_cnty1_code,
 substr(f_student_get_desc('STVCNTY',sovcta1_cnty1_code,30),1,30),
 sovcta1_natn1_code,
 substr(f_student_get_desc('STVNATN',sovcta1_natn1_code,30),1,30),
 sovcta1_atyp1_code,
 sovcta1_phone1_area,
 sovcta1_phone1_number,
 sovcta1_tele1_code,
 sovcta1_street2_line1,
 sovcta1_street2_line2,
 sovcta1_street2_line3,
 sovcta1_city2,
 sovcta1_stat2_code,
 sovcta1_zip2,
 sovcta1_cnty2_code,
 substr(f_student_get_desc('STVCNTY',sovcta1_cnty2_code,30),1,30),
 sovcta1_natn2_code,
 substr(f_student_get_desc('STVNATN',sovcta1_natn2_code,30),1,30),
 sovcta1_atyp2_code,
 sovcta1_phone2_area,
 sovcta1_phone2_number,
 sovcta1_tele2_code,
 sovcta1_coll_code_1,
 substr(f_student_get_desc('STVCOLL',sovcta1_coll_code_1,30),1,30),
 sovcta1_camp_code,
 substr(f_student_get_desc('STVCAMP',sovcta1_camp_code,30),1,30),
 sovcta1_levl_code,
 substr(f_student_get_desc('STVLEVL',sovcta1_levl_code,30),1,30),
 sovcta1_clas_code,
 substr(f_student_get_desc('STVCLAS',sovcta1_clas_code,30),1,30),
 sovcta1_rate_code,
 substr(f_student_get_desc('STVRATE',sovcta1_rate_code,30),1,30),
 sovcta1_hold_code1,
 substr(f_student_get_desc('STVHLDD',sovcta1_hold_code1,30),1,30),
 sovcta1_hold_from_date1,
 sovcta1_hold_to_date1,
 sovcta1_hold_amount_owed1,
 sovcta1_hold_reason1,
 sovcta1_hold_code2,
 substr(f_student_get_desc('STVHLDD',sovcta1_hold_code2,30),1,30),
 sovcta1_hold_from_date2,
 sovcta1_hold_to_date2,
 sovcta1_hold_amount_owed2,
 sovcta1_hold_reason2,
 sovcta1_hold_code3,
 substr(f_student_get_desc('STVHLDD',sovcta1_hold_code3,30),1,30),
 sovcta1_hold_from_date3,
 sovcta1_hold_to_date3,
 sovcta1_hold_amount_owed3,
 sovcta1_hold_reason3,
 sovcta1_hold_code4,
 substr(f_student_get_desc('STVHLDD',sovcta1_hold_code4,30),1,30),
 sovcta1_hold_from_date4,
 sovcta1_hold_to_date4,
 sovcta1_hold_amount_owed4,
 sovcta1_hold_reason4,
 sovcta1_hold_code5,
 substr(f_student_get_desc('STVHLDD',sovcta1_hold_code5,30),1,30),
 sovcta1_hold_from_date5,
 sovcta1_hold_to_date5,
 sovcta1_hold_amount_owed5,
 sovcta1_hold_reason5,
 sovcta1_additional_holds,
 sovcta1_balance_other_terms,
 sovcta1_term_charges,
 sovcta1_term_payments,
 sovcta1_authorized_payments,
 sovcta1_financial_aid_memos,
 sovcta1_amount_owed
from sovcta1
 "
"BANINST1","AS_CATALOG_SCHEDULE","","select
 term_code_key,
 substr(decode(term_code_key,null,null,
     f_student_get_desc('STVTERM',term_code_key,30)),1,30),
 crn_key,
 seq_number_key,
 active_section_ind,
 active_course_ind,
 course_coreq_ind,
 course_prereq_ind,
 section_coreq_ind,
 section_prereq_ind,
 course_eff_term_code,
 substr(decode(course_eff_term_code,null,null,
     f_student_get_desc('STVTERM',course_eff_term_code,30)),1,30),
 coll_code,
 substr(decode(coll_code,null,null,
     f_student_get_desc('STVCOLL',coll_code,30)),1,30),
 dept_code,
 substr(decode(dept_code,null,null,
     f_student_get_desc('STVDEPT',dept_code,30)),1,30),
 levl_code1,
 substr(decode(levl_code1,null,null,
     f_student_get_desc('STVLEVL',levl_code1,30)),1,30),
 levl_code2,
 substr(decode(levl_code2,null,null,
     f_student_get_desc('STVLEVL',levl_code2,30)),1,30),
 levl_code3,
 substr(decode(levl_code3,null,null,
     f_student_get_desc('STVLEVL',levl_code3,30)),1,30),
 levl_code4,
 substr(decode(levl_code4,null,null,
     f_student_get_desc('STVLEVL',levl_code4,30)),1,30),
 divs_code,
 substr(decode(divs_code,null,null,
     f_student_get_desc('STVDIVS',divs_code,30)),1,30),
 subj_code,
 substr(decode(subj_code,null,null,
     f_student_get_desc('STVSUBJ',subj_code,30)),1,30),
 crse_number,
 ceu_ind,
 csta_code,
 substr(decode(csta_code,null,null,
     f_student_get_desc('STVCSTA',csta_code,30)),1,30),
 credit_hours,
 credit_hours_low,
 credit_hours_high,
 credit_hours_ind,
 billing_hours,
 billing_hours_low,
 billing_hours_high,
 billing_hours_ind,
 ssts_code,
 substr(decode(ssts_code,null,null,
     f_student_get_desc('STVSSTS',ssts_code,30)),1,30),
 camp_code,
 substr(decode(camp_code,null,null,
     f_student_get_desc('STVCAMP',camp_code,30)),1,30),
 gmod_code,
 substr(decode(gmod_code,null,null,
     f_student_get_desc('STVGMOD',gmod_code,30)),1,30),
 title,
 sapr_code,
 substr(decode(sapr_code,null,null,
     f_student_get_desc('STVSAPR',sapr_code,30)),1,30),
 census_enrollment1,
 census_enrollment_date1,
 census_enrollment2,
 census_enrollment_date2,
 projected_enrollment,
 maximum_enrollment,
 actual_enrollment,
 seats_available,
 ptrm_code,
 substr(decode(ptrm_code,null,null,
     f_student_get_desc('STVPTRM',ptrm_code,30)),1,30),
 ptrm_start_date,
 ptrm_end_date,
 link_identifier,
 begin_time1,
 end_time1,
 bldg_code1,
 substr(decode(bldg_code1,null,null,
     f_student_get_desc('STVBLDG',bldg_code1,30)),1,30),
 room_code1,
 substr(decode(room_code1,null,null,
     f_get_slbrdef_desc(bldg_code1, room_code1, term_code_key)),1,30),
 schd_code_meet1,
 monday_ind1,
 tuesday_ind1,
 wednesday_ind1,
 thursday_ind1,
 friday_ind1,
 saturday_ind1,
 sunday_ind1,
 begin_time2,
 end_time2,
 bldg_code2,
 substr(decode(bldg_code2,null,null,
     f_student_get_desc('STVBLDG',bldg_code2,30)),1,30),
 room_code2,
 substr(decode(room_code2,null,null,
     f_get_slbrdef_desc(bldg_code2, room_code2, term_code_key)),1,30),
 schd_code_meet2,
 monday_ind2,
 tuesday_ind2,
 wednesday_ind2,
 thursday_ind2,
 friday_ind2,
 saturday_ind2,
 sunday_ind2,
 begin_time3,
 end_time3,
 bldg_code3,
 substr(decode(bldg_code3,null,null,
     f_student_get_desc('STVBLDG',bldg_code3,30)),1,30),
 room_code3,
 substr(decode(room_code3,null,null,
     f_get_slbrdef_desc(bldg_code3, room_code3, term_code_key)),1,30),
 schd_code_meet3,
 monday_ind3,
 tuesday_ind3,
 wednesday_ind3,
 thursday_ind3,
 friday_ind3,
 saturday_ind3,
 sunday_ind3,
 begin_time4,
 end_time4,
 bldg_code4,
 substr(decode(bldg_code4,null,null,
     f_student_get_desc('STVBLDG',bldg_code4,30)),1,30),
 room_code4,
 substr(decode(room_code4,null,null,
     f_get_slbrdef_desc(bldg_code4, room_code4, term_code_key)),1,30),
 schd_code_meet4,
 monday_ind4,
 tuesday_ind4,
 wednesday_ind4,
 thursday_ind4,
 friday_ind4,
 saturday_ind4,
 sunday_ind4,
 begin_time5,
 end_time5,
 bldg_code5,
 substr(decode(bldg_code5,null,null,
     f_student_get_desc('STVBLDG',bldg_code5,30)),1,30),
 room_code5,
 substr(decode(room_code5,null,null,
     f_get_slbrdef_desc(bldg_code5, room_code5, term_code_key)),1,30),
 schd_code_meet5,
 monday_ind5,
 tuesday_ind5,
 wednesday_ind5,
 thursday_ind5,
 friday_ind5,
 saturday_ind5,
 sunday_ind5,
 begin_time6,
 end_time6,
 bldg_code6,
 substr(decode(bldg_code6,null,null,
     f_student_get_desc('STVBLDG',bldg_code6,30)),1,30),
 room_code6,
 substr(decode(room_code6,null,null,
     f_get_slbrdef_desc(bldg_code6, room_code6, term_code_key)),1,30),
 schd_code_meet6,
 monday_ind6,
 tuesday_ind6,
 wednesday_ind6,
 thursday_ind6,
 friday_ind6,
 saturday_ind6,
 sunday_ind6,
 begin_time7,
 end_time7,
 bldg_code7,
 substr(decode(bldg_code7,null,null,
     f_student_get_desc('STVBLDG',bldg_code7,30)),1,30),
 room_code7,
 substr(decode(room_code7,null,null,
     f_get_slbrdef_desc(bldg_code7, room_code7, term_code_key)),1,30),
 schd_code_meet7,
 monday_ind7,
 tuesday_ind7,
 wednesday_ind7,
 thursday_ind7,
 friday_ind7,
 saturday_ind7,
 sunday_ind7,
 begin_time8,
 end_time8,
 bldg_code8,
 substr(decode(bldg_code8,null,null,
     f_student_get_desc('STVBLDG',bldg_code8,30)),1,30),
 room_code8,
 substr(decode(room_code8,null,null,
     f_get_slbrdef_desc(bldg_code8, room_code8, term_code_key)),1,30),
 schd_code_meet8,
 monday_ind8,
 tuesday_ind8,
 wednesday_ind8,
 thursday_ind8,
 friday_ind8,
 saturday_ind8,
 sunday_ind8,
 begin_time9,
 end_time9,
 bldg_code9,
 substr(decode(bldg_code9,null,null,
     f_student_get_desc('STVBLDG',bldg_code9,30)),1,30),
 room_code9,
 substr(decode(room_code9,null,null,
     f_get_slbrdef_desc(bldg_code9, room_code9, term_code_key)),1,30),
 schd_code_meet9,
 monday_ind9,
 tuesday_ind9,
 wednesday_ind9,
 thursday_ind9,
 friday_ind9,
 saturday_ind9,
 sunday_ind9,
 begin_time10,
 end_time10,
 bldg_code10,
 substr(decode(bldg_code10,null,null,
     f_student_get_desc('STVBLDG',bldg_code10,30)),1,30),
 room_code10,
 substr(decode(room_code10,null,null,
     f_get_slbrdef_desc(bldg_code10, room_code10, term_code_key)),1,30),
 schd_code_meet10,
 monday_ind10,
 tuesday_ind10,
 wednesday_ind10,
 thursday_ind10,
 friday_ind10,
 saturday_ind10,
 sunday_ind10,
 attr_code1,
 substr(decode(attr_code1,null,null,
     f_student_get_desc('STVATTR',attr_code1,30)),1,30),
 attr_code2,
 substr(decode(attr_code2,null,null,
     f_student_get_desc('STVATTR',attr_code2,30)),1,30),
 attr_code3,
 substr(decode(attr_code3,null,null,
     f_student_get_desc('STVATTR',attr_code3,30)),1,30),
 attr_code4,
 substr(decode(attr_code4,null,null,
     f_student_get_desc('STVATTR',attr_code4,30)),1,30),
 attr_code5,
 substr(decode(attr_code5,null,null,
     f_student_get_desc('STVATTR',attr_code5,30)),1,30),
 additional_attributes_ind,
 primary_instructor_id,
 primary_instructor_last_name,
 primary_instructor_first_name,
 primary_instructor_middle_init,
 instructor_id2,
 instructor_last_name2,
 instructor_first_name2,
 instructor_middle_init2,
 instructor_id3,
 instructor_last_name3,
 instructor_first_name3,
 instructor_middle_init3,
 additional_instructors_ind,
 coll_code_override,
 substr(decode(coll_code_override,null,null,
     f_student_get_desc('STVCOLL',coll_code_override,30)),1,30),
 divs_code_override,
 substr(decode(divs_code_override,null,null,
     f_student_get_desc('STVDIVS',divs_code_override,30)),1,30),
 dept_code_override,
 substr(decode(dept_code_override,null,null,
     f_student_get_desc('STVDEPT',dept_code_override,30)),1,30),
 schd_code1,
 substr(decode(schd_code1,null,null,
     f_student_get_desc('STVSCHD',schd_code1,30)),1,30),
 schd_workload1,
 schd_max_enrl1,
 schd_adj_workload1,
 schd_code2,
 substr(decode(schd_code2,null,null,
     f_student_get_desc('STVSCHD',schd_code2,30)),1,30),
 schd_workload2,
 schd_max_enrl2,
 schd_adj_workload2,
 schd_code3,
 substr(decode(schd_code3,null,null,
     f_student_get_desc('STVSCHD',schd_code3,30)),1,30),
 schd_workload3,
 schd_max_enrl3,
 schd_adj_workload3,
 schd_code4,
 substr(decode(schd_code4,null,null,
     f_student_get_desc('STVSCHD',schd_code4,30)),1,30),
 schd_workload4,
 schd_max_enrl4,
 schd_adj_workload4
from ssvsec2"
"BANINST1","AS_AGING_ANALYSIS","BANNER Reporting top level view to aging information","select
 sovagi1_pidm_key,
 sovagi1_trans_num_key,
 sovagi1_enrolled_ind,
 sovagi1_registered_ind,
 sovagi1_applied_for_degree,
 sovagi1_graduated,
 sovagi1_entity,
 sovagi1_collection,
 sovagi1_delinquency,
 substr(f_get_ar_desc('TTVDELI',sovagi1_delinquency,30),1,30),
 sovagi1_id,
 sovagi1_ssn,
 sovagi1_last_name,
 sovagi1_first_name,
 sovagi1_middle_name,
 sovagi1_middle_initial,
 sovagi1_name_prefix,
 sovagi1_name_suffix,
 sovagi1_street_line1a,
 sovagi1_street_line2a,
 sovagi1_street_line3a,
 sovagi1_citya,
 sovagi1_statea,
 sovagi1_zipa,
 sovagi1_countya,
 substr(f_student_get_desc('STVCNTY',sovagi1_countya,30),1,30),
 sovagi1_nationa,
 substr(f_student_get_desc('STVNATN',sovagi1_nationa,30),1,30),
 sovagi1_addressa_type,
 sovagi1_phonea_area_code,
 sovagi1_phonea_num,
 sovagi1_phonea_type,
 sovagi1_street_line1b,
 sovagi1_street_line2b,
 sovagi1_street_line3b,
 sovagi1_cityb,
 sovagi1_stateb,
 sovagi1_zipb,
 sovagi1_countyb,
 substr(f_student_get_desc('STVCNTY',sovagi1_countyb,30),1,30),
 sovagi1_nationb,
 substr(f_student_get_desc('STVNATN',sovagi1_nationb,30),1,30),
 sovagi1_addressb_type,
 sovagi1_phoneb_area_code,
 sovagi1_phoneb_num,
 sovagi1_phoneb_type,
 sovagi1_term_code,
 sovagi1_prime_college,
 substr(f_student_get_desc('STVCOLL',sovagi1_prime_college,30),1,30),
 sovagi1_campus_code,
 substr(f_student_get_desc('STVCAMP',sovagi1_campus_code,30),1,30),
 sovagi1_level_code,
 substr(f_student_get_desc('STVLEVL',sovagi1_level_code,30),1,30),
 substr(f_class_calc_fnc(sovagi1_pidm_key, sovagi1_level_code,
        sovagi1_term_code),1,2),
 substr(f_student_get_desc('STVCLAS',
       (f_class_calc_fnc(sovagi1_pidm_key, sovagi1_level_code,
       sovagi1_term_code)),30),1,30),
 sovagi1_invoice_number,
 sovagi1_feed_date,
 sovagi1_feed_doc_code,
 sovagi1_category_code,
 substr(f_get_ar_desc('TTVDCAT',sovagi1_category_code,30),1,30),
 sovagi1_detail_code,
 sovagi1_detail_desc,
 sovagi1_type_ind,
 sovagi1_source_code,
 substr(f_get_ar_desc('TTVSRCE',sovagi1_source_code,30),1,30),
 sovagi1_bill_date,
 sovagi1_eff_date,
 sovagi1_due_date,
 sovagi1_trans_date,
 decode(f_calc_aging_slot
       (sovagi1_aged_days, 1), 'N', 0, sovagi1_account_balance),
 decode(f_calc_aging_slot
       (sovagi1_aged_days, 2), 'N', 0, sovagi1_account_balance),
 decode(f_calc_aging_slot
       (sovagi1_aged_days, 3), 'N', 0, sovagi1_account_balance),
 decode(f_calc_aging_slot
       (sovagi1_aged_days, 4), 'N', 0, sovagi1_account_balance),
 decode(f_calc_aging_slot
       (sovagi1_aged_days, 5), 'N', 0, sovagi1_account_balance),
 sovagi1_account_balance,
 sovagi1_account_amount,
 sovagi1_aged_days
from sovagi1"
"BANINST1","AS_ADMISSIONS_APPLICANT","This view retrieves admissions applicant and application information, and joins in descriptions and/or breaks out fields concatenated in a lower level view.","select
  pidm_key,
  term_code_key,
  substr(decode(term_code_key,null,null,
      f_student_get_desc('STVTERM',term_code_key,30)),1,30),
  appl_no_key,
  complete_ind,
  incomplete_ind,
  any_inst_accepted_ind,
  any_stdn_accepted_ind,
  current_inst_accepted_ind,
  current_stdn_accepted_ind,
  current_rejected_ind,
  withdrawn_ind,
  enrolled_ind,
  finaid_applicant,
  student_id,
  ssn,
  last_name,
  first_name,
  middle_initial,
  name_prefix,
  name_suffix,
  surname_prefix,
  birthdate,
  age,
  gender,
  substr(decode(ethn_code,null,null,f_get_ethn_category(ethn_code,'ETCT')),1,1),
  ethn_code,
  substr(decode(ethn_code,null,null,
      f_student_get_desc('STVETHN',ethn_code,30)),1,30),
  lgcy_code,
  substr(decode(lgcy_code,null,null,
      f_student_get_desc('STVLGCY',lgcy_code,30)),1,30),
  deceased_ind,
  deceased_date,
  confidentiality_ind,
  house_number1,
  street1_line1,
  street1_line2,
  street1_line3,
  street1_line4,
  city1,
  stat_code1,
  cnty_code1,
  substr(decode(cnty_code1,null,null,
      f_student_get_desc('STVCNTY',cnty_code1,30)),1,30),
  zip_code1,
  natn_code1,
  substr(decode(natn_code1,null,null,
      f_student_get_desc('STVNATN',natn_code1,30)),1,30),
  atyp_code1,
  phone_area_code1,
  phone_number1,
  tele_code1,
  phone_ctry_cde1,
  house_number2,
  street2_line1,
  street2_line2,
  street2_line3,
  street2_line4,
  city2,
  stat_code2,
  cnty_code2,
  substr(decode(cnty_code2,null,null,
      f_student_get_desc('STVCNTY',cnty_code2,30)),1,30),
  zip_code2,
  natn_code2,
  substr(decode(natn_code2,null,null,
      f_student_get_desc('STVNATN',natn_code2,30)),1,30),
  atyp_code2,
  phone_area_code2,
  phone_number2,
  tele_code2,
  phone_ctry_cde2,
  full_part_time_ind,
  levl_code,
  substr(decode(levl_code,null,null,
      f_student_get_desc('STVLEVL',levl_code,30)),1,30),
  application_date,
  application_status,
  substr(decode(application_status,null,null,
      f_student_get_desc('STVAPST',application_status,30)),1,30),
  application_status_date,
  admt_code,
  substr(decode(admt_code,null,null,
      f_student_get_desc('STVADMT',admt_code,30)),1,30),
  styp_code,
  substr(decode(styp_code,null,null,
      f_student_get_desc('STVSTYP',styp_code,30)),1,30),
  camp_code,
  substr(decode(camp_code,null,null,
      f_student_get_desc('STVCAMP',camp_code,30)),1,30),
  site_code,
  substr(decode(site_code,null,null,
      f_student_get_desc('STVSITE',site_code,30)),1,30),
  resd_code,
  substr(decode(resd_code,null,null,
      f_student_get_desc('STVRESD',resd_code,30)),1,30),
  in_out_state_ind,
  sess_code,
  substr(decode(sess_code,null,null,
      f_student_get_desc('STVSESS',sess_code,30)),1,30),
  wrsn_code,
  substr(decode(wrsn_code,null,null,
      f_student_get_desc('STVWRSN',wrsn_code,30)),1,30),
  rate_code,
  substr(decode(rate_code,null,null,
      f_student_get_desc('STVRATE',rate_code,30)),1,30),
  sbgi_code_other,
  substr(decode(sbgi_code_other,null,null,
      f_student_get_desc('STVSBGI',sbgi_code_other,30)),1,30),
  recr_code,
  substr(decode(recr_code,null,null,
      f_student_get_desc('STVRECR',recr_code,30)),1,30),
  rtyp_code,
  substr(decode(rtyp_code,null,null,
      f_student_get_desc('STVRTYP',rtyp_code,30)),1,30),
  coll_code1,
  substr(decode(coll_code1,null,null,
      f_student_get_desc('STVCOLL',coll_code1,30)),1,30),
  degc_code1,
  substr(decode(degc_code1,null,null,
      f_student_get_desc('STVDEGC',degc_code1,30)),1,30),
  majr_code1,
  substr(decode(majr_code1,null,null,
      f_student_get_desc('STVMAJR',majr_code1,30)),1,30),
  dept_code1,
  substr(decode(dept_code1,null,null,
      f_student_get_desc('STVDEPT',dept_code1,30)),1,30),
  coll_code2,
  substr(decode(coll_code2,null,null,
      f_student_get_desc('STVCOLL',coll_code2,30)),1,30),
  degc_code2,
  substr(decode(degc_code2,null,null,
      f_student_get_desc('STVDEGC',degc_code2,30)),1,30),
  majr_code2,
  substr(decode(majr_code2,null,null,
      f_student_get_desc('STVMAJR',majr_code2,30)),1,30),
  dept_code2,
  substr(decode(dept_code2,null,null,
      f_student_get_desc('STVDEPT',dept_code2,30)),1,30),
  majr_code1_conc1,
  majr_code1_conc2,
  apdc_code1,
  substr(decode(apdc_code1,null,null,
      f_student_get_desc('STVAPDC',apdc_code1,30)),1,30),
  apdc_decision_date1,
  apdc_code2,
  substr(decode(apdc_code2,null,null,
      f_student_get_desc('STVAPDC',apdc_code2,30)),1,30),
  apdc_decision_date2,
  apdc_code3,
  substr(decode(apdc_code3,null,null,
      f_student_get_desc('STVAPDC',apdc_code3,30)),1,30),
  apdc_decision_date3,
  apdc_code4,
  substr(decode(apdc_code4,null,null,
      f_student_get_desc('STVAPDC',apdc_code4,30)),1,30),
  apdc_decision_date4,
  apdc_code5,
  substr(decode(apdc_code5,null,null,
      f_student_get_desc('STVAPDC',apdc_code5,30)),1,30),
  apdc_decision_date5,
  additional_decisions,
  admr_code1,
  substr(decode(admr_code1,null,null,
      f_student_get_desc('STVADMR',admr_code1,30)),1,30),
  admr_received_date1,
  admr_required_ind1,
  admr_code2,
  substr(decode(admr_code2,null,null,
      f_student_get_desc('STVADMR',admr_code2,30)),1,30),
  admr_received_date2,
  admr_required_ind2,
  admr_code3,
  substr(decode(admr_code3,null,null,
      f_student_get_desc('STVADMR',admr_code3,30)),1,30),
  admr_received_date3,
  admr_required_ind3,
  admr_code4,
  substr(decode(admr_code4,null,null,
      f_student_get_desc('STVADMR',admr_code4,30)),1,30),
  admr_received_date4,
  admr_required_ind4,
  admr_code5,
  substr(decode(admr_code5,null,null,
      f_student_get_desc('STVADMR',admr_code5,30)),1,30),
  admr_received_date5,
  admr_required_ind5,
  admr_code6,
  substr(decode(admr_code6,null,null,
      f_student_get_desc('STVADMR',admr_code6,30)),1,30),
  admr_received_date6,
  admr_required_ind6,
  admr_code7,
  substr(decode(admr_code7,null,null,
      f_student_get_desc('STVADMR',admr_code7,30)),1,30),
  admr_received_date7,
  admr_required_ind7,
  additional_checklist_items_ind,
  sbgi_code_primary_source,
  substr(decode(sbgi_code_primary_source,null,null,
      f_student_get_desc('STVSBGI',sbgi_code_primary_source,30)),1,30),
  primary_source_contact,
  ptyp_code,
  substr(decode(ptyp_code,null,null,
      f_student_get_desc('STVPTYP',ptyp_code,30)),1,30),
  sbgi_code_source1,
  substr(decode(sbgi_code_source1,null,null,
      f_student_get_desc('STVSBGI',sbgi_code_source1,30)),1,30),
  sbgi_code_source2,
  substr(decode(sbgi_code_source2,null,null,
      f_student_get_desc('STVSBGI',sbgi_code_source2,30)),1,30),
  sbgi_code_source3,
  substr(decode(sbgi_code_source3,null,null,
      f_student_get_desc('STVSBGI',sbgi_code_source3,30)),1,30),
  additional_sources_ind,
  first_contact,
  first_contact_date,
  latest_contact,
  latest_contact_date,
  ctyp_code1,
  ctyp_date1,
  ctyp_code2,
  ctyp_date2,
  ctyp_code3,
  ctyp_date3,
  ctyp_code4,
  ctyp_date4,
  ctyp_code5,
  ctyp_date5,
  additional_contacts_ind,
  ints_code1,
  substr(decode(ints_code1,null,null,
      f_student_get_desc('STVINTS',ints_code1,30)),1,30),
  ints_code2,
  substr(decode(ints_code2,null,null,
      f_student_get_desc('STVINTS',ints_code2,30)),1,30),
  ints_code3,
  substr(decode(ints_code3,null,null,
      f_student_get_desc('STVINTS',ints_code3,30)),1,30),
  ints_code4,
  substr(decode(ints_code4,null,null,
      f_student_get_desc('STVINTS',ints_code4,30)),1,30),
  ints_code5,
  substr(decode(ints_code5,null,null,
      f_student_get_desc('STVINTS',ints_code5,30)),1,30),
  additional_interests_ind,
  sbgi_code_high_school,
  substr(decode(sbgi_code_high_school,null,null,
      f_student_get_desc('STVSBGI',sbgi_code_high_school,30)),1,30),
  high_school_house_number,
  high_school_street1,
  high_school_street2,
  high_school_street3,
  high_school_street4,
  high_school_city,
  high_school_state,
  high_school_zip,
  high_school_grad_date,
  high_school_percentile,
  high_school_rank,
  high_school_size,
  high_school_reported_gpa,
  dplm_code,
  substr(decode(dplm_code,null,null,
      f_student_get_desc('STVDPLM',dplm_code,30)),1,30),
  sbgi_code_prior_college1,
  substr(decode(sbgi_code_prior_college1,null,null,
      f_student_get_desc('STVSBGI',sbgi_code_prior_college1,30)),1,30),
  transcript_received_date1,
  transcript_reviewed_date1,
  degc_code_prior_college1,
  gpa_transfered_pcol1,
  majr_code_prior_college1,
  sbgi_code_prior_college2,
  substr(decode(sbgi_code_prior_college2,null,null,
      f_student_get_desc('STVSBGI',sbgi_code_prior_college2,30)),1,30),
  transcript_received_date2,
  transcript_reviewed_date2,
  degc_code_prior_college2,
  gpa_transfered_pcol2,
  majr_code_prior_college2,
  sbgi_code_prior_college3,
  substr(decode(sbgi_code_prior_college3,null,null,
      f_student_get_desc('STVSBGI',sbgi_code_prior_college3,30)),1,30),
  transcript_received_date3,
  transcript_reviewed_date3,
  degc_code_prior_college3,
  gpa_transfered_pcol3,
  majr_code_prior_college3,
  additional_pcol_ind,
  test_code1,
  test_score1,
  test_date1,
  test_code2,
  test_score2,
  test_date2,
  test_code3,
  test_score3,
  test_date3,
  test_code4,
  test_score4,
  test_date4,
  test_code5,
  test_score5,
  test_date5,
  test_code6,
  test_score6,
  test_date6,
  test_code7,
  test_score7,
  test_date7,
  additional_tests_ind,
  international_birth_nation,
  international_legal_nation,
  international_visa_number,
  international_visa_type,
  additional_holds_ind,
  hldd_code1,
  substr(decode(hldd_code1,null,null,
      f_student_get_desc('STVHLDD',hldd_code1,30)),1,30),
  hold_from_date1,
  hold_to_date1,
  hold_amount_owed1,
  hold_reason1,
  hldd_code2,
  substr(decode(hldd_code2,null,null,
      f_student_get_desc('STVHLDD',hldd_code2,30)),1,30),
  hold_from_date2,
  hold_to_date2,
  hold_amount_owed2,
  hold_reason2,
  hldd_code3,
  substr(decode(hldd_code3,null,null,
      f_student_get_desc('STVHLDD',hldd_code3,30)),1,30),
  hold_from_date3,
  hold_to_date3,
  hold_amount_owed3,
  hold_reason3,
  hldd_code4,
  substr(decode(hldd_code4,null,null,
      f_student_get_desc('STVHLDD',hldd_code4,30)),1,30),
  hold_from_date4,
  hold_to_date4,
  hold_amount_owed4,
  hold_reason4,
  hldd_code5,
  substr(decode(hldd_code5,null,null,
      f_student_get_desc('STVHLDD',hldd_code5,30)),1,30),
  hold_from_date5,
  hold_to_date5,
  hold_amount_owed5,
  hold_reason5,
  mre_confirmed_re_cde,
 	mre_confirmed_re_date,
 	mre_ethnic_cde,
 	SUBSTR(mre_race_data,1,3),
 	SUBSTR(mre_race_data,4,60),
 	SUBSTR(mre_race_data,64,1),
 	SUBSTR(mre_race_data,65,1)
from savadm1"
"BANINST1","AS_ACADEMIC_HISTORY_SUMMARY","This view will join in descriptions for coded fields to dispay Academic History information.","select
 pidm_key,
 levl_code_key,
 substr(decode(levl_code_key,null,null,
     f_student_get_desc('STVLEVL',levl_code_key,30)),1,30),
 applied_for_degree_ind,
 graduated_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 substr(decode(ethn_code,null,null,f_get_ethn_category(ethn_code,'ETCT')),1,1),
 ethn_code,
 substr(decode(ethn_code,null,null,
     f_student_get_desc('STVETHN',ethn_code,30)),1,30),
 lgcy_code,
 substr(decode(lgcy_code,null,null,
     f_student_get_desc('STVLGCY',lgcy_code,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 stat_code1,
 cnty_code1,
 substr(decode(cnty_code1,null,null,
     f_student_get_desc('STVCNTY',cnty_code1,30)),1,30),
 zip1,
 natn_code1,
 substr(decode(natn_code1,null,null,
     f_student_get_desc('STVNATN',natn_code1,30)),1,30),
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 stat_code2,
 cnty_code2,
 substr(decode(cnty_code2,null,null,
     f_student_get_desc('STVCNTY',cnty_code2,30)),1,30),
 zip2,
 natn_code2,
 substr(decode(natn_code2,null,null,
     f_student_get_desc('STVNATN',natn_code2,30)),1,30),
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 degree_seq_no1,
 degc_code1,
 substr(decode(degc_code1,null,null,
     f_student_get_desc('STVDEGC',degc_code1,30)),1,30),
 degs_code1,
 substr(decode(degs_code1,null,null,
     f_student_get_desc('STVDEGS',degs_code1,30)),1,30),
 levl_code_degree1,
 substr(decode(levl_code_degree1,null,null,
     f_student_get_desc('STVLEVL',levl_code_degree1,30)),1,30),
 coll_code_degree1,
 substr(decode(coll_code_degree1,null,null,
     f_student_get_desc('STVCOLL',coll_code_degree1,30)),1,30),
 majr_code1_degree1,
 substr(decode(majr_code1_degree1,null,null,
     f_student_get_desc('STVMAJR',majr_code1_degree1,30)),1,30),
 majr_code_minor1_degree1,
 substr(decode(majr_code_minor1_degree1,null,null,
     f_student_get_desc('STVMAJR',majr_code_minor1_degree1,30)),1,30),
 degree_application_date1,
 degree_graduation_date1,
 acyr_code_bulletin1,
 substr(decode(acyr_code_bulletin1,null,null,
     f_student_get_desc('STVACYR',acyr_code_bulletin1,30)),1,30),
 majr_code_minor1_2_degree1,
 substr(decode(majr_code_minor1_2_degree1,null,null,
     f_student_get_desc('STVMAJR',majr_code_minor1_2_degree1,30)),1,30),
 term_code_sturec1,
 substr(decode(term_code_sturec1,null,null,
     f_student_get_desc('STVTERM',term_code_sturec1,30)),1,30),
 majr_code1_2_degree1,
 substr(decode(majr_code1_2_degree1,null,null,
     f_student_get_desc('STVMAJR',majr_code1_2_degree1,30)),1,30),
 camp_code1,
 substr(decode(camp_code1,null,null,
     f_student_get_desc('STVCAMP',camp_code1,30)),1,30),
 term_code_graduation1,
 substr(decode(term_code_graduation1,null,null,
     f_student_get_desc('STVTERM',term_code_graduation1,30)),1,30),
 acyr_code1,
 substr(decode(acyr_code1,null,null,
     f_student_get_desc('STVACYR',acyr_code1,30)),1,30),
 grst_code1,
 substr(decode(grst_code1,null,null,
     f_student_get_desc('STVGRST',grst_code1,30)),1,30),
 grad_authorized_adds_chgs1,
 term_code_completed1,
 substr(decode(term_code_completed1,null,null,
     f_student_get_desc('STVTERM',term_code_completed1,30)),1,30),
 degree_seq_no2,
 degc_code2,
 substr(decode(degc_code2,null,null,
     f_student_get_desc('STVDEGC',degc_code2,30)),1,30),
 degs_code2,
 substr(decode(degs_code2,null,null,
     f_student_get_desc('STVDEGS',degs_code2,30)),1,30),
 levl_code_degree2,
 substr(decode(levl_code_degree2,null,null,
     f_student_get_desc('STVLEVL',levl_code_degree2,30)),1,30),
 coll_code_degree2,
 substr(decode(coll_code_degree2,null,null,
     f_student_get_desc('STVCOLL',coll_code_degree2,30)),1,30),
 majr_code1_degree2,
 substr(decode(majr_code1_degree2,null,null,
     f_student_get_desc('STVMAJR',majr_code1_degree2,30)),1,30),
 majr_code_minor1_degree2,
 substr(decode(majr_code_minor1_degree2,null,null,
     f_student_get_desc('STVMAJR',majr_code_minor1_degree2,30)),1,30),
 degree_application_date2,
 degree_graduation_date2,
 acyr_code_bulletin2,
 substr(decode(acyr_code_bulletin2,null,null,
     f_student_get_desc('STVACYR',acyr_code_bulletin2,30)),1,30),
 majr_code_minor1_2_degree2,
 substr(decode(majr_code_minor1_2_degree2,null,null,
     f_student_get_desc('STVMAJR',majr_code_minor1_2_degree2,30)),1,30),
 term_code_sturec2,
 substr(decode(term_code_sturec2,null,null,
     f_student_get_desc('STVTERM',term_code_sturec2,30)),1,30),
 majr_code1_2_degree2,
 substr(decode(majr_code1_2_degree2,null,null,
     f_student_get_desc('STVMAJR',majr_code1_2_degree2,30)),1,30),
 camp_code2,
 substr(decode(camp_code2,null,null,
     f_student_get_desc('STVCAMP',camp_code2,30)),1,30),
 term_code_graduation2,
 substr(decode(term_code_graduation2,null,null,
     f_student_get_desc('STVTERM',term_code_graduation2,30)),1,30),
 acyr_code2,
 substr(decode(acyr_code2,null,null,
     f_student_get_desc('STVACYR',acyr_code2,30)),1,30),
 grst_code2,
 substr(decode(grst_code2,null,null,
     f_student_get_desc('STVGRST',grst_code2,30)),1,30),
 grad_authorized_adds_chgs2,
 term_code_completed2,
 substr(decode(term_code_completed2,null,null,
     f_student_get_desc('STVTERM',term_code_completed2,30)),1,30),
 degree_seq_no3,
 degc_code3,
 substr(decode(degc_code3,null,null,
     f_student_get_desc('STVDEGC',degc_code3,30)),1,30),
 degs_code3,
 substr(decode(degs_code3,null,null,
     f_student_get_desc('STVDEGS',degs_code3,30)),1,30),
 levl_code_degree3,
 substr(decode(levl_code_degree3,null,null,
     f_student_get_desc('STVLEVL',levl_code_degree3,30)),1,30),
 coll_code_degree3,
 substr(decode(coll_code_degree3,null,null,
     f_student_get_desc('STVCOLL',coll_code_degree3,30)),1,30),
 majr_code1_degree3,
 substr(decode(majr_code1_degree3,null,null,
     f_student_get_desc('STVMAJR',majr_code1_degree3,30)),1,30),
 majr_code_minor1_degree3,
 substr(decode(majr_code_minor1_degree3,null,null,
     f_student_get_desc('STVMAJR',majr_code_minor1_degree3,30)),1,30),
 degree_application_date3,
 degree_graduation_date3,
 acyr_code_bulletin3,
 substr(decode(acyr_code_bulletin3,null,null,
     f_student_get_desc('STVACYR',acyr_code_bulletin3,30)),1,30),
 majr_code_minor1_2_degree3,
 substr(decode(majr_code_minor1_2_degree3,null,null,
     f_student_get_desc('STVMAJR',majr_code_minor1_2_degree3,30)),1,30),
 term_code_sturec3,
 substr(decode(term_code_sturec3,null,null,
     f_student_get_desc('STVTERM',term_code_sturec3,30)),1,30),
 majr_code1_2_degree3,
 substr(decode(majr_code1_2_degree3,null,null,
     f_student_get_desc('STVMAJR',majr_code1_2_degree3,30)),1,30),
 camp_code3,
 substr(decode(camp_code3,null,null,
     f_student_get_desc('STVCAMP',camp_code3,30)),1,30),
 term_code_graduation3,
 substr(decode(term_code_graduation3,null,null,
     f_student_get_desc('STVTERM',term_code_graduation3,30)),1,30),
 acyr_code3,
 substr(decode(acyr_code3,null,null,
     f_student_get_desc('STVACYR',acyr_code3,30)),1,30),
 grst_code3,
 substr(decode(grst_code3,null,null,
     f_student_get_desc('STVGRST',grst_code3,30)),1,30),
 grad_authorized_adds_chgs3,
 term_code_completed3,
 substr(decode(term_code_completed3,null,null,
     f_student_get_desc('STVTERM',term_code_completed3,30)),1,30),
 additional_degrees_ind,
 overall_gpa,
 overall_hours_attempted,
 overall_hours_earned,
 overall_hours_passed,
 overall_gpa_hours,
 overall_quality_points,
 institution_gpa,
 institution_hours_attempted,
 institution_hours_earned,
 institution_hours_passed,
 institution_gpa_hours,
 institution_quality_points,
 transfer_gpa,
 transfer_hours_attempted,
 transfer_hours_earned,
 transfer_hours_passed,
 transfer_gpa_hours,
 transfer_quality_points,
 overall_tgpa_hrs_attempted,
 overall_tgpa_hours_earned,
 overall_tgpa_hours,
 overall_tgpa_quality_points,
 overall_tgpa,
 overall_tgpa_hours_passed,
 inst_tgpa_hours_attempted,
 inst_tgpa_hours_earned,
 inst_tgpa_hours,
 inst_tgpa_quality_points,
 inst_tgpa,
 inst_tgpa_hours_passed,
 transfer_tgpa_hrs_attempted,
 transfer_tgpa_hours_earned,
 transfer_tgpa_hours,
 transfer_tgpa_quality_points,
 transfer_tgpa,
 transfer_tgpa_hours_passed,
 term_code_most_recent,
 substr(decode(term_code_most_recent,null,null,
     f_student_get_desc('STVTERM',term_code_most_recent,30)),1,30),
 astd_code_most_recent,
 substr(decode(astd_code_most_recent,null,null,
     f_student_get_desc('STVASTD',astd_code_most_recent,30)),1,30),
 astd_date_most_recent,
 deans_list_code_most_recent,
 substr(decode(deans_list_code_most_recent,null,null,
     f_student_get_desc('STVASTD',deans_list_code_most_recent,30)),1,30),
 deans_list_date_most_recent,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 SUBSTR(mre_race_data,1,3),
 SUBSTR(mre_race_data,4,60),
 SUBSTR(mre_race_data,64,1),
 SUBSTR(mre_race_data,65,1)
from shvsum1"
"BANINST1","AS_ACADEMIC_HISTORY_DETAIL","This view will join in descriptions for coded fields to provide academic history information.","select
 pidm_key,
 term_code_key,
 substr(decode(term_code_key,null,null,
     f_student_get_desc('STVTERM',term_code_key,30)),1,30),
 crn_key,
 applied_for_degree_ind,
 graduated_ind,
 transfer_work_exists_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 birth_date,
 age,
 gender,
 substr(decode(ethn_code,null,null,f_get_ethn_category(ethn_code,'ETCT')),1,1),
 ethn_code,
 substr(decode(ethn_code,null,null,
     f_student_get_desc('STVETHN',ethn_code,30)),1,30),
 lgcy_code,
 substr(decode(lgcy_code,null,null,
     f_student_get_desc('STVLGCY',lgcy_code,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 stat_code1,
 cnty_code1,
 substr(decode(cnty_code1,null,null,
     f_student_get_desc('STVCNTY',cnty_code1,30)),1,30),
 zip1,
 natn_code1,
 substr(decode(natn_code1,null,null,
     f_student_get_desc('STVNATN',natn_code1,30)),1,30),
 atyp_code1,
 phone_area_1,
 phone_number1,
 tele_code1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 stat_code2,
 cnty_code2,
 substr(decode(cnty_code2,null,null,
     f_student_get_desc('STVCNTY',cnty_code2,30)),1,30),
 zip2,
 natn_code2,
 substr(decode(natn_code2,null,null,
     f_student_get_desc('STVNATN',natn_code2,30)),1,30),
 atyp_code2,
 phone_area_2,
 phone_number2,
 tele_code2,
 sequence_number,
 levl_code,
 substr(decode(levl_code,null,null,
     f_student_get_desc('STVLEVL',levl_code,30)),1,30),
 coll_code,
 substr(decode(coll_code,null,null,
     f_student_get_desc('STVCOLL',coll_code,30)),1,30),
 dept_code,
 substr(decode(dept_code,null,null,
     f_student_get_desc('STVDEPT',dept_code,30)),1,30),
 divs_code,
 substr(decode(divs_code,null,null,
     f_student_get_desc('STVDIVS',divs_code,30)),1,30),
 subj_code,
 substr(decode(subj_code,null,null,
     f_student_get_desc('STVSUBJ',subj_code,30)),1,30),
 crse_number,
 seq_number,
 course_title,
 credit_hours,
 gmod_code,
 substr(decode(gmod_code,null,null,
     f_student_get_desc('STVGMOD',gmod_code,30)),1,30),
 grde_code_final,
 repeat_course_ind,
 attr_code1,
 substr(decode(attr_code1,null,null,
     f_student_get_desc('STVATTR',attr_code1,30)),1,30),
 attr_code2,
 substr(decode(attr_code2,null,null,
     f_student_get_desc('STVATTR',attr_code2,30)),1,30),
 attr_code3,
 substr(decode(attr_code3,null,null,
     f_student_get_desc('STVATTR',attr_code3,30)),1,30),
 attr_code4,
 substr(decode(attr_code4,null,null,
     f_student_get_desc('STVATTR',attr_code4,30)),1,30),
 attr_code5,
 substr(decode(attr_code5,null,null,
     f_student_get_desc('STVATTR',attr_code5,30)),1,30),
 additional_attributes_ind,
 overall_gpa_hours_attempted,
 overall_gpa_hours_earned,
 overall_gpa_hours,
 overall_gpa_quality_points,
 overall_gpa,
 overall_gpa_hours_passed,
 inst_gpa_hours_attempted,
 inst_gpa_hours_earned,
 inst_gpa_hours,
 inst_gpa_quality_points,
 inst_gpa,
 inst_gpa_hours_passed,
 transfer_gpa_hours_attempted,
 transfer_gpa_hours_earned,
 transfer_gpa_hours,
 transfer_gpa_quality_points,
 transfer_gpa,
 transfer_gpa_hours_passed,
 overall_tgpa_hours_attempted,
 overall_tgpa_hours_earned,
 overall_tgpa_hours,
 overall_tgpa_quality_points,
 overall_tgpa,
 overall_tgpa_hours_passed,
 inst_tgpa_hours_attempted,
 inst_tgpa_hours_earned,
 inst_tgpa_hours,
 inst_tgpa_quality_points,
 inst_tgpa,
 inst_tgpa_hours_passed,
 transfer_tgpa_hours_attempted,
 transfer_tgpa_hours_earned,
 transfer_tgpa_hours,
 transfer_tgpa_quality_points,
 transfer_tgpa,
 transfer_tgpa_hours_passed,
 astd_code,
 substr(decode(astd_code,null,null,
     f_student_get_desc('STVASTD',astd_code,30)),1,30),
 astd_date,
 deans_list_code,
 substr(decode(deans_list_code,null,null,
     f_student_get_desc('STVASTD',deans_list_code,30)),1,30),
 deans_list_date,
 mre_confirmed_re_cde,
 mre_confirmed_re_date,
 mre_ethnic_cde,
 SUBSTR(mre_race_data,1,3),
 SUBSTR(mre_race_data,4,60),
 SUBSTR(mre_race_data,64,1),
 SUBSTR(mre_race_data,65,1)
from shvdtl1"
"BANINST1","ASVYEAR","Org/Year Solicitation Data for Contacts View - This view will select
 solicitor information including count of contacts assigned within the
 sol org/dcyr code/solicitor combo","SELECT  ASRSSAG_SOL_ORG,
         ASRSSAG_PIDM,
         ASRSSAG_DCYR_CODE,
         SPRIDEN_ID,
         DECODE(SPRIDEN_ENTITY_IND, 'C', '', 'P', DECODE(SPRIDEN_SURNAME_PREFIX ,'','',SPRIDEN_SURNAME_PREFIX || ' ')) ||
         SPRIDEN_LAST_NAME || DECODE(
         SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
         SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
         APBCONS_PREF_CLAS,
	 rtrim(substr(apkdpri.f_select_donor_catg(ASRSSAG_PIDM),1,4)),
         ASRSSAG_ACTIVITY_DATE,
         ASRSSAG_USER,
	 to_char(ASRSSAG_MAX_CONTACTS),
	 asksign.f_year_contacts_assigned(ASRSSAG_SOL_ORG,
			       ASRSSAG_DCYR_CODE, ASRSSAG_PIDM)
   FROM  SPRIDEN, APBCONS, ASRSSAG
   WHERE ASRSSAG_SOL_ORG > '0'
   AND   ASRSSAG_PIDM = SPRIDEN_PIDM
   AND   ASRSSAG_DCYR_CODE > '0'
   AND   SPRIDEN_CHANGE_IND IS NULL
   AND   ASRSSAG_PIDM = APBCONS_PIDM(+)
UNION
  SELECT ASVCYER_SOL_ORG,
	 ASVCYER_PIDM,
	 ASVCYER_DCYR_CODE,
	 '',
	 'No Solicitor',
	 '',
	 '',
	 TO_DATE('','DD-MON-YYYY'),
	 '',
	 '',
	 ASVCYER_CONT_ASSIGNED
  FROM  ASVCYER
  WHERE ASVCYER_SOL_ORG > '0'
  AND   ASVCYER_PIDM IS NULL
  AND   ASVCYER_DCYR_CODE > '0'"
"BANINST1","ASVSSTA","This view will select solicitor status information within the
 sol org/solicitor combo","SELECT ASRSORG_SOL_ORG,
        ASRSORG_PIDM,
        ASRSORG_ACTIVITY_DATE,
        ASRSORG_SSTA_CODE,
	NVL(ATVSSTA_ACTIVE_IND,'Y')
FROM  ATVSSTA, ASRSORG
WHERE ASRSORG_SOL_ORG > '0'
AND   ASRSORG_SSTA_CODE = ATVSSTA_CODE(+)
 "
"BANINST1","ASVSSAG","","SELECT  ASRSSAG_SOL_ORG,
         ASRSSAG_PIDM,
         SPRIDEN_ID,
         DECODE(SPRIDEN_ENTITY_IND, 'C', '', 'P', DECODE(SPRIDEN_SURNAME_PREFIX ,'','',SPRIDEN_SURNAME_PREFIX || ' ')) ||
         SPRIDEN_LAST_NAME || DECODE(
         SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
         SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
         ASRSSAG_DCYR_CODE,
         ASRSSAG_ACTIVITY_DATE,
         ASRSSAG_USER,
         ASRSSAG_DOLLAR_GOAL,
         ASRSSAG_PARTICIPATION_GOAL,
         ASRSSAG_DONOR_COUNT_GOAL,
         ASRSSAG_REPORT_TO_PIDM,
         ASRSORG_SSTA_CODE
FROM SPRIDEN, ASRSORG, ASRSSAG
WHERE ASRSSAG_PIDM = SPRIDEN_PIDM
  AND SPRIDEN_CHANGE_IND IS NULL
  AND ASRSORG_PIDM = ASRSSAG_PIDM
  AND ASRSORG_SOL_ORG = ASRSSAG_SOL_ORG"
"BANINST1","ASVSORG","Solicitor Status by Solicitor Organization view","SELECT ASRSORG_SOL_ORG,
          ASRSORG_PIDM,
          ASRSORG_SOLT_CODE,
          ASRSORG_ATYP_CODE,
          ASRSORG_MAX_CONTACTS,
          ASRSORG_ACTIVITY_DATE,
          ASRSORG_DOLLAR_GOAL,
          ASRSORG_PARTICIPATION_GOAL,
          ASRSORG_DONOR_COUNT_GOAL,
          ASRSORG_SSTA_CODE,
          ASRSORG_SSTA_DATE,
          ATVSSTA_ACTIVE_IND,
          SPRIDEN_ID,
          SPRIDEN_LAST_NAME,
          SPRIDEN_FIRST_NAME,
          SPRIDEN_MI,
          SPRIDEN_ENTITY_IND,
          SPRIDEN_SURNAME_PREFIX
FROM  SPRIDEN, ATVSSTA, ASRSORG
WHERE SPRIDEN_PIDM = ASRSORG_PIDM AND
      SPRIDEN_CHANGE_IND IS NULL AND
      ASRSORG_SSTA_CODE = ATVSSTA_CODE"
"BANINST1","ASVCYER","Org/Year Solicitation Data for Contacts with no Solicitors View - This
 view will select solicitation information including count of contacts
 assigned within the sol org/dcyr code/no solicitor combo","SELECT AFRCTYP_SOL_ORG,
	 AFRCTYP_DCYR_CODE,
	 AFRCTYP_PIDM,
	 '',
	 'No Solicitor',
	 '',
	 '',
	 TO_DATE('','DD-MON-YYYY'),
	 '',
	 '',
	 asksign.f_year_contacts_assigned(AFRCTYP_SOL_ORG,
			       AFRCTYP_DCYR_CODE,'')
  FROM  AFRCTYP
  WHERE AFRCTYP_SOL_ORG > '0'
  AND   AFRCTYP_DCYR_CODE > '0'
  AND   AFRCTYP_PIDM IS NULL
  GROUP BY AFRCTYP_SOL_ORG, AFRCTYP_DCYR_CODE, AFRCTYP_PIDM
 "
"BANINST1","ASVCSTA","Campaign/Solicitor Org/Solicitor Status View - This view will select
 solicitor status information within the campaign/sol org/solicitor
 combo","SELECT AFRCSLT_CAMPAIGN,
	AFRCSLT_SOLC_CODE,
	AFRCSLT_SOL_ORG,
        AFRCSLT_PIDM,
        AFRCSLT_ACTIVITY_DATE,
        AFRCSLT_SSTA_CODE,
	NVL(ATVSSTA_ACTIVE_IND,'Y')
FROM  ATVSSTA, AFRCSLT
WHERE AFRCSLT_CAMPAIGN > '0'
AND   AFRCSLT_SSTA_CODE = ATVSSTA_CODE(+)
 "
"BANINST1","ASVCCMP","Campaign Solicitation Data for Contacts with no Solicitors View - This view
 will select solicitor information including count of contacts assigned within
 the campaign/solc code/sol org/solicitor combo","SELECT AFRCTYP_CAMPAIGN,
	 AFRCTYP_SOLC_CODE,
	 AFRCTYP_SOL_ORG,
	 AFRCTYP_PIDM,
	 '',
	 'No Solicitor',
	 '',
	 '',
	 TO_DATE('','DD-MON-YYYY'),
	 '',
	 asksign.f_camp_contacts_assigned(AFRCTYP_CAMPAIGN, AFRCTYP_SOLC_CODE,
			       AFRCTYP_SOL_ORG,'')
  FROM  AFRCTYP
  WHERE AFRCTYP_CAMPAIGN > '0'
  AND   AFRCTYP_PIDM IS NULL
  GROUP BY AFRCTYP_CAMPAIGN, AFRCTYP_SOLC_CODE, AFRCTYP_SOL_ORG, AFRCTYP_PIDM
 "
"BANINST1","ASVCAMP","Campaign Solicitation Data for Contacts View - This view will select
 solicitor information including count of contacts assigned within the
 campaign/solc code/sol org/solicitor combo","SELECT  AFRCSLT_CAMPAIGN,
         AFRCSLT_SOLC_CODE,
	 AFRCSLT_SOL_ORG,
         AFRCSLT_PIDM,
         SPRIDEN_ID,
         DECODE(SPRIDEN_ENTITY_IND, 'C', '', 'P', DECODE(SPRIDEN_SURNAME_PREFIX ,'','',SPRIDEN_SURNAME_PREFIX || ' ')) ||
         SPRIDEN_LAST_NAME || DECODE(
         SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
         SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
         APBCONS_PREF_CLAS,
	 rtrim(substr(apkdpri.f_select_donor_catg(AFRCSLT_PIDM),1,4)),
         AFRCSLT_ACTIVITY_DATE,
	 to_char(AFRCSLT_MAX_CONTACTS),
	 asksign.f_camp_contacts_assigned(AFRCSLT_CAMPAIGN,
			       AFRCSLT_SOLC_CODE, AFRCSLT_SOL_ORG, AFRCSLT_PIDM)
   FROM  SPRIDEN, APBCONS, AFRCSLT
   WHERE AFRCSLT_CAMPAIGN > '0'
   AND   SPRIDEN_PIDM = AFRCSLT_PIDM
   AND   SPRIDEN_CHANGE_IND IS NULL
   AND   SPRIDEN_PIDM = APBCONS_PIDM(+)
UNION
  SELECT ASVCCMP_CAMPAIGN,
	 ASVCCMP_SOLC_CODE,
	 ASVCCMP_SOL_ORG,
	 ASVCCMP_PIDM,
	 '',
	 'No Solicitor',
	 '',
	 '',
	 TO_DATE('','DD-MON-YYYY'),
	 '',
	 ASVCCMP_CONT_ASSIGNED
  FROM  ASVCCMP
  WHERE ASVCCMP_CAMPAIGN > '0'
  AND   ASVCCMP_PIDM IS NULL "
"BANINST1","ASVASCT","Campaign/Type/Org/Solicitor Contact View - This view will select
 solicitor information (including contact names) assigned within the
 campaign/solc code/sol org/solicitor combo","SELECT  AFRCTYP_CAMPAIGN,
         AFRCTYP_SOLC_CODE,
	 AFRCTYP_SOL_ORG,
	 AFRCTYP_DCYR_CODE,
	 AFRCTYP_PIDM,
         AFRCTYP_CONSTITUENT_PIDM,
	 AFRCTYP_SEQ_NO,
         SPRIDEN_ID,
         DECODE(SPRIDEN_ENTITY_IND, 'C', '', 'P', DECODE(SPRIDEN_SURNAME_PREFIX ,'','',SPRIDEN_SURNAME_PREFIX || ' ')) ||
         SPRIDEN_LAST_NAME || DECODE(
         SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
         SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
	 rtrim(substr(apkbrws.f_select_pref_class(AFRCTYP_CONSTITUENT_PIDM),1,4)),
	 rtrim(substr(apkdpri.f_select_donor_catg(AFRCTYP_CONSTITUENT_PIDM),1,4)),
         AFRCTYP_ACTIVITY_DATE,
         AFRCTYP_USER,
         AFRCTYP_RATE_CODE,
         AFRCTYP_RSCR_CODE,
         AFRCTYP_RATER_PIDM,
         AFRCTYP_ASK_AMOUNT,
         AFRCTYP_ASK_DATE,
         AFRCTYP_COMMENT,
         AFRCTYP_ASSIGN_DATE
   FROM  SPRIDEN, AFRCTYP
   WHERE AFRCTYP_CONSTITUENT_PIDM > '0'
   AND   SPRIDEN_PIDM = AFRCTYP_CONSTITUENT_PIDM
   AND   SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","AR_TRACKING_REQUIREMENTS","BANNER Reporting top layer view for tracking requirement information for financial aid applicants.","select
 rrvreq1_pidm,
 rrvreq1_aidy_code,
 rrvreq1_treq_code,
 rrvreq1_treq_desc,
 rrvreq1_sbgi_code,
 substr(decode(rrvreq1_sbgi_code,null,null,
     f_finaid_get_desc('STVSBGI',rrvreq1_sbgi_code,30)),1,30),
 rrvreq1_fund_code,
 substr(decode(rrvreq1_fund_code,null,null,
     f_finaid_get_desc('RFRBASE',rrvreq1_fund_code,30)),1,30),
 rrvreq1_period,                -- 80900-1
 substr(decode(rrvreq1_period,null,null,                     -- 81000-1
     f_finaid_get_desc('ROBPRDS',rrvreq1_period,30)),1,30),  -- 81000-1
 rrvreq1_mesg_code,
 rtvmesg_seqno,
 rrvreq1_id,
 rrvreq1_last_name,
 rrvreq1_first_name,
 rrvreq1_middle_name,
 rrvreq1_middle_initial,
 rrvreq1_ssn,
 rrvreq1_tgrp_code,
 substr(decode(rrvreq1_tgrp_code,null,null,
     f_finaid_get_desc('RTVTGRP',rrvreq1_tgrp_code,30)),1,30),
 rrvreq1_pckg_comp_date,
 rrvreq1_all_req_comp_date,
 rrvreq1_pckg_req_comp_date,
 rrvreq1_disb_req_comp_date,
 rrvreq1_unsat_prom_note_ind,
 rrvreq1_verification_prty,
 rrvreq1_verification_msg,
 rrvreq1_ver_complete,
 rrvreq1_trst_code,
 substr(decode(rrvreq1_trst_code,null,null,
     f_finaid_get_desc('RTVTRST',rrvreq1_trst_code,30)),1,30),
 rrvreq1_sat_ind,
 rrvreq1_stat_date,
 rrvreq1_pckg_ind,
 rrvreq1_disb_ind,
 rrvreq1_memo_ind,
 rtvmesg_mesg_desc,
 rrvreq1_info_access_ind,
 rrvreq1_sbgi_type_key,                   -- 80500-1
 rrvreq1_term_code,                       -- 80900-1
 substr(decode(rrvreq1_term_code,null,null,                     -- 80900-1
     f_student_get_desc('STVTERM',rrvreq1_term_code,30)),1,30), -- 80900-1
 rrvreq1_tracking_letter_ind              -- 80500-1
from rtvmesg,
     rrvreq1 X,
	   stvsbgi                              -- 80500-1
where rrvreq1_mesg_code = rtvmesg_code(+)
and rrvreq1_sbgi_code = stvsbgi_code(+)   -- 80500-1"
"BANINST1","AR_FINAID_STUDENT_SUMMARY","BANNER Reporting top layer view for student information for financial aid applicants.","select
 rovstu1_pidm,
 rovstu1_aidy_code,
 rovstu1_period,                                              -- 80900-1
 substr(decode(rovstu1_period,null,null,                      -- 81000-1
     f_finaid_get_desc('ROBPRDS',rovstu1_period,30)),1,30),   -- 81000-1
 rovstu1_term_code,
 substr(decode(rovstu1_term_code,null,null,
     f_student_get_desc('STVTERM',rovstu1_term_code,30)),1,30),
 rovstu1_appl_no,
 rovstu1_applied_for_adm_ind,
 rovstu1_ad_complete_ind,
 rovstu1_ad_incomplete_ind,
 rovstu1_ad_any_inst_accept_ind,
 rovstu1_ad_any_stdn_accept_ind,
 rovstu1_ad_cur_inst_accept_ind,
 rovstu1_ad_cur_stdn_accept_ind,
 rovstu1_ad_cur_rejected_ind,
 rovstu1_ad_withdrawn_ind,
 rovstu1_enrolled_ind,
 rovstu1_registered_ind,
 rovstu1_id,
 rovstu1_last_name,
 rovstu1_first_name,
 rovstu1_middle_name,
 rovstu1_middle_intital,
 rovstu1_name_prefix,
 rovstu1_name_suffix,
 rovstu1_ssn,
 rovstu1_birth_date,
 rovstu1_age,
 rovstu1_sex,
 rovstu1_ethn_code,
 substr(decode(rovstu1_ethn_code,null,null,
     f_student_get_desc('STVETHN',rovstu1_ethn_code,30)),1,30),
 -- 8120002-1 SUBSTR(rovstu1_race_data,1,3),                                       --81200-1
 -- 8120002-1 SUBSTR(rovstu1_race_data,4,60),                                      --81200-1
 -- 8120002-1 rovstu1_ethn_cde,                                                    --81200-1
 rovstu1_citz_code,
 substr(decode(rovstu1_citz_code,null,null,
     f_student_get_desc('STVCITZ',rovstu1_citz_code,30)),1,30),
 rovstu1_mrtl_code,
 rovstu1_stat_code_res,
 rovstu1_atyp_code1,
 rovstu1_street1_line1,
 rovstu1_street1_line2,
 rovstu1_street1_line3,
 rovstu1_city1,
 rovstu1_stat_code1,
 rovstu1_zip1,
 rovstu1_cnty_code1,
 substr(decode(rovstu1_cnty_code1,null,null,
     f_student_get_desc('STVCNTY',rovstu1_cnty_code1,30)),1,30),
 rovstu1_natn_code1,
 substr(decode(rovstu1_natn_code1,null,null,
     f_student_get_desc('STVNATN',rovstu1_natn_code1,30)),1,30),
 rovstu1_phone_area1,
 rovstu1_phone_number1,
 rovstu1_tele_code1,
 rovstu1_atyp_code2,
 rovstu1_street2_line1,
 rovstu1_street2_line2,
 rovstu1_street2_line3,
 rovstu1_city2,
 rovstu1_stat_code2,
 rovstu1_zip2,
 rovstu1_cnty_code2,
 substr(decode(rovstu1_cnty_code2,null,null,
     f_student_get_desc('STVCNTY',rovstu1_cnty_code2,30)),1,30),
 rovstu1_natn_code2,
 substr(decode(rovstu1_natn_code2,null,null,
     f_student_get_desc('STVNATN',rovstu1_natn_code2,30)),1,30),
 rovstu1_phone_area2,
 rovstu1_phone_number2,
 rovstu1_tele_code2,
 rovstu1_ad_term_code_entry,
 substr(decode(rovstu1_ad_term_code_entry,null,null,
     f_student_get_desc('STVTERM',rovstu1_ad_term_code_entry,30)),1,30),
 rovstu1_ad_appl_no,
 rovstu1_ad_levl_code,
 substr(decode(rovstu1_ad_levl_code,null,null,
     f_student_get_desc('STVLEVL',rovstu1_ad_levl_code,30)),1,30),
 rovstu1_ad_appl_date,
 rovstu1_ad_apst_code,
 substr(decode(rovstu1_ad_apst_code,null,null,
     f_student_get_desc('STVAPST',rovstu1_ad_apst_code,30)),1,30),
 rovstu1_ad_apst_date,
 rovstu1_ad_admt_code,
 substr(decode(rovstu1_ad_admt_code,null,null,
     f_student_get_desc('STVADMT',rovstu1_ad_admt_code,30)),1,30),
 rovstu1_ad_styp_code,
 substr(decode(rovstu1_ad_styp_code,null,null,
     f_student_get_desc('STVSTYP',rovstu1_ad_styp_code,30)),1,30),
 rovstu1_ad_coll_code_1,
 substr(decode(rovstu1_ad_coll_code_1,null,null,
     f_student_get_desc('STVCOLL',rovstu1_ad_coll_code_1,30)),1,30),
 rovstu1_ad_degc_code_1,
 substr(decode(rovstu1_ad_degc_code_1,null,null,
     f_student_get_desc('STVDEGC',rovstu1_ad_degc_code_1,30)),1,30),
 rovstu1_ad_majr_code_1,
 substr(decode(rovstu1_ad_majr_code_1,null,null,
     f_student_get_desc('STVMAJR',rovstu1_ad_majr_code_1,30)),1,30),
 rovstu1_ad_resd_code,
 substr(decode(rovstu1_ad_resd_code,null,null,
     f_student_get_desc('STVRESD',rovstu1_ad_resd_code,30)),1,30),
 rovstu1_ad_dept_code,
 substr(decode(rovstu1_ad_dept_code,null,null,
     f_student_get_desc('STVDEPT',rovstu1_ad_dept_code,30)),1,30),
 rovstu1_ad_apdc_code1,
 substr(decode(rovstu1_ad_apdc_code1,null,null,
     f_student_get_desc('STVAPDC',rovstu1_ad_apdc_code1,30)),1,30),
 rovstu1_ad_apdc_decision_date1,
 rovstu1_ad_apdc_code2,
 substr(decode(rovstu1_ad_apdc_code2,null,null,
     f_student_get_desc('STVAPDC',rovstu1_ad_apdc_code2,30)),1,30),
 rovstu1_ad_apdc_decision_date2,
 rovstu1_ad_apdc_code3,
 substr(decode(rovstu1_ad_apdc_code3,null,null,
     f_student_get_desc('STVAPDC',rovstu1_ad_apdc_code3,30)),1,30),
 rovstu1_ad_apdc_decision_date3,
 rovstu1_ad_apdc_code4,
 substr(decode(rovstu1_ad_apdc_code4,null,null,
     f_student_get_desc('STVAPDC',rovstu1_ad_apdc_code4,30)),1,30),
 rovstu1_ad_apdc_decision_date4,
 rovstu1_ad_apdc_code5,
 substr(decode(rovstu1_ad_apdc_code5,null,null,
     f_student_get_desc('STVAPDC',rovstu1_ad_apdc_code5,30)),1,30),
 rovstu1_ad_apdc_decision_date5,
 rovstu1_ad_add_decisions,
 rovstu1_tesc_code1,
 substr(decode(rovstu1_tesc_code1,null,null,
     f_student_get_desc('STVTESC',rovstu1_tesc_code1,30)),1,30),
 rovstu1_test_date1,
 rovstu1_test_score1,
 rovstu1_tesc_code2,
 substr(decode(rovstu1_tesc_code2,null,null,
     f_student_get_desc('STVTESC',rovstu1_tesc_code2,30)),1,30),
 rovstu1_test_date2,
 rovstu1_test_score2,
 rovstu1_tesc_code3,
 substr(decode(rovstu1_tesc_code3,null,null,
     f_student_get_desc('STVTESC',rovstu1_tesc_code3,30)),1,30),
 rovstu1_test_date3,
 rovstu1_test_score3,
 rovstu1_st_term_code_eff,
 substr(decode(rovstu1_st_term_code_eff,null,null,
     f_student_get_desc('STVTERM',rovstu1_st_term_code_eff,30)),1,30),
 rovstu1_st_levl_code,
 substr(decode(rovstu1_st_levl_code,null,null,
     f_student_get_desc('STVLEVL',rovstu1_st_levl_code,30)),1,30),
 rovstu1_st_coll_code_1,
 substr(decode(rovstu1_st_coll_code_1,null,null,
     f_student_get_desc('STVCOLL',rovstu1_st_coll_code_1,30)),1,30),
 rovstu1_st_degc_code_1,
 substr(decode(rovstu1_st_degc_code_1,null,null,
     f_student_get_desc('STVDEGC',rovstu1_st_degc_code_1,30)),1,30),
 rovstu1_st_majr_code_1,
 substr(decode(rovstu1_st_majr_code_1,null,null,
     f_student_get_desc('STVMAJR',rovstu1_st_majr_code_1,30)),1,30),
 rovstu1_st_clas_code,
 substr(decode(rovstu1_st_clas_code,null,null,
     f_student_get_desc('STVCLAS',rovstu1_st_clas_code,30)),1,30),
 rovstu1_st_resd_code,
 substr(decode(rovstu1_st_resd_code,null,null,
     f_student_get_desc('STVRESD',rovstu1_st_resd_code,30)),1,30),
 rovstu1_st_full_part_ind,
 rovstu1_st_term_code_admit,
 substr(decode(rovstu1_st_term_code_admit,null,null,
     f_student_get_desc('STVTERM',rovstu1_st_term_code_admit,30)),1,30),
 rovstu1_st_stst_code,
 substr(decode(rovstu1_st_stst_code,null,null,
     f_student_get_desc('STVSTST',rovstu1_st_stst_code,30)),1,30),
 rovstu1_st_styp_code,
 substr(decode(rovstu1_st_styp_code,null,null,
     f_student_get_desc('STVSTYP',rovstu1_st_styp_code,30)),1,30),
 rovstu1_st_rate_code,
 substr(decode(rovstu1_st_rate_code,null,null,
     f_student_get_desc('STVRATE',rovstu1_st_rate_code,30)),1,30),
 rovstu1_st_exp_grad_date,
 rovstu1_ot_gpa_hours_attempted,
 rovstu1_ot_gpa_hours_earned,
 rovstu1_ot_gpa_hours,
 rovstu1_ot_gpa_quality_points,
 rovstu1_ot_gpa,
 rovstu1_ot_gpa_hours_passed,
 rovstu1_it_gpa_hours_attempted,
 rovstu1_it_gpa_hours_earned,
 rovstu1_it_gpa_hours,
 rovstu1_it_gpa_quality_points,
 rovstu1_it_gpa,
 rovstu1_it_gpa_hours_passed,
 rovstu1_tt_gpa_hours_attempted,
 rovstu1_tt_gpa_hours_earned,
 rovstu1_tt_gpa_hours,
 rovstu1_tt_gpa_quality_points,
 rovstu1_tt_gpa,
 rovstu1_tt_gpa_hours_passed,
 rovstu1_ol_gpa,
 rovstu1_ol_gpa_hours_attempted,
 rovstu1_ol_gpa_hours_earned,
 rovstu1_ol_gpa_hours_passed,
 rovstu1_ol_gpa_hours,
 rovstu1_ol_gpa_quality_points,
 rovstu1_il_gpa,
 rovstu1_il_gpa_hours_attempted,
 rovstu1_il_gpa_hours_earned,
 rovstu1_il_gpa_hours_passed,
 rovstu1_il_gpa_hours,
 rovstu1_il_gpa_quality_points,
 rovstu1_tl_gpa,
 rovstu1_tl_gpa_hours_attempted,
 rovstu1_tl_gpa_hours_earned,
 rovstu1_tl_gpa_hours_passed,
 rovstu1_tl_gpa_hours,
 rovstu1_tl_gpa_quality_points,
 rovstu1_st_tot_crhrs,
 rovstu1_st_tot_bill_hrs,
 rovstu1_st_adj_crhrs,
 rovstu1_st_adj_tot_crhrs_rep,
 rovstu1_st_tot_bill_hrs_rep,
 rovstu1_st_adj_crhrs_rep,
 rovstu1_dg_seq_no,
 rovstu1_dg_degc_code,
 substr(decode(rovstu1_dg_degc_code,null,null,
     f_student_get_desc('STVDEGC',rovstu1_dg_degc_code,30)),1,30),
 rovstu1_dg_degs_code,
 substr(decode(rovstu1_dg_degs_code,null,null,
     f_student_get_desc('STVDEGS',rovstu1_dg_degs_code,30)),1,30),
 rovstu1_dg_levl_code,
 substr(decode(rovstu1_dg_levl_code,null,null,
     f_student_get_desc('STVLEVL',rovstu1_dg_levl_code,30)),1,30),
 rovstu1_dg_coll_code_1,
 substr(decode(rovstu1_dg_coll_code_1,null,null,
     f_student_get_desc('STVCOLL',rovstu1_dg_coll_code_1,30)),1,30),
 rovstu1_dg_majr_code_1,
 substr(decode(rovstu1_dg_majr_code_1,null,null,
     f_student_get_desc('STVMAJR',rovstu1_dg_majr_code_1,30)),1,30),
 rovstu1_dg_majr_code_minr_1,
 substr(decode(rovstu1_dg_majr_code_minr_1,null,null,
     f_student_get_desc('STVMAJR',rovstu1_dg_majr_code_minr_1,30)),1,30),
 rovstu1_dg_appl_date,
 rovstu1_dg_grad_date,
 rovstu1_dg_acyr_code_bulletin,
 substr(decode(rovstu1_dg_acyr_code_bulletin,null,null,
     f_student_get_desc('STVACYR',rovstu1_dg_acyr_code_bulletin,30)),1,30),
 rovstu1_dg_majr_code_minr_1_2,
 substr(decode(rovstu1_dg_majr_code_minr_1_2,null,null,
     f_student_get_desc('STVMAJR',rovstu1_dg_majr_code_minr_1_2,30)),1,30),
 rovstu1_dg_term_code_sturec,
 substr(decode(rovstu1_dg_term_code_sturec,null,null,
     f_student_get_desc('STVTERM',rovstu1_dg_term_code_sturec,30)),1,30),
 rovstu1_dg_majr_code_1_2,
 substr(decode(rovstu1_dg_majr_code_1_2,null,null,
     f_student_get_desc('STVMAJR',rovstu1_dg_majr_code_1_2,30)),1,30),
 rovstu1_dg_camp_code,
 substr(decode(rovstu1_dg_camp_code,null,null,
     f_student_get_desc('STVCAMP',rovstu1_dg_camp_code,30)),1,30),
 rovstu1_dg_term_code_grad,
 substr(decode(rovstu1_dg_term_code_grad,null,null,
     f_student_get_desc('STVTERM',rovstu1_dg_term_code_grad,30)),1,30),
 rovstu1_dg_acyr_code,
 substr(decode(rovstu1_dg_acyr_code,null,null,
     f_student_get_desc('STVACYR',rovstu1_dg_acyr_code,30)),1,30),
 rovstu1_dg_grst_code,
 substr(decode(rovstu1_dg_grst_code,null,null,
     f_student_get_desc('STVGRST',rovstu1_dg_grst_code,30)),1,30),
 rovstu1_dg_authorized,
 rovstu1_dg_term_code_completed,
 substr(decode(rovstu1_dg_term_code_completed,null,null,
     f_student_get_desc('STVTERM',rovstu1_dg_term_code_completed,30)),1,30),
 rovstu1_additional_degree
from rovstu1"
"BANINST1","AR_FINAID_APPLICANT","BANNER Reporting top layer view for financial aid applicants.","select
 rcvapl1_pidm,
 rcvapl1_aidy_code,
 rcvapl1_ad_complete_ind,
 rcvapl1_ad_incomplete_ind,
 rcvapl1_ad_any_inst_accept_ind,
 rcvapl1_ad_any_stdn_accept_ind,
 rcvapl1_ad_cur_inst_accept_ind,
 rcvapl1_ad_cur_stdn_accept_ind,
 rcvapl1_ad_cur_rejected_ind,
 rcvapl1_ad_withdrawn_ind,
 rcvapl1_infc_code,
 substr(decode(rcvapl1_infc_code,null,null,
     f_finaid_get_desc('RTVINFC',rcvapl1_infc_code,30)),1,30),
 rcvapl1_seq_no,
 rcvapl1_curr_rec_ind,
 rcvapl1_id,
 rcvapl1_last_name,
 rcvapl1_first_name,
 rcvapl1_middle_name,
 rcvapl1_middle_intital,
 rcvapl1_name_prefix,
 rcvapl1_name_suffix,
 rcvapl1_ssn,
 rcvapl1_birth_date,
 rcvapl1_age,
 rcvapl1_sex,
 rcvapl1_ethn_code,
 substr(decode(rcvapl1_ethn_code,null,null,
     f_student_get_desc('STVETHN',rcvapl1_ethn_code,30)),1,30),
 -- 8120002-1 SUBSTR(rcvapl1_race_data,1,3),              --81200-1
 -- 8120002-1 SUBSTR(rcvapl1_race_data,4,60),             --81200-1
 -- 8120002-1 rcvapl1_ethn_cde,                           --81200-1
 rcvapl1_citz_code,
 substr(decode(rcvapl1_citz_code,null,null,
     f_student_get_desc('STVCITZ',rcvapl1_citz_code,30)),1,30),
 rcvapl1_mrtl_code,
 rcvapl1_stat_code_res,
 rcvapl1_atyp_code1,
 rcvapl1_street1_line1,
 rcvapl1_street1_line2,
 rcvapl1_street1_line3,
 rcvapl1_city1,
 rcvapl1_stat_code1,
 rcvapl1_zip1,
 rcvapl1_cnty_code1,
 substr(decode(rcvapl1_cnty_code1,null,null,
     f_student_get_desc('STVCNTY',rcvapl1_cnty_code1,30)),1,30),
 rcvapl1_natn_code1,
 substr(decode(rcvapl1_natn_code1,null,null,
     f_student_get_desc('STVNATN',rcvapl1_natn_code1,30)),1,30),
 rcvapl1_phone_area1,
 rcvapl1_phone_number1,
 rcvapl1_tele_code1,
 rcvapl1_atyp_code2,
 rcvapl1_street2_line1,
 rcvapl1_street2_line2,
 rcvapl1_street2_line3,
 rcvapl1_city2,
 rcvapl1_stat_code2,
 rcvapl1_zip2,
 rcvapl1_cnty_code2,
 substr(decode(rcvapl1_cnty_code2,null,null,
     f_student_get_desc('STVCNTY',rcvapl1_cnty_code2,30)),1,30),
 rcvapl1_natn_code2,
 substr(decode(rcvapl1_natn_code2,null,null,
     f_student_get_desc('STVNATN',rcvapl1_natn_code2,30)),1,30),
 rcvapl1_phone_area2,
 rcvapl1_phone_number2,
 rcvapl1_tele_code2,
 rcvapl1_ad_term_code_entry,
 substr(decode(rcvapl1_ad_term_code_entry,null,null,
     f_student_get_desc('STVTERM',rcvapl1_ad_term_code_entry,30)),1,30),
 rcvapl1_ad_appl_no,
 rcvapl1_ad_levl_code,
 substr(decode(rcvapl1_ad_levl_code,null,null,
     f_student_get_desc('STVLEVL',rcvapl1_ad_levl_code,30)),1,30),
 rcvapl1_ad_appl_date,
 rcvapl1_ad_admt_code,
 substr(decode(rcvapl1_ad_admt_code,null,null,
     f_student_get_desc('STVADMT',rcvapl1_ad_admt_code,30)),1,30),
 rcvapl1_ad_styp_code,
 substr(decode(rcvapl1_ad_styp_code,null,null,
     f_student_get_desc('STVSTYP',rcvapl1_ad_styp_code,30)),1,30),
 rcvapl1_ad_coll_code_1,
 substr(decode(rcvapl1_ad_coll_code_1,null,null,
     f_student_get_desc('STVCOLL',rcvapl1_ad_coll_code_1,30)),1,30),
 rcvapl1_ad_degc_code_1,
 substr(decode(rcvapl1_ad_degc_code_1,null,null,
     f_student_get_desc('STVDEGC',rcvapl1_ad_degc_code_1,30)),1,30),
 rcvapl1_ad_majr_code_1,
 substr(decode(rcvapl1_ad_majr_code_1,null,null,
     f_student_get_desc('STVMAJR',rcvapl1_ad_majr_code_1,30)),1,30),
 rcvapl1_ad_resd_code,
 substr(decode(rcvapl1_ad_resd_code,null,null,
     f_student_get_desc('STVRESD',rcvapl1_ad_resd_code,30)),1,30),
 rcvapl1_ad_apdc_code1,
 substr(decode(rcvapl1_ad_apdc_code1,null,null,
     f_student_get_desc('STVAPDC',rcvapl1_ad_apdc_code1,30)),1,30),
 rcvapl1_ad_apdc_decision_date1,
 rcvapl1_ad_apdc_code2,
 substr(decode(rcvapl1_ad_apdc_code2,null,null,
     f_student_get_desc('STVAPDC',rcvapl1_ad_apdc_code2,30)),1,30),
 rcvapl1_ad_apdc_decision_date2,
 rcvapl1_ad_apdc_code3,
 substr(decode(rcvapl1_ad_apdc_code3,null,null,
     f_student_get_desc('STVAPDC',rcvapl1_ad_apdc_code3,30)),1,30),
 rcvapl1_ad_apdc_decision_date3,
 rcvapl1_ad_apdc_code4,
 substr(decode(rcvapl1_ad_apdc_code4,null,null,
     f_student_get_desc('STVAPDC',rcvapl1_ad_apdc_code4,30)),1,30),
 rcvapl1_ad_apdc_decision_date4,
 rcvapl1_ad_apdc_code5,
 substr(decode(rcvapl1_ad_apdc_code5,null,null,
     f_student_get_desc('STVAPDC',rcvapl1_ad_apdc_code5,30)),1,30),
 rcvapl1_ad_apdc_decision_date5,
 rcvapl1_ad_add_decisions,
 rcvapl1_st_term_code_eff,
 substr(decode(rcvapl1_st_term_code_eff,null,null,
     f_student_get_desc('STVTERM',rcvapl1_st_term_code_eff,30)),1,30),
 rcvapl1_st_stst_code,
 substr(decode(rcvapl1_st_stst_code,null,null,
     f_student_get_desc('STVSTST',rcvapl1_st_stst_code,30)),1,30),
 rcvapl1_st_levl_code,
 substr(decode(rcvapl1_st_levl_code,null,null,
     f_student_get_desc('STVLEVL',rcvapl1_st_levl_code,30)),1,30),
 rcvapl1_st_styp_code,
 substr(decode(rcvapl1_st_styp_code,null,null,
     f_student_get_desc('STVSTYP',rcvapl1_st_styp_code,30)),1,30),
 rcvapl1_st_term_code_admit,
 substr(decode(rcvapl1_st_term_code_admit,null,null,
     f_student_get_desc('STVTERM',rcvapl1_st_term_code_admit,30)),1,30),
 rcvapl1_st_resd_code,
 substr(decode(rcvapl1_st_resd_code,null,null,
     f_student_get_desc('STVRESD',rcvapl1_st_resd_code,30)),1,30),
 rcvapl1_st_coll_code_1,
 substr(decode(rcvapl1_st_coll_code_1,null,null,
     f_student_get_desc('STVCOLL',rcvapl1_st_coll_code_1,30)),1,30),
 rcvapl1_st_degc_code_1,
 substr(decode(rcvapl1_st_degc_code_1,null,null,
     f_student_get_desc('STVDEGC',rcvapl1_st_degc_code_1,30)),1,30),
 rcvapl1_st_majr_code_1,
 substr(decode(rcvapl1_st_majr_code_1,null,null,
     f_student_get_desc('STVMAJR',rcvapl1_st_majr_code_1,30)),1,30),
 rcvapl1_st_clas_code,
 substr(decode(rcvapl1_st_clas_code,null,null,
     f_student_get_desc('STVCLAS',rcvapl1_st_clas_code,30)),1,30),
 rcvapl1_fam_memb,
 rcvapl1_no_in_coll,
 rcvapl1_yr_in_coll,
 rcvapl1_coll_cde,
 rcvapl1_exp_enroll_status,
 rcvapl1_par_us_inc,
 rcvapl1_us_inc,
 rcvapl1_inst_hous_cde,
 rcvapl1_cash_amt,
 rcvapl1_hme_val,
 rcvapl1_hme_dbt,
 rcvapl1_bus_farm_val,
 rcvapl1_bus_farm_dbt,
 rcvapl1_re_inv_val,
 rcvapl1_re_inv_dbt,
 rcvapl1_model_cde,
 rcvapl1_c_depend_status,
 rcvapl1_c_par_1_tot_inc,
 rcvapl1_c_par_2_tot_inc,
 rcvapl1_c_1_tot_inc,
 rcvapl1_c_2_tot_inc,
 rcvapl1_im_1_pc,
 rcvapl1_c_par_1_ctrb_fr_inc,
 rcvapl1_c_par_1_ctrb_fr_asset,
 rcvapl1_c_par_2_ctrb_fr_inc,
 rcvapl1_c_par_2_ctrb_fr_asset,
 rcvapl1_c_par_1_ctrb_offl_est,
 rcvapl1_im_1_sc,
 rcvapl1_c_1_ctrb_fr_inc,
 rcvapl1_c_1_ctrb_fr_asset,
 rcvapl1_c_2_ctrb_fr_inc,
 rcvapl1_c_2_ctrb_fr_asset,
 rcvapl1_c_1_ctrb_offl_est,
 rcvapl1_im_1_tfc,
 rcvapl1_eps_cde,
 rcvapl1_c_inst_1_tot_fam_ctrb,
 rcvapl1_lock_ind,
 rcvapl1_bgrp_code,
 substr(decode(rcvapl1_bgrp_code,null,null,
     f_finaid_get_desc('RTVBGRP',rcvapl1_bgrp_code,30)),1,30),
 rcvapl1_aprd_code,
 substr(decode(rcvapl1_aprd_code,null,null,
     f_finaid_get_desc('RTVAPRD',rcvapl1_aprd_code,30)),1,30),
 rcvapl1_pgrp_code,
 substr(decode(rcvapl1_pgrp_code,null,null,
     f_finaid_get_desc('RTVPGRP',rcvapl1_pgrp_code,30)),1,30),
 rcvapl1_tgrp_code,
 substr(decode(rcvapl1_tgrp_code,null,null,
     f_finaid_get_desc('RTVTGRP',rcvapl1_tgrp_code,30)),1,30),
 rcvapl1_pc,
 rcvapl1_sc,
 rcvapl1_tfc,
 rcvapl1_pckg_comp_date,
 rcvapl1_all_req_comp_date,
 rcvapl1_pckg_req_comp_date,
 rcvapl1_disb_req_comp_date,
 rcvapl1_fm_gross_need,
 rcvapl1_fm_unmet_need,
 rcvapl1_im_gross_need,
 rcvapl1_im_unmet_need,
 rcvapl1_im_tfc,
 rcvapl1_cost_of_ed,
 rcvapl1_total_offer,
 rcvapl1_resource_amt,
 rcvapl1_verification_prty,
 rcvapl1_verification_msg,
 rcvapl1_ver_complete,
 rcvapl1_treq_code1,
 rcvapl1_treq_desc1,
 rcvapl1_trst_code1,
 substr(decode(rcvapl1_trst_code1,null,null,
     f_finaid_get_desc('RTVTRST',rcvapl1_trst_code1,30)),1,30),
 rcvapl1_sbgi_code1,
 substr(decode(rcvapl1_sbgi_code1,null,null,
     f_student_get_desc('STVSBGI',rcvapl1_sbgi_code1,30)),1,30),
 rcvapl1_fund_code1,
 substr(decode(rcvapl1_fund_code1,null,null,
     f_finaid_get_desc('RFRBASE',rcvapl1_fund_code1,30)),1,30),
 rcvapl1_period1,                                                -- 80900-1
 substr(decode(rcvapl1_period1,null,null,                        -- 81000-1
     f_finaid_get_desc('ROBPRDS',rcvapl1_period1,30)),1,30),     -- 81000-1
 rcvapl1_term_code1,                                             -- 80900-1
 substr(decode(rcvapl1_term_code1,null,null,                     -- 80900-1
     f_student_get_desc('STVTERM',rcvapl1_term_code1,30)),1,30), -- 80900-1
 rcvapl1_sat_ind1,
 rcvapl1_stat_date1,
 rcvapl1_pckg_ind1,
 rcvapl1_disb_ind1,
 rcvapl1_memo_ind1,
 rcvapl1_add_treq1,
 rcvapl1_treq_code2,
 rcvapl1_treq_desc2,
 rcvapl1_trst_code2,
 substr(decode(rcvapl1_trst_code2,null,null,
     f_finaid_get_desc('RTVTRST',rcvapl1_trst_code2,30)),1,30),
 rcvapl1_sbgi_code2,
 substr(decode(rcvapl1_sbgi_code2,null,null,
     f_student_get_desc('STVSBGI',rcvapl1_sbgi_code2,30)),1,30),
 rcvapl1_fund_code2,
 substr(decode(rcvapl1_fund_code2,null,null,
     f_finaid_get_desc('RFRBASE',rcvapl1_fund_code2,30)),1,30),
 rcvapl1_period2,                                                -- 80900-1
 substr(decode(rcvapl1_period2,null,null,                        -- 81000-1
     f_finaid_get_desc('ROBPRDS',rcvapl1_period2,30)),1,30),     -- 81000-1
 rcvapl1_term_code2,                                             -- 80900-1
 substr(decode(rcvapl1_term_code2,null,null,                     -- 80900-1
     f_student_get_desc('STVTERM',rcvapl1_term_code2,30)),1,30), -- 80900-1
 rcvapl1_sat_ind2,
 rcvapl1_stat_date2,
 rcvapl1_pckg_ind2,
 rcvapl1_disb_ind2,
 rcvapl1_memo_ind2,
 rcvapl1_add_treq2,
 rcvapl1_treq_code3,
 rcvapl1_treq_desc3,
 rcvapl1_trst_code3,
 substr(decode(rcvapl1_trst_code3,null,null,
     f_finaid_get_desc('RTVTRST',rcvapl1_trst_code3,30)),1,30),
 rcvapl1_sbgi_code3,
 substr(decode(rcvapl1_sbgi_code3,null,null,
     f_student_get_desc('STVSBGI',rcvapl1_sbgi_code3,30)),1,30),
 rcvapl1_fund_code3,
 substr(decode(rcvapl1_fund_code3,null,null,
     f_finaid_get_desc('RFRBASE',rcvapl1_fund_code3,30)),1,30),
 rcvapl1_period3,                                                -- 80900-1
 substr(decode(rcvapl1_period3,null,null,                        -- 81000-1
     f_finaid_get_desc('ROBPRDS',rcvapl1_period3,30)),1,30),     -- 81000-1
 rcvapl1_term_code3,                                             -- 80900-1
 substr(decode(rcvapl1_term_code3,null,null,                     -- 80900-1
     f_student_get_desc('STVTERM',rcvapl1_term_code3,30)),1,30), -- 80900-1
 rcvapl1_sat_ind3,
 rcvapl1_stat_date3,
 rcvapl1_pckg_ind3,
 rcvapl1_disb_ind3,
 rcvapl1_memo_ind3,
 rcvapl1_add_treq3,
 rcvapl1_add_requirements,
 rcvapl1_btyp_code,
 substr(decode(rcvapl1_btyp_code,null,null,
     f_finaid_get_desc('RTVBTYP',rcvapl1_btyp_code,30)),1,30),
 rcvapl1_btyp_tfc_ind,
 rcvapl1_btyp_total_budget,
 rcvapl1_comp_code1,
 substr(decode(rcvapl1_comp_code1,null,null,
     f_finaid_get_desc('RTVCOMP',rcvapl1_comp_code1,30)),1,30),
 rcvapl1_comp_amt1,
 rcvapl1_comp_code2,
 substr(decode(rcvapl1_comp_code2,null,null,
     f_finaid_get_desc('RTVCOMP',rcvapl1_comp_code2,30)),1,30),
 rcvapl1_comp_amt2,
 rcvapl1_comp_code3,
 substr(decode(rcvapl1_comp_code3,null,null,
     f_finaid_get_desc('RTVCOMP',rcvapl1_comp_code3,30)),1,30),
 rcvapl1_comp_amt3,
 rcvapl1_comp_code4,
 substr(decode(rcvapl1_comp_code4,null,null,
     f_finaid_get_desc('RTVCOMP',rcvapl1_comp_code4,30)),1,30),
 rcvapl1_comp_amt4,
 rcvapl1_comp_code5,
 substr(decode(rcvapl1_comp_code5,null,null,
     f_finaid_get_desc('RTVCOMP',rcvapl1_comp_code5,30)),1,30),
 rcvapl1_comp_amt5,
 rcvapl1_add_components,
 rcvapl1_sbgi_type_ind1,  -- 80500-1
 rcvapl1_sbgi_type_ind2,  -- 80500-1
 rcvapl1_sbgi_type_ind3   -- 80500-1
from rcvapl1"
"BANINST1","AR_BUDGET_COMPONENTS","BANNER Reporting top layer view for budget information for financial aid applicants.","select
 rbvbud1_pidm,
 rbvbud1_aidy_code,
 rbvbud1_btyp_code,
 substr(decode(rbvbud1_btyp_code,null,null,
     f_finaid_get_desc('RTVBTYP',rbvbud1_btyp_code,30)),1,30),
 rbvbud1_comp_code,
 substr(decode(rbvbud1_comp_code,null,null,
     f_finaid_get_desc('RTVCOMP',rbvbud1_comp_code,30)),1,30),
 rbvbud1_id,
 rbvbud1_last_name,
 rbvbud1_first_name,
 rbvbud1_middle_name,
 rbvbud1_middle_intital,
 rbvbud1_ssn,
 rbvbud1_aprd_code,
 substr(decode(rbvbud1_aprd_code,null,null,
     f_finaid_get_desc('RTVAPRD',rbvbud1_aprd_code,30)),1,30),
 rbvbud1_bgrp_code,
 substr(decode(rbvbud1_bgrp_code,null,null,
     f_finaid_get_desc('RTVBGRP',rbvbud1_bgrp_code,30)),1,30),
 rbvbud1_tfc_ind,
 rbvbud1_pell_ind,
 rbvbud1_rbrmixd_ind,
 rbvbud1_tot_budget,
 rbvbud1_amt
from rbvbud1
 "
"BANINST1","AR_AWARD_DETAIL_BY_YEAR","BANNER Reporting top layer view for award by year information for financial aid applicants.","select
 rpvawy1_pidm,
 rpvawy1_aidy_code,
 rpvawy1_fund_code,
 rpvawy1_fund_title,
 rpvawy1_ad_complete_ind,
 rpvawy1_ad_incomplete_ind,
 rpvawy1_ad_any_inst_accept_ind,
 rpvawy1_ad_any_stdn_accept_ind,
 rpvawy1_ad_cur_inst_accept_ind,
 rpvawy1_ad_cur_stdn_accept_ind,
 rpvawy1_ad_cur_rejected_ind,
 rpvawy1_ad_withdrawn_ind,
 rpvawy1_id,
 rpvawy1_last_name,
 rpvawy1_first_name,
 rpvawy1_middle_name,
 rpvawy1_middle_intital,
 rpvawy1_name_prefix,
 rpvawy1_name_suffix,
 rpvawy1_ssn,
 rpvawy1_birth_date,
 rpvawy1_age,
 rpvawy1_sex,
 rpvawy1_ethn_code,
 substr(decode(rpvawy1_ethn_code,null,null,
     f_student_get_desc('STVETHN',rpvawy1_ethn_code,30)),1,30),
 --8120002-1 SUBSTR(rpvawy1_race_data,1,3),                                             --81200-1
 --8120002-1 SUBSTR(rpvawy1_race_data,4,60),                                            --81200-1
 --8120002-1 rpvawy1_ethn_cde,                                                          --81200-1
 rpvawy1_citz_code,
 substr(decode(rpvawy1_citz_code,null,null,
     f_student_get_desc('STVCITZ',rpvawy1_citz_code,30)),1,30),
 rpvawy1_mrtl_code,
 rpvawy1_atyp_code1,
 rpvawy1_street1_line1,
 rpvawy1_street1_line2,
 rpvawy1_street1_line3,
 rpvawy1_city1,
 rpvawy1_stat_code1,
 rpvawy1_zip1,
 rpvawy1_cnty_code1,
 substr(decode(rpvawy1_cnty_code1,null,null,
     f_student_get_desc('STVCNTY',rpvawy1_cnty_code1,30)),1,30),
 rpvawy1_natn_code1,
 substr(decode(rpvawy1_natn_code1,null,null,
     f_student_get_desc('STVNATN',rpvawy1_natn_code1,30)),1,30),
 rpvawy1_phone_area1,
 rpvawy1_phone_number1,
 rpvawy1_tele_code1,
 rpvawy1_atyp_code2,
 rpvawy1_street2_line1,
 rpvawy1_street2_line2,
 rpvawy1_street2_line3,
 rpvawy1_city2,
 rpvawy1_stat_code2,
 rpvawy1_zip2,
 rpvawy1_cnty_code2,
 substr(decode(rpvawy1_cnty_code2,null,null,
     f_student_get_desc('STVCNTY',rpvawy1_cnty_code2,30)),1,30),
 rpvawy1_natn_code2,
 substr(decode(rpvawy1_natn_code2,null,null,
     f_student_get_desc('STVNATN',rpvawy1_natn_code2,30)),1,30),
 rpvawy1_phone_area2,
 rpvawy1_phone_number2,
 rpvawy1_tele_code2,
 rpvawy1_ad_term_code_entry,
 substr(decode(rpvawy1_ad_term_code_entry,null,null,
     f_student_get_desc('STVTERM',rpvawy1_ad_term_code_entry,30)),1,30),
 rpvawy1_ad_appl_no,
 rpvawy1_ad_levl_code,
 substr(decode(rpvawy1_ad_levl_code,null,null,
     f_student_get_desc('STVLEVL',rpvawy1_ad_levl_code,30)),1,30),
 rpvawy1_ad_appl_date,
 rpvawy1_ad_admt_code,
 substr(decode(rpvawy1_ad_admt_code,null,null,
     f_student_get_desc('STVADMT',rpvawy1_ad_admt_code,30)),1,30),
 rpvawy1_ad_styp_code,
 substr(decode(rpvawy1_ad_styp_code,null,null,
     f_student_get_desc('STVSTYP',rpvawy1_ad_styp_code,30)),1,30),
 rpvawy1_ad_coll_code_1,
 substr(decode(rpvawy1_ad_coll_code_1,null,null,
     f_student_get_desc('STVCOLL',rpvawy1_ad_coll_code_1,30)),1,30),
 rpvawy1_ad_degc_code_1,
 substr(decode(rpvawy1_ad_degc_code_1,null,null,
     f_student_get_desc('STVDEGC',rpvawy1_ad_degc_code_1,30)),1,30),
 rpvawy1_ad_majr_code_1,
 substr(decode(rpvawy1_ad_majr_code_1,null,null,
     f_student_get_desc('STVMAJR',rpvawy1_ad_majr_code_1,30)),1,30),
 rpvawy1_ad_resd_code,
 substr(decode(rpvawy1_ad_resd_code,null,null,
     f_student_get_desc('STVRESD',rpvawy1_ad_resd_code,30)),1,30),
 rpvawy1_ad_apdc_code1,
 substr(decode(rpvawy1_ad_apdc_code1,null,null,
     f_student_get_desc('STVAPDC',rpvawy1_ad_apdc_code1,30)),1,30),
 rpvawy1_ad_apdc_decision_date1,
 rpvawy1_ad_apdc_code2,
 substr(decode(rpvawy1_ad_apdc_code2,null,null,
     f_student_get_desc('STVAPDC',rpvawy1_ad_apdc_code2,30)),1,30),
 rpvawy1_ad_apdc_decision_date2,
 rpvawy1_ad_apdc_code3,
 substr(decode(rpvawy1_ad_apdc_code3,null,null,
     f_student_get_desc('STVAPDC',rpvawy1_ad_apdc_code3,30)),1,30),
 rpvawy1_ad_apdc_decision_date3,
 rpvawy1_ad_apdc_code4,
 substr(decode(rpvawy1_ad_apdc_code4,null,null,
     f_student_get_desc('STVAPDC',rpvawy1_ad_apdc_code4,30)),1,30),
 rpvawy1_ad_apdc_decision_date4,
 rpvawy1_ad_apdc_code5,
 substr(decode(rpvawy1_ad_apdc_code5,null,null,
     f_student_get_desc('STVAPDC',rpvawy1_ad_apdc_code5,30)),1,30),
 rpvawy1_ad_apdc_decision_date5,
 rpvawy1_ad_add_decisions,
 rpvawy1_st_term_code_eff,
 substr(decode(rpvawy1_st_term_code_eff,null,null,
     f_student_get_desc('STVTERM',rpvawy1_st_term_code_eff,30)),1,30),
 rpvawy1_st_stst_code,
 substr(decode(rpvawy1_st_stst_code,null,null,
     f_student_get_desc('STVSTST',rpvawy1_st_stst_code,30)),1,30),
 rpvawy1_st_levl_code,
 substr(decode(rpvawy1_st_levl_code,null,null,
     f_student_get_desc('STVLEVL',rpvawy1_st_levl_code,30)),1,30),
 rpvawy1_st_styp_code,
 substr(decode(rpvawy1_st_styp_code,null,null,
     f_student_get_desc('STVSTYP',rpvawy1_st_styp_code,30)),1,30),
 rpvawy1_st_term_code_admit,
 substr(decode(rpvawy1_st_term_code_admit,null,null,
     f_student_get_desc('STVTERM',rpvawy1_st_term_code_admit,30)),1,30),
 rpvawy1_st_resd_code,
 substr(decode(rpvawy1_st_resd_code,null,null,
     f_student_get_desc('STVRESD',rpvawy1_st_resd_code,30)),1,30),
 rpvawy1_st_coll_code_1,
 substr(decode(rpvawy1_st_coll_code_1,null,null,
     f_student_get_desc('STVCOLL',rpvawy1_st_coll_code_1,30)),1,30),
 rpvawy1_st_degc_code_1,
 substr(decode(rpvawy1_st_degc_code_1,null,null,
     f_student_get_desc('STVDEGC',rpvawy1_st_degc_code_1,30)),1,30),
 rpvawy1_st_majr_code_1,
 substr(decode(rpvawy1_st_majr_code_1,null,null,
     f_student_get_desc('STVMAJR',rpvawy1_st_majr_code_1,30)),1,30),
 rpvawy1_st_clas_code,
 substr(decode(rpvawy1_st_clas_code,null,null,
     f_student_get_desc('STVCLAS',rpvawy1_st_clas_code,30)),1,30),
 rpvawy1_awst_code,
 rpvawy1_awst_desc,
 rpvawy1_offer_ind,
 rpvawy1_accept_ind,
 rpvawy1_decline_ind,
 rpvawy1_cancel_ind,
 rpvawy1_awst_date,
 rpvawy1_accept_amt,
 rpvawy1_decline_amt,
 rpvawy1_cancel_amt,
 rpvawy1_offer_amt,
 rpvawy1_authorize_amt,
 rpvawy1_memo_amt,
 rpvawy1_paid_amt,
 rpvawy1_fsrc_code,
 substr(decode(rpvawy1_fsrc_code,null,null,
     f_finaid_get_desc('RTVFSRC',rpvawy1_fsrc_code,30)),1,30),
 rpvawy1_ftyp_code,
 substr(decode(rpvawy1_ftyp_code,null,null,
     f_finaid_get_desc('RTVFTYP',rpvawy1_ftyp_code,30)),1,30),
 rpvawy1_detail_code,
 rpvawy1_fed_fund_id,
 rpvawy1_fm_tfc,
 rpvawy1_fm_gross_need,
 rpvawy1_fm_unmet_need,
 rpvawy1_im_gross_need,
 rpvawy1_im_unmet_need,
 rpvawy1_im_tfc,
 rpvawy1_cost_of_ed,
 rpvawy1_total_offer,
 rpvawy1_resource_amt
from rpvawy1"
"BANINST1","AR_AWARD_DETAIL_BY_TERM","BANNER Reporting top layer view for award by term information for financial aid applicants.","select
 rpvawt1_pidm,
 rpvawt1_aidy_code,
 rpvawt1_period,                                              -- 80900-1
 substr(decode(rpvawt1_period,null,null,                      -- 81000-1
     f_finaid_get_desc('ROBPRDS',rpvawt1_period,30)),1,30),   -- 81000-1
 rpvawt1_term_code,
 substr(decode(rpvawt1_term_code,null,null,
     f_student_get_desc('STVTERM',rpvawt1_term_code,30)),1,30),
 rpvawt1_fund_code,
 substr(decode(rpvawt1_fund_code,null,null,
     f_finaid_get_desc('RFRBASE',rpvawt1_fund_code,30)),1,30),
 rpvawt1_applied_for_adm_ind,
 rpvawt1_ad_complete_ind,
 rpvawt1_ad_incomplete_ind,
 rpvawt1_ad_any_inst_accept_ind,
 rpvawt1_ad_any_stdn_accept_ind,
 rpvawt1_ad_cur_inst_accept_ind,
 rpvawt1_ad_cur_stdn_accept_ind,
 rpvawt1_ad_cur_rejected_ind,
 rpvawt1_ad_withdrawn_ind,
 rpvawt1_enrolled_ind,
 rpvawt1_registered_ind,
 rpvawt1_id,
 rpvawt1_last_name,
 rpvawt1_first_name,
 rpvawt1_middle_name,
 rpvawt1_middle_intital,
 rpvawt1_name_prefix,
 rpvawt1_name_suffix,
 rpvawt1_ssn,
 rpvawt1_birth_date,
 rpvawt1_age,
 rpvawt1_sex,
 rpvawt1_ethn_code,
 substr(decode(rpvawt1_ethn_code,null,null,
     f_student_get_desc('STVETHN',rpvawt1_ethn_code,30)),1,30),
 --8120002-1 SUBSTR(rpvawt1_race_data,1,3),                                       --81200-1
 --8120002-1 SUBSTR(rpvawt1_race_data,4,60),                                      --81200-1
 --8120002-1 rpvawt1_ethn_cde,                                                    --81200-1
 rpvawt1_citz_code,
 substr(decode(rpvawt1_citz_code,null,null,
     f_student_get_desc('STVCITZ',rpvawt1_citz_code,30)),1,30),
 rpvawt1_mrtl_code,
 rpvawt1_atyp_code1,
 rpvawt1_street1_line1,
 rpvawt1_street1_line2,
 rpvawt1_street1_line3,
 rpvawt1_city1,
 rpvawt1_stat_code1,
 rpvawt1_zip1,
 rpvawt1_cnty_code1,
 substr(decode(rpvawt1_cnty_code1,null,null,
     f_student_get_desc('STVCNTY',rpvawt1_cnty_code1,30)),1,30),
 rpvawt1_natn_code1,
 substr(decode(rpvawt1_natn_code1,null,null,
     f_student_get_desc('STVNATN',rpvawt1_natn_code1,30)),1,30),
 rpvawt1_phone_area1,
 rpvawt1_phone_number1,
 rpvawt1_tele_code1,
 rpvawt1_atyp_code2,
 rpvawt1_street2_line1,
 rpvawt1_street2_line2,
 rpvawt1_street2_line3,
 rpvawt1_city2,
 rpvawt1_stat_code2,
 rpvawt1_zip2,
 rpvawt1_cnty_code2,
 substr(decode(rpvawt1_cnty_code2,null,null,
     f_student_get_desc('STVCNTY',rpvawt1_cnty_code2,30)),1,30),
 rpvawt1_natn_code2,
 substr(decode(rpvawt1_natn_code2,null,null,
     f_student_get_desc('STVNATN',rpvawt1_natn_code2,30)),1,30),
 rpvawt1_phone_area2,
 rpvawt1_phone_number2,
 rpvawt1_tele_code2,
 rpvawt1_ad_term_code_entry,
 substr(decode(rpvawt1_ad_term_code_entry,null,null,
     f_student_get_desc('STVTERM',rpvawt1_ad_term_code_entry,30)),1,30),
 rpvawt1_ad_appl_no,
 rpvawt1_ad_levl_code,
 substr(decode(rpvawt1_ad_levl_code,null,null,
     f_student_get_desc('STVLEVL',rpvawt1_ad_levl_code,30)),1,30),
 rpvawt1_ad_appl_date,
 rpvawt1_ad_admt_code,
 substr(decode(rpvawt1_ad_admt_code,null,null,
     f_student_get_desc('STVADMT',rpvawt1_ad_admt_code,30)),1,30),
 rpvawt1_ad_styp_code,
 substr(decode(rpvawt1_ad_styp_code,null,null,
     f_student_get_desc('STVSTYP',rpvawt1_ad_styp_code,30)),1,30),
 rpvawt1_ad_coll_code_1,
 substr(decode(rpvawt1_ad_coll_code_1,null,null,
     f_student_get_desc('STVCOLL',rpvawt1_ad_coll_code_1,30)),1,30),
 rpvawt1_ad_degc_code_1,
 substr(decode(rpvawt1_ad_degc_code_1,null,null,
     f_student_get_desc('STVDEGC',rpvawt1_ad_degc_code_1,30)),1,30),
 rpvawt1_ad_majr_code_1,
 substr(decode(rpvawt1_ad_majr_code_1,null,null,
     f_student_get_desc('STVMAJR',rpvawt1_ad_majr_code_1,30)),1,30),
 rpvawt1_ad_resd_code,
 substr(decode(rpvawt1_ad_resd_code,null,null,
     f_student_get_desc('STVRESD',rpvawt1_ad_resd_code,30)),1,30),
 rpvawt1_ad_apdc_code1,
 substr(decode(rpvawt1_ad_apdc_code1,null,null,
     f_student_get_desc('STVAPDC',rpvawt1_ad_apdc_code1,30)),1,30),
 rpvawt1_ad_apdc_decision_date1,
 rpvawt1_ad_apdc_code2,
 substr(decode(rpvawt1_ad_apdc_code2,null,null,
     f_student_get_desc('STVAPDC',rpvawt1_ad_apdc_code2,30)),1,30),
 rpvawt1_ad_apdc_decision_date2,
 rpvawt1_ad_apdc_code3,
 substr(decode(rpvawt1_ad_apdc_code3,null,null,
     f_student_get_desc('STVAPDC',rpvawt1_ad_apdc_code3,30)),1,30),
 rpvawt1_ad_apdc_decision_date3,
 rpvawt1_ad_apdc_code4,
 substr(decode(rpvawt1_ad_apdc_code4,null,null,
     f_student_get_desc('STVAPDC',rpvawt1_ad_apdc_code4,30)),1,30),
 rpvawt1_ad_apdc_decision_date4,
 rpvawt1_ad_apdc_code5,
 substr(decode(rpvawt1_ad_apdc_code5,null,null,
     f_student_get_desc('STVAPDC',rpvawt1_ad_apdc_code5,30)),1,30),
 rpvawt1_ad_apdc_decision_date5,
 rpvawt1_ad_add_decisions,
 rpvawt1_st_term_code_eff,
 substr(decode(rpvawt1_st_term_code_eff,null,null,
     f_student_get_desc('STVTERM',rpvawt1_st_term_code_eff,30)),1,30),
 rpvawt1_st_stst_code,
 substr(decode(rpvawt1_st_stst_code,null,null,
     f_student_get_desc('STVSTST',rpvawt1_st_stst_code,30)),1,30),
 rpvawt1_st_levl_code,
 substr(decode(rpvawt1_st_levl_code,null,null,
     f_student_get_desc('STVLEVL',rpvawt1_st_levl_code,30)),1,30),
 rpvawt1_st_styp_code,
 substr(decode(rpvawt1_st_styp_code,null,null,
     f_student_get_desc('STVSTYP',rpvawt1_st_styp_code,30)),1,30),
 rpvawt1_st_term_code_admit,
 substr(decode(rpvawt1_st_term_code_admit,null,null,
     f_student_get_desc('STVTERM',rpvawt1_st_term_code_admit,30)),1,30),
 rpvawt1_st_resd_code,
 substr(decode(rpvawt1_st_resd_code,null,null,
     f_student_get_desc('STVRESD',rpvawt1_st_resd_code,30)),1,30),
 rpvawt1_st_coll_code_1,
 substr(decode(rpvawt1_st_coll_code_1,null,null,
     f_student_get_desc('STVCOLL',rpvawt1_st_coll_code_1,30)),1,30),
 rpvawt1_st_degc_code_1,
 substr(decode(rpvawt1_st_degc_code_1,null,null,
     f_student_get_desc('STVDEGC',rpvawt1_st_degc_code_1,30)),1,30),
 rpvawt1_st_majr_code_1,
 substr(decode(rpvawt1_st_majr_code_1,null,null,
     f_student_get_desc('STVMAJR',rpvawt1_st_majr_code_1,30)),1,30),
 rpvawt1_st_clas_code,
 substr(decode(rpvawt1_st_clas_code,null,null,
     f_student_get_desc('STVCLAS',rpvawt1_st_clas_code,30)),1,30),
 rpvawt1_st_tot_crhrs,
 rpvawt1_st_tot_bill_hrs,
 rpvawt1_st_adj_crhrs,
-- 081402-1 -  rpvawt1_st_tot_crhrs_rep,             /* 81200-2 */
-- 081402-1 -  rpvawt1_st_tot_bill_hrs_rep,          /* 81200-2 */
-- 081402-1 -  rpvawt1_st_adj_crhrs_rep,             /* 81200-2 */
 rpvawt1_finaid_credit_hr,
 rpvawt1_finaid_bill_hr,
 rpvawt1_finaid_adj_hr,
-- 081402-1 - rpvawt1_finaid_cr_hr_rep_chk,         /* 81200-2 */
-- 081402-1 - rpvawt1_finaid_bill_hr_rep_chk,       /* 81200-2 */
-- 081402-1 - rpvawt1_finaid_adj_hr_rep_chk,        /* 81200-2 */
 rpvawt1_offer_amt,
 rpvawt1_disb_final_ind,
 rpvawt1_dist_pct,
 rpvawt1_accept_amt,
 rpvawt1_cancel_amt,
 rpvawt1_authorize_amt,
 rpvawt1_memo_amt,
 rpvawt1_paid_amt,
 rpvawt1_pckg_load_ind,
 rpvawt1_disburse_load_match,
 rpvawt1_fm_tfc,
 rpvawt1_fm_gross_need,
 rpvawt1_fm_unmet_need,
 rpvawt1_im_gross_need,
 rpvawt1_im_unmet_need,
 rpvawt1_im_tfc,
 rpvawt1_cost_of_ed,
 rpvawt1_total_offer,
 rpvawt1_resource_amt
from rpvawt1"
"BANINST1","AQ$_SSO_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '-07:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '-07:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '-07:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '-07:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""SSO_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_SFKCMPL_RESPONSE_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""SFKCMPL_RESPONSE_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_SFKCMPL_REQUEST_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""SFKCMPL_REQUEST_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RPRSSBP_RTN_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RPRSSBP_RTN_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RPRSSBP_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RPRSSBP_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM18_RTN_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM18_RTN_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM18_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM18_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM17_RTN_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM17_RTN_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM17_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM17_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM16_RTN_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM16_RTN_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM16_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM16_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM15_RTN_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM15_RTN_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM15_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM15_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM14_RTN_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM14_RTN_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM14_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM14_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM13_RTN_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM13_RTN_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_RNPFM13_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""RNPFM13_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_PXKW2TS_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""PXKW2TS_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_GURJOBS_RTN_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '-07:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '-07:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '-07:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '-07:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""GURJOBS_RTN_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_GURJOBS_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '-07:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '-07:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '-07:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '-07:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""GURJOBS_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_GOKOUTP_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '-07:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '-07:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '-07:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '-07:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""GOKOUTP_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_GOKOUTD_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '-07:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '-07:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '-07:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '-07:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""GOKOUTD_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_GKKPXML_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""GKKPXML_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_GKKOUTP_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""GKKOUTP_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_EVENT_SYNC_TABLE_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(iot) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '-07:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '-07:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '-07:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '-07:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA, qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP, iot.subscriber# SUBSCRIBER_ID, iot.name SUBSCRIBER_NAME, iot.queue# QUEUE_EVTID FROM ""EVENT_SYNC_TABLE"" qt, ""AQ$_EVENT_SYNC_TABLE_I"" iot, SYS.ALL_INT_DEQUEUE_QUEUES qo WHERE qt.msgid=iot.msgid  and qt.q_name = qo.name  AND qo.owner = 'BANINST1' AND iot.msg_enq_time = qt.enq_time AND  iot.msg_step_no = qt.step_no AND iot.msg_local_order_no = qt.local_order_no AND   iot.msg_chain_no = qt.chain_no  WITH READ ONLY"
"BANINST1","AQ$_EVENT_BULKSYNC_TABLE_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(iot) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '-07:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '-07:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '-07:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '-07:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA, qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP, iot.subscriber# SUBSCRIBER_ID, iot.name SUBSCRIBER_NAME, iot.queue# QUEUE_EVTID FROM ""EVENT_BULKSYNC_TABLE"" qt, ""AQ$_EVENT_BULKSYNC_TABLE_I"" iot, SYS.ALL_INT_DEQUEUE_QUEUES qo WHERE qt.msgid=iot.msgid  and qt.q_name = qo.name  AND qo.owner = 'BANINST1' AND iot.msg_enq_time = qt.enq_time AND  iot.msg_step_no = qt.step_no AND iot.msg_local_order_no = qt.local_order_no AND   iot.msg_chain_no = qt.chain_no  WITH READ ONLY"
"BANINST1","AQ$_ETRANSCRPT_RESPONSE_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""ETRANSCRPT_RESPONSE_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_ETRANSCRPT_REQUEST_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""ETRANSCRPT_REQUEST_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_DW_PREQ_RESPONSE_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""DW_PREQ_RESPONSE_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_DW_PREQ_REQUEST_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""DW_PREQ_REQUEST_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_DW_DESC_RESPONSE_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""DW_DESC_RESPONSE_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_DW_DESC_REQUEST_QTAB_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(qt) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA ,qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP FROM ""DW_DESC_REQUEST_QTAB"" qt, SYS.ALL_INT_DEQUEUE_QUEUES qo  WHERE qt.q_name = qo.name AND qo.owner = 'BANINST1' WITH READ ONLY"
"BANINST1","AQ$_BANNER_IDENTITY_TABLE_F","","SELECT  /*+ NO_MERGE (qo) USE_NL(iot) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '-08:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '-08:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '-08:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '-08:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA, qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP, iot.subscriber# SUBSCRIBER_ID, iot.name SUBSCRIBER_NAME, iot.queue# QUEUE_EVTID FROM ""BANNER_IDENTITY_TABLE"" qt, ""AQ$_BANNER_IDENTITY_TABLE_I"" iot, SYS.ALL_INT_DEQUEUE_QUEUES qo WHERE qt.msgid=iot.msgid  and qt.q_name = qo.name  AND qo.owner = 'BANINST1' AND iot.msg_enq_time = qt.enq_time AND  iot.msg_step_no = qt.step_no AND iot.msg_local_order_no = qt.local_order_no AND   iot.msg_chain_no = qt.chain_no  UNION ALL SELECT  qo.name Q_NAME,  cast (null as rowid) ROW_ID,  b.msgid MSGID,  b.corrid CORRID,  b.priority PRIORITY,  decode(b.state, 4, 0, 5, 8, 12, 10, 0) STATE,  cast (null as TIMESTAMP) DELAY,  b.expiration EXPIRATION,  cast(FROM_TZ(b.enq_time, '-08:00')  at time zone sessiontimezone as timestamp) ENQ_TIME, b.enq_user_name ENQ_UID,  cast(null as varchar2(30)) ENQ_TID,  cast(null as timestamp) DEQ_TIME,  cast (null as varchar2(30))  DEQ_UID,  cast (null as varchar2(30)) DEQ_TID,  0 RETRY_COUNT, b.exceptionq_schema EXCEPTION_QUEUE_OWNER, b.exceptionq_name EXCEPTION_QUEUE,  0 CSCN,  0 DSCN,  0 CHAIN_NO,  0 LOCAL_ORDER_NO,  cast (null as TIMESTAMP) TIME_MANAGER_INFO,  0 STEP_NO, sys.dbms_aq_bqview.get_adt_payload(b.queue_id, b.msg_num, ""SYS"".""AQ$_JMS_TEXT_MESSAGE""(NULL, NULL, NULL, NULL)) USER_DATA, b.sender_name SENDER_NAME, b.sender_address SENDER_ADDRESS, b.sender_protocol SENDER_PROTOCOL,  cast(null as raw(16)) DEQUEUE_MSGID, 'BUFFERED' DELIVERY_MODE, b.sequence_num SEQUENCE_NUM, b.msg_num MSG_NUM, qo.qid QUEUE_ID,  null USER_PROP, b.subscriber_id SUBSCRIBER_ID,  cast (null as varchar2(30)) SUBSCRIBER_NAME, 0 QUEUE_EVTID  FROM SYS.qt108166_BUFFER b,  sys.all_int_dequeue_queues qo  WHERE bitand(b.state, 4) = 4 AND qo.qid =b.queue_id  UNION ALL SELECT  p.q_name Q_NAME,  cast (null as rowid) ROW_ID,  p.msgid MSGID,  p.corrid CORRID,  p.priority PRIORITY,  p.state STATE,  cast(FROM_TZ(p.delay, '-08:00')  at time zone sessiontimezone as timestamp) DELAY,  p.expiration EXPIRATION,  cast(FROM_TZ(p.enq_time, '-08:00')  at time zone sessiontimezone as timestamp) ENQ_TIME,  p.enq_uid ENQ_UID,  p.enq_tid ENQ_TID,  cast(FROM_TZ(p.deq_time, '-08:00')  at time zone sessiontimezone as timestamp) DEQ_TIME,  p.deq_uid DEQ_UID,  p.deq_tid DEQ_TID,  p.retry_count RETRY_COUNT,  p.exception_qschema EXCEPTION_QSCHEMA,  p.exception_queue EXCEPTION_QUEUE,  p.cscn CSCN,  p.dscn DSCN,  p.chain_no CHAIN_NO,  p.local_order_no LOCAL_ORDER_NO,  cast(FROM_TZ(p.time_manager_info, '-08:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO,  p.step_no STEP_NO,  p.user_data USER_DATA,  p.sender_name SENDER_NAME,  p.sender_address SENDER_ADDRESS,  p.sender_protocol SENDER_PROTOCOL,  cast (null as RAW(16)) DEQUEUE_MSGID, 'BUFFERED' DELIVERY_MODE,  b.sequence_num SEQUENCE_NUM,  b.msg_num MSG_NUM,  qo.qid QUEUE_ID,  null USER_PROP,  b.subscriber_id SUBSCRIBER_ID,  cast (null as varchar2(30)) SUBSCRIBER_NAME,  0 QUEUE_EVTID  FROM ""AQ$_BANNER_IDENTITY_TABLE_P"" p,  SYS.qt108166_BUFFER b,  sys.all_int_dequeue_queues qo  WHERE bitand(b.state, 2) = 2 AND p.msgid = b.msgid AND  qo.qid = b.queue_id and p.q_name = qo.name  WITH READ ONLY"
"BANINST1","AQ$SSO_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '-07:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '-07:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""SSO_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$SFKCMPL_RESPONSE_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""SFKCMPL_RESPONSE_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$SFKCMPL_REQUEST_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""SFKCMPL_REQUEST_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RPRSSBP_RTN_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RPRSSBP_RTN_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RPRSSBP_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RPRSSBP_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM18_RTN_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM18_RTN_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM18_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM18_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM17_RTN_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM17_RTN_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM17_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM17_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM16_RTN_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM16_RTN_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM16_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM16_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM15_RTN_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM15_RTN_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM15_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM15_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM14_RTN_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM14_RTN_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM14_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM14_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM13_RTN_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM13_RTN_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$RNPFM13_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""RNPFM13_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$PXKW2TS_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""PXKW2TS_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$GURJOBS_RTN_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '-07:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '-07:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""GURJOBS_RTN_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$GURJOBS_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '-07:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '-07:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""GURJOBS_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$GOKOUTP_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '-07:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '-07:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""GOKOUTP_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$GOKOUTD_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '-07:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '-07:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '-07:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""GOKOUTD_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$GKKPXML_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""GKKPXML_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$GKKOUTP_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""GKKOUTP_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$EVENT_SYNC_TABLE_S","","SELECT queue_name QUEUE, name NAME , address ADDRESS , protocol PROTOCOL, trans_name TRANSFORMATION, decode(bitand(SUBSCRIBER_TYPE, 512), 512, 'TRUE', 'FALSE') QUEUE_TO_QUEUE  FROM ""AQ$_EVENT_SYNC_TABLE_S"" s  WHERE (bitand(s.subscriber_type, 1) = 1)  WITH READ ONLY"
"BANINST1","AQ$EVENT_SYNC_TABLE_R","","SELECT queue_name QUEUE, s.name NAME , address ADDRESS , protocol PROTOCOL, rule_condition RULE, ruleset_name RULE_SET, trans_name TRANSFORMATION  FROM ""AQ$_EVENT_SYNC_TABLE_S"" s , sys.all_rules r WHERE (bitand(s.subscriber_type, 1) = 1) AND s.rule_name = r.rule_name and r.rule_owner = 'BANINST1'  WITH READ ONLY"
"BANINST1","AQ$EVENT_SYNC_TABLE","","SELECT  q_name QUEUE, qt.msgid MSG_ID, corrid CORR_ID,  priority MSG_PRIORITY,  decode(s.subscriber_type,2,'UNDELIVERABLE',
                                             decode(h.dequeue_time, NULL,decode(l.dequeue_time, NULL, decode(state, 0,   'READY',	     
                              		                                          1,   'WAIT',	     
                                                                                  2,   'PROCESSED',	     
                                                                                  3,   'EXPIRED',
                                                                                  8,   'DEFERRED',
                                                                                 10,  'BUFFERED_EXPIRED'),(decode(l.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED'))), (decode(h.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED')))
                          )                         MSG_STATE,  cast(FROM_TZ(qt.delay, '-07:00')
                 at time zone sessiontimezone as date) delay,  cast(FROM_TZ(qt.delay, '-07:00')
                 at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration,  cast(FROM_TZ(qt.enq_time, '-07:00')
                 at time zone sessiontimezone as date) enq_time,  cast(FROM_TZ(qt.enq_time, '-07:00')
                 at time zone sessiontimezone as timestamp)
                 enq_timestamp,   enq_uid ENQ_USER_ID,  qt.enq_tid ENQ_TXN_ID,  decode(h.transaction_id, NULL, 
                 decode(l.transaction_id, NULL, TO_DATE(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '-07:00')
                 at time zone sessiontimezone as date)) DEQ_TIME,  decode(h.transaction_id, NULL, 
            decode(l.transaction_id, NULL, TO_TIMESTAMP(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '-07:00')
                 at time zone sessiontimezone as timestamp))
                 DEQ_TIMESTAMP,  decode(h.dequeue_user, NULL, l.dequeue_user, h.dequeue_user) 
	         DEQ_USER_ID,  decode(h.transaction_id, NULL, l.transaction_id, 
                 h.transaction_id) DEQ_TXN_ID,  h.retry_count retry_count,  decode (state, 0, exception_qschema, 
                                1, exception_qschema, 
                                2, exception_qschema,  
                                NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                1, exception_queue, 
                                2, exception_queue,  
                                NULL) EXCEPTION_QUEUE,  user_data,  h.propagated_msgid PROPAGATED_MSGID,  sender_name  SENDER_NAME, sender_address  SENDER_ADDRESS, sender_protocol  SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_queue, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_queue)),
                   decode (h.transaction_id, NULL, NULL, exception_queue)) 
                                ORIGINAL_QUEUE_NAME,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_qschema, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_qschema)),
                   decode (h.transaction_id, NULL, NULL, exception_qschema)) 
                                ORIGINAL_QUEUE_OWNER,  decode(s.subscriber_type,2,
                                         'Messages to be cleaned up later',
                        decode(h.dequeue_time, NULL, 
                               decode(state, 3, 
                                           decode(h.transaction_id, NULL, 
                                           decode (expiration , NULL , 
                                                   'MAX_RETRY_EXCEEDED',
                                                   'TIME_EXPIRATION'),
                                                   'INVALID_TRANSACTION', NULL,
                                                   'MAX_RETRY_EXCEEDED'), NULL),
                                           decode(h.transaction_id, NULL, 
                                                 'PROPAGATION_FAILURE', NULL)))
                 EXPIRATION_REASON,  decode(h.subscriber#, 0, decode(h.name, '0', NULL,
							        h.name),
					  s.name) CONSUMER_NAME,  s.address ADDRESS,  s.protocol PROTOCOL  FROM ""EVENT_SYNC_TABLE"" qt, ""AQ$_EVENT_SYNC_TABLE_H"" h LEFT OUTER JOIN ""AQ$_EVENT_SYNC_TABLE_L"" l  ON h.msgid = l.msgid AND h.subscriber# = l.subscriber# AND h.name = l.name AND h.address# = l.address#, ""AQ$_EVENT_SYNC_TABLE_S"" s  WHERE  qt.msgid = h.msgid AND  ((h.subscriber# != 0 AND h.subscriber# = s.subscriber_id)  OR (h.subscriber# = 0 AND h.address# = s.subscriber_id)) AND (qt.state != 7 OR   qt.state != 9 )     WITH READ ONLY"
"BANINST1","AQ$EVENT_BULKSYNC_TABLE_S","","SELECT queue_name QUEUE, name NAME , address ADDRESS , protocol PROTOCOL, trans_name TRANSFORMATION, decode(bitand(SUBSCRIBER_TYPE, 512), 512, 'TRUE', 'FALSE') QUEUE_TO_QUEUE  FROM ""AQ$_EVENT_BULKSYNC_TABLE_S"" s  WHERE (bitand(s.subscriber_type, 1) = 1)  WITH READ ONLY"
"BANINST1","AQ$EVENT_BULKSYNC_TABLE_R","","SELECT queue_name QUEUE, s.name NAME , address ADDRESS , protocol PROTOCOL, rule_condition RULE, ruleset_name RULE_SET, trans_name TRANSFORMATION  FROM ""AQ$_EVENT_BULKSYNC_TABLE_S"" s , sys.all_rules r WHERE (bitand(s.subscriber_type, 1) = 1) AND s.rule_name = r.rule_name and r.rule_owner = 'BANINST1'  WITH READ ONLY"
"BANINST1","AQ$EVENT_BULKSYNC_TABLE","","SELECT  q_name QUEUE, qt.msgid MSG_ID, corrid CORR_ID,  priority MSG_PRIORITY,  decode(s.subscriber_type,2,'UNDELIVERABLE',
                                             decode(h.dequeue_time, NULL,decode(l.dequeue_time, NULL, decode(state, 0,   'READY',	     
                              		                                          1,   'WAIT',	     
                                                                                  2,   'PROCESSED',	     
                                                                                  3,   'EXPIRED',
                                                                                  8,   'DEFERRED',
                                                                                 10,  'BUFFERED_EXPIRED'),(decode(l.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED'))), (decode(h.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED')))
                          )                         MSG_STATE,  cast(FROM_TZ(qt.delay, '-07:00')
                 at time zone sessiontimezone as date) delay,  cast(FROM_TZ(qt.delay, '-07:00')
                 at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration,  cast(FROM_TZ(qt.enq_time, '-07:00')
                 at time zone sessiontimezone as date) enq_time,  cast(FROM_TZ(qt.enq_time, '-07:00')
                 at time zone sessiontimezone as timestamp)
                 enq_timestamp,   enq_uid ENQ_USER_ID,  qt.enq_tid ENQ_TXN_ID,  decode(h.transaction_id, NULL, 
                 decode(l.transaction_id, NULL, TO_DATE(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '-07:00')
                 at time zone sessiontimezone as date)) DEQ_TIME,  decode(h.transaction_id, NULL, 
            decode(l.transaction_id, NULL, TO_TIMESTAMP(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '-07:00')
                 at time zone sessiontimezone as timestamp))
                 DEQ_TIMESTAMP,  decode(h.dequeue_user, NULL, l.dequeue_user, h.dequeue_user) 
	         DEQ_USER_ID,  decode(h.transaction_id, NULL, l.transaction_id, 
                 h.transaction_id) DEQ_TXN_ID,  h.retry_count retry_count,  decode (state, 0, exception_qschema, 
                                1, exception_qschema, 
                                2, exception_qschema,  
                                NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                1, exception_queue, 
                                2, exception_queue,  
                                NULL) EXCEPTION_QUEUE,  user_data,  h.propagated_msgid PROPAGATED_MSGID,  sender_name  SENDER_NAME, sender_address  SENDER_ADDRESS, sender_protocol  SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_queue, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_queue)),
                   decode (h.transaction_id, NULL, NULL, exception_queue)) 
                                ORIGINAL_QUEUE_NAME,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_qschema, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_qschema)),
                   decode (h.transaction_id, NULL, NULL, exception_qschema)) 
                                ORIGINAL_QUEUE_OWNER,  decode(s.subscriber_type,2,
                                         'Messages to be cleaned up later',
                        decode(h.dequeue_time, NULL, 
                               decode(state, 3, 
                                           decode(h.transaction_id, NULL, 
                                           decode (expiration , NULL , 
                                                   'MAX_RETRY_EXCEEDED',
                                                   'TIME_EXPIRATION'),
                                                   'INVALID_TRANSACTION', NULL,
                                                   'MAX_RETRY_EXCEEDED'), NULL),
                                           decode(h.transaction_id, NULL, 
                                                 'PROPAGATION_FAILURE', NULL)))
                 EXPIRATION_REASON,  decode(h.subscriber#, 0, decode(h.name, '0', NULL,
							        h.name),
					  s.name) CONSUMER_NAME,  s.address ADDRESS,  s.protocol PROTOCOL  FROM ""EVENT_BULKSYNC_TABLE"" qt, ""AQ$_EVENT_BULKSYNC_TABLE_H"" h LEFT OUTER JOIN ""AQ$_EVENT_BULKSYNC_TABLE_L"" l  ON h.msgid = l.msgid AND h.subscriber# = l.subscriber# AND h.name = l.name AND h.address# = l.address#, ""AQ$_EVENT_BULKSYNC_TABLE_S"" s  WHERE  qt.msgid = h.msgid AND  ((h.subscriber# != 0 AND h.subscriber# = s.subscriber_id)  OR (h.subscriber# = 0 AND h.address# = s.subscriber_id)) AND (qt.state != 7 OR   qt.state != 9 )     WITH READ ONLY"
"BANINST1","AQ$ETRANSCRPT_RESPONSE_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""ETRANSCRPT_RESPONSE_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$ETRANSCRPT_REQUEST_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""ETRANSCRPT_REQUEST_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$DW_PREQ_RESPONSE_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""DW_PREQ_RESPONSE_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$DW_PREQ_REQUEST_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""DW_PREQ_REQUEST_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$DW_DESC_RESPONSE_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""DW_DESC_RESPONSE_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$DW_DESC_REQUEST_QTAB","","SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED',
                                10,  'BUFFERED_EXPIRED') MSG_STATE, cast(FROM_TZ(delay, '00:00')
                  at time zone sessiontimezone as date) DELAY, cast(FROM_TZ(delay, '00:00')
               at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(enq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  ENQ_TIMESTAMP, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(deq_time, '00:00')
                  at time zone sessiontimezone as timestamp) 
                  DEQ_TIMESTAMP, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL,
                       decode (expiration , NULL , 'MAX_RETRY_EXCEEDED',
                            'TIME_EXPIRATION'),
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON , sender_name SENDER_NAME, sender_address SENDER_ADDRESS, sender_protocol SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID  FROM ""DW_DESC_REQUEST_QTAB"" WHERE state != 7 AND   state != 9 WITH READ ONLY"
"BANINST1","AQ$BANNER_IDENTITY_TABLE_S","","SELECT queue_name QUEUE, name NAME , address ADDRESS , protocol PROTOCOL, trans_name TRANSFORMATION, decode(bitand(SUBSCRIBER_TYPE, 512), 512, 'TRUE', 'FALSE') QUEUE_TO_QUEUE  FROM ""AQ$_BANNER_IDENTITY_TABLE_S"" s  WHERE (bitand(s.subscriber_type, 1) = 1)  WITH READ ONLY"
"BANINST1","AQ$BANNER_IDENTITY_TABLE_R","","SELECT queue_name QUEUE, s.name NAME , address ADDRESS , protocol PROTOCOL, rule_condition RULE, ruleset_name RULE_SET, trans_name TRANSFORMATION  FROM ""AQ$_BANNER_IDENTITY_TABLE_S"" s , sys.all_rules r WHERE (bitand(s.subscriber_type, 1) = 1) AND s.rule_name = r.rule_name and r.rule_owner = 'BANINST1'  WITH READ ONLY"
"BANINST1","AQ$BANNER_IDENTITY_TABLE","","SELECT  q_name QUEUE, qt.msgid MSG_ID, corrid CORR_ID,  priority MSG_PRIORITY,  decode(s.subscriber_type,2,'UNDELIVERABLE',
                                             decode(h.dequeue_time, NULL,decode(l.dequeue_time, NULL, decode(state, 0,   'READY',	     
                              		                                          1,   'WAIT',	     
                                                                                  2,   'PROCESSED',	     
                                                                                  3,   'EXPIRED',
                                                                                  8,   'DEFERRED',
                                                                                 10,  'BUFFERED_EXPIRED'),(decode(l.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED'))), (decode(h.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED')))
                          )                         MSG_STATE,  cast(FROM_TZ(qt.delay, '-08:00')
                 at time zone sessiontimezone as date) delay,  cast(FROM_TZ(qt.delay, '-08:00')
                 at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration,  cast(FROM_TZ(qt.enq_time, '-08:00')
                 at time zone sessiontimezone as date) enq_time,  cast(FROM_TZ(qt.enq_time, '-08:00')
                 at time zone sessiontimezone as timestamp)
                 enq_timestamp,   enq_uid ENQ_USER_ID,  qt.enq_tid ENQ_TXN_ID,  decode(h.transaction_id, NULL, 
                 decode(l.transaction_id, NULL, TO_DATE(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '-08:00')
                 at time zone sessiontimezone as date)) DEQ_TIME,  decode(h.transaction_id, NULL, 
            decode(l.transaction_id, NULL, TO_TIMESTAMP(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '-08:00')
                 at time zone sessiontimezone as timestamp))
                 DEQ_TIMESTAMP,  decode(h.dequeue_user, NULL, l.dequeue_user, h.dequeue_user) 
	         DEQ_USER_ID,  decode(h.transaction_id, NULL, l.transaction_id, 
                 h.transaction_id) DEQ_TXN_ID,  h.retry_count retry_count,  decode (state, 0, exception_qschema, 
                                1, exception_qschema, 
                                2, exception_qschema,  
                                NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                1, exception_queue, 
                                2, exception_queue,  
                                NULL) EXCEPTION_QUEUE,  user_data,  h.propagated_msgid PROPAGATED_MSGID,  sender_name  SENDER_NAME, sender_address  SENDER_ADDRESS, sender_protocol  SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_queue, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_queue)),
                   decode (h.transaction_id, NULL, NULL, exception_queue)) 
                                ORIGINAL_QUEUE_NAME,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_qschema, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_qschema)),
                   decode (h.transaction_id, NULL, NULL, exception_qschema)) 
                                ORIGINAL_QUEUE_OWNER,  decode(s.subscriber_type,2,
                                         'Messages to be cleaned up later',
                        decode(h.dequeue_time, NULL, 
                               decode(state, 3, 
                                           decode(h.transaction_id, NULL, 
                                           decode (expiration , NULL , 
                                                   'MAX_RETRY_EXCEEDED',
                                                   'TIME_EXPIRATION'),
                                                   'INVALID_TRANSACTION', NULL,
                                                   'MAX_RETRY_EXCEEDED'), NULL),
                                           decode(h.transaction_id, NULL, 
                                                 'PROPAGATION_FAILURE', NULL)))
                 EXPIRATION_REASON,  decode(h.subscriber#, 0, decode(h.name, '0', NULL,
							        h.name),
					  s.name) CONSUMER_NAME,  s.address ADDRESS,  s.protocol PROTOCOL  FROM ""BANNER_IDENTITY_TABLE"" qt, ""AQ$_BANNER_IDENTITY_TABLE_H"" h LEFT OUTER JOIN ""AQ$_BANNER_IDENTITY_TABLE_L"" l  ON h.msgid = l.msgid AND h.subscriber# = l.subscriber# AND h.name = l.name AND h.address# = l.address#, ""AQ$_BANNER_IDENTITY_TABLE_S"" s  WHERE  qt.msgid = h.msgid AND  ((h.subscriber# != 0 AND h.subscriber# = s.subscriber_id)  OR (h.subscriber# = 0 AND h.address# = s.subscriber_id)) AND (qt.state != 7 OR   qt.state != 9 )     UNION ALL SELECT q.name QUEUE, b.msgid MSG_ID, b.corrid CORR_ID, b.priority MSG_PRIORITY, decode (TO_CHAR(b.state), '4', 'IN MEMORY',
                           '5', 'DEFERRED',
                            '12', 'EXPIRED INMEMORY',
                                        NULL) MSG_STATE,  cast (null as DATE) DELAY,  cast (null as TIMESTAMP) DELAY_TIMESTAMP, b.expiration EXPIRATION, cast(FROM_TZ(b.enq_time, '-08:00')
                   at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(b.enq_time, '-08:00')
                   at time zone sessiontimezone as timestamp)
                   ENQ_TIMESTAMP, b.enq_user_name ENQ_USER_ID, cast (null as VARCHAR2(30)) ENQ_TXN_ID, cast (null as DATE) DEQ_TIME, cast(null as TIMESTAMP) DEQ_TIMESTAMP,  cast (null as varchar2(30))  DEQ_USER_ID, cast(null as VARCHAR2(30)) DEQ_TXN_ID, b.retry_count RETRY_COUNT, b.exceptionq_schema EXCEPTION_QUEUE_OWNER, b.exceptionq_name EXCEPTION_QUEUE, sys.dbms_aq_bqview.get_adt_payload(b.queue_id, b.msg_num, ""SYS"".""AQ$_JMS_TEXT_MESSAGE""(NULL, NULL, NULL, NULL)) USER_DATA, cast(null as RAW(16)) PROPAGATED_MSGID, b.sender_name SENDER_NAME, b.sender_address SENDER_ADDRESS, b.sender_protocol SENDER_PROTOCOL, b.dequeue_msgid ORIGINAL_MSGID, cast (null as VARCHAR2(30)) ORIGINAL_QUEUE_NAME, cast(null as VARCHAR2(30)) ORIGINAL_QUEUE_OWNER, decode(b.state, 12, 'TIME_EXPIRATION', 
                          NULL) EXPIRATION_REASON,  s.name CONSUMER_NAME, s.address ADDRESS, s.protocol PROTOCOL FROM SYS.qt108166_BUFFER b, all_queues q, ""AQ$_BANNER_IDENTITY_TABLE_S"" s WHERE s.subscriber_id = b.subscriber_id AND bitand(s.subscriber_type, 8) != 8 AND bitand(b.state, 4) = 4 AND q.qid = b.queue_id  UNION ALL SELECT p.q_name QUEUE, p.msgid MSG_ID, p.corrid CORR_ID, p.priority MSG_PRIORITY, decode (TO_CHAR(b.state), '2', 'SPILLED',
                           '3', 'DEFERRED SPILLED',
                           '10', 'EXPIRED SPILLED',
                                        NULL) MSG_STATE, cast(FROM_TZ(p.delay, '-08:00')
                   at time zone sessiontimezone as date) DELAY,  cast(FROM_TZ(p.delay,  '-08:00')
                  at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, p.expiration EXPIRATION, cast(FROM_TZ(p.enq_time, '-08:00')
                   at time zone sessiontimezone as date) ENQ_TIME, cast(FROM_TZ(p.enq_time, '-08:00')
                   at time zone sessiontimezone as timestamp)
                   ENQ_TIMESTAMP, p.enq_uid ENQ_USER_ID, p.enq_tid ENQ_TXN_ID, cast(FROM_TZ(p.deq_time, '-08:00')
                   at time zone sessiontimezone as date) DEQ_TIME, cast(FROM_TZ(p.deq_time, '-08:00')
                   at time zone sessiontimezone as timestamp)
                   DEQ_TIMESTAMP, p.deq_uid DEQ_USER_ID, p.deq_tid DEQ_TXN_ID, p.retry_count RETRY_COUNT, p.exception_qschema EXCEPTION_QUEUE_OWNER, p.exception_queue EXCEPTION_QUEUE, p.user_data USER_DATA, cast (null as RAW(16))PROPAGATED_MSGID,p.sender_name SENDER_NAME, p.sender_address SENDER_ADDRESS, p.sender_protocol SENDER_PROTOCOL, cast (null as RAW(16)) ORIGINAL_MSGID, cast (null as VARCHAR2(30)) ORIGINAL_QUEUE_NAME, cast (null as VARCHAR2(30)) ORIGINAL_QUEUE_OWNER, decode(b.state, 10, 'TIME_EXPIRATION', 
                          NULL) EXPIRATION_REASON, s.name CONSUMER_NAME, s.address ADDRESS, s.protocol PROTOCOL FROM ""AQ$_BANNER_IDENTITY_TABLE_P"" p, SYS.qt108166_BUFFER b, ""AQ$_BANNER_IDENTITY_TABLE_S"" s, all_queues q WHERE b.subscriber_id = s.subscriber_id AND bitand(s.subscriber_type, 8) != 8 AND bitand(b.state ,2) = 2 AND p.msgid = b.msgid AND q.qid = b.queue_id and p.q_name = q.name  WITH READ ONLY"
"BANINST1","AP_SALARY_BUDGET","","select
pbvslb1_fiscal_year,
pbvslb1_fiscal_year_start_date,
pbvslb1_fiscal_year_end_date,
pbvslb1_position_id,
pbvslb1_position_title,
pbvslb1_budget_id,
pbvslb1_budget_phase,
pbvslb1_budget_eff_date,
pbvslb1_budget_status,
pbvslb1_budget_status_desc,
pbvslb1_position_type,
pbvslb1_position_class,
substr(decode(pbvslb1_position_class, null, null, f_get_desc
      ('NTRPCLS', pbvslb1_position_class, 30)), 1, 30),
pbvslb1_budget_roll_ind,
pbvslb1_premium_earn_roll_ind,
pbvslb1_position_status,
pbvslb1_position_status_desc,
pbvslb1_position_fte,
pbvslb1_num_incumb_year_begin,
pbvslb1_num_incumb_year_end,
pbvslb1_chart_of_account,
pbvslb1_budgeted_orgn,
pbvslb1_budgeted_tot_amt,
pbvslb1_encumbered_amt,
pbvslb1_expended_amt,
pbvslb1_remaining_amt,
pbvslb1_budget_basis,
pbvslb1_annual_basis,
pbvslb1_budget_appt_pct,
pbvslb1_base_units,
pbvslb1_create_nbrjfte_ind,
pbvslb1_budget_1,
pbvslb1_coas_code_1,
pbvslb1_acci_code_1,
pbvslb1_fund_code_1,
pbvslb1_orgn_code_1,
pbvslb1_acct_code_1,
pbvslb1_prog_code_1,
pbvslb1_actv_code_1,
pbvslb1_locn_code_1,
pbvslb1_acct_code_external_1,
pbvslb1_percent_1,
pbvslb1_budget_2,
pbvslb1_coas_code_2,
pbvslb1_acci_code_2,
pbvslb1_fund_code_2,
pbvslb1_orgn_code_2,
pbvslb1_acct_code_2,
pbvslb1_prog_code_2,
pbvslb1_actv_code_2,
pbvslb1_locn_code_2,
pbvslb1_acct_code_external_2,
pbvslb1_percent_2,
pbvslb1_budget_3,
pbvslb1_coas_code_3,
pbvslb1_acci_code_3,
pbvslb1_fund_code_3,
pbvslb1_orgn_code_3,
pbvslb1_acct_code_3,
pbvslb1_prog_code_3,
pbvslb1_actv_code_3,
pbvslb1_locn_code_3,
pbvslb1_acct_code_external_3,
pbvslb1_percent_3,
pbvslb1_budget_4,
pbvslb1_coas_code_4,
pbvslb1_acci_code_4,
pbvslb1_fund_code_4,
pbvslb1_orgn_code_4,
pbvslb1_acct_code_4,
pbvslb1_prog_code_4,
pbvslb1_actv_code_4,
pbvslb1_locn_code_4,
pbvslb1_acct_code_external_4,
pbvslb1_percent_4,
pbvslb1_budget_5,
pbvslb1_coas_code_5,
pbvslb1_acci_code_5,
pbvslb1_fund_code_5,
pbvslb1_orgn_code_5,
pbvslb1_acct_code_5,
pbvslb1_prog_code_5,
pbvslb1_actv_code_5,
pbvslb1_locn_code_5,
pbvslb1_acct_code_external_5,
pbvslb1_percent_5,
pbvslb1_budget_6,
pbvslb1_coas_code_6,
pbvslb1_acci_code_6,
pbvslb1_fund_code_6,
pbvslb1_orgn_code_6,
pbvslb1_acct_code_6,
pbvslb1_prog_code_6,
pbvslb1_actv_code_6,
pbvslb1_locn_code_6,
pbvslb1_acct_code_external_6,
pbvslb1_percent_6,
pbvslb1_budget_7,
pbvslb1_coas_code_7,
pbvslb1_acci_code_7,
pbvslb1_fund_code_7,
pbvslb1_orgn_code_7,
pbvslb1_acct_code_7,
pbvslb1_prog_code_7,
pbvslb1_actv_code_7,
pbvslb1_locn_code_7,
pbvslb1_acct_code_external_7,
pbvslb1_percent_7,
pbvslb1_budget_8,
pbvslb1_coas_code_8,
pbvslb1_acci_code_8,
pbvslb1_fund_code_8,
pbvslb1_orgn_code_8,
pbvslb1_acct_code_8,
pbvslb1_prog_code_8,
pbvslb1_actv_code_8,
pbvslb1_locn_code_8,
pbvslb1_acct_code_external_8,
pbvslb1_percent_8,
pbvslb1_budget_9,
pbvslb1_coas_code_9,
pbvslb1_acci_code_9,
pbvslb1_fund_code_9,
pbvslb1_orgn_code_9,
pbvslb1_acct_code_9,
pbvslb1_prog_code_9,
pbvslb1_actv_code_9,
pbvslb1_locn_code_9,
pbvslb1_acct_code_external_9,
pbvslb1_percent_9,
pbvslb1_budget_10,
pbvslb1_coas_code_10,
pbvslb1_acci_code_10,
pbvslb1_fund_code_10,
pbvslb1_orgn_code_10,
pbvslb1_acct_code_10,
pbvslb1_prog_code_10,
pbvslb1_actv_code_10,
pbvslb1_locn_code_10,
pbvslb1_acct_code_external_10,
pbvslb1_percent_10,
pbvslb1_add_distr_flag
from pbvslb1
 "
"BANINST1","AP_JOB_SUMMARY","","select
pevjob1_pidm,
pevjob1_job_assign_posn_number,
pevjob1_job_assign_suffix,
pevjob1_id_number,
pevjob1_ssn,
pevjob1_surname_prefix,
pevjob1_last_name,
pevjob1_first_name,
pevjob1_middle_name,
pevjob1_middle_initial,
pevjob1_name_prefix,
pevjob1_name_suffix,
pevjob1_profile_date,
pevjob1_birth_date,
pevjob1_age,
pevjob1_gender,
pevjob1_ethnicity_code,
substr(decode(pevjob1_ethnicity_code, null, null, f_get_desc
      ('STVETHN', pevjob1_ethnicity_code, 30)), 1, 30),
pevjob1_ethnicity_category,
substr(decode(pevjob1_ethnicity_category, null, null, f_get_desc
      ('PTVEEOC', pevjob1_ethnicity_category, 30)), 1, 30),
pevjob1_marital_status,
substr(decode(pevjob1_marital_status, null, null, f_get_desc
      ('STVMRTL', pevjob1_marital_status, 30)), 1, 30),
pevjob1_addr_type_1,
substr(decode(pevjob1_addr_type_1, null, null, f_get_desc
      ('STVATYP', pevjob1_addr_type_1, 30)), 1, 30),
pevjob1_house_number_1,
pevjob1_street_line1_1,
pevjob1_street_line2_1,
pevjob1_street_line3_1,
pevjob1_street_line4_1,
pevjob1_city_1,
pevjob1_state_1,
pevjob1_zip_1,
pevjob1_nation_1,
substr(decode(pevjob1_nation_1, null, null, f_get_desc
      ('STVNATN', pevjob1_nation_1, 30)), 1, 30),
pevjob1_ctry_code_phone_1,
pevjob1_phone_number_1,
pevjob1_phone_area_1,
pevjob1_phone_ext_1,
pevjob1_addr_type_2,
substr(decode(pevjob1_addr_type_2, null, null, f_get_desc
      ('STVATYP', pevjob1_addr_type_2, 30)), 1, 30),
pevjob1_house_number_2,
pevjob1_street_line1_2,
pevjob1_street_line2_2,
pevjob1_street_line3_2,
pevjob1_street_line4_2,
pevjob1_city_2,
pevjob1_state_2,
pevjob1_zip_2,
pevjob1_nation_2,
substr(decode(pevjob1_nation_2, null, null, f_get_desc
      ('STVNATN', pevjob1_nation_2, 30)), 1, 30),
pevjob1_ctry_code_phone_2,
pevjob1_phone_number_2,
pevjob1_phone_area_2,
pevjob1_phone_ext_2,
pevjob1_job_contract_type,
pevjob1_job_begin_date,
pevjob1_job_end_date,
pevjob1_job_curr_title,
pevjob1_job_curr_status,
pevjob1_job_curr_status_desc,
pevjob1_job_personnel_date,
pevjob1_superviser_pidm,
pevjob1_superviser_id,
pevjob1_superviser_surname,
pevjob1_superviser_last_name,
pevjob1_superviser_first_name,
pevjob1_superviser_middle_name,
pevjob1_superviser_suffix,
pevjob1_superviser_posn_number,
pevjob1_effective_date,
pevjob1_job_change_reason,
substr(decode(pevjob1_job_change_reason, null, null, f_get_desc
      ('PTRJCRE', pevjob1_job_change_reason, 30)), 1, 30),
pevjob1_assign_table,
pevjob1_assign_grade,
pevjob1_assign_step,
pevjob1_assign_sgrp_code,
pevjob1_ft_equivalency_pct,
pevjob1_appointment_pct,
pevjob1_orgn_code_ts,
substr(decode(pevjob1_orgn_code_ts, null, null, f_get_special_desc
      (pevjob1_orgn_code_ts, pevjob1_profile_date)), 1, 35),
pevjob1_job_lcat_code,
substr(decode(pevjob1_job_lcat_code, null, null,
              f_get_desc('PTVLCAT', pevjob1_job_lcat_code, 30)), 1, 30),
pevjob1_job_low_salary,
pevjob1_job_mid_salary,
pevjob1_job_high_salary,
pevjob1_below_range_ind,
pevjob1_in_range_ind,
pevjob1_above_range_ind,
pevjob1_next_auto_step_incr,
pevjob1_annual_salary,
pevjob1_assign_pay,
pevjob1_per_pay_salary,
pevjob1_hourly_rate,
pevjob1_assign_pay_id,
substr(decode(pevjob1_assign_pay_id, null, null, f_get_desc
      ('PTRPICT', pevjob1_assign_pay_id, 30)), 1, 30),
pevjob1_assign_factor,
pevjob1_job_deferred_pay,
substr(decode(pevjob1_job_deferred_pay, null, null, f_get_desc
      ('PTRDFPR', pevjob1_job_deferred_pay, 30)), 1, 30),
pevjob1_number_of_pay,
pevjob1_deferred_pay_amt,
pevjob1_defer_pay_amt_adj,
pevjob1_curr_encumb_amt,
pevjob1_posn_class,
substr(decode(pevjob1_posn_class, null, null, f_get_desc
      ('NTRPCLS', pevjob1_posn_class, 30)), 1, 30),
pevjob1_posn_status,
pevjob1_posn_status_desc,
pevjob1_posn_title,
pevjob1_posn_type,
pevjob1_posn_group_code,
substr(decode(pevjob1_posn_group_code, null, null, f_get_desc
      ('PTRPGRP', pevjob1_posn_group_code, 30)), 1, 30),
pevjob1_posn_empl_class_code,
substr(decode(pevjob1_posn_empl_class_code, null, null, f_get_desc
      ('PTRECLS_LONG', pevjob1_posn_empl_class_code, 30)), 1, 30),
pevjob1_fte_effective_date,
pevjob1_job_fte_appt_pct,
pevjob1_annualized_fte,
pevjob1_fte_base_salary,
pevjob1_probation_units,
pevjob1_probation_begin_date,
pevjob1_probation_end_date,
pevjob1_job_future_salary_enc
from pevjob1"
"BANINST1","AP_EMPLOY_RECRUITMENT_ACTIVITY","","select
pavreq1_pidm,
pavreq1_appl_position,
pavreq1_posn_title,
pavreq1_id,
pavreq1_ssn,
pavreq1_surname_prefix,
pavreq1_last_name,
pavreq1_first_name,
pavreq1_middle_name,
pavreq1_middle_initial,
pavreq1_name_prefix,
pavreq1_name_suffix,
pavreq1_gender,
pavreq1_ethnicity_code,
substr(decode(pavreq1_ethnicity_code, null, null, f_get_desc
      ('STVETHN', pavreq1_ethnicity_code, 30)), 1, 30),
pavreq1_ethnicity_category,
substr(decode(pavreq1_ethnicity_category, null, null, f_get_desc
      ('PTVEEOC', pavreq1_ethnicity_category, 30)), 1, 30),
pavreq1_marital_status,
substr(decode(pavreq1_marital_status, null, null, f_get_desc
      ('STVMRTL', pavreq1_marital_status, 30)), 1, 30),
pavreq1_addr_type_1,
substr(decode(pavreq1_addr_type_1, null, null, f_get_desc
      ('STVATYP', pavreq1_addr_type_1, 30)), 1, 30),
pavreq1_house_number_1,
pavreq1_street_line1_1,
pavreq1_street_line2_1,
pavreq1_street_line3_1,
pavreq1_street_line4_1,
pavreq1_city_1,
pavreq1_state_1,
pavreq1_zip_1,
pavreq1_nation_1,
substr(decode(pavreq1_nation_1, null, null, f_get_desc
      ('STVNATN', pavreq1_nation_1, 30)), 1, 30),
pavreq1_ctry_code_phone_1,
pavreq1_phone_number_1,
pavreq1_phone_area_1,
pavreq1_phone_ext_1,
pavreq1_addr_type_2,
substr(decode(pavreq1_addr_type_2, null, null, f_get_desc
      ('STVATYP', pavreq1_addr_type_2, 30)), 1, 30),
pavreq1_house_number_2,
pavreq1_street_line1_2,
pavreq1_street_line2_2,
pavreq1_street_line3_2,
pavreq1_street_line4_2,
pavreq1_city_2,
pavreq1_state_2,
pavreq1_zip_2,
pavreq1_nation_2,
substr(decode(pavreq1_nation_2, null, null, f_get_desc
      ('STVNATN', pavreq1_nation_2, 30)), 1, 30),
pavreq1_ctry_code_phone_2,
pavreq1_phone_number_2,
pavreq1_phone_area_2,
pavreq1_phone_ext_2,
pavreq1_vetc_file_number,
pavreq1_vera_ind,
pavreq1_armed_serv_med_vet_ind,
pavreq1_medi_code_1,
substr(decode(pavreq1_medi_code_1, null, null, f_get_desc
      ('STVMEDI', pavreq1_medi_code_1, 30)), 1, 30),
pavreq1_disa_code_1,
substr(decode(pavreq1_disa_code_1, null, null, f_get_desc
      ('STVDISA', pavreq1_disa_code_1, 30)), 1, 30),
pavreq1_medi_code_2,
substr(decode(pavreq1_medi_code_2, null, null, f_get_desc
      ('STVMEDI', pavreq1_medi_code_2, 30)), 1, 30),
pavreq1_disa_code_2,
substr(decode(pavreq1_disa_code_2, null, null, f_get_desc
      ('STVDISA', pavreq1_disa_code_2, 30)), 1, 30),
pavreq1_add_disability_flag,
pavreq1_degc_code_1,
substr(decode(pavreq1_degc_code_1, null, null, f_get_desc
      ('STVDEGC', pavreq1_degc_code_1, 30)), 1, 30),
pavreq1_degc_date_1,
pavreq1_degc_year_1,
pavreq1_degc_seq_1,
pavreq1_sbgi_code_1,
substr(decode(pavreq1_sbgi_code_1, null, null, f_get_desc
      ('STVSBGI', pavreq1_sbgi_code_1, 30)), 1, 30),
pavreq1_degr_majr1_1,
pavreq1_degr_majr2_1,
pavreq1_degc_code_2,
substr(decode(pavreq1_degc_code_2, null, null, f_get_desc
      ('STVDEGC', pavreq1_degc_code_2, 30)), 1, 30),
pavreq1_degc_date_2,
pavreq1_degc_year_2,
pavreq1_degc_seq_2,
pavreq1_sbgi_code_2,
substr(decode(pavreq1_sbgi_code_2, null, null, f_get_desc
      ('STVSBGI', pavreq1_sbgi_code_2, 30)), 1, 30),
pavreq1_degr_majr1_2,
pavreq1_degr_majr2_2,
pavreq1_add_degree_flag,
pavreq1_skil_code_1,
substr(decode(pavreq1_skil_code_1, null, null, f_get_desc
      ('PTRSKIL', pavreq1_skil_code_1, 30)), 1, 30),
pavreq1_sklv_code_1,
substr(decode(pavreq1_sklv_code_1, null, null, f_get_desc
      ('PTRSKLV', pavreq1_sklv_code_1, 30)), 1, 30),
pavreq1_skil_code_2,
substr(decode(pavreq1_skil_code_2, null, null, f_get_desc
      ('PTRSKIL', pavreq1_skil_code_2, 30)), 1, 30),
pavreq1_sklv_code_2,
substr(decode(pavreq1_sklv_code_2, null, null, f_get_desc
      ('PTRSKLV', pavreq1_sklv_code_2, 30)), 1, 30),
pavreq1_skil_code_3,
substr(decode(pavreq1_skil_code_3, null, null, f_get_desc
      ('PTRSKIL', pavreq1_skil_code_3, 30)), 1, 30),
pavreq1_sklv_code_3,
substr(decode(pavreq1_sklv_code_3, null, null, f_get_desc
      ('PTRSKLV', pavreq1_sklv_code_3, 30)), 1, 30),
pavreq1_skil_code_4,
substr(decode(pavreq1_skil_code_4, null, null, f_get_desc
      ('PTRSKIL', pavreq1_skil_code_4, 30)), 1, 30),
pavreq1_sklv_code_4,
substr(decode(pavreq1_sklv_code_4, null, null, f_get_desc
      ('PTRSKLV', pavreq1_sklv_code_4, 30)), 1, 30),
pavreq1_skil_code_5,
substr(decode(pavreq1_skil_code_5, null, null, f_get_desc
      ('PTRSKIL', pavreq1_skil_code_5, 30)), 1, 30),
pavreq1_sklv_code_5,
substr(decode(pavreq1_sklv_code_5, null, null, f_get_desc
      ('PTRSKLV', pavreq1_sklv_code_5, 30)), 1, 30),
pavreq1_add_skill_flag,
pavreq1_refe_name_1,
pavreq1_refe_ctry_code_phone_1,
pavreq1_refe_phone_area_1,
pavreq1_refe_phone_number_1,
pavreq1_refe_phone_ext_1,
pavreq1_refe_name_2,
pavreq1_refe_ctry_code_phone_2,
pavreq1_refe_phone_area_2,
pavreq1_refe_phone_number_2,
pavreq1_refe_phone_ext_2,
pavreq1_refe_name_3,
pavreq1_refe_ctry_code_phone_3,
pavreq1_refe_phone_area_3,
pavreq1_refe_phone_number_3,
pavreq1_refe_phone_ext_3,
pavreq1_add_reference_flag,
pavreq1_exp_posn_title_1,
pavreq1_exp_emty_code_1,
substr(decode(pavreq1_exp_emty_code_1, null, null, f_get_desc
      ('PTVEMTY', pavreq1_exp_emty_code_1, 30)), 1, 30),
pavreq1_exp_empr_name_1,
pavreq1_exp_start_date_1,
pavreq1_exp_end_date_1,
pavreq1_exp_length_1,
pavreq1_exp_emps_superv_1,
pavreq1_exp_supr_name_1,
pavreq1_exp_supr_ctrycode_ph_1,
pavreq1_exp_supr_ph_area_1,
pavreq1_exp_supr_ph_number_1,
pavreq1_exp_supr_ph_ext_1,
pavreq1_exp_cont_ind_1,
pavreq1_exp_curr_salary_1,
pavreq1_exp_curr_hourly_1,
pavreq1_exp_reas_left_1,
pavreq1_exp_posn_title_2,
pavreq1_exp_emty_code_2,
substr(decode(pavreq1_exp_emty_code_2, null, null, f_get_desc
      ('PTVEMTY', pavreq1_exp_emty_code_2, 30)), 1, 30),
pavreq1_exp_empr_name_2,
pavreq1_exp_start_date_2,
pavreq1_exp_end_date_2,
pavreq1_exp_length_2,
pavreq1_exp_emps_superv_2,
pavreq1_exp_supr_name_2,
pavreq1_exp_supr_ctrycode_ph_2,
pavreq1_exp_supr_ph_area_2,
pavreq1_exp_supr_ph_number_2,
pavreq1_exp_supr_ph_ext_2,
pavreq1_exp_cont_ind_2,
pavreq1_exp_curr_salary_2,
pavreq1_exp_curr_hourly_2,
pavreq1_exp_reas_left_2,
pavreq1_exp_posn_title_3,
pavreq1_exp_emty_code_3,
substr(decode(pavreq1_exp_emty_code_3, null, null, f_get_desc
      ('PTVEMTY', pavreq1_exp_emty_code_3, 30)), 1, 30),
pavreq1_exp_empr_name_3,
pavreq1_exp_start_date_3,
pavreq1_exp_end_date_3,
pavreq1_exp_length_3,
pavreq1_exp_emps_superv_3,
pavreq1_exp_supr_name_3,
pavreq1_exp_supr_ctrycode_ph_3,
pavreq1_exp_supr_ph_area_3,
pavreq1_exp_supr_ph_number_3,
pavreq1_exp_supr_ph_ext_3,
pavreq1_exp_cont_ind_3,
pavreq1_exp_curr_salary_3,
pavreq1_exp_curr_hourly_3,
pavreq1_exp_reas_left_3,
pavreq1_exp_posn_title_4,
pavreq1_exp_emty_code_4,
substr(decode(pavreq1_exp_emty_code_4, null, null, f_get_desc
      ('PTVEMTY', pavreq1_exp_emty_code_4, 30)), 1, 30),
pavreq1_exp_empr_name_4,
pavreq1_exp_start_date_4,
pavreq1_exp_end_date_4,
pavreq1_exp_length_4,
pavreq1_exp_emps_superv_4,
pavreq1_exp_supr_name_4,
pavreq1_exp_supr_ctrycode_ph_4,
pavreq1_exp_supr_ph_area_4,
pavreq1_exp_supr_ph_number_4,
pavreq1_exp_supr_ph_ext_4,
pavreq1_exp_cont_ind_4,
pavreq1_exp_curr_salary_4,
pavreq1_exp_curr_hourly_4,
pavreq1_exp_reas_left_4,
pavreq1_add_past_empl_flag,
pavreq1_appld_date,
pavreq1_desired_salary,
pavreq1_desired_hourly,
pavreq1_full_part_ind,
pavreq1_asrc_code,
substr(decode(pavreq1_asrc_code, null, null, f_get_desc
      ('PTVASRC', pavreq1_asrc_code, 30)), 1, 30),
pavreq1_appl_dispos_ind,
pavreq1_appl_dispos_ind_desc,
pavreq1_apst_seq_no_1,
pavreq1_apst_apps_code_1,
substr(decode(pavreq1_apst_apps_code_1, null, null, f_get_desc
      ('PTRAPPS', pavreq1_apst_apps_code_1, 30)), 1, 30),
pavreq1_apst_apps_date_1,
pavreq1_apst_comment_1,
pavreq1_apst_seq_no_2,
pavreq1_apst_apps_code_2,
substr(decode(pavreq1_apst_apps_code_2, null, null, f_get_desc
      ('PTRAPPS', pavreq1_apst_apps_code_2, 30)), 1, 30),
pavreq1_apst_apps_date_2,
pavreq1_apst_comment_2,
pavreq1_apst_seq_no_3,
pavreq1_apst_apps_code_3,
substr(decode(pavreq1_apst_apps_code_3, null, null, f_get_desc
      ('PTRAPPS', pavreq1_apst_apps_code_3, 30)), 1, 30),
pavreq1_apst_apps_date_3,
pavreq1_apst_comment_3,
pavreq1_apst_seq_no_4,
pavreq1_apst_apps_code_4,
substr(decode(pavreq1_apst_apps_code_4, null, null, f_get_desc
      ('PTRAPPS', pavreq1_apst_apps_code_4, 30)), 1, 30),
pavreq1_apst_apps_date_4,
pavreq1_apst_comment_4,
pavreq1_apst_seq_no_5,
pavreq1_apst_apps_code_5,
substr(decode(pavreq1_apst_apps_code_5, null, null, f_get_desc
      ('PTRAPPS', pavreq1_apst_apps_code_5, 30)), 1, 30),
pavreq1_apst_apps_date_5,
pavreq1_apst_comment_5,
pavreq1_add_status_flag,
pavreq1_position_start_date,
pavreq1_posn_report,
pavreq1_pay_level,
pavreq1_salary_table,
pavreq1_appt_pct,
pavreq1_posn_status,
pavreq1_posn_status_desc,
pavreq1_ecls_code,
substr(decode(pavreq1_ecls_code, null, null, f_get_desc
      ('PTRECLS_SHORT', pavreq1_ecls_code, 30)), 1, 30),
substr(decode(pavreq1_ecls_code, null, null, f_get_desc
      ('PTRECLS_LONG', pavreq1_ecls_code, 30)), 1, 30),
pavreq1_eeog_code,
substr(decode(pavreq1_eeog_code, null, null, f_get_desc
      ('PTVEEOG', pavreq1_eeog_code, 30)), 1, 30),
pavreq1_eskl_code,
substr(decode(pavreq1_eskl_code, null, null, f_get_desc
      ('PTVESKL', pavreq1_eskl_code, 30)), 1, 30),
pavreq1_vacy_date,
pavreq1_post_date,
pavreq1_open_date,
pavreq1_close_date,
pavreq1_hire_date,
pavreq1_appr_date,
pavreq1_reloc_ind,
pavreq1_intv_last_name_1,
pavreq1_intv_date_1,
pavreq1_intv_last_name_2,
pavreq1_intv_date_2,
pavreq1_intv_last_name_3,
pavreq1_intv_date_3,
pavreq1_intv_last_name_4,
pavreq1_intv_date_4,
pavreq1_add_interview_flag,
pavreq1_cert_code_1,
substr(decode(pavreq1_cert_code_1, null, null, f_get_desc
      ('PTRCERT', pavreq1_cert_code_1, 30)), 1, 30),
pavreq1_cert_date_1,
pavreq1_cert_next_date_1,
pavreq1_cert_expire_date_1,
pavreq1_cert_code_2,
substr(decode(pavreq1_cert_code_2, null, null, f_get_desc
      ('PTRCERT', pavreq1_cert_code_2, 30)), 1, 30),
pavreq1_cert_date_2,
pavreq1_cert_next_date_2,
pavreq1_cert_expire_date_2,
pavreq1_cert_code_3,
substr(decode(pavreq1_cert_code_3, null, null, f_get_desc
      ('PTRCERT', pavreq1_cert_code_3, 30)), 1, 30),
pavreq1_cert_date_3,
pavreq1_cert_next_date_3,
pavreq1_cert_expire_date_3,
pavreq1_add_cert_flag
from pavreq1"
"BANINST1","AP_EMPLOYMENT_VERIFICATION","","select
pevver1_pidm,
pevver1_year,
pevver1_prv_year,
pevver1_id_number,
pevver1_ssn,
pevver1_surname_prefix,
pevver1_last_name,
pevver1_first_name,
pevver1_middle_name,
pevver1_middle_initial,
pevver1_name_prefix,
pevver1_name_suffix,
pevver1_birth_date,
pevver1_age,
pevver1_gender,
pevver1_ethnicity_code,
substr(decode(pevver1_ethnicity_code, null, null, f_get_desc
      ('STVETHN', pevver1_ethnicity_code, 30)), 1, 30),
pevver1_ethnicity_category,
substr(decode(pevver1_ethnicity_category, null, null, f_get_desc
      ('PTVEEOC', pevver1_ethnicity_category, 30)), 1, 30),
pevver1_marital_status,
substr(decode(pevver1_marital_status, null, null, f_get_desc
      ('STVMRTL', pevver1_marital_status, 30)), 1, 30),
pevver1_addr_type_1,
substr(decode(pevver1_addr_type_1, null, null, f_get_desc
      ('STVATYP', pevver1_addr_type_1, 30)), 1, 30),
pevver1_house_number_1,
pevver1_street_line1_1,
pevver1_street_line2_1,
pevver1_street_line3_1,
pevver1_street_line4_1,
pevver1_city_1,
pevver1_state_1,
pevver1_zip_1,
pevver1_nation_1,
substr(decode(pevver1_nation_1, null, null, f_get_desc
      ('STVNATN', pevver1_nation_1, 30)), 1, 30),
pevver1_ctry_code_phone_1,
pevver1_phone_number_1,
pevver1_phone_area_1,
pevver1_phone_ext_1,
pevver1_addr_type_2,
substr(decode(pevver1_addr_type_2, null, null, f_get_desc
      ('STVATYP', pevver1_addr_type_2, 30)), 1, 30),
pevver1_house_number_2,
pevver1_street_line1_2,
pevver1_street_line2_2,
pevver1_street_line3_2,
pevver1_street_line4_2,
pevver1_city_2,
pevver1_state_2,
pevver1_zip_2,
pevver1_nation_2,
substr(decode(pevver1_nation_2, null, null, f_get_desc
      ('STVNATN', pevver1_nation_2, 30)), 1, 30),
pevver1_ctry_code_phone_2,
pevver1_phone_number_2,
pevver1_phone_area_2,
pevver1_phone_ext_2,
pevver1_empl_class_code,
substr(decode(pevver1_empl_class_code, null, null, f_get_desc
      ('PTRECLS_SHORT', pevver1_empl_class_code, 30)), 1, 30),
substr(decode(pevver1_empl_class_code, null, null, f_get_desc
      ('PTRECLS_LONG', pevver1_empl_class_code, 30)), 1, 30),
pevver1_empl_home_orgn_code,
substr(decode(pevver1_empl_home_orgn_code, null, null,f_get_special_desc
      (pevver1_empl_home_orgn_code, sysdate)), 1, 35),
pevver1_empl_status,
pevver1_empl_status_desc,
pevver1_posn,
pevver1_suff,
pevver1_job_title,
pevver1_pcls_code,
substr(decode(pevver1_pcls_code, null, null, f_get_desc
      ('NTRPCLS', pevver1_pcls_code, 30)), 1, 30),
pevver1_assignment_table,
pevver1_assignment_grade,
pevver1_assignment_step,
pevver1_assignment_sgrp_code,
pevver1_original_hire_date,
pevver1_current_hire_date,
pevver1_adjusted_serv_date,
pevver1_seniority_date,
pevver1_year_tot_h,
pevver1_year_tot_e,
pevver1_year_earn_code_1,
substr(decode(pevver1_year_earn_code_1, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_year_earn_code_1, 30)), 1, 30),
pevver1_year_tot_h_code_1,
pevver1_year_tot_e_code_1,
pevver1_year_earn_code_2,
substr(decode(pevver1_year_earn_code_2, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_year_earn_code_2, 30)), 1, 30),
pevver1_year_tot_h_code_2,
pevver1_year_tot_e_code_2,
pevver1_year_earn_code_3,
substr(decode(pevver1_year_earn_code_3, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_year_earn_code_3, 30)), 1, 30),
pevver1_year_tot_h_code_3,
pevver1_year_tot_e_code_3,
pevver1_year_earn_code_4,
substr(decode(pevver1_year_earn_code_4, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_year_earn_code_4, 30)), 1, 30),
pevver1_year_tot_h_code_4,
pevver1_year_tot_e_code_4,
pevver1_year_earn_code_5,
substr(decode(pevver1_year_earn_code_5, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_year_earn_code_5, 30)), 1, 30),
pevver1_year_tot_h_code_5,
pevver1_year_tot_e_code_5,
pevver1_year_earn_code_6,
substr(decode(pevver1_year_earn_code_6, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_year_earn_code_6, 30)), 1, 30),
pevver1_year_tot_h_code_6,
pevver1_year_tot_e_code_6,
pevver1_year_earn_code_7,
substr(decode(pevver1_year_earn_code_7, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_year_earn_code_7, 30)), 1, 30),
pevver1_year_tot_h_code_7,
pevver1_year_tot_e_code_7,
pevver1_year_earn_code_8,
substr(decode(pevver1_year_earn_code_8, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_year_earn_code_8, 30)), 1, 30),
pevver1_year_tot_h_code_8,
pevver1_year_tot_e_code_8,
pevver1_year_add_flag,
pevver1_year_tot_h_other,
pevver1_year_tot_e_other,
pevver1_prv_year_tot_h,
pevver1_prv_year_tot_e,
pevver1_prv_year_earn_code_1,
substr(decode(pevver1_prv_year_earn_code_1, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_prv_year_earn_code_1, 30)), 1, 30),
pevver1_prv_year_tot_h_code_1,
pevver1_prv_year_tot_e_code_1,
pevver1_prv_year_earn_code_2,
substr(decode(pevver1_prv_year_earn_code_2, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_prv_year_earn_code_2, 30)), 1, 30),
pevver1_prv_year_tot_h_code_2,
pevver1_prv_year_tot_e_code_2,
pevver1_prv_year_earn_code_3,
substr(decode(pevver1_prv_year_earn_code_3, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_prv_year_earn_code_3, 30)), 1, 30),
pevver1_prv_year_tot_h_code_3,
pevver1_prv_year_tot_e_code_3,
pevver1_prv_year_earn_code_4,
substr(decode(pevver1_prv_year_earn_code_4, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_prv_year_earn_code_4, 30)), 1, 30),
pevver1_prv_year_tot_h_code_4,
pevver1_prv_year_tot_e_code_4,
pevver1_prv_year_earn_code_5,
substr(decode(pevver1_prv_year_earn_code_5, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_prv_year_earn_code_5, 30)), 1, 30),
pevver1_prv_year_tot_h_code_5,
pevver1_prv_year_tot_e_code_5,
pevver1_prv_year_earn_code_6,
substr(decode(pevver1_prv_year_earn_code_6, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_prv_year_earn_code_6, 30)), 1, 30),
pevver1_prv_year_tot_h_code_6,
pevver1_prv_year_tot_e_code_6,
pevver1_prv_year_earn_code_7,
substr(decode(pevver1_prv_year_earn_code_7, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_prv_year_earn_code_7, 30)), 1, 30),
pevver1_prv_year_tot_h_code_7,
pevver1_prv_year_tot_e_code_7,
pevver1_prv_year_earn_code_8,
substr(decode(pevver1_prv_year_earn_code_8, null, null, f_get_desc
      ('PTREARN_LONG', pevver1_prv_year_earn_code_8, 30)), 1, 30),
pevver1_prv_year_tot_h_code_8,
pevver1_prv_year_tot_e_code_8,
pevver1_prv_year_add_flag,
pevver1_prv_year_tot_h_other,
pevver1_prv_year_tot_e_other
from  pevver1"
"BANINST1","AP_EMPLOYEE_SENIORITY","","select
pevjps1_pidm,
pevjps1_id_number,
pevjps1_surname_prefix,
pevjps1_last_name,
pevjps1_first_name,
pevjps1_middle_name,
pevjps1_jobp_code,
substr(decode(pevjps1_jobp_code, null, null, f_get_desc
      ('NTVJOBP', pevjps1_jobp_code, 30)), 1, 30),
pevjps1_posn_class1,
pevjps1_posn_class2,
pevjps1_posn_class3,
pevjps1_posn_class4,
pevjps1_posn_class5,
substr(decode(pevjps1_posn_class1, null, null, f_get_desc
      ('NTRPCLS', pevjps1_posn_class1, 30)), 1, 30),
substr(decode(pevjps1_posn_class2, null, null, f_get_desc
      ('NTRPCLS', pevjps1_posn_class2, 30)), 1, 30),
substr(decode(pevjps1_posn_class3, null, null, f_get_desc
      ('NTRPCLS', pevjps1_posn_class3, 30)), 1, 30),
substr(decode(pevjps1_posn_class4, null, null, f_get_desc
      ('NTRPCLS', pevjps1_posn_class4, 30)), 1, 30),
substr(decode(pevjps1_posn_class5, null, null, f_get_desc
      ('NTRPCLS', pevjps1_posn_class5, 30)), 1, 30),
pevjps1_sequence1,
pevjps1_sequence2,
pevjps1_sequence3,
pevjps1_sequence4,
pevjps1_sequence5,
pevjps1_date_in_class1,
pevjps1_date_in_class2,
pevjps1_date_in_class3,
pevjps1_date_in_class4,
pevjps1_date_in_class5,
pevjps1_earned_hours1,
pevjps1_earned_hours2,
pevjps1_earned_hours3,
pevjps1_earned_hours4,
pevjps1_earned_hours5,
pevjps1_seniority_hours1,
pevjps1_seniority_hours2,
pevjps1_seniority_hours3,
pevjps1_seniority_hours4,
pevjps1_seniority_hours5,
pevjps1_comments1,
pevjps1_comments2,
pevjps1_comments3,
pevjps1_comments4,
pevjps1_comments5
from pevjps1"
"BANINST1","AP_EMPLOYEE_PROFILE","","select
pevprf1_pidm,
pevprf1_id_number,
pevprf1_ssn,
pevprf1_surname_prefix,
pevprf1_last_name,
pevprf1_first_name,
pevprf1_middle_name,
pevprf1_middle_initial,
pevprf1_name_prefix,
pevprf1_name_suffix,
pevprf1_profile_date,
pevprf1_birth_date,
pevprf1_age,
pevprf1_gender,
pevprf1_ethnicity_code,
substr(decode(pevprf1_ethnicity_code, null, null, f_get_desc
      ('STVETHN', pevprf1_ethnicity_code, 30)), 1, 30),
pevprf1_ethnicity_category,
substr(decode(pevprf1_ethnicity_category, null, null, f_get_desc
      ('PTVEEOC', pevprf1_ethnicity_category, 30)), 1, 30),
pevprf1_marital_status,
substr(decode(pevprf1_marital_status, null, null, f_get_desc
      ('STVMRTL', pevprf1_marital_status, 30)), 1, 30),
pevprf1_addr_type_1,
substr(decode(pevprf1_addr_type_1, null, null, f_get_desc
      ('STVATYP', pevprf1_addr_type_1, 30)), 1, 30),
pevprf1_house_number_1,
pevprf1_street_line1_1,
pevprf1_street_line2_1,
pevprf1_street_line3_1,
pevprf1_street_line4_1,
pevprf1_city_1,
pevprf1_state_1,
pevprf1_zip_1,
pevprf1_nation_1,
substr(decode(pevprf1_nation_1, null, null, f_get_desc
      ('STVNATN', pevprf1_nation_1, 30)), 1, 30),
pevprf1_ctry_code_phone_1,
pevprf1_phone_number_1,
pevprf1_phone_area_1,
pevprf1_phone_ext_1,
pevprf1_addr_type_2,
substr(decode(pevprf1_addr_type_2, null, null, f_get_desc
      ('STVATYP', pevprf1_addr_type_2, 30)), 1, 30),
pevprf1_house_number_2,
pevprf1_street_line1_2,
pevprf1_street_line2_2,
pevprf1_street_line3_2,
pevprf1_street_line4_2,
pevprf1_city_2,
pevprf1_state_2,
pevprf1_zip_2,
pevprf1_nation_2,
substr(decode(pevprf1_nation_2, null, null, f_get_desc
      ('STVNATN', pevprf1_nation_2, 30)), 1, 30),
pevprf1_ctry_code_phone_2,
pevprf1_phone_number_2,
pevprf1_phone_area_2,
pevprf1_phone_ext_2,
pevprf1_empl_status,
pevprf1_empl_status_desc,
pevprf1_empl_class_code,
substr(decode(pevprf1_empl_class_code, null, null, f_get_desc
      ('PTRECLS_SHORT', pevprf1_empl_class_code, 30)), 1, 30),
substr(decode(pevprf1_empl_class_code, null, null, f_get_desc
      ('PTRECLS_LONG', pevprf1_empl_class_code, 30)), 1, 30),
pevprf1_leave_catg,
substr(decode(pevprf1_leave_catg, null, null, f_get_desc
      ('PTVLCAT', pevprf1_leave_catg, 30)), 1, 30),
pevprf1_benefit_catg,
substr(decode(pevprf1_benefit_catg, null, null, f_get_desc
      ('PTRBCAT', pevprf1_benefit_catg, 30)), 1, 30),
pevprf1_empl_home_orgn_chart,
pevprf1_empl_home_orgn_code,
substr(decode(pevprf1_empl_home_orgn_code, null, null, nokfoap.f_foapal_desc
      ('ORGN', pevprf1_empl_home_orgn_chart, pevprf1_empl_home_orgn_code, pevprf1_profile_date)), 1, 35),
pevprf1_empl_time_sheet_chart,
pevprf1_empl_time_sheet_code,
substr(decode(pevprf1_empl_time_sheet_code, null, null, nokfoap.f_foapal_desc
      ('ORGN', pevprf1_empl_time_sheet_chart, pevprf1_empl_time_sheet_code, pevprf1_profile_date)), 1, 35),
pevprf1_empl_ft_pt_ind,
pevprf1_original_hire_date,
pevprf1_current_hire_date,
pevprf1_adjusted_serv_date,
pevprf1_seniority_date,
pevprf1_degc_code_1,
substr(decode(pevprf1_degc_code_1, null, null, f_get_desc
      ('STVDEGC', pevprf1_degc_code_1, 30)), 1, 30),
pevprf1_degc_date_1,
pevprf1_degc_year_1,
pevprf1_degc_seq_1,
pevprf1_sbgi_code_1,
substr(decode(pevprf1_sbgi_code_1, null, null, f_get_desc
      ('STVSBGI', pevprf1_sbgi_code_1, 30)), 1, 30),
pevprf1_degc_code_2,
substr(decode(pevprf1_degc_code_2, null, null, f_get_desc
      ('STVDEGC', pevprf1_degc_code_2, 30)), 1, 30),
pevprf1_degc_date_2,
pevprf1_degc_year_2,
pevprf1_degc_seq_2,
pevprf1_sbgi_code_2,
substr(decode(pevprf1_sbgi_code_2, null, null, f_get_desc
      ('STVSBGI', pevprf1_sbgi_code_2, 30)), 1, 30),
pevprf1_add_degree_flag,
pevprf1_barg_code_1,
substr(decode(pevprf1_barg_code_1, null, null, f_get_desc
      ('PTVBARG', pevprf1_barg_code_1, 30)), 1, 30),
pevprf1_memb_status_1,
pevprf1_memb_status_desc_1,
pevprf1_barg_code_2,
substr(decode(pevprf1_barg_code_2, null, null, f_get_desc
      ('PTVBARG', pevprf1_barg_code_2, 30)), 1, 30),
pevprf1_memb_status_2,
pevprf1_memb_status_desc_2,
pevprf1_barg_code_3,
substr(decode(pevprf1_barg_code_3, null, null, f_get_desc
      ('PTVBARG', pevprf1_barg_code_3, 30)), 1, 30),
pevprf1_memb_status_3,
pevprf1_memb_status_desc_3,
pevprf1_add_barg_unit_flag,
pevprf1_leave_code_1,
substr(decode(pevprf1_leave_code_1, null, null, f_get_desc
      ('PTRLEAV', pevprf1_leave_code_1, 30)), 1, 30),
pevprf1_leave_begin_balance_1,
pevprf1_leave_accrued_1,
pevprf1_leave_taken_1,
pevprf1_date_leave_avail_1,
pevprf1_leave_banked_hours_1,
pevprf1_leave_code_2,
substr(decode(pevprf1_leave_code_2, null, null, f_get_desc
      ('PTRLEAV', pevprf1_leave_code_2, 30)), 1, 30),
pevprf1_leave_begin_balance_2,
pevprf1_leave_accrued_2,
pevprf1_leave_taken_2,
pevprf1_date_leave_avail_2,
pevprf1_leave_banked_hours_2,
pevprf1_leave_code_3,
substr(decode(pevprf1_leave_code_3, null, null, f_get_desc
      ('PTRLEAV', pevprf1_leave_code_3, 30)), 1, 30),
pevprf1_leave_begin_balance_3,
pevprf1_leave_accrued_3,
pevprf1_leave_taken_3,
pevprf1_date_leave_avail_3,
pevprf1_leave_banked_hours_3,
pevprf1_leave_code_4,
substr(decode(pevprf1_leave_code_4, null, null, f_get_desc
      ('PTRLEAV', pevprf1_leave_code_4, 30)), 1, 30),
pevprf1_leave_begin_balance_4,
pevprf1_leave_accrued_4,
pevprf1_leave_taken_4,
pevprf1_date_leave_avail_4,
pevprf1_leave_banked_hours_4,
pevprf1_leave_code_5,
substr(decode(pevprf1_leave_code_5, null, null, f_get_desc
      ('PTRLEAV', pevprf1_leave_code_5, 30)), 1, 30),
pevprf1_leave_begin_balance_5,
pevprf1_leave_accrued_5,
pevprf1_leave_taken_5,
pevprf1_date_leave_avail_5,
pevprf1_leave_banked_hours_5,
pevprf1_jlev_leave_code_1,
substr(decode(pevprf1_jlev_leave_code_1, null, null,
              f_get_desc('PTRLEAV', pevprf1_jlev_leave_code_1, 30)), 1, 30),
pevprf1_jlev_begin_balance_1,
pevprf1_jlev_accrued_1,
pevprf1_jlev_taken_1,
pevprf1_jlev_banked_hours_1,
pevprf1_jlev_leave_code_2,
substr(decode(pevprf1_jlev_leave_code_2, null, null,
              f_get_desc('PTRLEAV', pevprf1_jlev_leave_code_2, 30)), 1, 30),
pevprf1_jlev_begin_balance_2,
pevprf1_jlev_accrued_2,
pevprf1_jlev_taken_2,
pevprf1_jlev_banked_hours_2,
pevprf1_jlev_leave_code_3,
substr(decode(pevprf1_jlev_leave_code_3, null, null,
              f_get_desc('PTRLEAV', pevprf1_jlev_leave_code_3, 30)), 1, 30),
pevprf1_jlev_begin_balance_3,
pevprf1_jlev_accrued_3,
pevprf1_jlev_taken_3,
pevprf1_jlev_banked_hours_3,
pevprf1_jlev_leave_code_4,
substr(decode(pevprf1_jlev_leave_code_4, null, null,
              f_get_desc('PTRLEAV', pevprf1_jlev_leave_code_4, 30)), 1, 30),
pevprf1_jlev_begin_balance_4,
pevprf1_jlev_accrued_4,
pevprf1_jlev_taken_4,
pevprf1_jlev_banked_hours_4,
pevprf1_jlev_leave_code_5,
substr(decode(pevprf1_jlev_leave_code_5, null, null,
              f_get_desc('PTRLEAV', pevprf1_jlev_leave_code_5, 30)), 1, 30),
pevprf1_jlev_begin_balance_5,
pevprf1_jlev_accrued_5,
pevprf1_jlev_taken_5,
pevprf1_jlev_banked_hours_5,
pevprf1_add_leave_flag,
pevprf1_I9_status,
pevprf1_I9_status_desc,
pevprf1_I9_date,
pevprf1_I9_expire_date,
pevprf1_1042_recipient_cd,
pevprf1_1042_recipient_cd_desc,
pevprf1_days_in_canada,
pevprf1_stats_canada_grouping,
substr(decode(pevprf1_stats_canada_grouping, null, null, f_get_desc
      ('PTVSTGR', pevprf1_stats_canada_grouping, 30)), 1, 30),
pevprf1_current_visa_type,
substr(decode(pevprf1_current_visa_type, null, null, f_get_desc
      ('STVVTYP', pevprf1_current_visa_type, 30)), 1, 30),
pevprf1_visa_status,
pevprf1_empl_natn_of_citiz,
substr(decode(pevprf1_empl_natn_of_citiz, null, null, f_get_desc
      ('STVNATN', pevprf1_empl_natn_of_citiz, 30)), 1, 30),
pevprf1_visa_start_date,
pevprf1_visa_exp_date,
pevprf1_job_contract_type,
pevprf1_job_begin_date,
pevprf1_job_end_date,
pevprf1_job_assign_posn_number,
pevprf1_job_assign_suffix,
pevprf1_job_curr_title,
pevprf1_job_curr_status,
pevprf1_job_curr_status_desc,
pevprf1_job_personnel_date,
pevprf1_superviser_pidm,
pevprf1_superviser_id,
pevprf1_superviser_surname,
pevprf1_superviser_last_name,
pevprf1_superviser_first_name,
pevprf1_superviser_middle_name,
pevprf1_superviser_suffix,
pevprf1_superviser_posn_number,
pevprf1_effective_date,
pevprf1_job_change_reason,
substr(decode(pevprf1_job_change_reason, null, null, f_get_desc
      ('PTRJCRE', pevprf1_job_change_reason, 30)), 1, 30),
pevprf1_assign_table,
pevprf1_assign_grade,
pevprf1_assign_step,
pevprf1_assign_sgrp_code,
pevprf1_ft_equivalency_pct,
pevprf1_appointment_pct,
pevprf1_job_leave_catg,
substr(decode(pevprf1_job_leave_catg, null, null,
              f_get_desc('PTVLCAT', pevprf1_job_leave_catg, 30)), 1, 30),
pevprf1_job_low_salary,
pevprf1_job_mid_salary,
pevprf1_job_high_salary,
pevprf1_next_auto_step_incr,
pevprf1_annual_salary,
pevprf1_assign_pay,
pevprf1_per_pay_salary,
pevprf1_hourly_rate,
pevprf1_assign_pay_id,
pevprf1_assign_factor,
pevprf1_job_deferred_pay,
substr(decode(pevprf1_job_deferred_pay, null, null, f_get_desc
      ('PTRDFPR', pevprf1_job_deferred_pay, 30)), 1, 30),
pevprf1_number_of_pay,
pevprf1_deferred_pay_amt,
pevprf1_defer_pay_amt_adj,
pevprf1_curr_encumb_amt,
pevprf1_review_type_code_1,
substr(decode(pevprf1_review_type_code_1, null, null, f_get_desc
      ('PTVREVT', pevprf1_review_type_code_1, 30)), 1, 30),
pevprf1_review_date_1,
pevprf1_review_complete_ind_1,
pevprf1_review_rating_1,
pevprf1_review_type_code_2,
substr(decode(pevprf1_review_type_code_2, null, null, f_get_desc
      ('PTVREVT', pevprf1_review_type_code_2, 30)), 1, 30),
pevprf1_review_date_2,
pevprf1_review_complete_ind_2,
pevprf1_review_rating_2,
pevprf1_add_review_flag,
pevprf1_terminat_reason_code,
substr(decode(pevprf1_terminat_reason_code, null, null, f_get_desc
      ('PTRTREA', pevprf1_terminat_reason_code, 30)), 1, 30),
pevprf1_terminat_date,
pevprf1_leav_abs_reason_code,
substr(decode(pevprf1_leav_abs_reason_code, null, null, f_get_desc
      ('PTRLREA', pevprf1_leav_abs_reason_code, 30)), 1, 30),
pevprf1_leav_abs_beg_date,
pevprf1_leav_abs_end_date,
pevprf1_fte_effective_date,
pevprf1_job_fte_appt_pct,
pevprf1_annualized_fte,
pevprf1_fte_base_salary,
pevprf1_probation_units,
pevprf1_probation_begin_date,
pevprf1_probation_end_date,
perpvf1_job_future_salary_enc
from  pevprf1"
"BANINST1","AP_DEDUCTIONS_BENEFITS","","select
pdvded1_pidm,
pdvded1_bdca_code,
substr(decode(pdvded1_bdca_code, null, null, f_get_desc
      ('PTRBDCA_SHORT', pdvded1_bdca_code, 30)), 1, 30),
substr(decode(pdvded1_bdca_code, null, null, f_get_desc
      ('PTRBDCA_LONG', pdvded1_bdca_code, 30)), 1, 30),
pdvded1_payroll_ded_year,
pdvded1_id_number,
pdvded1_ssn,
pdvded1_surname_prefix,
pdvded1_last_name,
pdvded1_first_name,
pdvded1_middle_name,
pdvded1_middle_initial,
pdvded1_name_prefix,
pdvded1_name_suffix,
pdvded1_profile_date,
pdvded1_birth_date,
pdvded1_age,
pdvded1_gender,
pdvded1_ethnicity_code,
substr(decode(pdvded1_ethnicity_code, null, null, f_get_desc
      ('STVETHN', pdvded1_ethnicity_code, 30)), 1, 30),
pdvded1_ethnicity_category,
substr(decode(pdvded1_ethnicity_category, null, null, f_get_desc
      ('PTVEEOC', pdvded1_ethnicity_category, 30)), 1, 30),
pdvded1_marital_status,
substr(decode(pdvded1_marital_status, null, null, f_get_desc
      ('STVMRTL', pdvded1_marital_status, 30)), 1, 30),
pdvded1_addr_type_1,
substr(decode(pdvded1_addr_type_1, null, null, f_get_desc
      ('STVATYP', pdvded1_addr_type_1, 30)), 1, 30),
pdvded1_house_number_1,
pdvded1_street_line1_1,
pdvded1_street_line2_1,
pdvded1_street_line3_1,
pdvded1_street_line4_1,
pdvded1_city_1,
pdvded1_state_1,
pdvded1_zip_1,
pdvded1_nation_1,
substr(decode(pdvded1_nation_1, null, null, f_get_desc
      ('STVNATN', pdvded1_nation_1, 30)), 1, 30),
pdvded1_ctry_code_phone_1,
pdvded1_phone_number_1,
pdvded1_phone_area_1,
pdvded1_phone_ext_1,
pdvded1_addr_type_2,
substr(decode(pdvded1_addr_type_2, null, null, f_get_desc
      ('STVATYP', pdvded1_addr_type_2, 30)), 1, 30),
pdvded1_house_number_2,
pdvded1_street_line1_2,
pdvded1_street_line2_2,
pdvded1_street_line3_2,
pdvded1_street_line4_2,
pdvded1_city_2,
pdvded1_state_2,
pdvded1_zip_2,
pdvded1_nation_2,
substr(decode(pdvded1_nation_2, null, null, f_get_desc
      ('STVNATN', pdvded1_nation_2, 30)), 1, 30),
pdvded1_ctry_code_phone_2,
pdvded1_phone_number_2,
pdvded1_phone_area_2,
pdvded1_phone_ext_2,
pdvded1_empl_status,
pdvded1_empl_status_desc,
pdvded1_empl_class_code,
substr(decode(pdvded1_empl_class_code, null, null, f_get_desc
      ('PTRECLS_SHORT', pdvded1_empl_class_code, 30)), 1, 30),
substr(decode(pdvded1_empl_class_code, null, null, f_get_desc
      ('PTRECLS_LONG', pdvded1_empl_class_code, 30)), 1, 30),
pdvded1_benefit_catg,
substr(decode(pdvded1_benefit_catg, null, null, f_get_desc
      ('PTRBCAT', pdvded1_benefit_catg, 30)), 1, 30),
pdvded1_first_hire_date,
pdvded1_current_hire_date,
pdvded1_adjusted_serv_date,
pdvded1_seniority_date,
pdvded1_ben_ded_begin_date,
pdvded1_ben_ded_end_date,
pdvded1_bond_balance,
pdvded1_max_arr_recover,
pdvded1_arr_balance,
pdvded1_ben_ded_eff_date,
pdvded1_ben_ded_status,
pdvded1_ben_ded_status_desc,
pdvded1_ben_ded_amt_1,
pdvded1_amt_1_title,
pdvded1_ben_ded_amt_2,
pdvded1_amt_2_title,
pdvded1_ben_ded_amt_3,
pdvded1_amt_3_title,
pdvded1_ben_ded_amt_4,
pdvded1_amt_4_title,
pdvded1_ben_ded_opt_code_1,
pdvded1_option_1_title,
pdvded1_ben_ded_opt_code_2,
pdvded1_option_2_title,
pdvded1_ben_ded_opt_code_3,
pdvded1_option_3_title,
pdvded1_ben_ded_opt_code_4,
pdvded1_option_4_title,
pdvded1_ben_ded_opt_code_5,
pdvded1_option_5_title,
pdvded1_ben_ded_type,
substr(decode(pdvded1_ben_ded_type, null, null, f_get_desc
      ('PTVBDTY', pdvded1_ben_ded_type, 30)), 1, 30),
pdvded1_payroll_ded_month_1,
pdvded1_empl_amt_1,
pdvded1_empr_amt_1,
pdvded1_appl_grs_1,
pdvded1_payroll_ded_month_2,
pdvded1_empl_amt_2,
pdvded1_empr_amt_2,
pdvded1_appl_grs_2,
pdvded1_payroll_ded_month_3,
pdvded1_empl_amt_3,
pdvded1_empr_amt_3,
pdvded1_appl_grs_3,
pdvded1_payroll_ded_month_4,
pdvded1_empl_amt_4,
pdvded1_empr_amt_4,
pdvded1_appl_grs_4,
pdvded1_payroll_ded_month_5,
pdvded1_empl_amt_5,
pdvded1_empr_amt_5,
pdvded1_appl_grs_5,
pdvded1_payroll_ded_month_6,
pdvded1_empl_amt_6,
pdvded1_empr_amt_6,
pdvded1_appl_grs_6,
pdvded1_payroll_ded_month_7,
pdvded1_empl_amt_7,
pdvded1_empr_amt_7,
pdvded1_appl_grs_7,
pdvded1_payroll_ded_month_8,
pdvded1_empl_amt_8,
pdvded1_empr_amt_8,
pdvded1_appl_grs_8,
pdvded1_payroll_ded_month_9,
pdvded1_empl_amt_9,
pdvded1_empr_amt_9,
pdvded1_appl_grs_9,
pdvded1_payroll_ded_month_10,
pdvded1_empl_amt_10,
pdvded1_empr_amt_10,
pdvded1_appl_grs_10,
pdvded1_payroll_ded_month_11,
pdvded1_empl_amt_11,
pdvded1_empr_amt_11,
pdvded1_appl_grs_11,
pdvded1_payroll_ded_month_12,
pdvded1_empl_amt_12,
pdvded1_empr_amt_12,
pdvded1_appl_grs_12,
pdvded1_empl_amt_1_quarter,
pdvded1_empr_amt_1_quarter,
pdvded1_appl_grs_1_quarter,
pdvded1_empl_amt_2_quarter,
pdvded1_empr_amt_2_quarter,
pdvded1_appl_grs_2_quarter,
pdvded1_empl_amt_3_quarter,
pdvded1_empr_amt_3_quarter,
pdvded1_appl_grs_3_quarter,
pdvded1_empl_amt_4_quarter,
pdvded1_empr_amt_4_quarter,
pdvded1_appl_grs_4_quarter,
pdvded1_empl_amt_year,
pdvded1_empr_amt_year,
pdvded1_appl_grs_year,
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 1),1,8)),
substr(f_split_fields(pdvded1_beneficiary_info, 2),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 3),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 4),1,15),
substr(f_split_fields(pdvded1_beneficiary_info, 5),1,15),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 6),1,11),'DD-MON-YYYY'),
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 7),1,3)),
substr(f_split_fields(pdvded1_beneficiary_info, 8),1,9),
                       substr(f_split_fields(pdvded1_beneficiary_info, 9),1,1),
substr(decode(substr(         f_split_fields(pdvded1_beneficiary_info, 9),1,1),null,null,
  f_get_desc('PTRBREL',substr(f_split_fields(pdvded1_beneficiary_info, 9),1,1),30)),1,30),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 10),1,11),'DD-MON-YYYY'),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 11),1,11),'DD-MON-YYYY'),
substr(f_split_fields(pdvded1_beneficiary_info, 12),1,1),
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 13),1,8)),
substr(f_split_fields(pdvded1_beneficiary_info, 14),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 15),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 16),1,15),
substr(f_split_fields(pdvded1_beneficiary_info, 17),1,15),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 18),1,11),'DD-MON-YYYY'),
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 19),1,3)),
substr(f_split_fields(pdvded1_beneficiary_info, 20),1,9),
                       substr(f_split_fields(pdvded1_beneficiary_info, 21),1,1),
substr(decode(substr(         f_split_fields(pdvded1_beneficiary_info, 21),1,1),null,null,
  f_get_desc('PTRBREL',substr(f_split_fields(pdvded1_beneficiary_info, 21),1,1),30)),1,30),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 22),1,11),'DD-MON-YYYY'),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 23),1,11),'DD-MON-YYYY'),
substr(f_split_fields(pdvded1_beneficiary_info, 24),1,1),
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 25),1,8)),
substr(f_split_fields(pdvded1_beneficiary_info, 26),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 27),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 28),1,15),
substr(f_split_fields(pdvded1_beneficiary_info, 29),1,15),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 30),1,11),'DD-MON-YYYY'),
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 31),1,3)),
substr(f_split_fields(pdvded1_beneficiary_info, 32),1,9),
                       substr(f_split_fields(pdvded1_beneficiary_info, 33),1,1),
substr(decode(substr(         f_split_fields(pdvded1_beneficiary_info, 33),1,1),null,null,
  f_get_desc('PTRBREL',substr(f_split_fields(pdvded1_beneficiary_info, 33),1,1),30)),1,30),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 34),1,11),'DD-MON-YYYY'),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 35),1,11),'DD-MON-YYYY'),
substr(f_split_fields(pdvded1_beneficiary_info, 36),1,1),
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 37),1,8)),
substr(f_split_fields(pdvded1_beneficiary_info, 38),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 39),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 40),1,15),
substr(f_split_fields(pdvded1_beneficiary_info, 41),1,15),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 42),1,11),'DD-MON-YYYY'),
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 43),1,3)),
substr(f_split_fields(pdvded1_beneficiary_info, 44),1,9),
                        substr(f_split_fields(pdvded1_beneficiary_info, 45),1,1),
substr(decode(substr(          f_split_fields(pdvded1_beneficiary_info, 45),1,1),null,null,
   f_get_desc('PTRBREL',substr(f_split_fields(pdvded1_beneficiary_info, 45),1,1),30)),1,30),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 46),1,11),'DD-MON-YYYY'),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 47),1,11),'DD-MON-YYYY'),
substr(f_split_fields(pdvded1_beneficiary_info, 48),1,1),
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 49),1,8)),
substr(f_split_fields(pdvded1_beneficiary_info, 50),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 51),1,60),
substr(f_split_fields(pdvded1_beneficiary_info, 52),1,15),
substr(f_split_fields(pdvded1_beneficiary_info, 53),1,15),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 54),1,11),'DD-MON-YYYY'),
to_number(substr(f_split_fields(pdvded1_beneficiary_info, 55),1,3)),
substr(f_split_fields(pdvded1_beneficiary_info, 56),1,9),
                       substr(f_split_fields(pdvded1_beneficiary_info, 57),1,1),
substr(decode(substr(         f_split_fields(pdvded1_beneficiary_info, 57),1,1),null,null,
  f_get_desc('PTRBREL',substr(f_split_fields(pdvded1_beneficiary_info, 57),1,1),30)),1,30),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 58),1,11),'DD-MON-YYYY'),
to_date(substr(f_split_fields(pdvded1_beneficiary_info, 59),1,11),'DD-MON-YYYY'),
substr(f_split_fields(pdvded1_beneficiary_info, 60),1,1),
substr(f_split_fields(pdvded1_beneficiary_info, 61),1,1),
pdvded1_w4_name_change_ind   ,
pdvded1_w4_signed_pidm       ,
pdvded1_w4_signed_date       ,
pdvded1_lockin_letter_status ,
pdvded1_lockin_letter_date   ,
pdvded1_lockin_fsta_fil_st   ,
pdvded1_lockin_withhold_allow,
pdvded1_comment              ,
pdvded1_comment_date         ,
pdvded1_comment_user_id
from pdvded1"
"BANINST1","APVXREF","","SELECT APRXREF_PIDM,
          APRXREF_XREF_CODE,
          ATVXREF_DESC,
          APRXREF_XREF_PIDM,
          SPRIDEN_ID,
          DECODE (SPRIDEN_ENTITY_IND, 'C', SPRIDEN_LAST_NAME,
          DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX || ' ') || SPRIDEN_LAST_NAME || ', '
          || SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI),
          APRXREF_ACTIVITY_DATE,
          APRXREF_CM_PRI_IND,
          ATVXREF_REVERSE_XREF,
          SPBPERS_NAME_PREFIX,
          SPRIDEN_FIRST_NAME,
          SPRIDEN_MI,
          SPRIDEN_SURNAME_PREFIX,
          SPRIDEN_LAST_NAME,
          SPBPERS_NAME_SUFFIX,
          SPBPERS_BIRTH_DATE,
          SPBPERS_DEAD_IND,
          SPBPERS_DEAD_DATE,
          SPBPERS_SEX,
          SPBPERS_SSN,
          APBCONS_ATYP_CODE_PREF,
          ATVXREF_SPOUSE_IND,
          APBCONS_MAIDEN_LAST_NAME,
          SPBPERS_MRTL_CODE,
          ATVXREF_EMPLOYER_IND,
          ATVXREF_MATCH_GIFT_IND
FROM SPBPERS, APBCONS, APRXREF, ATVXREF, SPRIDEN
WHERE APRXREF_XREF_CODE = ATVXREF_CODE
  AND APRXREF_XREF_PIDM = SPRIDEN_PIDM
  AND SPRIDEN_CHANGE_IND IS NULL
  AND APRXREF_XREF_PIDM = APBCONS_PIDM(+)
  AND APRXREF_XREF_PIDM = SPBPERS_PIDM(+)"
"BANINST1","APVXOPS","","SELECT (SELECT spriden_id          FROM spriden
         WHERE     spriden_pidm = R.AGRPDES_PIDM
           AND spriden_change_ind IS NULL
           AND ROWNUM = 1) IDS,
       (SELECT spriden_last_name FROM spriden
         WHERE spriden_pidm = R.AGRPDES_PIDM
           AND spriden_change_ind IS NULL
           AND ROWNUM = 1) LAST_NAME,
         (SELECT DECODE(
           SPRIDEN_ENTITY_IND, 'C', '', 'P',DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX||' ')) ||
           SPRIDEN_LAST_NAME || DECODE(
           SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
           SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI
          FROM spriden
         WHERE     spriden_pidm = R.AGRPDES_PIDM
           AND spriden_change_ind IS NULL
           AND ROWNUM = 1) FULL_NAME,
       R.AGRPDES_PIDM,
       P.APRXREF_PIDM ,
       R.AGRPDES_PLEDGE_NO,
       SUM(R.AGRPDES_AMT)-SUM(R.AGRPDES_AMT_PAID),
       P.APRXREF_XREF_CODE,
       R.AGRPDES_CAMPAIGN ,
       R.AGRPDES_DESG ,
       SUM(R.AGRPDES_AMT)
  FROM AGBPLDG B,AGRPDES R,APRXREF P
 WHERE P.APRXREF_XREF_CODE IN
              (SELECT ATVXREF_CODE
                 FROM ATVXREF
                WHERE NVL (ATVXREF_ASSOC_PLEDGE_IND, 'N') = 'Y')
   AND B.AGBPLDG_PIDM = P.APRXREF_XREF_PIDM
   AND B.AGBPLDG_PSTA_CODE IN
             (SELECT ATVPSTA_CODE
                FROM ATVPSTA
               WHERE ATVPSTA_ACTIVE_IND = 'Y'
                 AND ATVPSTA_CODE = B.AGBPLDG_PSTA_CODE)
   AND B.AGBPLDG_PIDM      = R.AGRPDES_PIDM
   AND B.AGBPLDG_PLEDGE_NO = R.AGRPDES_PLEDGE_NO
 GROUP BY R.AGRPDES_PIDM,P.APRXREF_PIDM,R.AGRPDES_PLEDGE_NO,R.AGRPDES_CAMPAIGN,R.AGRPDES_DESG,P.APRXREF_XREF_CODE
HAVING (SUM(AGRPDES_AMT)-SUM(AGRPDES_AMT_PAID)) > 0
 ORDER BY UPPER(LAST_NAME), R.AGRPDES_PLEDGE_NO
"
"BANINST1","APVSRES","","SELECT AFRCTYP_PIDM,
           S.SPRIDEN_ID,
           S.SPRIDEN_SURNAME_PREFIX,
           S.SPRIDEN_LAST_NAME,
           S.SPRIDEN_FIRST_NAME,
           S.SPRIDEN_MI,
           AFRCTYP_CONSTITUENT_PIDM,
           C.SPRIDEN_ID,
           C.SPRIDEN_SURNAME_PREFIX,
           C.SPRIDEN_LAST_NAME,
           C.SPRIDEN_FIRST_NAME,
           C.SPRIDEN_MI,
           AFRCRES_CTYP_SEQ_NO,
           AFRCRES_SEQ_NO,
           AFRCRES_CAMPAIGN,
           AFRCRES_SOLC_CODE,
           AFRCRES_SOL_ORG,
           AFRCRES_DCYR_CODE,
           AFRCTYP_ASK_AMOUNT,
           AFRCRES_DATE,
           AFRCRES_PLEDGE_NO,
           AFRCRES_GIFT_NO,
           AFRCRES_SCNT_CODE,
           AFRCRES_SCRS_CODE,
           AFRCRES_COMMENT
FROM SPRIDEN S, SPRIDEN C, AFRCTYP, AFRCRES
WHERE AFRCTYP_PIDM IS NOT NULL
AND   AFRCTYP_PIDM = AFRCRES_PIDM
AND   NVL(AFRCTYP_CAMPAIGN,'~') = NVL(AFRCRES_CAMPAIGN,'~')
AND   NVL(AFRCTYP_SOLC_CODE,'~') = NVL(AFRCRES_SOLC_CODE,'~')
AND   NVL(AFRCTYP_SOL_ORG,'~')   = NVL(AFRCRES_SOL_ORG,'~')
AND   NVL(AFRCTYP_DCYR_CODE,'0') = NVL(AFRCRES_DCYR_CODE,'0')
AND   AFRCTYP_SEQ_NO  = AFRCRES_CTYP_SEQ_NO
AND   AFRCRES_SEQ_NO =
       (SELECT MAX(AFRCRES_SEQ_NO)
          FROM AFRCRES
         WHERE AFRCRES_PIDM = AFRCTYP_PIDM
           AND NVL(AFRCTYP_CAMPAIGN,'~') = NVL(AFRCRES_CAMPAIGN,'~')
           AND NVL(AFRCTYP_SOLC_CODE,'~') = NVL(AFRCRES_SOLC_CODE,'~')
           AND NVL(AFRCTYP_SOL_ORG,'~')   = NVL(AFRCRES_SOL_ORG,'~')
           AND NVL(AFRCTYP_DCYR_CODE,'0') = NVL(AFRCRES_DCYR_CODE,'0')
           AND AFRCRES_CTYP_SEQ_NO = AFRCTYP_SEQ_NO)
AND   S.SPRIDEN_PIDM = AFRCTYP_PIDM
AND   S.SPRIDEN_CHANGE_IND IS NULL
AND   C.SPRIDEN_PIDM = AFRCTYP_CONSTITUENT_PIDM
AND   C.SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","APVSPRI","Donor Category Priority View","SELECT DISTINCT APRCATG_PIDM,
       SPRIDEN_ID,
       DECODE(SPRIDEN_SURNAME_PREFIX, '','',SPRIDEN_SURNAME_PREFIX||' ') ||
             SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME ||
             DECODE(SPRIDEN_MI,'', '',  ' ' || SPRIDEN_MI),
       SPRIDEN_SURNAME_PREFIX,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       APRCATG_DONR_CODE,
       ATVDONR_DESC,
       ATVDONR_CFAE_1,
       ATVDONR_CFAE_2,
       to_number(rtrim(substr(apkspri.f_select_primary_catg(APRCATG_PIDM),5,2)))
FROM  SPRIDEN, APRCATG, ATVDONR
WHERE SPRIDEN_PIDM = APRCATG_PIDM
AND  SPRIDEN_CHANGE_IND IS NULL
AND  APRCATG_DONR_CODE = rtrim(substr(apkspri.f_select_primary_catg(APRCATG_PIDM),1,4))
AND  APRCATG_DONR_CODE = ATVDONR_CODE "
"BANINST1","APVSHR1","","select
apventy_pidm,
aaa.spriden_entity_ind,
a.aprpros_prtp_code,
a.aprpros_prcd_code,
b.aprpros_prtp_code,
b.aprpros_prcd_code,
c.aprpros_prtp_code,
c.aprpros_prcd_code,
d.aprpros_prtp_code,
d.aprpros_prcd_code,
e.aprpros_prtp_code,
e.aprpros_prcd_code,
substr(f_check_for_more('SPECIAL PURPOSE', apventy_pidm), 1, 1),
substr(f_variable_purpose_info(apventy_pidm, 1), 1, 3),
substr(f_variable_purpose_info(apventy_pidm, 2), 1, 3),
substr(f_variable_purpose_info(apventy_pidm, 3), 1, 3),
substr(f_check_for_more('VARIABLE PURPOSE', apventy_pidm), 1, 1),
x.aprmail_mail_code,
x.aprmail_date,
x.aprmail_atyp_code,
y.aprmail_mail_code,
y.aprmail_date,
y.aprmail_atyp_code,
z.aprmail_mail_code,
z.aprmail_date,
z.aprmail_atyp_code,
q.aprmail_mail_code,
q.aprmail_date,
q.aprmail_atyp_code,
substr(f_check_for_more('MAIL', apventy_pidm), 1, 1),
f.aprexcl_excl_code,
f.aprexcl_date,
h.aprexcl_excl_code,
h.aprexcl_date,
g.aprexcl_excl_code,
g.aprexcl_date,
substr(f_check_for_more('EXCLUSION', apventy_pidm), 1, 1),
substr(f_activity_code_info(apventy_pidm, 4), 1, 92),
v.aprxref_xref_code,
v.aprxref_xref_pidm,
w.spriden_surname_prefix,
w.spriden_last_name,
w.spriden_first_name,
w.spriden_mi,
w.spriden_id,
j.aprxref_xref_code,
j.aprxref_xref_pidm,
n.spriden_surname_prefix,
n.spriden_last_name,
n.spriden_first_name,
n.spriden_mi,
n.spriden_id,
o.aprxref_xref_code,
o.aprxref_xref_pidm,
p.spriden_surname_prefix,
p.spriden_last_name,
p.spriden_first_name,
p.spriden_mi,
p.spriden_id,
r.aprxref_xref_code,
r.aprxref_xref_pidm,
s.spriden_surname_prefix,
s.spriden_last_name,
s.spriden_first_name,
s.spriden_mi,
s.spriden_id,
t.aprxref_xref_code,
t.aprxref_xref_pidm,
u.spriden_surname_prefix,
u.spriden_last_name,
u.spriden_first_name,
u.spriden_mi,
u.spriden_id,
substr(f_check_for_more('CROSS REFERENCE', apventy_pidm), 1, 1),
k.amrexrt_exrs_code,
k.amrexrt_ext_score,
k.amrexrt_ext_value,
k.amrexrt_ext_level,
l.amrexrt_exrs_code,
l.amrexrt_ext_score,
l.amrexrt_ext_value,
l.amrexrt_ext_level,
m.amrexrt_exrs_code,
m.amrexrt_ext_score,
m.amrexrt_ext_value,
m.amrexrt_ext_level,
substr(f_check_for_more('EXTERNAL SOURCE', apventy_pidm), 1, 1)
from aprmail x, aprmail y, aprmail z,
     aprmail q, aprpros a, aprpros b,
     aprpros c, aprpros d, aprpros e,
     aprexcl f, aprexcl h, aprexcl g,
     aprxref v, spriden w, aprxref j, spriden n,
     aprxref o, spriden p, aprxref r, spriden s,
     aprxref t, spriden u,
     amrexrt k, amrexrt l, amrexrt m,
     spriden aaa,apventy
where x.rowid(+)= f_mail_code_info(apventy_pidm,1)
and   y.rowid(+)= f_mail_code_info(apventy_pidm,2)
and   z.rowid(+)= f_mail_code_info(apventy_pidm,3)
and   q.rowid(+)= f_mail_code_info(apventy_pidm,4)
and   a.rowid(+)= f_special_purpose_info(apventy_pidm,1)
and   b.rowid(+)= f_special_purpose_info(apventy_pidm,2)
and   c.rowid(+)= f_special_purpose_info(apventy_pidm,3)
and   d.rowid(+)= f_special_purpose_info(apventy_pidm,4)
and   e.rowid(+)= f_special_purpose_info(apventy_pidm,5)
and   f.rowid(+)= f_exclusion_code_info(apventy_pidm,1)
and   h.rowid(+)= f_exclusion_code_info(apventy_pidm,2)
and   g.rowid(+)= f_exclusion_code_info(apventy_pidm,3)
and   v.rowid(+)= f_cross_reference_info(apventy_pidm,'APRXREF',1)
and   w.rowid(+)= f_cross_reference_info(apventy_pidm,'SPRIDEN',1)
and   j.rowid(+)= f_cross_reference_info(apventy_pidm,'APRXREF',2)
and   n.rowid(+)= f_cross_reference_info(apventy_pidm,'SPRIDEN',2)
and   o.rowid(+)= f_cross_reference_info(apventy_pidm,'APRXREF',3)
and   p.rowid(+)= f_cross_reference_info(apventy_pidm,'SPRIDEN',3)
and   r.rowid(+)= f_cross_reference_info(apventy_pidm,'APRXREF',4)
and   s.rowid(+)= f_cross_reference_info(apventy_pidm,'SPRIDEN',4)
and   t.rowid(+)= f_cross_reference_info(apventy_pidm,'APRXREF',5)
and   u.rowid(+)= f_cross_reference_info(apventy_pidm,'SPRIDEN',5)
and   k.rowid(+)= f_external_source_info(apventy_pidm,1)
and   l.rowid(+)= f_external_source_info(apventy_pidm,2)
and   m.rowid(+)= f_external_source_info(apventy_pidm,3)
and   aaa.spriden_change_ind is null
and   aaa.spriden_pidm = apventy_pidm"
"BANINST1","APVLRVW","","select  SPRIDEN_PIDM,
        SPRIDEN_ID,
        DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX||' ') ||
        SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME
                          || ' ' || SPRIDEN_MI NAME,
        load_date,
        source_date,
        dsrc_code,
        decode(max(E), 2,'L',1,'P','N') E,
        decode(max(D), 2,'L',1,'P','N') D,
        decode(max(S), 2,'L',1,'P','N') S,
        decode(max(C), 2,'L',1,'P','N') C
from SPRIDEN, (
        select aprervw_pidm                 PIDM,
               trunc(aprervw_load_date)     LOAD_DATE,
               trunc(aprervw_source_date)   SOURCE_DATE,
               aprervw_dsrc_code            DSRC_CODE,
               max(decode(aprervw_accepted_ind,'Y',2,'N',1)) E,
               0 D,
               0 S,
               0 C
        from   aprervw
        group by aprervw_pidm, trunc(aprervw_load_date),
                 trunc(aprervw_source_date),aprervw_dsrc_code
        UNION
        select aprdrvw_pidm                PIDM,
               trunc(aprdrvw_load_date)    LOAD_DATE,
               trunc(aprdrvw_source_date)  SOURCE_DATE,
               aprdrvw_dsrc_code           DSRC_CODE,
               0 E,
               max(decode(aprdrvw_accepted_ind,'Y',2,'N',1)) D,
               0 S,
               0 C
        from   aprdrvw
        group by aprdrvw_pidm, trunc(aprdrvw_load_date),
                 trunc(aprdrvw_source_date),aprdrvw_dsrc_code
        UNION
        select aprsrvw_pidm               PIDM ,
               trunc(aprsrvw_load_date)   LOAD_DATE,
               trunc(aprsrvw_source_date) SOURCE_DATE,
               aprsrvw_dsrc_code          DSRC_CODE,
               0 E,
               0 D,
               max(decode(aprsrvw_accepted_ind,'Y',2,'N',1)) S,
               0 C
        from   aprsrvw
        group by aprsrvw_pidm, trunc(aprsrvw_load_date),
                 trunc(aprsrvw_source_date),aprsrvw_dsrc_code
        union
        select aprcrvw_pidm               PIDM,
               trunc(aprcrvw_load_date)   LOAD_DATE,
               trunc(aprcrvw_source_date) SOURCE_DATE,
               aprcrvw_dsrc_code          DSRC_CODE,
               0 E,
               0 D,
               0 S,
           max(decode(aprcrvw_accepted_ind,'Y',2,'N',1)) C
        from   aprcrvw
        group by aprcrvw_pidm, trunc(aprcrvw_load_date),
                 trunc(aprcrvw_source_date),aprcrvw_dsrc_code
        ) Uniontable
where   SPRIDEN_CHANGE_IND is null
  and   SPRIDEN_PIDM = PIDM
group by SPRIDEN_PIDM,
         SPRIDEN_ID,
         DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX||' ') || SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
         load_date,
         source_date,
         dsrc_code"
"BANINST1","APVENTY","","select
APBCONS_PIDM, 'P'
FROM APBCONS
UNION
select
AOBORGN_PIDM, 'O'
FROM AOBORGN
 "
"BANINST1","APVEHIS","","SELECT
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        APREHIS_PIDM,
        APREHIS_SEQ_NO,
        APREHIS_EMPR_NAME,
        APREHIS_JOBC_CODE,
        APREHIS_EMPL_POSITION,
        APREHIS_FROM_DATE,
        APREHIS_TO_DATE,
        APREHIS_EMPR_PIDM,
        APREHIS_EMPR_ID,
        APREHIS_ACTIVITY_DATE,
        APREHIS_SICC_CODE,
        APREHIS_XREF_CODE,
        APREHIS_EMPS_CODE,
        APREHIS_WKLY_HOURS,
        APREHIS_PRIMARY_IND
FROM  APREHIS,
      SPRIDEN
WHERE SPRIDEN_PIDM  = APREHIS_EMPR_PIDM
AND   SPRIDEN_CHANGE_IND IS NULL
UNION
SELECT
        '',
        APREHIS_EMPR_NAME,
        APREHIS_PIDM,
        APREHIS_SEQ_NO,
        APREHIS_EMPR_NAME,
        APREHIS_JOBC_CODE,
        APREHIS_EMPL_POSITION,
        APREHIS_FROM_DATE,
        APREHIS_TO_DATE,
        APREHIS_EMPR_PIDM,
        APREHIS_EMPR_ID,
        APREHIS_ACTIVITY_DATE,
        APREHIS_SICC_CODE,
        APREHIS_XREF_CODE,
        APREHIS_EMPS_CODE,
        APREHIS_WKLY_HOURS,
        APREHIS_PRIMARY_IND
FROM  APREHIS
WHERE APREHIS_EMPR_NAME IS NOT NULL"
"BANINST1","APVDPRI","","SELECT DISTINCT APRCATG_PIDM,
       SPRIDEN_ID,
       DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX||' ') ||
       SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME ||
             DECODE(SPRIDEN_MI,'', '',  ' ' || SPRIDEN_MI),
       SPRIDEN_SURNAME_PREFIX,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       APRCATG_DONR_CODE,
       ATVDONR_DESC,
       to_number(rtrim(substr(apkdpri.f_select_donor_catg(APRCATG_PIDM),5,2)))
FROM  SPRIDEN, APRCATG, ATVDONR
WHERE SPRIDEN_PIDM = APRCATG_PIDM
AND   SPRIDEN_CHANGE_IND IS NULL
AND   APRCATG_DONR_CODE = rtrim(substr(apkdpri.f_select_donor_catg(APRCATG_PIDM),1,4))
AND   APRCATG_DONR_CODE = ATVDONR_CODE
"
"BANINST1","APVCTYP","","SELECT AFRCTYP_CAMPAIGN,
           AFRCTYP_SOLC_CODE,
           AFRCTYP_SOL_ORG,
           AFRCTYP_PIDM,
           S.SPRIDEN_ID,
           DECODE(S.SPRIDEN_SURNAME_PREFIX,'','',S.SPRIDEN_SURNAME_PREFIX||' ')||
           S.SPRIDEN_LAST_NAME || DECODE(
           S.SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
           S.SPRIDEN_FIRST_NAME || ' ' || S.SPRIDEN_MI,
           S.SPRIDEN_SURNAME_PREFIX,
           S.SPRIDEN_LAST_NAME,
           S.SPRIDEN_FIRST_NAME,
           S.SPRIDEN_MI,
           AFRCTYP_SEQ_NO,
           AFRCTYP_CONSTITUENT_PIDM,
           C.SPRIDEN_ID,
           DECODE(C.SPRIDEN_SURNAME_PREFIX,'','',C.SPRIDEN_SURNAME_PREFIX||' ')||
           C.SPRIDEN_LAST_NAME || DECODE(
           C.SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
           C.SPRIDEN_FIRST_NAME || ' ' || C.SPRIDEN_MI,
           C.SPRIDEN_SURNAME_PREFIX,
           C.SPRIDEN_LAST_NAME,
           C.SPRIDEN_FIRST_NAME,
           C.SPRIDEN_MI,
           AFRCTYP_ACTIVITY_DATE,
           AFRCTYP_USER,
           AFRCTYP_RATE_CODE,
           AFRCTYP_RSCR_CODE,
           AFRCTYP_RATER_PIDM,
           R.SPRIDEN_ID,
           DECODE(R.SPRIDEN_SURNAME_PREFIX,'','',R.SPRIDEN_SURNAME_PREFIX||' ')||
           R.SPRIDEN_LAST_NAME || DECODE(
           R.SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
           R.SPRIDEN_FIRST_NAME || ' ' || R.SPRIDEN_MI,
           R.SPRIDEN_SURNAME_PREFIX,
           R.SPRIDEN_LAST_NAME,
           R.SPRIDEN_FIRST_NAME,
           R.SPRIDEN_MI,
           AFRCTYP_ASK_AMOUNT,
           AFRCTYP_ASK_DATE,
           AFRCTYP_COMMENT,
           AFRCTYP_ASSIGN_DATE,
           AFRCTYP_DCYR_CODE
FROM SPRIDEN S, SPRIDEN C, SPRIDEN R, AFRCTYP
WHERE S.SPRIDEN_PIDM(+) = AFRCTYP_PIDM
AND   S.SPRIDEN_CHANGE_IND IS NULL
AND   C.SPRIDEN_PIDM(+) = AFRCTYP_CONSTITUENT_PIDM
AND   C.SPRIDEN_CHANGE_IND IS NULL
AND   R.SPRIDEN_PIDM(+) = AFRCTYP_RATER_PIDM
AND   R.SPRIDEN_CHANGE_IND IS NULL "
"BANINST1","APVCSPS","","SELECT
        SPRIDEN_ID,
        DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX||' ')||
        SPRIDEN_LAST_NAME || ', ' ||
            SPRIDEN_FIRST_NAME || DECODE(SPRIDEN_MI,'','',' '||SPRIDEN_MI),
        APRCSPS_PIDM,
        APRCSPS_MARS_IND,
        APRCSPS_ACTIVITY_DATE,
        APRCSPS_SPS_PIDM,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        APBCONS_MAIDEN_LAST_NAME,
        SPBPERS_NAME_PREFIX,
        SPBPERS_NAME_SUFFIX,
        SPBPERS_BIRTH_DATE,
        APRCSPS_SPS_COMMENT,
        SPBPERS_MRTL_CODE,
        APRCSPS_MRTL_START_DATE,
        APRCSPS_MRTL_END_DATE,
        SPBPERS_DEAD_IND,
        SPBPERS_DEAD_DATE,
        APRCSPS_XREF_CODE,
        SPRIDEN_MI,
        SPBPERS_SEX,
        SPBPERS_SSN,
        APBCONS_ATYP_CODE_PREF,
        SPRIDEN_SURNAME_PREFIX
FROM  SPRIDEN,
      APBCONS,
      SPBPERS,
      APRCSPS
WHERE SPRIDEN_PIDM  = APRCSPS_SPS_PIDM
AND   SPBPERS_PIDM(+)=APRCSPS_SPS_PIDM
AND   APBCONS_PIDM(+)=APRCSPS_SPS_PIDM
AND   SPRIDEN_CHANGE_IND IS NULL
UNION
SELECT
        '',
        DECODE(APRCSPS_SURNAME_PREFIX,'','',APRCSPS_SURNAME_PREFIX||' ')||
            APRCSPS_LAST_NAME|| ', ' ||APRCSPS_FIRST_NAME ||
            DECODE(APRCSPS_MI, '', '', ' ' || APRCSPS_MI),
        APRCSPS_PIDM,
        APRCSPS_MARS_IND,
        APRCSPS_ACTIVITY_DATE,
        APRCSPS_SPS_PIDM,
        APRCSPS_LAST_NAME,
        APRCSPS_FIRST_NAME,
        APRCSPS_MAIDEN_NAME,
        APRCSPS_NAME_PREFIX,
        APRCSPS_NAME_SUFFIX,
        APRCSPS_BIRTH_DATE,
        APRCSPS_SPS_COMMENT,
        APRCSPS_MRTL_CODE,
        APRCSPS_MRTL_START_DATE,
        APRCSPS_MRTL_END_DATE,
        APRCSPS_DEAD_IND,
        APRCSPS_DEAD_DATE,
        APRCSPS_XREF_CODE,
        APRCSPS_MI,
        '',
        '',
        '',
        APRCSPS_SURNAME_PREFIX
FROM  APRCSPS
WHERE APRCSPS_SPS_PIDM IS NULL "
"BANINST1","APVCSLT","Campaign Solicitor View","SELECT AFRCSLT_CAMPAIGN,
           AFRCSLT_SOLC_CODE,
           AFRCSLT_SOL_ORG,
           AFRCSLT_PIDM,
           AFRCSLT_GOAL,
           AFRCSLT_REPORT_TO_PIDM,
	   AFRCSLT_SSTA_CODE,
           SPRIDEN_ID,
           DECODE(
           SPRIDEN_ENTITY_IND, 'C', '', 'P',DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX||' ')) ||
           SPRIDEN_LAST_NAME || DECODE(
           SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
           SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
           SPRIDEN_LAST_NAME,
           SPRIDEN_FIRST_NAME,
           SPRIDEN_MI,
           SPRIDEN_SURNAME_PREFIX
FROM SPRIDEN , AFRCSLT
WHERE SPRIDEN_PIDM = AFRCSLT_PIDM
AND   SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","APVCONS","","SELECT
        SPRIDEN_ID,
        DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX||' ') ||
              SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME ||
              DECODE(SPRIDEN_MI,'', '',  ' ' || SPRIDEN_MI),
        APBCONS_PIDM,
        SPRIDEN_SURNAME_PREFIX,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        APBCONS_SURNAME_PREFIX,
        APBCONS_PREF_LAST_NAME,
        APBCONS_PREF_FIRST_NAME,
        APBCONS_PREF_MI,
        APBCONS_NICKNAME,
        APBCONS_GRAD_NAME,
        APBCONS_PARENTS_NAME,
        APBCONS_MAIDEN_LAST_NAME,
        APBCONS_PREF_CLAS,
        APBCONS_COLL_CODE_PREF,
        APBCONS_HOME_CITY,
        APBCONS_STAT_CODE_HOME,
        APBCONS_NATN_CODE_HOME,
        APBCONS_CM_NAME,
        APBCONS_ATYP_CODE_CM,
        APBCONS_DOTT_CODE,
        APBCONS_INCM_CODE,
        APBCONS_ATYP_CODE_PREF,
        APBCONS_ADDR_NAME,
        APBCONS_ACTIVITY_DATE,
        APBCONS_ATYP_CODE_GEOR,
        APBCONS_SOCIETY_NAME
FROM  SPRIDEN,
      APBCONS
WHERE SPRIDEN_PIDM  = APBCONS_PIDM
AND   SPRIDEN_CHANGE_IND IS NULL "
"BANINST1","APVCNI1","","select
substr(f_donor_ind(apbcons_pidm),1,1),
substr(f_prospect_ind(apbcons_pidm),1,1),
substr(f_lost_al_ind(apbcons_pidm),1,1),
spriden_id,
spriden_pidm,
spbpers_ssn,
-- Begin 8.2 Expose New Person Fields (I18N Project)
spriden_surname_prefix,
-- End 8.2 Expose New Person Fields (I18N Project)
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
-- Begin 8.4.1 RPE#1-FHTOQZ
spbpers_pref_first_name,
-- End 8.4.1 RPE#1-FHTOQZ
apbcons_nickname,
apbcons_cm_name,
apbcons_maiden_last_name,
apbcons_addr_name,
apbcons_atyp_code_pref,
spbpers_birth_date,
substr(f_calculate_age(null, spbpers_birth_date, spbpers_dead_date),1,3),
spbpers_sex,
spbpers_mrtl_code,
spbpers_citz_code,
spbpers_lgcy_code,
spbpers_dead_ind,
spbpers_dead_date,
spbpers_confid_ind,
apbcons_coll_code_pref,
apbcons_pref_clas,
apbcons_incm_code,
a.atvdonr_code,
a.atvdonr_alum_ind,
b.atvdonr_code,
b.atvdonr_alum_ind,
c.atvdonr_code,
c.atvdonr_alum_ind,
d.atvdonr_code,
d.atvdonr_alum_ind,
substr(f_check_for_more('DONOR', apbcons_pidm),1,1),
x.spraddr_atyp_code,
-- Begin 8.2 Expose New Person Fields (I18N Project)
x.spraddr_house_number,
-- End 8.2 Expose New Person Fields (I18N Project)
x.spraddr_street_line1,
x.spraddr_street_line2,
x.spraddr_street_line3,
-- Begin 8.2 Expose New Person Fields (I18N Project)
x.spraddr_street_line4,
-- End 8.2 Expose New Person Fields (I18N Project)
x.spraddr_city,
x.spraddr_stat_code,
x.spraddr_zip,
x.spraddr_cnty_code,
x.spraddr_natn_code,
substr(f_geographic_region(x.spraddr_city,x.spraddr_stat_code,
       x.spraddr_zip,x.spraddr_cnty_code,x.spraddr_natn_code,'ALUMGEOD'),1,10),
x.spraddr_delivery_point,
x.spraddr_correction_digit,
x.spraddr_carrier_route,
x.spraddr_from_date,
x.spraddr_to_date,
x.spraddr_status_ind,
-- Begin 8.2 Expose New Person Fields (I18N Project)
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_ctry_code_phone),
-- End 8.2 Expose New Person Fields (I18N Project)
decode(v.sprtele_unlist_ind,'Y','*******',v.sprtele_phone_number),
decode(v.sprtele_unlist_ind,'Y','***',v.sprtele_phone_area),
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_phone_ext),
y.spraddr_atyp_code,
-- Begin 8.2 Expose New Person Fields (I18N Project)
y.spraddr_house_number,
-- End 8.2 Expose New Person Fields (I18N Project)
y.spraddr_street_line1,
y.spraddr_street_line2,
y.spraddr_street_line3,
-- Begin 8.2 Expose New Person Fields (I18N Project)
y.spraddr_street_line4,
-- End 8.2 Expose New Person Fields (I18N Project)
y.spraddr_city,
y.spraddr_stat_code,
y.spraddr_zip,
y.spraddr_cnty_code,
y.spraddr_natn_code,
substr(f_geographic_region(y.spraddr_city,y.spraddr_stat_code,
       y.spraddr_zip,y.spraddr_cnty_code,y.spraddr_natn_code,'ALUMGEOD'),1,10),
y.spraddr_delivery_point,
y.spraddr_correction_digit,
y.spraddr_carrier_route,
y.spraddr_from_date,
y.spraddr_to_date,
y.spraddr_status_ind,
-- Begin 8.2 Expose New Person Fields (I18N Project)
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_ctry_code_phone),
-- End 8.2 Expose New Person Fields (I18N Project)
decode(w.sprtele_unlist_ind,'Y','*******',w.sprtele_phone_number),
decode(w.sprtele_unlist_ind,'Y','***',w.sprtele_phone_area),
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_phone_ext),
decode(k.sprtele_unlist_ind,'Y','****',k.sprtele_tele_code),
-- Begin 8.2 Expose New Person Fields (I18N Project)
decode(k.sprtele_unlist_ind,'Y','****',k.sprtele_ctry_code_phone),
-- End 8.2 Expose New Person Fields (I18N Project)
decode(k.sprtele_unlist_ind,'Y','*******',k.sprtele_phone_number),
decode(k.sprtele_unlist_ind,'Y','***',k.sprtele_phone_area),
decode(k.sprtele_unlist_ind,'Y','****',k.sprtele_phone_ext),
decode(l.sprtele_unlist_ind,'Y','****',l.sprtele_tele_code),
-- Begin 8.2 Expose New Person Fields (I18N Project)
decode(l.sprtele_unlist_ind,'Y','****',l.sprtele_ctry_code_phone),
-- End 8.2 Expose New Person Fields (I18N Project)
decode(l.sprtele_unlist_ind,'Y','*******',l.sprtele_phone_number),
decode(l.sprtele_unlist_ind,'Y','***',l.sprtele_phone_area),
decode(l.sprtele_unlist_ind,'Y','****',l.sprtele_phone_ext),
decode(m.sprtele_unlist_ind,'Y','****',m.sprtele_tele_code),
-- Begin 8.2 Expose New Person Fields (I18N Project)
decode(m.sprtele_unlist_ind,'Y','****',m.sprtele_ctry_code_phone),
-- End 8.2 Expose New Person Fields (I18N Project)
decode(m.sprtele_unlist_ind,'Y','*******',m.sprtele_phone_number),
decode(m.sprtele_unlist_ind,'Y','***',m.sprtele_phone_area),
decode(m.sprtele_unlist_ind,'Y','****',m.sprtele_phone_ext),
substr(f_check_for_more('PHONE',apbcons_pidm),1,1),
-- Begin 8.2 Expose New Person Fields (I18N Project)
substr(f_spouse_info(apbcons_pidm), 1, 527),
-- End 8.2 Expose New Person Fields (I18N Project)
-- Begin 8.4.1 defect#1-E64TSJ
v.sprtele_status_ind
-- End 8.4.1 defect#1-E64TSJ
from spriden, spbpers, spraddr x, spraddr y,
     sprtele k, sprtele l, sprtele m,
     sprtele v, sprtele w, atvdonr a,
     atvdonr b, atvdonr c, atvdonr d,
     apbcons
where spbpers_pidm(+) = spriden_pidm
  and spriden_change_ind is null
  and spriden_pidm = apbcons_pidm
  and x.rowid(+) = f_get_address_rowid
      (apbcons_pidm,'ALUMADDR','A',sysdate,null,'AP',apbcons_atyp_code_pref)
  and v.rowid(+) = f_get_address_telephone_rowid
      (apbcons_pidm,'ALUMADDR','A',sysdate,null,'AP',apbcons_atyp_code_pref)
  and y.rowid(+) = f_get_address_rowid
      (apbcons_pidm,'ALUMADDR','A',sysdate,1,'AH',null)
  and w.rowid(+) = f_get_address_telephone_rowid
      (apbcons_pidm,'ALUMADDR','A',sysdate,1,'AH',null)
  and k.rowid(+) = f_get_sprtele_rowid
      (apbcons_pidm,'ALUMPHONE','A',null,1)
  and l.rowid(+) = f_get_sprtele_rowid
      (apbcons_pidm,'ALUMPHONE','A',null,2)
  and m.rowid(+) = f_get_sprtele_rowid
      (apbcons_pidm,'ALUMPHONE','A',null,3)
  and a.rowid(+) = f_donor_categoryes(apbcons_pidm,1)
  and b.rowid(+) = f_donor_categoryes(apbcons_pidm,2)
  and c.rowid(+) = f_donor_categoryes(apbcons_pidm,3)
  and d.rowid(+) = f_donor_categoryes(apbcons_pidm,4)"
"BANINST1","APVCNA1","","select
apbcons_pidm,
substr(f_inst_degr(apbcons_pidm, 3),1,150),
substr(f_check_for_more('INSTITUTION', apbcons_pidm),1,1),
substr(f_other_inst_degr(apbcons_pidm, 3),1,165),
substr(f_check_for_more('OTHER INSTITUTION', apbcons_pidm),1,1),
substr(f_job_info(apbcons_pidm),1,200),
substr(f_child_info(apbcons_pidm,3),1,580),
substr(f_check_for_more('CHILD', apbcons_pidm), 1,1)
from apbcons"
"BANINST1","APVCHLD","Child ID Information View","SELECT SPRIDEN_ID,
          DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX||' ')||
          SPRIDEN_LAST_NAME || ', ' ||
          SPRIDEN_FIRST_NAME || DECODE(SPRIDEN_MI, '', '', ' ' || SPRIDEN_MI),
          APRCHLD_PIDM,
          APRCHLD_SEQ_NO,
          SPRIDEN_LAST_NAME,
          SPRIDEN_FIRST_NAME,
          SPRIDEN_MI,
          SPBPERS_SEX,
          SPBPERS_BIRTH_DATE,
          SPBPERS_SSN,
          APRCHLD_ATYP_CODE,
          APRCHLD_ACTIVITY_DATE,
          APRCHLD_XREF_CODE,
          APRCHLD_CHLD_PIDM,
          SPBPERS_NAME_PREFIX,
          SPBPERS_NAME_SUFFIX,
          SPBPERS_DEAD_IND,
          SPBPERS_DEAD_DATE,
          APBCONS_MAIDEN_LAST_NAME,
-- Begin Defect 1-R94N3
--        gokodsf.f_trim_longs('APRCHLD', 'APRCHLD_COMMENT', APRCHLD.ROWID)
          aoklong.f_longtochar_aprchld(APRCHLD.ROWID),
          SPRIDEN_SURNAME_PREFIX
-- End Defect 1-R94N3
FROM      APRCHLD,
          SPRIDEN,
          SPBPERS,
          APBCONS
WHERE     SPRIDEN_PIDM = APRCHLD_CHLD_PIDM
AND       SPRIDEN_CHANGE_IND IS NULL
AND       SPRIDEN_ENTITY_IND = 'P'
AND       APRCHLD_CHLD_PIDM = SPBPERS_PIDM(+)
AND       APRCHLD_CHLD_PIDM = APBCONS_PIDM(+)
AND       APRCHLD_CHLD_PIDM IS NOT NULL
UNION
SELECT    '',
          DECODE(APRCHLD_SURNAME_PREFIX,'','',APRCHLD_SURNAME_PREFIX||' ')||
          APRCHLD_LAST_NAME || ', ' || APRCHLD_FIRST_NAME ||
          DECODE(APRCHLD_MI,'', '',  ' ' || APRCHLD_MI),
          APRCHLD_PIDM,
          APRCHLD_SEQ_NO,
          APRCHLD_LAST_NAME,
          APRCHLD_FIRST_NAME,
          APRCHLD_MI,
          APRCHLD_SEX,
          APRCHLD_BIRTH_DATE,
          APRCHLD_SSN,
          APRCHLD_ATYP_CODE,
          APRCHLD_ACTIVITY_DATE,
          APRCHLD_XREF_CODE,
          APRCHLD_CHLD_PIDM,
          '',
          '',
          APRCHLD_DECEASED_IND,
          APRCHLD_DECEASED_DATE,
          '',
-- Begin Defect 1-R94N3
--        gokodsf.f_trim_longs('APRCHLD', 'APRCHLD_COMMENT', APRCHLD.ROWID)
          aoklong.f_longtochar_aprchld(APRCHLD.ROWID),
          APRCHLD_SURNAME_PREFIX
-- End Defect 1-R94N3
FROM      APRCHLD
WHERE     APRCHLD_CHLD_PIDM  IS NULL"
"BANINST1","APVCATG","","SELECT SPRIDEN_ID,
          DECODE (SPRIDEN_ENTITY_IND, 'C', SPRIDEN_LAST_NAME,
          SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' ||
          SPRIDEN_MI),
          APRCATG_PIDM,
          APRCATG_DONR_CODE,
          ATVDONR_DESC,
          APRCATG_ACTIVITY_DATE
FROM SPRIDEN, APRCATG, ATVDONR
WHERE APRCATG_PIDM = SPRIDEN_PIDM
  AND SPRIDEN_CHANGE_IND IS NULL
  AND APRCATG_DONR_CODE = ATVDONR_CODE

 "
"BANINST1","APVBRWS","Constituent Browse View - This views is used to display records from the GLBEXTR table.","select
glbextr_application,
glbextr_selection,
glbextr_creator_id,
glbextr_user_id,
glbextr_key,
glbextr_activity_date,
spriden_entity_ind,
spriden_pidm,
spriden_id,
decode(spriden_mi,
   '',(decode(spriden_surname_prefix,'','',spriden_surname_prefix || ' ') ||
       spriden_last_name || ', ' || spriden_first_name)
     ,(decode(spriden_surname_prefix,'','',spriden_surname_prefix || ' ') ||
       spriden_last_name || ', ' || spriden_first_name
      || ' '  || substr(spriden_mi,1,1) || '.')),
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
spbpers_name_prefix,
spbpers_name_suffix,
spbpers_dead_ind,
spbpers_confid_ind,
rtrim(substr(apkbrws.f_select_pref_class(spriden_pidm),1,4)),
rtrim(substr(apkdpri.f_select_donor_catg(spriden_pidm),1,4)),
to_number(
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 1),1,8))),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 2),1,60),'','',
(decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 16),1,1),'',
   (decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 17),1,60) ,'','',
    substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 17),1,60) || ' ') ||
    substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 2),1,60) || ', ' ||
    substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 3),1,60)),
  (decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 17),1,60) ,'','',
    substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 17),1,60) || ' ') ||
    substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 2),1,60) || ', ' ||
    substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 3),1,60) ||
 ' ' || substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527),16),1,1) || '.'))))),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 17),1,60)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 2),1,60)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 3),1,60)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 16),1,1)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 5),1,20)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 6),1,20)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 8),1,1)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 11),1,4)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 13),1,4)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 14),1,9)),
decode(substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1),'I','',
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 15),1,1)),
substr(f_split_fields(substr(f_spouse_info(spriden_pidm),1,527), 7),1,1)
from  spbpers, spriden, glbextr
where spriden_pidm = glbextr_key
  and spriden_change_ind is null
  and spriden_entity_ind = 'P'
  and spbpers_pidm(+) = spriden_pidm
UNION
select
glbextr_application,
glbextr_selection ,
glbextr_creator_id,
glbextr_user_id,
glbextr_key,
glbextr_activity_date,
spriden_entity_ind,
spriden_pidm,
spriden_id,
spriden_last_name,
null,
spriden_last_name,
null,
null,
null,
null,
'N',
'N',
null,
rtrim(substr(apkdpri.f_select_donor_catg(spriden_pidm),1,4)),
to_number(decode(spriden_pidm,null,null,null)),
DECODE(aoborgn_last_name_contact,'','',
DECODE(aoborgn_mi_contact,'',
       (decode(aoborgn_surname_prfx_contact,'','',aoborgn_surname_prfx_contact || ' ')) ||
       aoborgn_last_name_contact || ', ' || aoborgn_first_name_contact,
    (decode(aoborgn_surname_prfx_contact,'','',aoborgn_surname_prfx_contact || ' ')) ||
     (aoborgn_last_name_contact || ', ' || aoborgn_first_name_contact
      || ' '  || SUBSTR(aoborgn_mi_contact,1,1) || '.'))),
aoborgn_surname_prfx_contact,
aoborgn_last_name_contact,
aoborgn_first_name_contact,
null,
null,
null,
null,
null,
null,
null,
null,
null
from spriden, aoborgn, glbextr
where spriden_pidm = glbextr_key
  and spriden_change_ind is null
  and spriden_entity_ind = 'C'
  and aoborgn_pidm(+) = spriden_pidm "
"BANINST1","APVADRS","Advancement Address Hierarchy View","SELECT SPRADDR_PIDM,
       SPRADDR_ATYP_CODE,
       STVATYP_DESC,
       SPRADDR_HOUSE_NUMBER,
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_STREET_LINE4,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       STVSTAT_DESC,
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       STVCNTY_DESC,
       SPRADDR_NATN_CODE,
       STVNATN_NATION
  FROM SPRADDR X,
       STVNATN,
       STVSTAT,
       STVCNTY,
       STVATYP,
       GURFCLR Y
 WHERE STVATYP_CODE (+) = SPRADDR_ATYP_CODE
   AND STVNATN_CODE (+) = SPRADDR_NATN_CODE
   AND STVSTAT_CODE (+) = SPRADDR_STAT_CODE
   AND STVCNTY_CODE (+) = SPRADDR_CNTY_CODE
   AND X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   SYSDATE BETWEEN X.SPRADDR_FROM_DATE
                     AND X.SPRADDR_TO_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   SYSDATE >= X.SPRADDR_FROM_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   SYSDATE <= X.SPRADDR_TO_DATE))
   AND   Y.GURFCLR_SESSION  =
        (SELECT TO_CHAR(USERENV('SESSIONID'))
         FROM   GUBINST
         WHERE  GUBINST_KEY = 'INST'
         AND    GUBINST_OPERATING_SYSTEM_IND <> 'VMS'
         AND    EXISTS (SELECT 'X'
                        FROM   GURFCLR A
                        WHERE  A.GURFCLR_SESSION =
                               TO_CHAR(USERENV('SESSIONID')))
         UNION
         SELECT '002'
         FROM   GUBINST
         WHERE  GUBINST_KEY = 'INST'
         AND    GUBINST_OPERATING_SYSTEM_IND <> 'VMS'
         AND    NOT EXISTS (SELECT 'X'
                            FROM   GURFCLR B
                            WHERE  B.GURFCLR_SESSION =
                                   TO_CHAR(USERENV('SESSIONID')))
         UNION
         SELECT USERENV('TERMINAL')
         FROM   GUBINST
         WHERE  GUBINST_KEY = 'INST'
         AND    GUBINST_OPERATING_SYSTEM_IND = 'VMS'
         AND    EXISTS (SELECT 'X'
                        FROM   GURFCLR A
                        WHERE  A.GURFCLR_SESSION =
                               USERENV('TERMINAL'))
         UNION
         SELECT '002'
         FROM   GUBINST
         WHERE  GUBINST_KEY = 'INST'
         AND    GUBINST_OPERATING_SYSTEM_IND = 'VMS'
         AND    NOT EXISTS (SELECT 'X'
                            FROM   GURFCLR B
                            WHERE  B.GURFCLR_SESSION =
                                   USERENV('TERMINAL')))
   AND (Y.GURFCLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
          (SELECT MIN(C.GURFCLR_VALUE_ATYP),
		  SUBSTR(MIN(C.GURFCLR_VALUE_ATYP),2,2)
       	     FROM SPRADDR,
	          GURFCLR C
            WHERE C.GURFCLR_SESSION = Y.GURFCLR_SESSION
	      AND SPRADDR_PIDM = X.SPRADDR_PIDM
	      AND SPRADDR_ATYP_CODE = SUBSTR(C.GURFCLR_VALUE_ATYP,2,2)
	      AND SPRADDR_STATUS_IND IS NULL
	      AND ((SPRADDR_TO_DATE IS NULL
	      AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
	      AND   SPRADDR_FROM_DATE IS NOT NULL
              AND   SYSDATE BETWEEN SPRADDR_FROM_DATE
                                AND SPRADDR_TO_DATE)
               OR  (SPRADDR_FROM_DATE IS NOT NULL
	      AND   SPRADDR_TO_DATE IS NULL
              AND   SYSDATE  >= SPRADDR_FROM_DATE)
               OR  (SPRADDR_FROM_DATE IS NULL
	      AND   SPRADDR_TO_DATE IS NOT NULL
              AND   SYSDATE <= SPRADDR_TO_DATE)))"
"BANINST1","APVACTY","","select apracty_pidm,
          apracty_actc_code,
          stvactc_desc,
          apracty_comment,
          stvactc_actp_code,
          stvactp_desc,
          stvactc_accg_code,
          stvaccg_desc,
          count(apracyr_year),
          min(apracyr_year),
          max(apracyr_year)
   from  apracty, stvactc, stvactp, stvaccg, apracyr
   where apracty_pidm      = apracyr_pidm(+)
   and   apracty_actc_code = apracyr_actc_code(+)
   and   apracty_actc_code = stvactc_code
   and   stvactc_actp_code = stvactp_code(+)
   and   stvactc_accg_code = stvaccg_code(+)
   group by apracty_pidm, apracty_actc_code,
	    stvactc_desc, apracty_comment,
            stvactc_actp_code, stvactp_desc,
            stvactc_accg_code, stvaccg_desc
 "
"BANINST1","AOVORGN","","SELECT SPRIDEN_ID,
          SPRIDEN_LAST_NAME,
          AOBORGN_PIDM,
          AOBORGN_EIN,
          AOBORGN_BUSINESS,
          AOBORGN_SICC_CODE,
          AOBORGN_MATCH_PCT,
          AOBORGN_MATCH_ORG_MAX,
          AOBORGN_MATCH_PERSON_MAX,
          AOBORGN_ATYP_CODE,
          AOBORGN_JOBC_CODE,
          AOBORGN_TITLE_CONTACT,
          AOBORGN_SURNAME_PRFX_CONTACT,
          AOBORGN_LAST_NAME_CONTACT,
          AOBORGN_FIRST_NAME_CONTACT,
          AOBORGN_MI_CONTACT,
          AOBORGN_ACTIVITY_DATE,
          AOBORGN_MG_PIDM,
          AOBORGN_EMPL_CNT,
          AOBORGN_EMPL_PT_PROF,
          AOBORGN_EMPL_FT_PROF,
          AOBORGN_TOT_REVENUE,
          AOBORGN_TOT_ASSETS,
          AOBORGN_TOT_EARNINGS,
          AOBORGN_PRE_TAX_PROFIT,
          AOBORGN_GRANT_LOW,
          AOBORGN_GRANT_HIGH,
          AOBORGN_PROP_DEADLINE_MM,
          AOBORGN_PROP_DEADLINE_DD,
          AOBORGN_YEAR_INC,
          AOBORGN_BEG_FY_MM,
          AOBORGN_BEG_FY_DD,
          AOBORGN_END_FY_MM,
          AOBORGN_END_FY_DD,
          AOBORGN_OTH_ED_MG_IND,
          AOBORGN_STATE_ASSOC_MG_IND,
          AOBORGN_DESG_MG_IND,
          AOBORGN_MDIS_CODE,
          AOBORGN_MDIS_MM,
          AOBORGN_MDIS_DD,
          AOBORGN_MDIS_DEADLINE_MM,
          AOBORGN_MDIS_DEADLINE_DD,
          AOBORGN_DUPL_MG_IND,
          AOBORGN_MG_ACK_IND,
          AOBORGN_MGMT_MG_IND,
          AOBORGN_MATCH_PERS_INST_YR,
          AOBORGN_MATCH_ORG_CEILING_YR,
          AOBORGN_MATCH_ORG_EMPL_YR,
          AOBORGN_MATCH_MINIMUM,
          AOBORGN_SOCIETY_NAME,
          AOBORGN_YEAR_MG
FROM SPRIDEN, AOBORGN
WHERE AOBORGN_PIDM = SPRIDEN_PIDM
  AND SPRIDEN_CHANGE_IND IS NULL
  AND SPRIDEN_ENTITY_IND = 'C'
"
"BANINST1","AOVORG1","","select
spriden_pidm,
substr(f_donor_ind(aoborgn_pidm),1,1),
substr(f_prospect_ind(aoborgn_pidm),1,1),
spriden_id,
spriden_last_name,
aoborgn_sicc_code,
x.spraddr_atyp_code,
x.spraddr_house_number,
x.spraddr_street_line1,
x.spraddr_street_line2,
x.spraddr_street_line3,
x.spraddr_street_line4,
x.spraddr_city,
x.spraddr_stat_code,
x.spraddr_zip,
x.spraddr_cnty_code,
x.spraddr_natn_code,
substr(f_geographic_region(x.spraddr_city,x.spraddr_stat_code,
      x.spraddr_zip, x.spraddr_cnty_code,x.spraddr_natn_code,'ALUMGEOD'),1,10),
x.spraddr_delivery_point,
x.spraddr_correction_digit,
x.spraddr_carrier_route,
x.spraddr_from_date,
x.spraddr_to_date,
x.spraddr_status_ind,
decode(v.sprtele_unlist_ind,'Y','*******',v.sprtele_phone_number),
decode(v.sprtele_unlist_ind,'Y','***',v.sprtele_phone_area),
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_phone_ext),
decode(v.sprtele_unlist_ind,'Y','****',v.sprtele_ctry_code_phone),
y.spraddr_atyp_code,
y.spraddr_house_number,
y.spraddr_street_line1,
y.spraddr_street_line2,
y.spraddr_street_line3,
y.spraddr_street_line4,
y.spraddr_city,
y.spraddr_stat_code,
y.spraddr_zip,
y.spraddr_cnty_code,
y.spraddr_natn_code,
substr(f_geographic_region(y.spraddr_city,y.spraddr_stat_code,
       y.spraddr_zip,y.spraddr_cnty_code,y.spraddr_natn_code,'ALUMGEOD'),1,10),
y.spraddr_delivery_point,
y.spraddr_correction_digit,
y.spraddr_carrier_route,
y.spraddr_from_date,
y.spraddr_to_date,
y.spraddr_status_ind,
decode(w.sprtele_unlist_ind,'Y','*******',w.sprtele_phone_number),
decode(w.sprtele_unlist_ind,'Y','***',w.sprtele_phone_area),
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_phone_ext),
decode(w.sprtele_unlist_ind,'Y','****',w.sprtele_ctry_code_phone),
decode(k.sprtele_unlist_ind,'Y','****',k.sprtele_tele_code),
decode(k.sprtele_unlist_ind,'Y','*******',k.sprtele_phone_number),
decode(k.sprtele_unlist_ind,'Y','***',k.sprtele_phone_area),
decode(k.sprtele_unlist_ind,'Y','****',k.sprtele_phone_ext),
decode(k.sprtele_unlist_ind,'Y','****',k.sprtele_ctry_code_phone),
decode(l.sprtele_unlist_ind,'Y','****',l.sprtele_tele_code),
decode(l.sprtele_unlist_ind,'Y','*******',l.sprtele_phone_number),
decode(l.sprtele_unlist_ind,'Y','***',l.sprtele_phone_area),
decode(l.sprtele_unlist_ind,'Y','****',l.sprtele_phone_ext),
decode(l.sprtele_unlist_ind,'Y','****',l.sprtele_ctry_code_phone),
decode(m.sprtele_unlist_ind,'Y','****',m.sprtele_tele_code),
decode(m.sprtele_unlist_ind,'Y','*******',m.sprtele_phone_number),
decode(m.sprtele_unlist_ind,'Y','***',m.sprtele_phone_area),
decode(m.sprtele_unlist_ind,'Y','****',m.sprtele_phone_ext),
decode(m.sprtele_unlist_ind,'Y','****',m.sprtele_ctry_code_phone),
substr(f_check_for_more('PHONE',aoborgn_pidm),1,1),
a.atvdonr_code,
b.atvdonr_code,
c.atvdonr_code,
d.atvdonr_code,
substr(f_check_for_more('DONOR', aoborgn_pidm),1,1),
substr(f_primary_contact_information(aoborgn_pidm,'SURNAME_PREFIX'),1,60),
substr(f_primary_contact_information(aoborgn_pidm,'LAST_NAME'),1,60),
substr(f_primary_contact_information(aoborgn_pidm,'FIRST_NAME'),1,60),
substr(f_primary_contact_information(aoborgn_pidm,'MIDDLE_NAME'),1,60),
substr(f_primary_contact_information(aoborgn_pidm,'PREFIX_NAME'),1,20),
substr(f_primary_contact_information(aoborgn_pidm,'ATYP_CODE'),1,2),
substr(f_primary_contact_information(aoborgn_pidm,'HOUSE_NUMBER'),1,10),
substr(f_primary_contact_information(aoborgn_pidm,'STREET_LINE1'),1,75),
substr(f_primary_contact_information(aoborgn_pidm,'STREET_LINE2'),1,75),
substr(f_primary_contact_information(aoborgn_pidm,'STREET_LINE3'),1,75),
substr(f_primary_contact_information(aoborgn_pidm,'STREET_LINE4'),1,75),
substr(f_primary_contact_information(aoborgn_pidm,'CITY'),1,50),
substr(f_primary_contact_information(aoborgn_pidm,'STATE'),1,3),
substr(f_primary_contact_information(aoborgn_pidm,'ZIP'),1,30),
substr(f_primary_contact_information(aoborgn_pidm,'COUNTY'),1,5),
substr(f_primary_contact_information(aoborgn_pidm,'NATION'),1,5),
substr(f_primary_contact_information(aoborgn_pidm,'PHONE_NUMBER'),1,12),
substr(f_primary_contact_information(aoborgn_pidm,'PHONE_AREA'),1,6),
substr(f_primary_contact_information(aoborgn_pidm,'PHONE_EXT'),1,10),
substr(f_primary_contact_information(aoborgn_pidm,'PHONE_CTRY_CODE_PHONE'),1,4),
--aoborgn_surname_prfx_contact,
--aoborgn_last_name_contact,
--aoborgn_first_name_contact,
--aoborgn_mi_contact,
--aoborgn_prefix_contact,
--aoborgn_atyp_code,
--e.spraddr_house_number,
--e.spraddr_street_line1,
--e.spraddr_street_line2,
--e.spraddr_street_line3,
--e.spraddr_street_line4,
--e.spraddr_city,
--e.spraddr_stat_code,
--e.spraddr_zip,
--e.spraddr_cnty_code,
--e.spraddr_natn_code,
--decode(f.sprtele_unlist_ind,'Y','*******',f.sprtele_phone_number),
--decode(f.sprtele_unlist_ind,'Y','***',f.sprtele_phone_area),
--decode(f.sprtele_unlist_ind,'Y','****',f.sprtele_phone_ext),
--decode(f.sprtele_unlist_ind,'Y','****',f.sprtele_ctry_code_phone),
substr(f_secondary_contact_type(aoborgn_pidm,1),1,3),
f_secondary_contact_pidm(aoborgn_pidm,1),
substr(f_secondary_contact_name(aoborgn_pidm,1,'SURNAME_PREFIX'),1,60),
substr(f_secondary_contact_name(aoborgn_pidm,1,'LAST_NAME'),1,60),
substr(f_secondary_contact_name(aoborgn_pidm,1,'FIRST_NAME'),1,60),
substr(f_secondary_contact_name(aoborgn_pidm,1,'MIDDLE_NAME'),1,60),
substr(f_secondary_contact_name(aoborgn_pidm,1,'PREFIX_NAME'),1,20),
substr(f_secondary_contact_address(aoborgn_pidm,1,'ATYP_CODE'),1,2),
substr(f_secondary_contact_address(aoborgn_pidm,1,'HOUSE_NUMBER'),1,10),
substr(f_secondary_contact_address(aoborgn_pidm,1,'STREET_LINE1'),1,75),
substr(f_secondary_contact_address(aoborgn_pidm,1,'STREET_LINE2'),1,75),
substr(f_secondary_contact_address(aoborgn_pidm,1,'STREET_LINE3'),1,75),
substr(f_secondary_contact_address(aoborgn_pidm,1,'STREET_LINE4'),1,75),
substr(f_secondary_contact_address(aoborgn_pidm,1,'CITY'),1,50),
substr(f_secondary_contact_address(aoborgn_pidm,1,'STATE'),1,3),
substr(f_secondary_contact_address(aoborgn_pidm,1,'ZIP'),1,30),
substr(f_secondary_contact_address(aoborgn_pidm,1,'COUNTY'),1,5),
substr(f_secondary_contact_address(aoborgn_pidm,1,'NATION'),1,5),
substr(f_secondary_contact_address(aoborgn_pidm,1,'PHONE_NUMBER'),1,12),
substr(f_secondary_contact_address(aoborgn_pidm,1,'PHONE_AREA'),1,6),
substr(f_secondary_contact_address(aoborgn_pidm,1,'PHONE_EXT'),1,10),
substr(f_secondary_contact_address(aoborgn_pidm,1,'PHONE_CTRY_CODE_PHONE'),1,4),
substr(f_secondary_contact_type(aoborgn_pidm,2),1,3),
f_secondary_contact_pidm(aoborgn_pidm,2),
substr(f_secondary_contact_name(aoborgn_pidm,2,'SURNAME_PREFIX'),1,60),
substr(f_secondary_contact_name(aoborgn_pidm,2,'LAST_NAME'),1,60),
substr(f_secondary_contact_name(aoborgn_pidm,2,'FIRST_NAME'),1,60),
substr(f_secondary_contact_name(aoborgn_pidm,2,'MIDDLE_NAME'),1,60),
substr(f_secondary_contact_name(aoborgn_pidm,2,'PREFIX_NAME'),1,20),
substr(f_secondary_contact_address(aoborgn_pidm,2,'ATYP_CODE'),1,2),
substr(f_secondary_contact_address(aoborgn_pidm,2,'HOUSE_NUMBER'),1,10),
substr(f_secondary_contact_address(aoborgn_pidm,2,'STREET_LINE1'),1,75),
substr(f_secondary_contact_address(aoborgn_pidm,2,'STREET_LINE2'),1,75),
substr(f_secondary_contact_address(aoborgn_pidm,2,'STREET_LINE3'),1,75),
substr(f_secondary_contact_address(aoborgn_pidm,2,'STREET_LINE4'),1,75),
substr(f_secondary_contact_address(aoborgn_pidm,2,'CITY'),1,50),
substr(f_secondary_contact_address(aoborgn_pidm,2,'STATE'),1,3),
substr(f_secondary_contact_address(aoborgn_pidm,2,'ZIP'),1,30),
substr(f_secondary_contact_address(aoborgn_pidm,2,'COUNTY'),1,5),
substr(f_secondary_contact_address(aoborgn_pidm,2,'NATION'),1,5),
substr(f_secondary_contact_address(aoborgn_pidm,2,'PHONE_NUMBER'),1,12),
substr(f_secondary_contact_address(aoborgn_pidm,2,'PHONE_AREA'),1,6),
substr(f_secondary_contact_address(aoborgn_pidm,2,'PHONE_EXT'),1,10),
substr(f_secondary_contact_address(aoborgn_pidm,2,'PHONE_CTRY_CODE_PHONE'),1,4),
substr(f_fund_info(aoborgn_pidm,1),1,6),
substr(f_fund_info(aoborgn_pidm,2),1,6),
substr(f_fund_info(aoborgn_pidm,3),1,6),
substr(f_check_for_more('FUND', aoborgn_pidm),1,1),
to_number(substr(f_matching_gift_company_name(aoborgn_pidm,'PIDM'),1,8)),
substr(f_matching_gift_company_name(aoborgn_pidm,'ID'),1,9),
substr(f_matching_gift_company_name(aoborgn_pidm,'NAME'),1,60),
f_orgn_match_gift_info(nvl(aoborgn_mg_pidm,aoborgn_pidm),1),
substr(f_multiple_ratios(aoborgn_pidm),1,1),
f_orgn_match_gift_info(nvl(aoborgn_mg_pidm,aoborgn_pidm),2),
f_orgn_match_gift_info(nvl(aoborgn_mg_pidm,aoborgn_pidm),3)
from spriden, spbpers, spraddr x, spraddr y,
--     spraddr e, sprtele f,
     sprtele k, sprtele l, sprtele m,
     sprtele v, sprtele w, atvdonr a,
     atvdonr b, atvdonr c, atvdonr d,
     aoborgn
where spbpers_pidm(+) = spriden_pidm
  and spriden_change_ind is null
  and spriden_pidm = aoborgn_pidm
  and x.rowid(+) = f_get_address_rowid
      (aoborgn_pidm,'ALUMADDR','A',sysdate,1,'AH',null)
  and v.rowid(+) = f_get_address_telephone_rowid
      (aoborgn_pidm,'ALUMADDR','A',sysdate,1,'AH',null)
  and y.rowid(+) = f_get_address_rowid
      (aoborgn_pidm,'ALUMADDR','A',sysdate,2,'AH',null)
  and w.rowid(+) = f_get_address_telephone_rowid
      (aoborgn_pidm,'ALUMADDR','A',sysdate,2,'AH',null)
  and k.rowid(+) = f_get_sprtele_rowid
      (aoborgn_pidm,'ALUMPHONE','A',null,1)
  and l.rowid(+) = f_get_sprtele_rowid
      (aoborgn_pidm,'ALUMPHONE','A',null,2)
  and m.rowid(+) = f_get_sprtele_rowid
      (aoborgn_pidm,'ALUMPHONE','A',null,3)
--  and e.rowid(+) = f_get_address_rowid
--      (aoborgn_pidm,'ALUMADDR','A',sysdate,null,'AP',aoborgn_atyp_code)
--  and f.rowid(+) = f_get_address_telephone_rowid
--      (aoborgn_pidm,'ALUMADDR','A',sysdate,null,'AP',aoborgn_atyp_code)
  and a.rowid(+) = f_donor_categoryes(aoborgn_pidm,1)
  and b.rowid(+) = f_donor_categoryes(aoborgn_pidm,2)
  and c.rowid(+) = f_donor_categoryes(aoborgn_pidm,3)
  and d.rowid(+) = f_donor_categoryes(aoborgn_pidm,4)"
"BANINST1","AOVIDEN","","SELECT  SPRIDEN_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_FIRST_NAME,
        SPRIDEN_MI,
        SPRIDEN_CHANGE_IND,
        rtrim(substr(apkdpri.f_select_donor_catg(SPRIDEN_PIDM),1,4)),
        APBCONS_PREF_CLAS,
        APBCONS_COLL_CODE_PREF,
        DECODE(SPRADDR_STATUS_IND,'I','',SPRADDR_CITY),
        DECODE(SPRADDR_STATUS_IND,'I','',SPRADDR_STAT_CODE),
        DECODE(SPRADDR_STATUS_IND,'I','',SPRADDR_ZIP),
        SPBPERS_NAME_PREFIX,
        SPBPERS_NAME_SUFFIX,
        SPBPERS_SEX,
        SPBPERS_DEAD_IND,
        SPRIDEN_NTYP_CODE
FROM   SPRADDR, SPBPERS, SPRIDEN, APBCONS
WHERE  SPRIDEN_PIDM = APBCONS_PIDM
AND  ( SPRADDR_PIDM = SPRIDEN_PIDM
   AND SPRADDR_ATYP_CODE = APBCONS_ATYP_CODE_PREF
     AND  ((((   SPRADDR_FROM_DATE IS NULL
          AND  SPRADDR_TO_DATE IS NULL)
      OR  (    SPRADDR_FROM_DATE IS NOT NULL
          AND  SPRADDR_TO_DATE IS NOT NULL
          AND  SYSDATE BETWEEN SPRADDR_FROM_DATE
                         AND   SPRADDR_TO_DATE )
      OR  (    SPRADDR_FROM_DATE IS NULL
          AND  SPRADDR_TO_DATE IS NOT NULL
          AND  SYSDATE <= SPRADDR_TO_DATE)
      OR  (    SPRADDR_FROM_DATE IS NOT NULL
          AND  SPRADDR_TO_DATE IS NULL
          AND  SYSDATE >= SPRADDR_FROM_DATE ) )
       AND ( SPRADDR_STATUS_IND = 'A' or
	     SPRADDR_STATUS_IND IS NULL))
     OR  SPRADDR_STATUS_IND = 'I' ))
AND SPRIDEN_PIDM = SPBPERS_PIDM(+)

 "
"BANINST1","AOVCONT","","SELECT
     AORCONT_PIDM,
     AORCONT_SEQ_NO,
     AORCONT_CONTACT_PIDM,
     AORCONT_LAST_NAME,
     AORCONT_FIRST_NAME,
     AORCONT_MI,
     AORCONT_OCON_CODE,
     AORCONT_JOBC_CODE,
     AORCONT_TITLE,
     AORCONT_ATYP_CODE,
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STREET_LINE1'),1,75),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STREET_LINE2'),1,75),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STREET_LINE3'),1,75),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STREET_LINE4'),1,75),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'CITY'),1,50),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STATE'),1,3),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'ZIP'),1,30),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'COUNTY'),1,5),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'NATION'),1,5),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_tele_code,aorcont_tele_src_ind,aorcont_seq_no,'PHONE_AREA','1'),1,6),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_tele_code,aorcont_tele_src_ind,aorcont_seq_no,'PHONE_NUMBER','1'),1,12),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_tele_code,aorcont_tele_src_ind,aorcont_seq_no,'PHONE_EXT','1'),1,10),
/*   AORCONT_ADDR_LINE1,
     AORCONT_ADDR_LINE2,
     AORCONT_ADDR_LINE3,
     AORCONT_ADDR_LINE4,
     AORCONT_ADDR_CITY,
     AORCONT_STAT_CODE_ADDR,
     AORCONT_ZIPC_CODE_ADDR,
     AORCONT_CNTY_CODE_ADDR,
     AORCONT_NATN_CODE_ADDR,
     AORCONT_PHONE_AREA,
     AORCONT_PHONE_NUMBER,
     AORCONT_PHONE_EXT,
*/
     AORCONT_DATE,
     AORCONT_ACTIVITY_DATE,
     AORCONT_DELIVERY_POINT,
     AORCONT_CORRECTION_DIGIT,
     AORCONT_CARRIER_ROUTE,
     AORCONT_CONT_ORG_IND,
     AORCONT_SURNAME_PREFIX,
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'HOUSE_NUMBER'),1,10),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_tele_code,aorcont_tele_src_ind,aorcont_seq_no,'PHONE_CTRY_CODE_PHONE','1'),1,4),
/*   AORCONT_HOUSE_NUMBER,
     AORCONT_CTRY_CODE_PHONE,
*/
     AORCONT_NAME_PREFIX,
     AORCONT_NAME_SUFFIX,
     AORCONT_PRIMARY_IND,
     AORCONT_DECEASED_IND,
     AORCONT_END_DATE,
     AORCONT_EMAL_CODE,
     substr(f_contact_emal_address(aorcont_contact_pidm,aorcont_pidm,aorcont_emal_code,aorcont_emal_src_ind,aorcont_seq_no,'EMAL_ADDR'),1,128),
/*   AORCONT_EMAIL_ADDRESS,
*/
     AORCONT_EMAL_SRC_IND,
     AORCONT_TELE_CODE,
     AORCONT_TELE_SRC_IND,
     AORCONT_FAX_CODE,
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_fax_code,aorcont_fax_src_ind,aorcont_seq_no,'FAX_AREA','2'),1,6),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_fax_code,aorcont_fax_src_ind,aorcont_seq_no,'FAX_NUMBER','2'),1,12),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_fax_code,aorcont_fax_src_ind,aorcont_seq_no,'FAX_EXT','2'),1,10),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_fax_code,aorcont_fax_src_ind,aorcont_seq_no,'FAX_CTRY_CODE_PHONE','2'),1,4),
/*   AORCONT_FAX_AREA,
     AORCONT_FAX_NUMBER,
     AORCONT_FAX_EXT,
     AORCONT_CTRY_CODE_FAX,
*/
     AORCONT_FAX_SRC_IND,
     AORCONT_NOTES
FROM  AORCONT
WHERE AORCONT_CONTACT_PIDM IS NULL
UNION ALL
SELECT
     AORCONT_PIDM,
     AORCONT_SEQ_NO,
     AORCONT_CONTACT_PIDM,
     SPRIDEN_LAST_NAME,
     SPRIDEN_FIRST_NAME,
     SPRIDEN_MI,
     AORCONT_OCON_CODE,
     AORCONT_JOBC_CODE,
     AORCONT_TITLE,
     AORCONT_ATYP_CODE,
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STREET_LINE1'),1,75),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STREET_LINE2'),1,75),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STREET_LINE3'),1,75),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STREET_LINE4'),1,75),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'CITY'),1,50),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'STATE'),1,3),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'ZIP'),1,30),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'COUNTY'),1,5),
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'NATION'),1,5),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_tele_code,aorcont_tele_src_ind,aorcont_seq_no,'PHONE_AREA','1'),1,6),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_tele_code,aorcont_tele_src_ind,aorcont_seq_no,'PHONE_NUMBER','1'),1,12),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_tele_code,aorcont_tele_src_ind,aorcont_seq_no,'PHONE_EXT','1'),1,10),
     AORCONT_DATE,
     AORCONT_ACTIVITY_DATE,
     AORCONT_DELIVERY_POINT,
     AORCONT_CORRECTION_DIGIT,
     AORCONT_CARRIER_ROUTE,
     AORCONT_CONT_ORG_IND,
     SPRIDEN_SURNAME_PREFIX,
     substr(f_contact_address(aorcont_contact_pidm,aorcont_pidm,aorcont_atyp_code,aorcont_cont_org_ind,aorcont_seq_no,'HOUSE_NUMBER'),1,10),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_tele_code,aorcont_tele_src_ind,aorcont_seq_no,'PHONE_CTRY_CODE_PHONE','1'),1,4),
/* Begin CR-000104583
     AORCONT_NAME_PREFIX,
     AORCONT_NAME_SUFFIX,  */
     SPBPERS_NAME_PREFIX,
     SPBPERS_NAME_SUFFIX,
/* End CR-000104583 */
     AORCONT_PRIMARY_IND,
     DECODE(SPBPERS_DEAD_IND,'Y','1','N','0','0'),
     AORCONT_END_DATE,
     AORCONT_EMAL_CODE,
     substr(f_contact_emal_address(aorcont_contact_pidm,aorcont_pidm,aorcont_emal_code,aorcont_emal_src_ind,aorcont_seq_no,'EMAL_ADDR'),1,128),
     AORCONT_EMAL_SRC_IND,
     AORCONT_TELE_CODE,
     AORCONT_TELE_SRC_IND,
     AORCONT_FAX_CODE,
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_fax_code,aorcont_fax_src_ind,aorcont_seq_no,'FAX_AREA','2'),1,6),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_fax_code,aorcont_fax_src_ind,aorcont_seq_no,'FAX_NUMBER','2'),1,12),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_fax_code,aorcont_fax_src_ind,aorcont_seq_no,'FAX_EXT','2'),1,10),
     substr(f_contact_telephone(aorcont_contact_pidm,aorcont_pidm,aorcont_fax_code,aorcont_fax_src_ind,aorcont_seq_no,'FAX_CTRY_CODE_PHONE','2'),1,4),
     AORCONT_FAX_SRC_IND,
     AORCONT_NOTES
FROM  SPRIDEN, AORCONT, SPBPERS
WHERE AORCONT_CONTACT_PIDM IS NOT NULL
 AND SPRIDEN_PIDM = AORCONT_CONTACT_PIDM
 AND SPBPERS_PIDM(+) = AORCONT_CONTACT_PIDM
 AND SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","AOVCOMP","View of Organizations and their Address.","SELECT SPRIDEN_PIDM,
       SPRIDEN_ID,
       SPRIDEN_LAST_NAME,
       SPRIDEN_CHANGE_IND,
       (SELECT SPRADDR_CITY
          FROM SPRADDR
         WHERE     SPRADDR_PIDM      = AOBORGN_PIDM
               AND SPRADDR_ATYP_CODE = AOBORGN_PREF_ATYP_CODE
               AND SPRADDR_SEQNO     = AOBORGN_PREF_ATYP_SEQNO),
       (SELECT SPRADDR_STAT_CODE
          FROM SPRADDR
         WHERE     SPRADDR_PIDM      = AOBORGN_PIDM
               AND SPRADDR_ATYP_CODE = AOBORGN_PREF_ATYP_CODE
               AND SPRADDR_SEQNO     = AOBORGN_PREF_ATYP_SEQNO),
       (SELECT SPRADDR_ZIP
          FROM SPRADDR
         WHERE     SPRADDR_PIDM      = AOBORGN_PIDM
               AND SPRADDR_ATYP_CODE = AOBORGN_PREF_ATYP_CODE
               AND SPRADDR_SEQNO     = AOBORGN_PREF_ATYP_SEQNO),
       SPRIDEN_NTYP_CODE,
       SPRIDEN_ACTIVITY_DATE,
       AOBORGN_INACT_IND
  FROM SPRIDEN, AOBORGN
 WHERE SPRIDEN_PIDM = AOBORGN_PIDM AND AOBORGN_ATYP_CODE IS NULL
UNION
SELECT  SPRIDEN_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_CHANGE_IND,
       (SELECT SPRADDR_CITY
          FROM SPRADDR
         WHERE     SPRADDR_PIDM      = AOBORGN_PIDM
               AND SPRADDR_ATYP_CODE = AOBORGN_PREF_ATYP_CODE
               AND SPRADDR_SEQNO     = AOBORGN_PREF_ATYP_SEQNO),
       (SELECT SPRADDR_STAT_CODE
          FROM SPRADDR
         WHERE     SPRADDR_PIDM      = AOBORGN_PIDM
               AND SPRADDR_ATYP_CODE = AOBORGN_PREF_ATYP_CODE
               AND SPRADDR_SEQNO     = AOBORGN_PREF_ATYP_SEQNO),
       (SELECT SPRADDR_ZIP
          FROM SPRADDR
         WHERE     SPRADDR_PIDM      = AOBORGN_PIDM
               AND SPRADDR_ATYP_CODE = AOBORGN_PREF_ATYP_CODE
               AND SPRADDR_SEQNO     = AOBORGN_PREF_ATYP_SEQNO),
        SPRIDEN_NTYP_CODE,
        SPRIDEN_ACTIVITY_DATE,
        AOBORGN_INACT_IND
FROM   SPRADDR, SPRIDEN, AOBORGN
WHERE  SPRIDEN_PIDM = AOBORGN_PIDM
AND  ( SPRIDEN_PIDM = SPRADDR_PIDM
   AND SPRADDR_ATYP_CODE = AOBORGN_ATYP_CODE
   AND  (((   SPRADDR_FROM_DATE IS NULL
         AND  SPRADDR_TO_DATE IS NULL)
     OR  (    SPRADDR_FROM_DATE IS NOT NULL
         AND  SPRADDR_TO_DATE IS NOT NULL
         AND  trunc(SYSDATE) BETWEEN trunc(SPRADDR_FROM_DATE)
         AND  trunc(SPRADDR_TO_DATE) )
     OR  (    SPRADDR_FROM_DATE IS NULL
         AND  SPRADDR_TO_DATE IS NOT NULL
         AND  trunc(SYSDATE) <= trunc(SPRADDR_TO_DATE ))
     OR  (    SPRADDR_FROM_DATE IS NOT NULL
         AND  SPRADDR_TO_DATE IS NULL
         AND  trunc(SYSDATE) >= trunc(SPRADDR_FROM_DATE) ) )
     AND ( SPRADDR_STATUS_IND = 'A' or
           SPRADDR_STATUS_IND IS NULL )))
UNION
SELECT  SPRIDEN_PIDM,
        SPRIDEN_ID,
        SPRIDEN_LAST_NAME,
        SPRIDEN_CHANGE_IND,
        '',
        '',
        '',
        SPRIDEN_NTYP_CODE ,
        SPRIDEN_ACTIVITY_DATE,
        AOBORGN_INACT_IND
FROM   SPRADDR, SPRIDEN, AOBORGN
WHERE  SPRIDEN_PIDM = AOBORGN_PIDM
AND   ((SPRIDEN_PIDM = SPRADDR_PIDM AND
        SPRADDR_ATYP_CODE = AOBORGN_ATYP_CODE)
        AND ( ((SPRADDR_FROM_DATE IS NOT NULL AND
                SPRADDR_TO_DATE IS NOT NULL AND
                trunc(SYSDATE) NOT BETWEEN trunc(SPRADDR_FROM_DATE) AND
                                    trunc(SPRADDR_TO_DATE) )
                   OR
               (SPRADDR_FROM_DATE IS NULL AND
                SPRADDR_TO_DATE IS NOT NULL AND
                trunc(SYSDATE) > trunc(SPRADDR_TO_DATE) )
                  OR
	       (SPRADDR_FROM_DATE IS NOT NULL AND
                SPRADDR_TO_DATE IS NULL AND
                trunc(SYSDATE) < trunc(SPRADDR_FROM_DATE) ) )
                OR (SPRADDR_STATUS_IND = 'I'
                 /* Begin Defect #CMS-DFCT85969   */
                     AND (SELECT DECODE ((SELECT DISTINCT 1 FROM spraddr
                           WHERE  spraddr_pidm = spriden_pidm
                             AND  spraddr_atyp_code =  aoborgn_atyp_code
                             AND  NVL (spraddr_status_ind, 'A') = 'A'),1,1,0) FROM DUAL)=0)
                 /* End Defect #CMS-DFCT85969     */
         ))
 "
"BANINST1","AMVSTAF","","SELECT AMRSTAF_PIDM ,
          AMRSTAF_STFT_CODE ,
          ATVSTFT_DESC ,
          AMRSTAF_IDEN_CODE ,
          GURIDEN_DESC ,
          GURIDEN_USER_ID ,
          AMRSTAF_ACTIVITY_DATE ,
          AMRSTAF_SOLICIT_IND ,
          AMRSTAF_PRIMARY_IND
FROM AMRSTAF, ATVSTFT, GURIDEN
WHERE AMRSTAF_STFT_CODE = ATVSTFT_CODE
  AND AMRSTAF_IDEN_CODE = GURIDEN_IDEN_CODE

 "
"BANINST1","AMVPRSC","","SELECT AMRPRSC_PIDM ,
          AMRPRSC_IDEN_CODE_RSCH ,
          GURIDEN_DESC ,
          GURIDEN_USER_ID ,
          AMRPRSC_PREPARED_DATE ,
          AMRPRSC_ACTIVITY_DATE
FROM AMRPRSC, GURIDEN
WHERE AMRPRSC_IDEN_CODE_RSCH = GURIDEN_IDEN_CODE

 "
"BANINST1","AMVPRS1","","select
amrinfo_pidm,
spriden_entity_ind,
k.amrexrt_exrs_code,
k.amrexrt_ext_score,
k.amrexrt_ext_value,
k.amrexrt_ext_level,
l.amrexrt_exrs_code,
l.amrexrt_ext_score,
l.amrexrt_ext_value,
l.amrexrt_ext_level,
m.amrexrt_exrs_code,
m.amrexrt_ext_score,
m.amrexrt_ext_value,
m.amrexrt_ext_level,
substr(f_check_for_more('EXTERNAL SOURCE', amrinfo_pidm),1,1),
amrinfo_refr_code,
amrinfo_status,
amrinfo_prosp_rate,
n.amrprrt_rtgt_code,
n.amrprrt_rate_code,
n.amrprrt_rscr_code,
n.amrprrt_iden_code,
substr(f_iden_desc(n.amrprrt_iden_code),1,60),
o.amrprrt_rtgt_code,
o.amrprrt_rate_code,
o.amrprrt_rscr_code,
o.amrprrt_iden_code,
substr(f_iden_desc(o.amrprrt_iden_code),1,60),
p.amrprrt_rtgt_code,
p.amrprrt_rate_code,
p.amrprrt_rscr_code,
p.amrprrt_iden_code,
substr(f_iden_desc(p.amrprrt_iden_code),1,60),
q.amrprrt_rtgt_code,
q.amrprrt_rate_code,
q.amrprrt_rscr_code,
q.amrprrt_iden_code,
substr(f_iden_desc(q.amrprrt_iden_code),1,60),
r.amrprrt_rtgt_code,
r.amrprrt_rate_code,
r.amrprrt_rscr_code,
r.amrprrt_iden_code,
substr(f_iden_desc(r.amrprrt_iden_code),1,60),
substr(f_check_for_more('RATING', amrinfo_pidm),1,1),
s.amrstaf_primary_ind,
s.amrstaf_stft_code,
s.amrstaf_iden_code,
substr(f_iden_desc(s.amrstaf_iden_code),1,60),
t.amrstaf_stft_code,
t.amrstaf_iden_code,
substr(f_iden_desc(t.amrstaf_iden_code),1,60),
u.amrstaf_stft_code,
u.amrstaf_iden_code,
substr(f_iden_desc(u.amrstaf_iden_code),1,60),
v.amrstaf_stft_code,
v.amrstaf_iden_code,
substr(f_iden_desc(v.amrstaf_iden_code),1,60),
w.amrstaf_stft_code,
w.amrstaf_iden_code,
substr(f_iden_desc(w.amrstaf_iden_code),1,60),
substr(f_check_for_more('STAFF ASSIGNMENT', amrinfo_pidm),1,1),
a.amrprin_proj_code,
a.amrprin_givh_code,
b.amrprin_proj_code,
b.amrprin_givh_code,
c.amrprin_proj_code,
c.amrprin_givh_code,
d.amrprin_proj_code,
d.amrprin_givh_code,
e.amrprin_proj_code,
e.amrprin_givh_code,
substr(f_check_for_more('PROJECT', amrinfo_pidm),1,1),
f.amrcont_iden_code,
substr(f_iden_desc(f.amrcont_iden_code),1,60),
f.amrcont_contact_date,
f.amrcont_contact,
f.amrcont_move_code,
f.amrcont_ask_amt,
f.amrcont_tickler,
f.amrcont_tick_date,
f.amrcont_iden_code_asgn,
substr(f_iden_desc(f.amrcont_iden_code_asgn),1,60),
f.amrcont_proj_code,
f.amrcont_item_refno,
g.amrcont_iden_code,
substr(f_iden_desc(g.amrcont_iden_code),1,60),
g.amrcont_contact_date,
g.amrcont_contact,
g.amrcont_move_code,
g.amrcont_ask_amt,
g.amrcont_tickler,
g.amrcont_tick_date,
g.amrcont_iden_code_asgn,
substr(f_iden_desc(g.amrcont_iden_code_asgn),1,60),
g.amrcont_proj_code,
g.amrcont_item_refno,
h.amrcont_iden_code,
substr(f_iden_desc(h.amrcont_iden_code),1,60),
h.amrcont_contact_date,
h.amrcont_contact,
h.amrcont_move_code,
h.amrcont_ask_amt,
h.amrcont_tickler,
h.amrcont_tick_date,
h.amrcont_iden_code_asgn,
substr(f_iden_desc(h.amrcont_iden_code_asgn),1,60),
h.amrcont_proj_code,
h.amrcont_item_refno,
substr(f_check_for_more('CONTACT', amrinfo_pidm),1,1),
/*MC:1.0* [BEGIN]*/
amrinfo_stat_date,
amrinfo_stat_iden_code,
amrinfo_user_id
/*MC:1.0* [END]*/
from  amrexrt k, amrexrt l, amrexrt m,
      amrprrt n, amrprrt o, amrprrt p,
      amrprrt q, amrprrt r,
      amrstaf s, amrstaf t, amrstaf u,
      amrstaf v, amrstaf w,
      amrprin a, amrprin b, amrprin c,
      amrprin d, amrprin e, amrcont f,
      amrcont g, amrcont h, spriden, amrinfo
where k.rowid(+)= f_external_source_info(amrinfo_pidm,1)
  and l.rowid(+)= f_external_source_info(amrinfo_pidm,2)
  and m.rowid(+)= f_external_source_info(amrinfo_pidm,3)
  and n.rowid(+)= f_rating_info(amrinfo_pidm,1)
  and o.rowid(+)= f_rating_info(amrinfo_pidm,2)
  and p.rowid(+)= f_rating_info(amrinfo_pidm,3)
  and q.rowid(+)= f_rating_info(amrinfo_pidm,4)
  and r.rowid(+)= f_rating_info(amrinfo_pidm,5)
  and s.rowid(+)= f_staff_assignment_info(amrinfo_pidm,'PRIMARY',null)
  and t.rowid(+)= f_staff_assignment_info(amrinfo_pidm,null,1)
  and u.rowid(+)= f_staff_assignment_info(amrinfo_pidm,null,2)
  and v.rowid(+)= f_staff_assignment_info(amrinfo_pidm,null,3)
  and w.rowid(+)= f_staff_assignment_info(amrinfo_pidm,null,4)
  and a.rowid(+)= f_project_code_info(amrinfo_pidm,1)
  and b.rowid(+)= f_project_code_info(amrinfo_pidm,2)
  and c.rowid(+)= f_project_code_info(amrinfo_pidm,3)
  and d.rowid(+)= f_project_code_info(amrinfo_pidm,4)
  and e.rowid(+)= f_project_code_info(amrinfo_pidm,5)
  and f.rowid(+)= f_contact_info(amrinfo_pidm,1)
  and g.rowid(+)= f_contact_info(amrinfo_pidm,2)
  and h.rowid(+)= f_contact_info(amrinfo_pidm,3)
  and spriden_change_ind is null
  and spriden_pidm = amrinfo_pidm"
"BANINST1","AMVPEXP","","SELECT AMRPEXP_PIDM ,
          AMRPEXP_IDEN_CODE ,
          GURIDEN_DESC ,
          GURIDEN_USER_ID ,
          AMRPEXP_EXPN_CODE ,
          GTVEXPN_DESC ,
          AMRPEXP_GRP_SEQ_NO ,
          AMRPEXP_ACTIVITY_DATE ,
          AMRPEXP_EXPN_AMT
FROM AMRPEXP, GURIDEN, GTVEXPN
WHERE AMRPEXP_EXPN_CODE = GTVEXPN_CODE
  AND AMRPEXP_IDEN_CODE = GURIDEN_IDEN_CODE

 "
"BANINST1","AMVPCMT","","SELECT AMRCONF_PIDM,
          AMRCONF_IDEN_CODE,
          GURIDEN_DESC ,
          GURIDEN_USER_ID ,
          AMRCONF_GRP_SEQ_NO,
          AMRCONF_CONFID_IND,
          AMRCONF_COMMENT,
	  AOKLONG.F_LONGTOCHAR_AMRCONF(AMRCONF.ROWID)
FROM AMRCONF, GURIDEN
WHERE AMRCONF_IDEN_CODE = GURIDEN_IDEN_CODE
 AND  ( ( AMRCONF_CONFID_IND IS NULL )  OR
        ( AMRCONF_CONFID_IND = 'Y' and AMRCONF_USER_ID = USER ) OR
        ( AMRCONF_CONFID_IND = 'Y' and exists
                    (SELECT 'X'
		     FROM  AUBCTRL
		     WHERE AUBCTRL_USER = USER )) )

 "
"BANINST1","AMVINFO","","SELECT SPRIDEN_ID,
          DECODE (SPRIDEN_ENTITY_IND, 'C', SPRIDEN_LAST_NAME,
          DECODE(SPRIDEN_SURNAME_PREFIX,'','',SPRIDEN_SURNAME_PREFIX||' ') ||
          SPRIDEN_LAST_NAME || ', ' || SPRIDEN_FIRST_NAME || ' ' ||
          SPRIDEN_MI),
         AMRINFO_PIDM ,
         SPRIDEN_SURNAME_PREFIX,
         SPRIDEN_LAST_NAME,
         SPRIDEN_FIRST_NAME,
         AMRINFO_REFR_CODE ,
         ATVREFR_DESC ,
         AMRINFO_SYS_IND ,
         AMRINFO_STATUS ,
         AMRINFO_ACTIVITY_DATE ,
         AMRINFO_RATE_ENTRY_DATE ,
         AMRINFO_REFERENCE ,
         AMRINFO_PROSP_RATE ,
         AMRINFO_TARGET_ASK_DATE,
         /*MC:1.0* [BEGIN]*/
         AMRINFO_STAT_DATE,
		 AMRINFO_STAT_IDEN_CODE,
         AMRINFO_USER_ID
         /*MC:1.0* [END]*/
FROM SPRIDEN, AMRINFO, ATVREFR
WHERE AMRINFO_PIDM = SPRIDEN_PIDM
  AND SPRIDEN_CHANGE_IND IS NULL
  AND AMRINFO_REFR_CODE = ATVREFR_CODE
"
"BANINST1","AMVGEOR","","SELECT AMRINFO_PIDM, SPRADDR_ATYP_CODE,
          SORGEOR_GEOR_CODE, SORGEOR_GEOD_CODE, SPRADDR_CITY,
          SPRADDR_STAT_CODE, SPRADDR_ZIP, SPRADDR_CNTY_CODE, SPRADDR_NATN_CODE
FROM  SORGEOR, SPRADDR, AMRINFO
WHERE AMRINFO_PIDM = SPRADDR_PIDM
AND  SPRADDR_STATUS_IND IS NULL
AND   ((SYSDATE BETWEEN
      SPRADDR_FROM_DATE AND SPRADDR_TO_DATE
        AND SPRADDR_FROM_DATE IS NOT NULL
        AND SPRADDR_TO_DATE IS NOT NULL)
  OR (SPRADDR_FROM_DATE < SYSDATE
        AND SPRADDR_TO_DATE IS NULL
        AND SPRADDR_FROM_DATE IS NOT NULL)
  OR (SPRADDR_FROM_DATE IS NULL
        AND SPRADDR_TO_DATE IS NULL))
AND  ((SORGEOR_TYPE = 'CITY'
            AND SPRADDR_CITY = SORGEOR_START_RANGE
            AND SPRADDR_STAT_CODE = SORGEOR_END_RANGE
	    AND AMRINFO_PIDM > 0 )
  OR  (SORGEOR_TYPE = 'STATE'
            AND SPRADDR_STAT_CODE = SORGEOR_START_RANGE
	    AND AMRINFO_PIDM > 0 )
  OR   (SORGEOR_TYPE = 'ZIP'
            AND SPRADDR_ZIP BETWEEN SORGEOR_START_RANGE AND SORGEOR_END_RANGE
	    AND AMRINFO_PIDM > 0 )
  OR   (SORGEOR_TYPE = 'COUNTY'
            AND SPRADDR_CNTY_CODE = SORGEOR_START_RANGE
	    AND AMRINFO_PIDM > 0 )
  OR   (SORGEOR_TYPE = 'NATION'
            AND SPRADDR_NATN_CODE = SORGEOR_START_RANGE
	    AND AMRINFO_PIDM > 0 ))
 "
"BANINST1","AMVCONT","","SELECT AMRCONT_PIDM ,
          AMRCONT_IDEN_CODE ,
          GURIDEN_DESC ,
          GURIDEN_USER_ID ,
          AMRCONT_PROJ_CODE ,
          ATVPROJ_DESC ,
          AMRCONT_SCNT_CODE ,
          ATVSCNT_DESC ,
          AMRCONT_ITEM_REFNO ,
          AMRCONT_ACTIVITY_DATE ,
          AMRCONT_IDEN_CODE_ASGN ,
          AMRCONT_CONTACT ,
          AMRCONT_CONTACT_DATE ,
          AMRCONT_TICKLER ,
          AMRCONT_TICK_DATE ,
          AMRCONT_TICK_STATUS ,
          AMRCONT_CONFID_IND ,
          AMRCONT_MOVE_CODE ,
          AMRCONT_ASK_AMT,
	  AMRCONT_CALL_REPORT,
	  AOKLONG.F_LONGTOCHAR_AMRCONT(amrcont.rowid)
FROM AMRCONT, GURIDEN, ATVPROJ, ATVSCNT
WHERE AMRCONT_IDEN_CODE = GURIDEN_IDEN_CODE
  AND AMRCONT_PROJ_CODE = ATVPROJ_CODE
  AND AMRCONT_SCNT_CODE = ATVSCNT_CODE

 "
"BANINST1","ALVADDS","Advancement Address ALPMAIL View","SELECT SPRADDR_PIDM,
       SPRIDEN_ID,
       SPRIDEN_SURNAME_PREFIX,
       SPRIDEN_LAST_NAME,
       SPRIDEN_FIRST_NAME,
       SPRIDEN_MI,
       SPRADDR_ATYP_CODE,
       SPRADDR_HOUSE_NUMBER,
       SPRADDR_STREET_LINE1,
       SPRADDR_STREET_LINE2,
       SPRADDR_STREET_LINE3,
       SPRADDR_STREET_LINE4,
       SPRADDR_CITY,
       SPRADDR_STAT_CODE,
       SPRADDR_ZIP,
       SPRADDR_CNTY_CODE,
       SPRADDR_NATN_CODE,
       SPRADDR_SEQNO
  FROM
       SPRIDEN,
       SPRADDR X,
       SPRCOLR Y
 WHERE
       SPRIDEN_PIDM = X.SPRADDR_PIDM
   AND SPRIDEN_CHANGE_IND IS NULL
   AND Y.SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
   AND X.SPRADDR_STATUS_IND IS NULL
   AND ((X.SPRADDR_TO_DATE IS NULL
   AND   X.SPRADDR_FROM_DATE IS NULL)
    OR  (X.SPRADDR_TO_DATE IS NOT NULL
   AND   X.SPRADDR_FROM_DATE IS NOT NULL
   AND   Y.SPRCOLR_VALUE_DATE BETWEEN X.SPRADDR_FROM_DATE
                      AND X.SPRADDR_TO_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NOT NULL
   AND   X.SPRADDR_TO_DATE IS NULL
   AND   Y.SPRCOLR_VALUE_DATE >= X.SPRADDR_FROM_DATE)
    OR  (X.SPRADDR_FROM_DATE IS NULL
   AND   X.SPRADDR_TO_DATE IS NOT NULL
   AND   Y.SPRCOLR_VALUE_DATE <= X.SPRADDR_TO_DATE))
   AND (Y.SPRCOLR_VALUE_ATYP,X.SPRADDR_ATYP_CODE) =
          (SELECT MIN(C.SPRCOLR_VALUE_ATYP),
            SUBSTR(MIN(C.SPRCOLR_VALUE_ATYP),2,2)
               FROM SPRADDR,
               SPRCOLR C
         WHERE C.SPRCOLR_SESSIONID = TO_CHAR(USERENV('SESSIONID'))
           AND SPRADDR_PIDM = X.SPRADDR_PIDM
           AND SPRADDR_ATYP_CODE = SUBSTR(C.SPRCOLR_VALUE_ATYP,2,2)
           AND SPRADDR_STATUS_IND IS NULL
           AND ((SPRADDR_TO_DATE IS NULL
           AND   SPRADDR_FROM_DATE IS NULL)
               OR  (SPRADDR_TO_DATE IS NOT NULL
           AND   SPRADDR_FROM_DATE IS NOT NULL
           AND   C.SPRCOLR_VALUE_DATE BETWEEN SPRADDR_FROM_DATE
                              AND SPRADDR_TO_DATE)
               OR  (SPRADDR_FROM_DATE IS NOT NULL
           AND   SPRADDR_TO_DATE IS NULL
           AND   C.SPRCOLR_VALUE_DATE >= SPRADDR_FROM_DATE)
               OR  (SPRADDR_FROM_DATE IS NULL
           AND   SPRADDR_TO_DATE IS NOT NULL
           AND   C.SPRCOLR_VALUE_DATE <= SPRADDR_TO_DATE)))
"
"BANINST1","AG_EVENTS_AND_FUNCTIONS","The Events Management events and functions view.","select
 gevevn1_evnt_crn,
 gevevn1_evnt_desc,
 gevevn1_func_code,
 gtvfunc_desc,
 gevevn1_etyp_code,
 x.stvetyp_desc,
 gevevn1_coll_code,
 stvcoll_desc,
 gevevn1_dept_code,
 stvdept_desc,
 gevevn1_sysi_code,
 gevevn1_fsta_code,
 gtvfsta_desc,
 gevevn1_purp_code,
 gevevn1_purp_desc,
 gevevn1_emph_code,
 gtvemph_desc,
 gevevn1_location,
 gevevn1_location_date,
 gevevn1_invitation_date,
 gevevn1_letr_code,
 gevevn1_rsvp_confirm_date,
 gevevn1_committee_name,
 gevevn1_plan_attend,
 gevevn1_no_attending_function,
 gevevn1_brk_even_attend,
 gevevn1_agency_name,
 gevevn1_e_contact_pidm,
 gevevn1_e_contact_name,
 gevevn1_e_contact_atyp_code,
 gevevn1_e_contact_street_1,
 gevevn1_e_contact_street_2,
 gevevn1_e_contact_street_3,
 gevevn1_e_contact_city,
 gevevn1_e_contact_state,
 gevevn1_e_contact_zip_code,
 gevevn1_e_contact_area_code,
 gevevn1_e_contact_phone_number,
 gevevn1_e_contact_phone_ext,
 gevevn1_p_contact_pidm,
 gevevn1_p_contact_id,
 gevevn1_p_contact_lname,
 gevevn1_p_contact_fname,
 gevevn1_p_contact_atyp_code,
 gevevn1_p_contact_street_1,
 gevevn1_p_contact_street_2,
 gevevn1_p_contact_street_3,
 gevevn1_p_contact_city,
 gevevn1_p_contact_state,
 gevevn1_p_contact_zip_code,
 gevevn1_p_contact_area_code,
 gevevn1_p_contact_phone_number,
 gevevn1_p_contact_phone_ext,
 gevevn1_etyp_code_2,
 y.stvetyp_desc,
 gevevn1_ptyp_code_1,
 gevevn1_ptyp_date_1_1,
 gevevn1_ptyp_contact_ind_1_1,
 gevevn1_ptyp_pidm_1_1,
 gevevn1_ptyp_atyp_code_1_1,
 gevevn1_ptyp_id_1_1,
 gevevn1_ptyp_lname_1_1,
 gevevn1_ptyp_fname_1_1,
 gevevn1_ptyp_street_1_1_1,
 gevevn1_ptyp_street_2_1_1,
 gevevn1_ptyp_street_3_1_1,
 gevevn1_ptyp_city_1_1,
 gevevn1_ptyp_state_code_1_1,
 gevevn1_ptyp_zip_code_1_1,
 gevevn1_ptyp_area_code_1_1,
 gevevn1_ptyp_phone_number_1_1,
 gevevn1_ptyp_phone_ext_1_1,
 gevevn1_ptyp_date_1_2,
 gevevn1_ptyp_contact_ind_1_2,
 gevevn1_ptyp_pidm_1_2,
 gevevn1_ptyp_atyp_code_1_2,
 gevevn1_ptyp_id_1_2,
 gevevn1_ptyp_lname_1_2,
 gevevn1_ptyp_fname_1_2,
 gevevn1_ptyp_street_1_1_2,
 gevevn1_ptyp_street_2_1_2,
 gevevn1_ptyp_street_3_1_2,
 gevevn1_ptyp_city_1_2,
 gevevn1_ptyp_state_code_1_2,
 gevevn1_ptyp_zip_code_1_2,
 gevevn1_ptyp_area_code_1_2,
 gevevn1_ptyp_phone_number_1_2,
 gevevn1_ptyp_phone_ext_1_2,
 gevevn1_additional_ptyp_1_ind,
 gevevn1_ptyp_code_2,
 gevevn1_ptyp_date_2_1,
 gevevn1_ptyp_contact_ind_2_1,
 gevevn1_ptyp_pidm_2_1,
 gevevn1_ptyp_atyp_code_2_1,
 gevevn1_ptyp_id_2_1,
 gevevn1_ptyp_lname_2_1,
 gevevn1_ptyp_fname_2_1,
 gevevn1_ptyp_street_1_2_1,
 gevevn1_ptyp_street_2_2_1,
 gevevn1_ptyp_street_3_2_1,
 gevevn1_ptyp_city_2_1,
 gevevn1_ptyp_state_code_2_1,
 gevevn1_ptyp_zip_code_2_1,
 gevevn1_ptyp_area_code_2_1,
 gevevn1_ptyp_phone_number_2_1,
 gevevn1_ptyp_phone_ext_2_1,
 gevevn1_ptyp_date_2_2,
 gevevn1_ptyp_contact_ind_2_2,
 gevevn1_ptyp_pidm_2_2,
 gevevn1_ptyp_atyp_code_2_2,
 gevevn1_ptyp_id_2_2,
 gevevn1_ptyp_lname_2_2,
 gevevn1_ptyp_fname_2_2,
 gevevn1_ptyp_street_1_2_2,
 gevevn1_ptyp_street_2_2_2,
 gevevn1_ptyp_street_3_2_2,
 gevevn1_ptyp_city_2_2,
 gevevn1_ptyp_state_code_2_2,
 gevevn1_ptyp_zip_code_2_2,
 gevevn1_ptyp_area_code_2_2,
 gevevn1_ptyp_phone_number_2_2,
 gevevn1_ptyp_phone_ext_2_2,
 gevevn1_additional_ptyp_2_ind,
 gevevn1_additional_ptyp_ind,
 gevevn1_ttyp_code_1,
 a.gtvttyp_desc,
 gevevn1_no_tasks_1,
 gevevn1_complete_tasks_ind_1,
 gevevn1_ttyp_code_2,
 b.gtvttyp_desc,
 gevevn1_no_tasks_2,
 gevevn1_complete_tasks_ind_2,
 gevevn1_ttyp_code_3,
 c.gtvttyp_desc,
 gevevn1_no_tasks_3,
 gevevn1_complete_tasks_ind_3,
 gevevn1_additional_tasks_ind,
 gevevn1_comments_exist_ind,
 gevevn1_subj_code_1,
 gevevn1_comments_exist_ind_1,
 gevevn1_subj_code_2,
 gevevn1_comments_exist_ind_2,
 gevevn1_subj_code_3,
 gevevn1_comments_exist_ind_3,
 gevevn1_more_subj_cmnts_ind,
 gevevn1_ftyp_code_1,
 gevevn1_ftyp_rate_code_1,
 gevevn1_ftyp_amount_1,
 gevevn1_ftyp_code_2,
 gevevn1_ftyp_rate_code_2,
 gevevn1_ftyp_amount_2,
 gevevn1_ftyp_code_3,
 gevevn1_ftyp_rate_code_3,
 gevevn1_ftyp_amount_3,
 gevevn1_revn_code_1,
 gevevn1_revn_budget_amount_1,
 gevevn1_revn_actual_amount_1,
 gevevn1_revn_diff_amount_1,
 gevevn1_revn_date_1,
 gevevn1_revn_code_2,
 gevevn1_revn_budget_amount_2,
 gevevn1_revn_actual_amount_2,
 gevevn1_revn_diff_amount_2,
 gevevn1_revn_date_2,
 gevevn1_revn_code_3,
 gevevn1_revn_budget_amount_3,
 gevevn1_revn_actual_amount_3,
 gevevn1_revn_diff_amount_3,
 gevevn1_revn_date_3,
 gevevn1_expn_code_1,
 gevevn1_expn_budget_amount_1,
 gevevn1_expn_actual_amount_1,
 gevevn1_expn_diff_amount_1,
 gevevn1_expn_date_1,
 gevevn1_expn_code_2,
 gevevn1_expn_budget_amount_2,
 gevevn1_expn_actual_amount_2,
 gevevn1_expn_diff_amount_2,
 gevevn1_expn_date_2,
 gevevn1_expn_code_3,
 gevevn1_expn_budget_amount_3,
 gevevn1_expn_actual_amount_3,
 gevevn1_expn_diff_amount_3,
 gevevn1_expn_date_3
from stvetyp x, stvetyp y, gtvfunc, stvcoll, stvdept,
     gtvfsta, gtvemph, gtvttyp a, gtvttyp b, gtvttyp c,
     gevevn1
where x.stvetyp_code(+) = gevevn1_etyp_code
  and y.stvetyp_code(+) = gevevn1_etyp_code_2
  and gtvfunc_code(+) = gevevn1_func_code
  and stvcoll_code(+) = gevevn1_coll_code
  and stvdept_code(+) = gevevn1_dept_code
  and gtvfsta_code(+) = gevevn1_fsta_code
  and gtvemph_code(+) = gevevn1_emph_code
  and a.gtvttyp_code(+) = gevevn1_ttyp_code_1
  and b.gtvttyp_code(+) = gevevn1_ttyp_code_2
  and c.gtvttyp_code(+) = gevevn1_ttyp_code_3
 "
"BANINST1","AG_ENTITY_DATA","","select
 pidm_key,
 alumni_constituent_ind,
 alumni_organization_ind,
 ar_deposit_ind,
 ar_detail_ind,
 ar_memo_ind,
 ar_profile_ind,
 finaid_applicant_ind,
 finance_agency_ind,
 finance_bank_ind,
 finance_customer_ind,
 finance_employee_ind,
 finance_manager_ind,
 finance_vendor_ind,
 payroll_applicant_ind,
 payroll_beneficiary_ind,
 payroll_cobra_ind,
 payroll_employee_ind,
 student_admissions_ind,
 student_enrollment_ind,
 student_faculty_ind,
 student_gen_students_ind,
 student_housing_ind,
 student_recruit_ind,
 student_registration_ind,
 student_transfer_work_ind,
 id,
 ssn,
 last_name,
 first_name,
 middle_initial,
 name_prefix,
 name_suffix,
 legal_name,
 prefered_first_name,
 full_name_fml,
 full_name_fmil,
 full_name_lfmi,
 last_first_name_30,
 first_last_30,
 last_name_30,
 birth_date,
 age,
 gender,
 ethn_code,
 substr(decode(ethn_code,null,null,
      f_common_get_desc('STVETHN',ethn_code,30)),1,30),
 lgcy_code,
 substr(decode(lgcy_code,null,null,
      f_common_get_desc('STVLGCY',lgcy_code,30)),1,30),
 mrtl_code,
 substr(decode(mrtl_code,null,null,
      f_common_get_desc('STVMRTL',mrtl_code,30)),1,30),
 relg_code,
 substr(decode(relg_code,null,null,
      f_common_get_desc('STVRELG',relg_code,30)),1,30),
 deceased_ind,
 deceased_date,
 confidentiality_ind,
 street1_line1,
 street1_line2,
 street1_line3,
 city1,
 state1,
 zip1,
 cnty_code1,
 substr(decode(cnty_code1,null,null,
      f_common_get_desc('STVCNTY',cnty_code1,30)),1,30),
 natn_code1,
 substr(decode(natn_code1,null,null,
      f_common_get_desc('STVNATN',natn_code1,30)),1,30),
 address_type1,
 phone_area_code1,
 phone_number1,
 phone_type1,
 street2_line1,
 street2_line2,
 street2_line3,
 city2,
 state2,
 zip2,
 cnty_code2,
 substr(decode(cnty_code2,null,null,
      f_common_get_desc('STVCNTY',cnty_code2,30)),1,30),
 natn_code2,
 substr(decode(natn_code2,null,null,
      f_common_get_desc('STVNATN',natn_code2,30)),1,30),
 address_type2,
 phone_area_code2,
 phone_number2,
 phone_type2
from gpvent1
 "
"BANINST1","AGVTEMP","Temporary View that has a record for any pidm that either has matching gift soft credit, non matching gift soft credit, or giving credit for any fiscal year.  This view is used to create view AGVGVMM.","SELECT AGVMGCR_MEMO_PIDM, AGVMGCR_FISC_CODE, AGVMGCR_CREDIT, 'MG'
FROM AGVMGCR
UNION
SELECT AGVMEMO_MEMO_PIDM, AGVMEMO_FISC_CODE, AGVMEMO_CREDIT, 'ME'
FROM AGVMEMO
UNION
SELECT AGVFGIV_PIDM, AGVFGIV_FISC_CODE, AGVFGIV_GIVING, 'GI'
FROM AGVFGIV"
"BANINST1","AGVPSOL","","SELECT AGRPSOL_PIDM,
       AGRPSOL_PLEDGE_NO,
       AGBPLDG_PLEDGE_DATE,
       ATVDCYR_CODE,
       AFBCAMP_CMTP_CODE,
       AGRPSOL_CAMPAIGN,
       AGRPSOL_SOLC_CODE,
       AGRPSOL_SOL_ORG,
       AGRPSOL_SOL_PIDM,
       AGRPSOL_AMT,
       AGRPSOL_AMT_PAID,
       AGRPSOL_CREDIT_PIDM,
       rtrim(substr(apkdpri.f_select_donor_catg(agrpsol_credit_pidm),1,4))
FROM  AGBPLDG, AGRPSOL, ATVDCYR, AFBCAMP
WHERE AGBPLDG_PLEDGE_NO = AGRPSOL_PLEDGE_NO
  AND AGBPLDG_PIDM      = AGRPSOL_PIDM
  AND AGBPLDG_PIDM > 0
  AND AGRPSOL_PIDM > 0
  AND (AGBPLDG_PLEDGE_DATE <= ATVDCYR_END_DATE(+) AND
       AGBPLDG_PLEDGE_DATE >= ATVDCYR_START_DATE(+))
  AND AFBCAMP_CAMPAIGN = AGRPSOL_CAMPAIGN

 "
"BANINST1","AGVPSFT","","select 'memo',
       agrpmmo_xref_pidm,
       agrpdes_pledge_no,
       agrpdes_campaign,
       agrpdes_desg,
       agbpldg_fisc_code,
       agbpldg_pledge_date,
       agbpldg_pldg_code,
       agbpldg_pcls_code,
       0,
       nvl(agrpmmo_credit,0),
       agbpldg_pcls_code_2,
       agbpldg_pcls_code_3
from   agrpdes, agbpldg,
       agrpmmo
where  agrpdes_pidm = agbpldg_pidm
and    agbpldg_pledge_no = agrpdes_pledge_no
and    agrpdes_pledge_no = agrpmmo_pledge_no
and    agrpdes_campaign = agrpmmo_campaign
and    agrpdes_desg = agrpmmo_desg
and    agrpdes_pidm = agrpmmo_pidm
UNION
select 'pldg',
       agrpdes_pidm,
       agrpdes_pledge_no,
       agrpdes_campaign,
       agrpdes_desg,
       agbpldg_fisc_code,
       agbpldg_pledge_date,
       agbpldg_pldg_code,
       agbpldg_pcls_code,
       agrpdes_amt,
       agrpdes_amt,
       agbpldg_pcls_code_2,
       agbpldg_pcls_code_3
from   agrpdes, agbpldg,
       agrpmmo
where  agrpdes_pidm = agrpmmo_pidm (+)
and    agbpldg_pledge_no = agrpdes_pledge_no
and    agrpdes_pledge_no = agrpmmo_pledge_no (+)
and    agrpdes_campaign = agrpmmo_campaign (+)
and    agrpdes_desg = agrpmmo_desg (+)
and    agrpdes_pidm = agbpldg_pidm
 "
"BANINST1","AGVPSCR","","select 'memo',
       agrpmmo_xref_pidm,
       agrpdes_pledge_no,
       agrpdes_campaign,
       agrpdes_desg,
       agbpldg_fisc_code,
       agbpldg_pledge_date,
       agbpldg_psta_code,
       0,
       nvl(agrpmmo_credit,0)
from   agrpdes, agbpldg,
       agrpmmo
where  agrpdes_pidm = agrpmmo_pidm
and    agrpdes_pledge_no = agrpmmo_pledge_no
and    agrpdes_campaign = agrpmmo_campaign
and    agrpdes_desg = agrpmmo_desg
and    agrpdes_pidm = agbpldg_pidm
and    agrpdes_pledge_no = agbpldg_pledge_no
UNION
select 'pldg',
       agrpdes_pidm,
       agrpdes_pledge_no,
       agrpdes_campaign,
       agrpdes_desg,
       agbpldg_fisc_code,
       agbpldg_pledge_date,
       agbpldg_psta_code,
       agrpdes_amt,
       agrpdes_amt
from   agrpdes, agbpldg,
       agrpmmo
where  agrpdes_pidm = agrpmmo_pidm (+)
and    agrpdes_pledge_no = agrpmmo_pledge_no (+)
and    agrpdes_campaign = agrpmmo_campaign (+)
and    agrpdes_desg = agrpmmo_desg (+)
and    agrpdes_pidm = agbpldg_pidm
and    agrpdes_pledge_no = agbpldg_pledge_no
 "
"BANINST1","AGVPPAY","View of all Payments (including Third Party) made against a Pledge.","SELECT AGRGPAY_PIDM,
          AGRGPAY_GIFT_NO,
          AGRGPAY_PLEDGE_NO,
          AGRGPAY_AMT
   FROM  AGRGPAY
   WHERE AGRGPAY_PIDM > 0
   AND   AGRGPAY_GIFT_NO > 0
   AND   AGRGPAY_PLEDGE_NO > 0
UNION
   SELECT AGV3PAY_PLEDGE_PIDM,
          AGV3PAY_GIFT_NO,
          AGV3PAY_3PP_PLEDGE_NO,
          SUM(AGV3PAY_3PP_AMT)
   FROM  AGV3PAY
   GROUP BY AGV3PAY_PLEDGE_PIDM, AGV3PAY_GIFT_NO, AGV3PAY_3PP_PLEDGE_NO 
 "
"BANINST1","AGVPMLT","","select agrpmlt_pidm,
       agrpmlt_xref_pidm,
       agrpmlt_pledge_no,
       agrpmlt_campaign,
       agrpmlt_desg,
       agbpldg_fisc_code,
       agbpldg_psta_code,
       agbpldg_pldg_code,
       agbpldg_pcls_code,
       agbpldg_pledge_date,
       agbpldg_amt_pledged,
       agrpdes_amt,
       agrpmlt_credit,
       agbpldg_pgve_code,
       agrpmlt_3pp_amt,
       agbpldg_pcls_code_2,
       agbpldg_pcls_code_3
from   agrpdes,
       agbpldg,
       agrpmlt
where  agrpdes_pidm = agrpmlt_pidm
and    agrpmlt_pidm = agbpldg_pidm
and    agrpdes_pledge_no = agrpmlt_pledge_no
and    agrpmlt_pledge_no = agbpldg_pledge_no
and    agrpdes_campaign = agrpmlt_campaign
and    agrpdes_desg = agrpmlt_desg
 "
"BANINST1","AGVPMEM","","select agrpmmo_pidm,
       agrpmmo_xref_pidm,
       agrpmmo_pledge_no,
       agrpmmo_campaign,
       agrpmmo_desg,
       agbpldg_fisc_code,
       agbpldg_psta_code,
       agbpldg_pldg_code,
       agbpldg_pcls_code,
       agbpldg_pledge_date,
       agbpldg_amt_pledged,
       agrpdes_amt,
       agrpmmo_credit,
       agrpmmo_3pp_amt,
       agbpldg_pgve_code,
       agbpldg_pcls_code_2,
       agbpldg_pcls_code_3
from   agrpdes,
       agbpldg,
       agrpmmo
where  agrpdes_pidm = agrpmmo_pidm
and    agrpmmo_pidm = agbpldg_pidm
and    agbpldg_pledge_no = agrpmmo_pledge_no
and    agrpmmo_pledge_no = agrpdes_pledge_no
and    agrpmmo_campaign = agrpdes_campaign
and    agrpmmo_desg = agrpdes_desg
 "
"BANINST1","AGVPLST","","SELECT AGRPDES_PIDM,
          AGRPDES_PLEDGE_NO,
          AGBPLDG_AMT_PLEDGED,
          AGRPDES_CAMPAIGN,
          AGRPDES_DESG,
          AGRPDES_AMT,
          AGRPDES_AMT_PAID,
          AGBPLDG_PLEDGE_DATE,
          AGBPLDG_FISC_CODE,
          AGBPLDG_PSTA_CODE,
          AGBPLDG_PLDG_CODE,
          AGBPLDG_RECEIPT_IND,
          AGBPLDG_PACK_IND,
          AGBPLDG_PCLS_CODE,
          AGBPLDG_ADJ_IND,
          AGBPLDG_PCAT_CODE,
          AGBPLDG_FEED_IND,
          AGBPLDG_FEED_DATE,
          AGBPLDG_FEED_DOC_CODE,
          AGBPLDG_COMMENT,
          AFBCAMP_CMTP_CODE,
          ADBDESG_DSTP_CODE,
          ADBDESG_CFAE_CODE,
          ADBDESG_COLL_CODE,
          AGBPLDG_PGVE_CODE,
          ADBDESG_DEPT_CODE,
          AGBPLDG_PCLS_CODE_2,
          AGBPLDG_PCLS_CODE_3
FROM AGRPDES, AFBCAMP, ADBDESG, AGBPLDG
WHERE AGRPDES_PIDM = AGBPLDG_PIDM
AND   AGRPDES_PLEDGE_NO = AGBPLDG_PLEDGE_NO
AND   AFBCAMP_CAMPAIGN = AGRPDES_CAMPAIGN
AND   ADBDESG_DESG = AGRPDES_DESG
 "
"BANINST1","AGVPLDG","","SELECT AGBPLDG_PIDM,AGBPLDG_PLEDGE_NO,AGBPLDG_PLEDGE_DATE,
             AGBPLDG_AMT_PLEDGED,AGBPLDG_FISC_CODE,AGBPLDG_PSTA_CODE,
             AGBPLDG_PACK_CODE,AGBPLDG_PRMD_CODE,AGBPLDG_REM_COUNT,
             AGBPLDG_PLDG_CODE,
             AGBPLDG_PCLS_CODE,
             AGBPLDG_PCAT_CODE,
             AGRPINS_INSTALLMENT_NO,
             AGRPINS_INSTALLMENT_DATE,
             AGRPINS_AMT,
             AGRPINS_REM_DATE,
             AGRPINS_PRMD_CODE,
             AGRPINS_REM_COUNT,
             AGBPLDG_PCLS_CODE_2,
             AGBPLDG_PCLS_CODE_3
      FROM   AGBPLDG, AGRPINS
      WHERE  AGBPLDG_PIDM = AGRPINS_PIDM (+)
      AND    AGBPLDG_PLEDGE_NO = AGRPINS_PLEDGE_NO (+)
      AND    AGBPLDG_PSTA_CODE IN (SELECT ATVPSTA_CODE
                                   FROM ATVPSTA
                                   WHERE ATVPSTA_ACTIVE_IND = 'Y')
      AND    AGBPLDG_AMT_PLEDGED > 0
 "
"BANINST1","AGVPLD2","","select
agrpmlt_xref_pidm,
agrpmlt_pledge_no,
agrpmlt_campaign,
agrpmlt_desg,
0,
nvl(agrpmlt_credit,0),
0,
agbpldg_pledge_date,
agbpldg_fisc_code,
agbpldg_pldg_code,
agbpldg_pcls_code,
agbpldg_psta_code,
agbpldg_pgve_code,
agbpldg_pcls_code_2,
agbpldg_pcls_code_3
from  agbpldg, agrpmlt
where agrpmlt_pidm = agbpldg_pidm(+)
  and agrpmlt_pledge_no = agbpldg_pledge_no(+)
UNION
select
agrpdes_pidm,
agrpdes_pledge_no,
agrpdes_campaign,
agrpdes_desg,
agrpdes_amt,
nvl(agrpdes_amt - f_pledge_hard_credit(
    agrpdes_pidm,agrpdes_pledge_no,agrpdes_campaign,agrpdes_desg),0),
agrpdes_amt_paid,
agbpldg_pledge_date,
agbpldg_fisc_code,
agbpldg_pldg_code,
agbpldg_pcls_code,
agbpldg_psta_code,
agbpldg_pgve_code,
agbpldg_pcls_code_2,
agbpldg_pcls_code_3
from  agbpldg, agrpdes
where agrpdes_pidm = agbpldg_pidm
  and agrpdes_pledge_no = agbpldg_pledge_no
 "
"BANINST1","AGVPLD1","","select
agvpld2_pidm,
spriden_id,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
apbcons_nickname,
apbcons_cm_name,
apbcons_maiden_last_name,
apbcons_addr_name,
apbcons_atyp_code_pref,
spriden_entity_ind,
spbpers_dead_ind,
spbpers_dead_date,
apbcons_coll_code_pref,
apbcons_pref_clas,
substr(f_lost_al_ind(agvpld2_pidm),1,1),
k.atvdonr_code,
k.atvdonr_alum_ind,
l.atvdonr_code,
l.atvdonr_alum_ind,
m.atvdonr_code,
m.atvdonr_alum_ind,
n.atvdonr_code,
n.atvdonr_alum_ind,
substr(f_check_for_more('DONOR', agvpld2_pidm),1,1),
agvpld2_pledge_no,
agvpld2_campaign,
afbcamp_name,
afbcamp_cmtp_code,
agvpld2_pledge_amt,
agvpld2_credit,
agvpld2_amt_paid,
agvpld2_pledge_date,
agvpld2_fisc_code,
agvpld2_pldg_code,
agvpld2_pcls_code,
agvpld2_pcls_code_2,
agvpld2_pcls_code_3,
agvpld2_psta_code,
agvpld2_pgve_code,
atvpldg_db_gl_acct,
atvpldg_rucl_code,
atvpldg_cfae_pldg_catg,
agvpld2_desg,
adbdesg_name,
adbdesg_dstp_code,
adbdesg_coll_code,
adbdesg_cfae_code,
adbdesg_gl_no_credit,
adbdesg_coas_code,
adbdesg_acci_code,
adbdesg_fund_code,
adbdesg_orgn_code,
adbdesg_acct_code,
adbdesg_prog_code,
adbdesg_actv_code,
adbdesg_locn_code,
x.agrpsol_solc_code,
x.agrpsol_sol_org,
to_number(substr(f_pledge_solicitor(agvpld2_pledge_no,
                        agvpld2_campaign,'PIDM'),1,8)),
substr(f_pledge_solicitor(agvpld2_pledge_no,
                        agvpld2_campaign,'ID'),1,9),
substr(f_pledge_solicitor(agvpld2_pledge_no,
                        agvpld2_campaign,'SURNAME_PREFIX'),1,60),
substr(f_pledge_solicitor(agvpld2_pledge_no,
                        agvpld2_campaign,'LAST_NAME'),1,60),
substr(f_pledge_solicitor(agvpld2_pledge_no,
                        agvpld2_campaign,'FIRST_NAME'),1,60),
x.agrpsol_amt,
substr(f_pledge_solicitor_more(agvpld2_pledge_no,agvpld2_campaign),1,1)
from atvdonr k, atvdonr l, atvdonr m, atvdonr n,
     apbcons,spbpers, spriden,
     afbcamp,adbdesg,agrpsol x,atvpldg, agvpld2
where apbcons_pidm(+)= agvpld2_pidm
  and spbpers_pidm(+)= agvpld2_pidm
  and spriden_change_ind is null
  and spriden_pidm = agvpld2_pidm
  and atvpldg_code(+) = agvpld2_pldg_code
  and afbcamp_campaign = agvpld2_campaign
  and adbdesg_desg = agvpld2_desg
  and x.rowid(+) = f_pledge_solicitor_info(agvpld2_pledge_no,agvpld2_campaign)
  and k.rowid(+) = f_donor_categoryes(agvpld2_pidm,1)
  and l.rowid(+) = f_donor_categoryes(agvpld2_pidm,2)
  and m.rowid(+) = f_donor_categoryes(agvpld2_pidm,3)
  and n.rowid(+) = f_donor_categoryes(agvpld2_pidm,4)"
"BANINST1","AGVPINS","","SELECT AGBPLDG_PIDM,        AGBPLDG_PLEDGE_NO, AGBPLDG_PLEDGE_DATE,
             AGBPLDG_AMT_PLEDGED, AGBPLDG_FISC_CODE, AGBPLDG_PSTA_CODE,
             AGBPLDG_PRMD_CODE,   AGBPLDG_REM_COUNT, AGBPLDG_PLDG_CODE,
             AGBPLDG_PCLS_CODE,   AGRPDES_CAMPAIGN,  AGRPDES_DESG,
             AGRPINS_INSTALLMENT_NO, AGRPINS_INSTALLMENT_DATE,
             AGRPINS_AMT,
             AGRPINS_REM_DATE,
             AGRPIND_EXPECTED_AMT, --RPE CMS-RPE5303
           --ROUND((AGRPDES_AMT/AGBPLDG_AMT_PLEDGED * AGRPINS_AMT),2) ,--RPE CMS-RPE5303
-- Begin Defect 59965
--           AGRPDES_AMT_PAID,
         DECODE(AGRPDES_AMT_PAID,0,0,
              agkcpap.f_calc_pdes_amt(agbpldg_pidm,
                       agbpldg_pledge_no,
                      agrpdes_campaign,
                      agrpdes_desg,
                      agrpins_installment_no)),
-- End Defect 59965
         DECODE(AGRPDES_AMT_PAID,0,0,
              agkcpap.f_calc_pins_amt(agbpldg_pidm,
                       agbpldg_pledge_no,
                      agrpdes_campaign,
                      agrpdes_desg,
                      agrpins_installment_no)),
         ATVFISC_CODE,
         AFBCAMP_CMTP_CODE,   ADBDESG_DSTP_CODE,  ADBDESG_CFAE_CODE,
         ADBDESG_COLL_CODE,
         AGBPLDG_PCAT_CODE,
             AGBPLDG_PCLS_CODE_2,
             AGBPLDG_PCLS_CODE_3
      FROM   atvfisc, adbdesg, afbcamp, agrpdes, agbpldg, agrpins, agrpind
      WHERE  agbpldg_pidm      = agrpins_pidm
      and    agbpldg_pledge_no = agrpins_pledge_no
      and    agbpldg_pledge_no = agrpdes_pledge_no
      and    agbpldg_pidm      = agrpdes_pidm
      and    agrpins_installment_date between
             atvfisc_start_date and atvfisc_end_date
      and    agrpdes_campaign = afbcamp_campaign
      and    agrpdes_desg     = adbdesg_desg
      and    agrpind_pidm     = agrpins_pidm
      and    agrpind_pledge_no  = agrpins_pledge_no
      and    agrpind_campaign = agrpdes_campaign
      and    agrpind_desg     = agrpdes_desg
      and    agrpind_installment_no = agrpins_installment_no
      and    agbpldg_amt_pledged > 0"
"BANINST1","AGVPCRD","","select 'mult',
       agrpmlt_xref_pidm,
       agrpdes_pledge_no,
       agrpdes_campaign,
       agrpdes_desg,
       agbpldg_fisc_code,
       agbpldg_pledge_date,
       agbpldg_psta_code,
       0,
       nvl(agrpmlt_credit,0)
from   agrpdes, agbpldg,
       agrpmlt
where  agrpdes_pidm = agrpmlt_pidm
and    agrpdes_pledge_no = agrpmlt_pledge_no
and    agrpdes_campaign = agrpmlt_campaign
and    agrpdes_desg = agrpmlt_desg
and    agrpdes_pidm = agbpldg_pidm
and    agrpdes_pledge_no = agbpldg_pledge_no
UNION
select 'pldg',
       agrpdes_pidm,
       agrpdes_pledge_no,
       agrpdes_campaign,
       agrpdes_desg,
       agbpldg_fisc_code,
       agbpldg_pledge_date,
       agbpldg_psta_code,
       agrpdes_amt,
      (agrpdes_amt - nvl(agrpmlt_credit,0))
from   agrpdes, agbpldg,
       agrpmlt
where  agrpdes_pidm = agrpmlt_pidm (+)
and    agrpdes_pledge_no = agrpmlt_pledge_no (+)
and    agrpdes_campaign = agrpmlt_campaign (+)
and    agrpdes_desg = agrpmlt_desg (+)
and    agrpdes_pidm = agbpldg_pidm
and    agrpdes_pledge_no = agbpldg_pledge_no
 "
"BANINST1","AGVPCAM","","SELECT AGRPCAM_PIDM,
          AGRPCAM_PLEDGE_NO,
          AGRPCAM_CAMPAIGN,
          AGRPCAM_AMT,
          AGRPCAM_AMT_PAID,
          AGBPLDG_PLEDGE_DATE,
          AGBPLDG_FISC_CODE,
          AGBPLDG_PSTA_CODE,
          AGBPLDG_PLDG_CODE,
          AGBPLDG_PCLS_CODE,
          AGBPLDG_PCAT_CODE,
          AGBPLDG_PACK_IND,
          AGBPLDG_RECEIPT_IND,
          AGBPLDG_ADJ_IND,
          AGBPLDG_PGVE_CODE,
          AGBPLDG_PCLS_CODE_2,
          AGBPLDG_PCLS_CODE_3
FROM AGRPCAM, AGBPLDG
WHERE AGRPCAM_PIDM = AGBPLDG_PIDM
AND   AGRPCAM_PLEDGE_NO = AGBPLDG_PLEDGE_NO
 "
"BANINST1","AGVMGTP","Temporary View that has a record for any pidm that either has matching gift credit or giving credit for any fiscal year.  This view is used to create view AGVMGGV.","SELECT AGVMGCR_MEMO_PIDM, AGVMGCR_FISC_CODE, AGVMGCR_CREDIT, 'MG'
FROM AGVMGCR
UNION
SELECT AGVFGIV_PIDM, AGVFGIV_FISC_CODE, AGVFGIV_GIVING, 'GI'
FROM AGVFGIV"
"BANINST1","AGVMGID","","select  EMPR.SPRIDEN_PIDM,
        EMPR.SPRIDEN_ID,
        EMPR.SPRIDEN_LAST_NAME,
        AGBMGID_EMPL_PIDM,
        EMPL.SPRIDEN_ID,
        EMPL.SPRIDEN_LAST_NAME || ', ' || EMPL.SPRIDEN_FIRST_NAME
                          || ' ' || EMPL.SPRIDEN_MI NAME,
        EMPL.SPRIDEN_LAST_NAME,
        EMPL.SPRIDEN_FIRST_NAME,
        EMPL.SPRIDEN_MI,
        AGBMGID_EMPL_GIFT_NO,
        AGBMGID_AMT,
        AGBMGID_AMT_PAID,
        AGBMGID_STATUS,
        AGBMGID_DELETE_IND,
        AGBMGID_ACTIVITY_DATE,
        AGBMGID_MG_FORMSENT_IND,
        AGBMGID_SPOUSE_PIDM,
        AGBMGID_QUALIFY_AMT,
        AGBMGID_PGVE_CODE,
        AGBGIFT_GIFT_DATE,
        AGBGIFT_MATCH_RECEIVED
from    agbgift, spriden empr, spriden empl, agbmgid
where   empr.spriden_change_ind is null
  and   empr.spriden_pidm = agbmgid_empr_pidm
  and   empl.spriden_change_ind is null
  and   empl.spriden_pidm = agbmgid_empl_pidm
  and   agbgift_pidm = agbmgid_empl_pidm
  and   agbgift_gift_no = agbmgid_empl_gift_no
 "
"BANINST1","AGVMGGV","View that calculates the sum of Matching Gift Soft Credit plus the sum of giving (payments and gifts) for a pidm for a fiscal year","SELECT AGVMGTP_PIDM, AGVMGTP_FISC_CODE, SUM(AGVMGTP_CREDIT)
FROM AGVMGTP
GROUP BY AGVMGTP_PIDM, AGVMGTP_FISC_CODE"
"BANINST1","AGVMGCR","View that calculates the Matching Gift Soft Credit for a pidm for a fiscal year","select agvgmem_memo_pidm, agvgmem_fisc_code, sum(agvgmem_credit)
from agvgmem
where exists
(select 'x' from agrmgif
 where agrmgif_empr_gift_no = agvgmem_gift_no)
group by agvgmem_memo_pidm, agvgmem_fisc_code"
"BANINST1","AGVMETP","Temporary View that has a record for any pidm that either has soft credit or giving credit for any fiscal year.  This view is used to create view AGVGVME.","SELECT AGVMEMO_MEMO_PIDM, AGVMEMO_FISC_CODE, AGVMEMO_CREDIT, 'ME'
FROM AGVMEMO
UNION
SELECT AGVFGIV_PIDM, AGVFGIV_FISC_CODE, AGVFGIV_GIVING, 'GI'
FROM AGVFGIV"
"BANINST1","AGVMEMO","View that calculates the Non Matching Gift Soft Credit for a pidm for a fiscal year","select agvgmem_memo_pidm, agvgmem_fisc_code, sum(agvgmem_credit)
from agvgmem
where not exists
(select 'x' from agrmgif
 where agrmgif_empr_gift_no = agvgmem_gift_no)
group by agvgmem_memo_pidm, agvgmem_fisc_code"
"BANINST1","AGVMDES","Matching Gift Money.","SELECT AGRMDES_EMPR_PIDM,
          AGRMDES_EMPL_PIDM,
          AGRMDES_GIFT_NO,
          AGRMDES_CAMPAIGN,
          AGRMDES_DESG,
          AGRMDES_AMT,
          AGRMDES_ACTIVITY_DATE
FROM  AGRMGIF, AGRMDES
WHERE AGRMGIF_PIDM      = AGRMDES_EMPL_PIDM
AND   AGRMGIF_GIFT_NO   = AGRMDES_GIFT_NO
AND   AGRMGIF_EMPR_PIDM = AGRMDES_EMPR_PIDM 
 "
"BANINST1","AGVGVMM","View that calculates the sum of all soft credit and all giving for a fiscal year for a pidm","SELECT AGVTEMP_PIDM, AGVTEMP_FISC_CODE, SUM(AGVTEMP_CREDIT)
FROM AGVTEMP
GROUP BY AGVTEMP_PIDM, AGVTEMP_FISC_CODE"
"BANINST1","AGVGVME","View for calculating Non MG Soft Credit but giving credit by fiscal year for a pidm","select agvmetp_pidm, agvmetp_fisc_code, sum(agvmetp_credit)
from agvmetp
group by agvmetp_pidm, agvmetp_fisc_code"
"BANINST1","AGVGSOL","","SELECT AGRGSOL_PIDM,
       AGRGSOL_GIFT_NO,
       AGRGSOL_PLEDGE_NO,
       AGBGIFT_GIFT_DATE,
       ATVDCYR_CODE,
       AFBCAMP_CMTP_CODE,
       AGRGSOL_CAMPAIGN,
       AGRGSOL_SOLC_CODE,
       AGRGSOL_SOL_ORG,
       AGRGSOL_SOL_PIDM,
       AGRGSOL_AMT,
       AGRGSOL_CREDIT_PIDM,
       rtrim(substr(apkdpri.f_select_donor_catg(agrgsol_credit_pidm),1,4))
FROM AGBGIFT, AGRGSOL, ATVDCYR, AFBCAMP
WHERE AGBGIFT_GIFT_NO = AGRGSOL_GIFT_NO
  AND AGBGIFT_PIDM    = AGRGSOL_PIDM
  AND AGBGIFT_PIDM > 0
  AND AGRGSOL_PIDM > 0
  AND (AGBGIFT_GIFT_DATE <= ATVDCYR_END_DATE(+) AND
       AGBGIFT_GIFT_DATE >= ATVDCYR_START_DATE(+))
  AND AFBCAMP_CAMPAIGN = AGRGSOL_CAMPAIGN

 "
"BANINST1","AGVGSFT","","select 'memo',
       agrgmmo_xref_pidm,
       agrgdes_gift_no,
       agrgdes_pledge_no,
       agrgdes_campaign,
       agrgdes_desg,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       0,
       nvl(agrgmmo_credit,0),
       agbgift_gcls_code_2,
       agbgift_gcls_code_3
from   agrgdes, agbgift,
       agrgmmo
where  agrgdes_pidm = agrgmmo_pidm
and    agrgdes_pledge_no = agrgmmo_pledge_no
and    agrgdes_gift_no = agrgmmo_gift_no
and    agrgdes_campaign = agrgmmo_campaign
and    agrgdes_desg = agrgmmo_desg
and    agrgdes_pidm = agbgift_pidm
and    agrgdes_gift_no = agbgift_gift_no
and    agbgift_gift_no not in
       (select agrmgif_empr_gift_no
        from agrmgif
        where agrmgif_empr_pidm = agbgift_pidm)
UNION
select 'gift',
       agrgdes_pidm,
       agrgdes_gift_no,
       agrgdes_pledge_no,
       agrgdes_campaign,
       agrgdes_desg,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       agrgdes_amt,
       agrgdes_amt,
       agbgift_gcls_code_2,
       agbgift_gcls_code_3
from   agrgdes, agbgift,
       agrgmmo
where  agrgdes_pidm = agrgmmo_pidm (+)
and    agrgdes_pledge_no = agrgmmo_pledge_no (+)
and    agrgdes_gift_no = agrgmmo_gift_no (+)
and    agrgdes_campaign = agrgmmo_campaign (+)
and    agrgdes_desg = agrgmmo_desg (+)
and    agrgdes_pidm = agbgift_pidm
and    agrgdes_gift_no = agbgift_gift_no
 "
"BANINST1","AGVGSCR","","select 'memo',
       agrgmmo_xref_pidm,
       agrgdes_gift_no,
       agrgdes_pledge_no,
       agrgdes_campaign,
       agrgdes_desg,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       0,
       nvl(agrgmmo_credit,0),
       agbgift_gcls_code_2,
       agbgift_gcls_code_3
from   agrgdes, agbgift,
       agrgmmo
where  agrgmmo_pidm = agrgdes_pidm
and    agrgdes_pledge_no = agrgmmo_pledge_no
and    agrgdes_campaign = agrgmmo_campaign
and    agrgdes_desg = agrgmmo_desg
and    agrgdes_pidm = agbgift_pidm
and    agrgmmo_gift_no = agbgift_gift_no
and    agrgdes_gift_no = agbgift_gift_no
UNION
select 'gift',
       agrgdes_pidm,
       agrgdes_gift_no,
       agrgdes_pledge_no,
       agrgdes_campaign,
       agrgdes_desg,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       agrgdes_amt,
       agrgdes_amt,
       agbgift_gcls_code_2,
       agbgift_gcls_code_3
from   agrgdes, agbgift,
       agrgmmo
where  agrgdes_pidm = agrgmmo_pidm (+)
and    agrgdes_pledge_no = agrgmmo_pledge_no (+)
and    agrgdes_gift_no = agrgmmo_gift_no (+)
and    agrgdes_campaign = agrgmmo_campaign (+)
and    agrgdes_desg = agrgmmo_desg (+)
and    agrgdes_pidm = agbgift_pidm
and    agrgdes_gift_no = agbgift_gift_no
 "
"BANINST1","AGVGMLT","","select agrgmlt_pidm,
       agrgmlt_xref_pidm,
       agrgmlt_gift_no,
       agrgmlt_pledge_no,
       agrgmlt_campaign,
       agrgmlt_desg,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       agrgdes_amt,
       agrgmlt_credit,
       agbgift_pgve_code,
       agrgmlt_3pp_amt,
       agrgmlt_3pp_pledge_no,
       agbgift_gcls_code_2,
       agbgift_gcls_code_3,
       agrgmlt_3pp_tot_amt
from   agrgdes,
       agbgift,
       agrgmlt
where  agrgdes_pidm = agrgmlt_pidm
and    agrgmlt_pidm = agbgift_pidm
and    agrgmlt_pledge_no = agrgdes_pledge_no
and    agrgdes_gift_no = agrgmlt_gift_no
and    agrgmlt_gift_no = agbgift_gift_no
and    agrgmlt_campaign = agrgdes_campaign
and    agrgmlt_desg = agrgdes_desg"
"BANINST1","AGVGMEM","","select agrgmmo_pidm,
       agrgmmo_xref_pidm,
       agrgmmo_gift_no,
       agrgmmo_pledge_no,
       agrgmmo_campaign,
       agrgmmo_desg,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       agrgdes_amt,
       agrgmmo_credit,
       agbgift_pgve_code,
       agrgmmo_3pp_amt,
       agrgmmo_3pp_pledge_no,
       agbgift_gcls_code_2,
       agbgift_gcls_code_3,
       agrgmmo_3pp_tot_amt
from   agrgdes,
       agbgift,
       agrgmmo
where  agrgdes_pidm = agrgmmo_pidm
and    agrgmmo_pidm = agbgift_pidm
and    agrgmmo_pledge_no = agrgdes_pledge_no
and    agrgdes_gift_no = agrgmmo_gift_no
and    agrgmmo_gift_no = agbgift_gift_no
and    agrgdes_campaign = agrgmmo_campaign
and    agrgdes_desg = agrgmmo_desg"
"BANINST1","AGVGMD1","","select
x.spriden_id,
agvgmem_pidm,
a.spbpers_ssn,
x.spriden_surname_prefix,
x.spriden_last_name,
x.spriden_first_name,
x.spriden_mi,
substr(x.spriden_mi,1,1),
a.spbpers_name_prefix,
a.spbpers_name_suffix,
c.apbcons_nickname,
c.apbcons_cm_name,
c.apbcons_maiden_last_name,
c.apbcons_addr_name,
c.apbcons_atyp_code_pref,
x.spriden_entity_ind,
a.spbpers_dead_ind,
a.spbpers_dead_date,
c.apbcons_coll_code_pref,
c.apbcons_pref_clas,
substr(f_lost_al_ind(agvgmem_pidm),1,1),
k.atvdonr_code,
k.atvdonr_alum_ind,
l.atvdonr_code,
l.atvdonr_alum_ind,
m.atvdonr_code,
m.atvdonr_alum_ind,
n.atvdonr_code,
n.atvdonr_alum_ind,
substr(f_check_for_more('DONOR', agvgmem_pidm),1,1),
y.spriden_id,
y.spriden_surname_prefix,
y.spriden_last_name,
y.spriden_first_name,
y.spriden_mi,
agvgmem_memo_pidm,
y.spriden_entity_ind,
b.spbpers_dead_ind,
b.spbpers_dead_date,
d.apbcons_coll_code_pref,
d.apbcons_pref_clas,
substr(f_lost_al_ind(agvgmem_memo_pidm),1,1),
o.atvdonr_code,
substr(f_alum_ind(agvgmem_memo_pidm),1,1),
agvgmem_gift_no,
agvgmem_pledge_no,
agvgmem_campaign,
afbcamp_name,
afbcamp_cmtp_code,
agvgmem_desg_amt,
agvgmem_credit,
agvgmem_gift_date,
agvgmem_fisc_code,
agvgmem_gift_code,
agvgmem_gcls_code,
agvgmem_pgve_code,
substr(f_memo_detail_matching_gift( agvgmem_gift_no),1,1),
agvgmem_desg,
adbdesg_name,
adbdesg_dstp_code,
adbdesg_coll_code,
adbdesg_cfae_code
from adbdesg, afbcamp,apbcons c, apbcons d,
spriden x, spriden y, spbpers a, spbpers b,
atvdonr k, atvdonr l, atvdonr m, atvdonr n,
atvdonr o,agvgmem
where x.spriden_pidm = agvgmem_pidm
  and x.spriden_change_ind is null
  and y.spriden_pidm = agvgmem_memo_pidm
  and y.spriden_change_ind is null
  and c.apbcons_pidm(+) = agvgmem_pidm
  and d.apbcons_pidm(+) = agvgmem_memo_pidm
  and a.spbpers_pidm(+) = agvgmem_pidm
  and b.spbpers_pidm(+) = agvgmem_memo_pidm
  and   adbdesg_desg = agvgmem_desg
  and   afbcamp_campaign = agvgmem_campaign
  and k.rowid(+) = f_donor_categoryes(agvgmem_pidm,1)
  and l.rowid(+) = f_donor_categoryes(agvgmem_pidm,2)
  and m.rowid(+) = f_donor_categoryes(agvgmem_pidm,3)
  and n.rowid(+) = f_donor_categoryes(agvgmem_pidm,4)
  and o.rowid(+) = f_donor_categoryes(agvgmem_memo_pidm,1)"
"BANINST1","AGVGLST","Gift List View","SELECT AGRGDES_PIDM,
          AGRGDES_GIFT_NO,
          AGRGDES_PLEDGE_NO,
          AGRGDES_CAMPAIGN,
          AGRGDES_DESG,
          AGRGDES_AMT,
          AGBGIFT_GIFT_DATE,
          AGBGIFT_FISC_CODE,
          AGBGIFT_GIFT_CODE,
          AGBGIFT_GCLS_CODE,
          AGBGIFT_FINAL_IND,
          AGBGIFT_RECEIPT_IND,
          AGBGIFT_GACK_IND,
          AGBGIFT_ADJ_IND,
          AGBGIFT_GIFT_DESC,
          AFBCAMP_CMTP_CODE,
          ADBDESG_DSTP_CODE,
          ADBDESG_CFAE_CODE,
          ADBDESG_COLL_CODE,
          AGBGIFT_PGVE_CODE,
          ADBDESG_DEPT_CODE,
          AGBGIFT_COMMENT,
          AGBGIFT_GCLS_CODE_2,
          AGBGIFT_GCLS_CODE_3,
          AGBGIFT_USER,
          AGBGIFT_ACTIVITY_DATE,
          NVL(AGBCSHR_SESSION_NUMBER,0),
          AGBGIFT_USER
FROM AGBCSHR,AGRGDES, AGBGIFT, AFBCAMP, ADBDESG
WHERE AGRGDES_PIDM = AGBGIFT_PIDM
AND   AGRGDES_GIFT_NO   = AGBGIFT_GIFT_NO
AND   AFBCAMP_CAMPAIGN = AGRGDES_CAMPAIGN
AND   ADBDESG_DESG = AGRGDES_DESG
AND   AGBGIFT_USER = AGBCSHR_USER(+)
AND   AGBCSHR_SESSION_NUMBER(+) > 0
AND   AGBGIFT_ENTRY_DATE BETWEEN AGBCSHR_START_DATE(+) AND AGBCSHR_END_DATE(+) "
"BANINST1","AGVGIV1","","select
apventy_pidm,
spriden_entity_ind,
spriden_id,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
apbcons_nickname,
apbcons_cm_name,
apbcons_maiden_last_name,
apbcons_addr_name,
apbcons_atyp_code_pref,
spbpers_dead_ind,
spbpers_dead_date,
apbcons_coll_code_pref,
apbcons_pref_clas,
k.atvdonr_code,
k.atvdonr_alum_ind,
l.atvdonr_code,
l.atvdonr_alum_ind,
m.atvdonr_code,
m.atvdonr_alum_ind,
n.atvdonr_code,
n.atvdonr_alum_ind,
substr(f_check_for_more('DONOR', apventy_pidm),1,1),
substr(f_spouse_info(apventy_pidm), 1, 290),
f_fisc_code(sysdate,0),
f_number_gift_year(apventy_pidm,sysdate,0),
f_total_giving_year(apventy_pidm,sysdate,0),
to_number(f_high_gift_amount_year(apventy_pidm,sysdate,0,'GIFT')),
to_date(f_high_gift_amount_year(apventy_pidm,sysdate,0,'DATE'),'DD-MON-YYYY'),
f_total_ant_mat_gift_pay(apventy_pidm,sysdate,0),
f_total_rlz_mat_gift_pay(apventy_pidm,sysdate,0),
f_total_ant_mat_gift_one_pay(apventy_pidm,sysdate,0),
f_total_rlz_mat_gift_one_pay(apventy_pidm,sysdate,0),
f_total_non_mat_gift_memo(apventy_pidm,sysdate,0),
f_number_pledge_year(apventy_pidm,sysdate,0),
f_total_pledged_amount_year(apventy_pidm,sysdate,0),
f_high_pledge_amount_year(apventy_pidm,sysdate,0),
f_total_pledge_payment_year(apventy_pidm,sysdate,0),
f_fisc_code(sysdate,1),
f_number_gift_year(apventy_pidm,sysdate,1),
f_total_giving_year(apventy_pidm,sysdate,1),
to_number(f_high_gift_amount_year(apventy_pidm,sysdate,1,'GIFT')),
to_date(f_high_gift_amount_year(apventy_pidm,sysdate,1,'DATE'),'DD-MON-YYYY'),
f_total_ant_mat_gift_pay(apventy_pidm,sysdate,1),
f_total_rlz_mat_gift_pay(apventy_pidm,sysdate,1),
f_total_ant_mat_gift_one_pay(apventy_pidm,sysdate,1),
f_total_rlz_mat_gift_one_pay(apventy_pidm,sysdate,1),
f_total_non_mat_gift_memo(apventy_pidm,sysdate,1),
f_number_pledge_year(apventy_pidm,sysdate,1),
f_total_pledged_amount_year(apventy_pidm,sysdate,1),
f_high_pledge_amount_year(apventy_pidm,sysdate,1),
f_total_pledge_payment_year(apventy_pidm,sysdate,1),
f_fisc_code(sysdate,2),
f_number_gift_year(apventy_pidm,sysdate,2),
f_total_giving_year(apventy_pidm,sysdate,2),
to_number(f_high_gift_amount_year(apventy_pidm,sysdate,2,'GIFT')),
to_date(f_high_gift_amount_year(apventy_pidm,sysdate,2,'DATE'),'DD-MON-YYYY'),
f_total_ant_mat_gift_pay(apventy_pidm,sysdate,2),
f_total_rlz_mat_gift_pay(apventy_pidm,sysdate,2),
f_total_ant_mat_gift_one_pay(apventy_pidm,sysdate,2),
f_total_rlz_mat_gift_one_pay(apventy_pidm,sysdate,2),
f_total_non_mat_gift_memo(apventy_pidm,sysdate,2),
f_number_pledge_year(apventy_pidm,sysdate,2),
f_total_pledged_amount_year(apventy_pidm,sysdate,2),
f_high_pledge_amount_year(apventy_pidm,sysdate,2),
f_total_pledge_payment_year(apventy_pidm,sysdate,2),
f_fisc_code(sysdate,3),
f_number_gift_year(apventy_pidm,sysdate,3),
f_total_giving_year(apventy_pidm,sysdate,3),
to_number(f_high_gift_amount_year(apventy_pidm,sysdate,3,'GIFT')),
to_date(f_high_gift_amount_year(apventy_pidm,sysdate,3,'DATE'),'DD-MON-YYYY'),
f_total_ant_mat_gift_pay(apventy_pidm,sysdate,3),
f_total_rlz_mat_gift_pay(apventy_pidm,sysdate,3),
f_total_ant_mat_gift_one_pay(apventy_pidm,sysdate,3),
f_total_rlz_mat_gift_one_pay(apventy_pidm,sysdate,3),
f_total_non_mat_gift_memo(apventy_pidm,sysdate,3),
f_number_pledge_year(apventy_pidm,sysdate,3),
f_total_pledged_amount_year(apventy_pidm,sysdate,3),
f_high_pledge_amount_year(apventy_pidm,sysdate,3),
f_total_pledge_payment_year(apventy_pidm,sysdate,3),
f_fisc_code(sysdate,4),
f_number_gift_year(apventy_pidm,sysdate,4),
f_total_giving_year(apventy_pidm,sysdate,4),
to_number(f_high_gift_amount_year(apventy_pidm,sysdate,4,'GIFT')),
to_date(f_high_gift_amount_year(apventy_pidm,sysdate,4,'DATE'),'DD-MON-YYYY'),
f_total_ant_mat_gift_pay(apventy_pidm,sysdate,4),
f_total_rlz_mat_gift_pay(apventy_pidm,sysdate,4),
f_total_ant_mat_gift_one_pay(apventy_pidm,sysdate,4),
f_total_rlz_mat_gift_one_pay(apventy_pidm,sysdate,4),
f_total_non_mat_gift_memo(apventy_pidm,sysdate,4),
f_number_pledge_year(apventy_pidm,sysdate,4),
f_total_pledged_amount_year(apventy_pidm,sysdate,4),
f_high_pledge_amount_year(apventy_pidm,sysdate,4),
f_total_pledge_payment_year(apventy_pidm,sysdate,4),
f_fisc_code(sysdate,5),
f_number_gift_year(apventy_pidm,sysdate,5),
f_total_giving_year(apventy_pidm,sysdate,5),
to_number(f_high_gift_amount_year(apventy_pidm,sysdate,5,'GIFT')),
to_date(f_high_gift_amount_year(apventy_pidm,sysdate,5,'DATE'),'DD-MON-YYYY'),
f_total_ant_mat_gift_pay(apventy_pidm,sysdate,5),
f_total_rlz_mat_gift_pay(apventy_pidm,sysdate,5),
f_total_ant_mat_gift_one_pay(apventy_pidm,sysdate,5),
f_total_rlz_mat_gift_one_pay(apventy_pidm,sysdate,5),
f_total_non_mat_gift_memo(apventy_pidm,sysdate,5),
f_number_pledge_year(apventy_pidm,sysdate,5),
f_total_pledged_amount_year(apventy_pidm,sysdate,5),
f_high_pledge_amount_year(apventy_pidm,sysdate,5),
f_total_pledge_payment_year(apventy_pidm,sysdate,5),
substr(f_gift_society_info(apventy_pidm,1),1,2),
substr(f_gift_society_info(apventy_pidm,2),1,4),
substr(f_gift_society_info(apventy_pidm,3),1,2),
substr(f_gift_society_info(apventy_pidm,4),1,4),
substr(f_gift_society_info(apventy_pidm,5),1,2),
substr(f_gift_society_info(apventy_pidm,6),1,4),
substr(f_gift_society_info(apventy_pidm,7),1,2),
substr(f_gift_society_info(apventy_pidm,8),1,4),
substr(f_gift_society_info(apventy_pidm,9),1,2),
substr(f_gift_society_info(apventy_pidm,10),1,4),
substr(f_gift_society_info(apventy_pidm,11),1,2),
substr(f_gift_society_info(apventy_pidm,12),1,4),
substr(f_gift_society_info(apventy_pidm,13),1,2),
substr(f_gift_society_info(apventy_pidm,14),1,4),
substr(f_gift_society_info(apventy_pidm,15),1,2),
substr(f_gift_society_info(apventy_pidm,16),1,4),
substr(f_gift_society_info(apventy_pidm,17),1,2),
substr(f_gift_society_info(apventy_pidm,18),1,4),
substr(f_gift_society_info(apventy_pidm,19),1,2),
substr(f_gift_society_info(apventy_pidm,20),1,4),
substr(f_gift_society_info(apventy_pidm,21),1,2),
substr(f_gift_society_info(apventy_pidm,22),1,4),
substr(f_gift_society_info(apventy_pidm,23),1,2),
substr(f_gift_society_info(apventy_pidm,24),1,4),
f_life_total_giving(apventy_pidm),
to_date(f_most_recent_gift_amount(apventy_pidm,'DATE'),'DD-MON-YYYY'),
to_number(f_most_recent_gift_amount(apventy_pidm,'GIFT')),
f_life_total_pledged_amount(apventy_pidm),
to_date(f_most_recent_pledge_amount(apventy_pidm,'DATE'),'DD-MON-YYYY'),
to_number(f_most_recent_pledge_amount(apventy_pidm,'PLEDGE')),
f_life_total_pledge_payment(apventy_pidm),
substr(f_life_gift_society(apventy_pidm,'GIFT SOCIETY TYPE'),1,2),
substr(f_life_gift_society(apventy_pidm,'GIFT SOCIETY'),1,4),
f_life_total_commitment(apventy_pidm)
from atvdonr k, atvdonr l, atvdonr m, atvdonr n,
apbcons, spbpers, spriden, apventy
where apbcons_pidm(+) = apventy_pidm
  and spbpers_pidm(+) = apventy_pidm
  and spriden_change_ind is null
  and spriden_pidm = apventy_pidm
  and k.rowid(+) = f_donor_categoryes(apventy_pidm,1)
  and l.rowid(+) = f_donor_categoryes(apventy_pidm,2)
  and m.rowid(+) = f_donor_categoryes(apventy_pidm,3)
  and n.rowid(+) = f_donor_categoryes(apventy_pidm,4)"
"BANINST1","AGVGHLD","Advancement External Gift AGBGHLD View","SELECT
        AGBGHLD_ID,
        AGBGHLD_PIDM,
        AGBGHLD_GIFT_NO,
        AGBGHLD_AMT_TOT,
        AGBGHLD_GIFT_CODE,
        AGBGHLD_GIFT_DATE,
        AGBGHLD_EXT_GIFT_ID,
        AGBGHLD_DONR_CODE,
        AGBGHLD_COMMENT,
        AGBGHLD_ACCEPTED_IND,
        AGBGHLD_DATA_ORIGIN,
        AGBGHLD_ACTIVITY_DATE,
        APBWIDN_LAST_NAME || ', ' || APBWIDN_FIRST_NAME ||
        DECODE(APBWIDN_MI,'', '',  ' ' || APBWIDN_MI),
        APBWIDN_ID,
        AGBGHLD_REV_REQ_IND,
        AGBGHLD_SOLC_CODE,
        AGBGHLD_SOL_ORG,
        SPRIDEN_ID,
        AGBGHLD_FISC_CODE,
        AGBGHLD_GIFT_DESC,
        AGBGHLD_ENTRY_DATE,
        AGBGHLD_USER,
        AGBGHLD_CASHIER,
        AGBGHLD_MATCH_RECEIVED,
        AGBGHLD_PGVE_CODE,
        AGBGHLD_GCLS_CODE,
        AGBGHLD_GCLS_CODE_2,
        AGBGHLD_GCLS_CODE_3,
        AGBGHLD_SOL_PIDM,
        AGBGHLD_CARD_AUTH_CODE,
        AGBGHLD_CARD_REFR_NUMBER,
        AGBGHLD_PROC_INSTR
FROM AGBGHLD,APBWIDN, SPRIDEN
WHERE AGBGHLD_ID = APBWIDN_ID
AND AGBGHLD_PIDM = SPRIDEN_PIDM(+)
AND SPRIDEN_CHANGE_IND IS NULL"
"BANINST1","AGVGGIF","","select 'mult',
       agrgmlt_xref_pidm,
       agbgift_gift_no,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       0,
       nvl(sum(agrgmlt_credit),0),
       agbgift_GACK_CODE,
       agbgift_GACK_IND,
       agbgift_COMMENT,
       agbgift_MATCH_RECEIVED,
       agbgift_MATCH_PROCESSED,
       agbgift_ENTRY_DATE,
       agbgift_user,
       agbgift_FEED_IND,
       agbgift_FEED_DATE,
       agbgift_FEED_DOC_CODE,
       agbgift_ADJ_IND,
       agbgift_gcls_code_2,
       agbgift_gcls_code_3,
       agbgift_card_auth_code,
       agbgift_card_refr_number
from   agbgift,
       agrgmlt
where  agrgmlt_pidm = agbgift_pidm
and    agbgift_gift_no = agrgmlt_gift_no
group  by agrgmlt_xref_pidm, agbgift_gift_no, agbgift_fisc_code,
          agbgift_gift_date, agbgift_gift_code, agbgift_gcls_code,
       agbgift_GACK_CODE,
       agbgift_GACK_IND,
       agbgift_COMMENT,
       agbgift_MATCH_RECEIVED,
       agbgift_MATCH_PROCESSED,
       agbgift_ENTRY_DATE,
       agbgift_user,
       agbgift_FEED_IND,
       agbgift_FEED_DATE,
       agbgift_FEED_DOC_CODE,
       agbgift_ADJ_IND,
       agbgift_gcls_code_2,
       agbgift_gcls_code_3,
       agbgift_card_auth_code,
       agbgift_card_refr_number
UNION
select 'gift',
       agbgift_pidm,
       agbgift_gift_no,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       agbgift_amt_tot,
      (agbgift_amt_tot - nvl(sum(agrgmlt_credit),0)),
       agbgift_GACK_CODE,
       agbgift_GACK_IND,
       agbgift_COMMENT,
       agbgift_MATCH_RECEIVED,
       agbgift_MATCH_PROCESSED,
       agbgift_ENTRY_DATE,
       agbgift_user,
       agbgift_FEED_IND,
       agbgift_FEED_DATE,
       agbgift_FEED_DOC_CODE,
       agbgift_ADJ_IND,
       agbgift_gcls_code_2,
       agbgift_gcls_code_3,
       agbgift_card_auth_code,
       agbgift_card_refr_number
from   agbgift,
       agrgmlt
where    agbgift_gift_no = agrgmlt_gift_no (+)
And    agbgift_pidm = agrgmlt_pidm (+)
and    agbgift_gift_no = agrgmlt_gift_no (+)
group  by agbgift_pidm, agbgift_gift_no, agbgift_fisc_code,
          agbgift_gift_date, agbgift_gift_code, agbgift_gcls_code,
          agbgift_amt_tot,
       agbgift_GACK_CODE,
       agbgift_GACK_IND,
       agbgift_COMMENT,
       agbgift_MATCH_RECEIVED,
       agbgift_MATCH_PROCESSED,
       agbgift_ENTRY_DATE,
       agbgift_user,
       agbgift_FEED_IND,
       agbgift_FEED_DATE,
       agbgift_FEED_DOC_CODE,
       agbgift_ADJ_IND,
       agbgift_gcls_code_2,
       agbgift_gcls_code_3,
       agbgift_card_auth_code,
       agbgift_card_refr_number"
"BANINST1","AGVGFD2","","select
agrgmlt_xref_pidm,
agrgmlt_gift_no,
agrgmlt_pledge_no,
agrgmlt_campaign,
agrgmlt_desg,
0,
nvl(agrgmlt_credit,0),
agbgift_gift_date,
agbgift_fisc_code,
agbgift_gift_code,
agbgift_gift_desc,
agbgift_gcls_code,
agbgift_match_received,
agbgift_feed_date,
agbgift_feed_doc_code,
agbgift_user,
agbgift_entry_date,
agbgift_pgve_code,
agbgift_gcls_code_2,
agbgift_gcls_code_3
from agbgift, agrgmlt
where agrgmlt_pidm = agbgift_pidm(+)
  and agrgmlt_gift_no = agbgift_gift_no(+)
UNION
select
agrgdes_pidm,
agrgdes_gift_no,
agrgdes_pledge_no,
agrgdes_campaign,
agrgdes_desg,
agrgdes_amt,
nvl(agrgdes_amt -
    f_gift_hard_credit(agrgdes_pidm,agrgdes_gift_no,
                     agrgdes_pledge_no,agrgdes_campaign,agrgdes_desg),0),
agbgift_gift_date,
agbgift_fisc_code,
agbgift_gift_code,
agbgift_gift_desc,
agbgift_gcls_code,
agbgift_match_received,
agbgift_feed_date,
agbgift_feed_doc_code,
agbgift_user,
agbgift_entry_date,
agbgift_pgve_code,
agbgift_gcls_code_2,
agbgift_gcls_code_3
from  agbgift, agrgdes
where agrgdes_pidm = agbgift_pidm
  and agrgdes_gift_no = agbgift_gift_no
 "
"BANINST1","AGVGFD1","","select
agvgfd2_pidm,
spriden_id,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
apbcons_nickname,
apbcons_cm_name,
apbcons_maiden_last_name,
apbcons_addr_name,
apbcons_atyp_code_pref,
spriden_entity_ind,
spbpers_dead_ind,
spbpers_dead_date,
apbcons_coll_code_pref,
apbcons_pref_clas,
substr(f_lost_al_ind(agvgfd2_pidm),1,1),
k.atvdonr_code,
k.atvdonr_alum_ind,
l.atvdonr_code,
l.atvdonr_alum_ind,
m.atvdonr_code,
m.atvdonr_alum_ind,
n.atvdonr_code,
n.atvdonr_alum_ind,
substr(f_check_for_more('DONOR', agvgfd2_pidm),1,1),
agvgfd2_gift_no,
agvgfd2_pledge_no,
agvgfd2_campaign,
afbcamp_name,
afbcamp_cmtp_code,
agvgfd2_gift_amt,
agvgfd2_credit,
agvgfd2_gift_date,
agvgfd2_fisc_code,
agvgfd2_gift_code,
agvgfd2_gift_desc,
agvgfd2_gcls_code,
agvgfd2_gcls_code_2,
agvgfd2_gcls_code_3,
agvgfd2_pgve_code,
substr(f_matching_gift(agvgfd2_gift_no),1,1),
agvgfd2_match_received,
agvgfd2_feed_date,
agvgfd2_feed_doc_code,
agvgfd2_user,
agvgfd2_entry_date,
atvgift_db_gl_acct,
atvgift_rucl_code,
atvgift_cfae_gift_catg,
agvgfd2_desg,
adbdesg_name,
adbdesg_dstp_code,
adbdesg_coll_code,
adbdesg_cfae_code,
adbdesg_gl_no_credit,
adbdesg_coas_code,
adbdesg_acci_code,
adbdesg_fund_code,
adbdesg_orgn_code,
adbdesg_acct_code,
adbdesg_prog_code,
adbdesg_actv_code,
adbdesg_locn_code,
x.agrgsol_solc_code,
x.agrgsol_sol_org,
to_number(substr(f_gift_solicitor(agvgfd2_gift_no,
                 agvgfd2_pledge_no,agvgfd2_campaign,'PIDM'),1,8)),
substr(f_gift_solicitor(agvgfd2_gift_no,agvgfd2_pledge_no,
                        agvgfd2_campaign,'ID'),1,9),
substr(f_gift_solicitor(agvgfd2_gift_no,agvgfd2_pledge_no,
                        agvgfd2_campaign,'SURNAME_PREFIX'),1,60),
substr(f_gift_solicitor(agvgfd2_gift_no,agvgfd2_pledge_no,
                        agvgfd2_campaign,'LAST_NAME'),1,60),
substr(f_gift_solicitor(agvgfd2_gift_no,agvgfd2_pledge_no,
                        agvgfd2_campaign,'FIRST_NAME'),1,60),
x.agrgsol_amt,
substr(f_gift_solicitor_more(agvgfd2_gift_no,agvgfd2_pledge_no,
                             agvgfd2_campaign),1,1)
from atvdonr k, atvdonr l, atvdonr m, atvdonr n,
     apbcons, spbpers, spriden,
     afbcamp, adbdesg, agrgsol x,atvgift, agvgfd2
where apbcons_pidm(+)= agvgfd2_pidm
  and spbpers_pidm(+)= agvgfd2_pidm
  and spriden_change_ind is null
  and spriden_pidm = agvgfd2_pidm
  and agvgfd2_gift_code = atvgift_code(+)
  and afbcamp_campaign = agvgfd2_campaign
  and adbdesg_desg = agvgfd2_desg
  and x.rowid(+) = f_gift_solicitor_info(agvgfd2_gift_no,agvgfd2_pledge_no,
                      agvgfd2_campaign)
  and k.rowid(+) = f_donor_categoryes(agvgfd2_pidm,1)
  and l.rowid(+) = f_donor_categoryes(agvgfd2_pidm,2)
  and m.rowid(+) = f_donor_categoryes(agvgfd2_pidm,3)
  and n.rowid(+) = f_donor_categoryes(agvgfd2_pidm,4)"
"BANINST1","AGVGCRD","","select 'mult',
       agrgmlt_xref_pidm,
       agrgdes_gift_no,
       agrgdes_pledge_no,
       agrgdes_campaign,
       agrgdes_desg,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       0,
       nvl(agrgmlt_credit,0),
       agbgift_gcls_code_2,
       agbgift_gcls_code_3
from   agrgdes, agbgift,
       agrgmlt
where  agrgdes_pidm = agrgmlt_pidm
and    agrgdes_pledge_no = agrgmlt_pledge_no
and    agrgdes_gift_no = agrgmlt_gift_no
and    agrgdes_campaign = agrgmlt_campaign
and    agrgdes_desg = agrgmlt_desg
and    agrgdes_pidm = agbgift_pidm
and    agrgdes_gift_no = agbgift_gift_no
UNION
select 'gift',
       agrgdes_pidm,
       agrgdes_gift_no,
       agrgdes_pledge_no,
       agrgdes_campaign,
       agrgdes_desg,
       agbgift_fisc_code,
       agbgift_gift_date,
       agbgift_gift_code,
       agbgift_gcls_code,
       agrgdes_amt,
      (agrgdes_amt - nvl(agrgmlt_credit,0)),
       agbgift_gcls_code_2,
       agbgift_gcls_code_3
from   agrgdes, agbgift,
       agrgmlt
where  agrgdes_pidm = agrgmlt_pidm (+)
and    agrgdes_pledge_no = agrgmlt_pledge_no (+)
and    agrgdes_gift_no = agrgmlt_gift_no (+)
and    agrgdes_campaign = agrgmlt_campaign (+)
and    agrgdes_desg = agrgmlt_desg (+)
and    agrgdes_pidm = agbgift_pidm
and    agrgdes_gift_no = agbgift_gift_no
 "
"BANINST1","AGVGCAM","Campaign View","SELECT AGRGCAM_PIDM,
          AGRGCAM_GIFT_NO,
          AGRGCAM_PLEDGE_NO,
          AGRGCAM_CAMPAIGN,
          AGRGCAM_AMT,
          AGBGIFT_GIFT_DATE,
          AGBGIFT_FISC_CODE,
          AGBGIFT_GIFT_CODE,
          AGBGIFT_GCLS_CODE,
          AGBGIFT_FINAL_IND,
          AGBGIFT_RECEIPT_IND,
          AGBGIFT_GACK_IND,
          AGBGIFT_ADJ_IND,
          AGBGIFT_GIFT_DESC,
          AGBGIFT_PGVE_CODE,
          AGBGIFT_GCLS_CODE_2,
          AGBGIFT_GCLS_CODE_3
FROM AGRGCAM, AGBGIFT
WHERE AGRGCAM_PIDM = AGBGIFT_PIDM
AND   AGRGCAM_GIFT_NO   = AGBGIFT_GIFT_NO
 "
"BANINST1","AGVFISC","This view will sum all giving for a pidm by fiscal year","select aprchis_pidm, aprchis_fisc_code,
    sum(aprchis_amt_pledged), sum(aprchis_amt_pledged_paid),
    sum(aprchis_amt_gift),sum(aprchis_amt_gift)+sum(aprchis_amt_pledged_paid),
    sum(aprchis_amt_memo),
    sum(aprchis_amt_gift)+sum(aprchis_amt_pledged_paid)+sum(aprchis_amt_memo)
from aprchis
group by aprchis_pidm, aprchis_fisc_Code"
"BANINST1","AGVFGIV","","SELECT APRCHIS_PIDM,
          APRCHIS_FISC_CODE,
          (SUM(APRCHIS_AMT_PLEDGED_PAID) + SUM(APRCHIS_AMT_GIFT))
   FROM APRCHIS
   GROUP BY APRCHIS_PIDM, APRCHIS_FISC_CODE
 "
"BANINST1","AGVDONR","View that contains a record for each gift transaction per pidm that is either
 hard credit for the pidm or soft credit for the pidm where the soft credit
 is NOT matching gift credit","select agrgdes_pidm, agbgift_gift_date, agbgift_fisc_Code, agrgdes_amt
  from agrgdes, agbgift
  where agrgdes_pidm = agbgift_pidm
  and   agrgdes_gift_no = agbgift_gift_no
  and   not exists
   (select 'x' from agrgids
    where agrgids_pidm = agbgift_pidm
    and   agrgids_gift_no = agbgift_gift_no)
union
 select agvgmlt_pidm, agvgmlt_gift_date, agvgmlt_fisc_code,
          (agvgmlt_desg_amt-agvgmlt_credit)
   from   agvgmlt
union
   select agvgmlt_xref_pidm, agvgmlt_gift_date, agvgmlt_fisc_code,
          agvgmlt_credit
   from   agvgmlt
union
   select agvgmem_memo_pidm, agvgmem_gift_date, agvgmem_fisc_code,
          agvgmem_credit
   from   agvgmem
   where  not exists
          (select 'x' from agrmgif
           where agrmgif_empr_gift_no = agvgmem_gift_no
           and   agrmgif_empr_pidm    = agvgmem_pidm)
 "
"BANINST1","AGVDHIS","Designation Giving View","SELECT APRDHIS_PIDM,
          APRDHIS_FISC_CODE,
          APRDHIS_DESG,
          (SUM(APRDHIS_AMT_PLEDGED_PAID) + SUM(APRDHIS_AMT_GIFT))
   FROM APRDHIS
   GROUP BY APRDHIS_PIDM, APRDHIS_FISC_CODE, APRDHIS_DESG
 "
"BANINST1","AGVCSHR","Gift List View","SELECT AGRGDES_PIDM,
          AGRGDES_GIFT_NO,
          AGRGDES_PLEDGE_NO,
          AGRGDES_CAMPAIGN,
          AGRGDES_DESG,
          AGRGDES_AMT,
          AGBGIFT_GIFT_DATE,
          AGBGIFT_ENTRY_DATE,
          AGBGIFT_USER,
          AGBCSHR_SESSION_NUMBER,
          AGBCSHR_SESSION_IND,
          AGBGIFT_FISC_CODE,
          AGBGIFT_GIFT_CODE,
          AGBGIFT_GCLS_CODE,
          AGBGIFT_FINAL_IND,
          AGBGIFT_RECEIPT_IND,
          AGBGIFT_GACK_IND,
          AGBGIFT_ADJ_IND,
          AGBGIFT_GIFT_DESC,
          AGBGIFT_GCLS_CODE_2,
          AGBGIFT_GCLS_CODE_3
FROM  AGRGDES, AGBGIFT, AGBCSHR
WHERE AGRGDES_PIDM    = AGBGIFT_PIDM
AND   AGRGDES_GIFT_NO = AGBGIFT_GIFT_NO
AND   AGBGIFT_USER    = AGBCSHR_USER
AND   AGBGIFT_ENTRY_DATE BETWEEN AGBCSHR_START_DATE AND AGBCSHR_END_DATE
 "
"BANINST1","AGVCHIS","Campaign Giving View","SELECT APRCHIS_PIDM,
          APRCHIS_FISC_CODE,
          APRCHIS_CAMPAIGN,
          (SUM(APRCHIS_AMT_PLEDGED_PAID) + SUM(APRCHIS_AMT_GIFT))
   FROM APRCHIS
   GROUP BY APRCHIS_PIDM, APRCHIS_FISC_CODE, APRCHIS_CAMPAIGN
 "
"BANINST1","AGVAPDS","","SELECT
        AGRAPDS_PIDM,
        AGRAPDS_PLEDGE_NO,
        AGRAPDS_SEQ_NO,
        AGRAPDS_CAMPAIGN,
        AGRAPDS_DESG,
        AGRAPDS_AMT,
        AGRAPDS_USER_ADJ,
        AGRAPDS_APLG_SEQ_NO,
        AGRAPDS_CAMPAIGN_ADJ,
        AGRAPDS_DESG_ADJ,
        AGRAPDS_AMT_ADJ,
        AGRAPDS_ACTIVITY_DATE,
        AGRAPDS_NEED_TO_FEED_IND,
        AGRAPDS_FEED_IND_ADJ,
        AGRAPDS_FEED_DATE_ADJ,
        AGRAPDS_FEED_DOC_CODE_ADJ,
        AGRAPLG_FISC_CODE,
        AGRAPLG_PLEDGE_DATE,
        AGRAPLG_PLEDGE_DATE_ADJ,
        AGRAPLG_PLDG_CODE,
        AGRAPDS_ENTRY_DATE,
        AGRAPLG_PGVE_CODE,
        AGRAPLG_CCLS_CODE,
        AGRAPLG_CCLS_COMMENT
FROM AGRAPDS X, AGRAPLG
-- Begin 1-HMENU
-- WHERE AGRAPDS_SEQ_NO =
--       (SELECT MIN(AGRAPDS_SEQ_NO) FROM AGRAPDS
--        WHERE AGRAPDS_PIDM = X.AGRAPDS_PIDM
--        AND   AGRAPDS_PLEDGE_NO = X.AGRAPDS_PLEDGE_NO
--        AND   AGRAPDS_APLG_SEQ_NO = X.AGRAPDS_APLG_SEQ_NO)
-- AND   AGRAPDS_PIDM = AGRAPLG_PIDM(+)
-- End 1-HMENU
WHERE AGRAPDS_PIDM = AGRAPLG_PIDM(+)
AND   AGRAPDS_PLEDGE_NO = AGRAPLG_PLEDGE_NO(+)
AND   AGRAPDS_APLG_SEQ_NO = AGRAPLG_SEQ_NO(+)"
"BANINST1","AGVAGDS","","SELECT
        AGRAGDS_PIDM,
        AGRAGDS_GIFT_NO,
        AGRAGDS_SEQ_NO,
        AGRAGDS_PLEDGE_NO,
        AGRAGDS_CAMPAIGN,
        AGRAGDS_DESG,
        AGRAGDS_AMT,
        AGRAGDS_AGIF_SEQ_NO,
        AGRAGDS_USER,
        AGRAGDS_GIFT_DATE,
        AGRAGDS_FISC_CODE,
        AGRAGDS_GIFT_CODE,
        AGRAGDS_PLEDGE_NO_ADJ,
        AGRAGDS_CAMPAIGN_ADJ,
        AGRAGDS_DESG_ADJ,
        AGRAGDS_AMT_ADJ,
        AGRAGDS_USER_ADJ,
        AGRAGDS_ENTRY_DATE_ADJ,
        AGRAGDS_GIFT_DATE_ADJ,
        AGRAGDS_FISC_CODE_ADJ,
        AGRAGDS_GIFT_CODE_ADJ,
        AGRAGDS_NEED_TO_FEED_IND,
        AGRAGDS_FEED_IND_ADJ,
        AGRAGDS_FEED_DATE_ADJ,
        AGRAGDS_FEED_DOC_CODE_ADJ,
        AGRAGDS_FINAL_IND_ADJ,
        AGRAGDS_USER_CASH,
        AGRAGDS_ENTRY_DATE_CASH,
        AGRAGDS_SESSION_NUMBER,
        AGRAGDS_ACTIVITY_DATE,
-- Begin Defect 1-4C811
        AGRAGIF_PGVE_CODE,
        AGRAGIF_COMMENT_ADJ,
        AGRAGIF_CCLS_CODE,
        AGRAGIF_CCLS_COMMENT
-- End Defect 1-4C811
FROM AGRAGDS, AGRAGIF
      WHERE AGRAGDS_PIDM = AGRAGIF_PIDM(+)
      AND   AGRAGDS_GIFT_NO = AGRAGIF_GIFT_NO(+)
      AND   AGRAGDS_AGIF_SEQ_NO = AGRAGIF_SEQ_NO(+)"
"BANINST1","AGV3PAY","View of Third Party Payments made against a Pledge.","SELECT AGRGIDS_PIDM,
          AGBPLDG_PIDM,
          AGRGIDS_XREF_PIDM,
          AGRGIDS_GIFT_NO,
          AGRGIDS_3PP_PLEDGE_NO,
-- Begin 1-VMQGQY
--        AGRGIDS_3PP_AMT,
          AGRGIDS_3PP_TOT_AMT,
-- End 1-VMQGQY
	  'HARD',
          AGRGIDS_ACTIVITY_DATE
   FROM  AGRGIDS, AGBPLDG
   WHERE AGRGIDS_3PP_PLEDGE_NO IS NOT NULL
-- Begin 1-VMQGQY
-- AND   AGBPLDG_PIDM > 0
   AND   AGBPLDG_PIDM = AGRGIDS_XREF_PIDM
-- End 1-VMQGQY
   AND   AGRGIDS_3PP_PLEDGE_NO = AGBPLDG_PLEDGE_NO
UNION
   SELECT AGRGMEM_PIDM,
          AGBPLDG_PIDM,
          AGRGMEM_MEMO_PIDM,
          AGRGMEM_GIFT_NO,
          AGRGMEM_3PP_PLEDGE_NO,
-- Begin 1-VMQGQY
--        AGRGMEM_3PP_AMT,
          AGRGMEM_3PP_TOT_AMT,
-- End 1-VMQGQY
	  'SOFT',
          AGRGMEM_ACTIVITY_DATE
   FROM  AGRGMEM, AGBPLDG
   WHERE AGRGMEM_3PP_PLEDGE_NO IS NOT NULL
-- Begin 1-VMQGQY
-- AND   AGBPLDG_PIDM > 0
   AND   AGBPLDG_PIDM = AGRGMEM_MEMO_PIDM
-- End 1-VMQGQY
   AND   AGRGMEM_3PP_PLEDGE_NO = AGBPLDG_PLEDGE_NO "
"BANINST1","AGV3DTL","View of Third Party Payments by Campaign made against a Pledge.","SELECT AGBPLDG_PIDM,
-- Begin 1-VMQGQY
--        SUM(AGRGMMO_3PP_AMT),
	  SUM(AGRGMMO_3PP_TOT_AMT),
-- End 1-VMQGQY
	  AGRGMMO_CAMPAIGN,
	  AGRGMMO_DESG,
	  'SOFT'
   FROM   AGBPLDG, AGRGMMO
-- Begin 1-VMQGQY
-- WHERE  AGBPLDG_PIDM > 0
   WHERE  AGBPLDG_PIDM = AGRGMMO_XREF_PIDM
-- End 1-VMQGQY
   AND    AGRGMMO_PIDM > 0
   AND    AGRGMMO_3PP_PLEDGE_NO = AGBPLDG_PLEDGE_NO
   AND    AGRGMMO_3PP_PLEDGE_NO IS NOT NULL
   GROUP BY AGBPLDG_PIDM, AGRGMMO_CAMPAIGN, AGRGMMO_DESG
UNION
   SELECT AGBPLDG_PIDM,
-- Begin 1-VMQGQY
--        SUM(AGRGMLT_3PP_AMT),
	  SUM(AGRGMLT_3PP_TOT_AMT),
-- End 1-VMQGQY
	  AGRGMLT_CAMPAIGN,
	  AGRGMLT_DESG,
	  'HARD'
   FROM   AGBPLDG, AGRGMLT
-- Begin 1-VMQGQY
-- WHERE  AGBPLDG_PIDM > 0
   WHERE  AGBPLDG_PIDM = AGRGMLT_XREF_PIDM
-- End 1-VMQGQY
   AND    AGRGMLT_PIDM > 0
   AND    AGRGMLT_3PP_PLEDGE_NO = AGBPLDG_PLEDGE_NO
   AND    AGRGMLT_3PP_PLEDGE_NO IS NOT NULL
   GROUP BY AGBPLDG_PIDM, AGRGMLT_CAMPAIGN, AGRGMLT_DESG"
"BANINST1","AF_YEARLY_OPERATING_STATEMENT","This view retrieves yearly operating statement information and joins in pertinent validation tables.","select substr(to_char(to_date(fgbopal_fsyr_code,'RR'),'YYYY'),1,4),
fgbopal_coas_code,ftvcoas_title,ftvcoas_status_ind,
fgbopal_fund_code,
ftvfund_title,
ftvfund_status_ind,
fgbopal_orgn_code,
ftvorgn_title,
ftvorgn_status_ind,
fgbopal_acct_code,
ftvacct_title,
ftvacct_status_ind,
fgbopal_prog_code,
substr(f_prog_title(fgbopal_coas_code,fgbopal_prog_code,ftvfsyr_end_date),1,35),
substr(f_prog_status_ind(fgbopal_coas_code,fgbopal_prog_code,ftvfsyr_end_date),1,1),
fgbopal_actv_code,
substr(f_actv_title(fgbopal_coas_code,fgbopal_actv_code,ftvfsyr_end_date),1,35),
substr(f_actv_status_ind(fgbopal_coas_code,fgbopal_actv_code,ftvfsyr_end_date),1,1),
fgbopal_locn_code,
substr(f_locn_title(fgbopal_coas_code,fgbopal_locn_code,ftvfsyr_end_date),1,35),
fgbopal_cmt_type,
substr(f_fund_hier1_fnc(fgbopal_coas_code,fgbopal_fund_code,1,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbopal_coas_code,fgbopal_fund_code,1,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbopal_coas_code,fgbopal_fund_code,1,ftvfsyr_end_date),1,1),
substr(f_fund_hier1_fnc(fgbopal_coas_code,fgbopal_fund_code,2,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbopal_coas_code,fgbopal_fund_code,2,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbopal_coas_code,fgbopal_fund_code,2,ftvfsyr_end_date),1,1),
substr(f_fund_hier1_fnc(fgbopal_coas_code,fgbopal_fund_code,3,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbopal_coas_code,fgbopal_fund_code,3,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbopal_coas_code,fgbopal_fund_code,3,ftvfsyr_end_date),1,1),
substr(f_fund_hier1_fnc(fgbopal_coas_code,fgbopal_fund_code,4,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbopal_coas_code,fgbopal_fund_code,4,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbopal_coas_code,fgbopal_fund_code,4,ftvfsyr_end_date),1,1),
substr(f_fund_hier1_fnc(fgbopal_coas_code,fgbopal_fund_code,5,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbopal_coas_code,fgbopal_fund_code,5,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbopal_coas_code,fgbopal_fund_code,5,ftvfsyr_end_date),1,1),
substr(f_ftyp_hier1_fnc(fgbopal_coas_code,y.ftvfund_ftyp_code,1,ftvfsyr_end_date),1,6),
substr(f_ftyp_hier2_fnc(fgbopal_coas_code,y.ftvfund_ftyp_code,1,ftvfsyr_end_date),1,35),
substr(f_ftyp_hier3_fnc(fgbopal_coas_code,y.ftvfund_ftyp_code,1,ftvfsyr_end_date),1,1),
substr(f_ftyp_hier1_fnc(fgbopal_coas_code,y.ftvfund_ftyp_code,2,ftvfsyr_end_date),1,6),
substr(f_ftyp_hier2_fnc(fgbopal_coas_code,y.ftvfund_ftyp_code,2,ftvfsyr_end_date),1,35),
substr(f_ftyp_hier3_fnc(fgbopal_coas_code,y.ftvfund_ftyp_code,2,ftvfsyr_end_date),1,1),
substr(f_acct_hier1_fnc(fgbopal_coas_code,fgbopal_acct_code,1,ftvfsyr_end_date),1,6),
substr(f_acct_hier2_fnc(fgbopal_coas_code,fgbopal_acct_code,1,ftvfsyr_end_date),1,35),
substr(f_acct_hier3_fnc(fgbopal_coas_code,fgbopal_acct_code,1,ftvfsyr_end_date),1,1),
substr(f_acct_hier1_fnc(fgbopal_coas_code,fgbopal_acct_code,2,ftvfsyr_end_date),1,6),
substr(f_acct_hier2_fnc(fgbopal_coas_code,fgbopal_acct_code,2,ftvfsyr_end_date),1,35),
substr(f_acct_hier3_fnc(fgbopal_coas_code,fgbopal_acct_code,2,ftvfsyr_end_date),1,1),
substr(f_acct_hier1_fnc(fgbopal_coas_code,fgbopal_acct_code,3,ftvfsyr_end_date),1,6),
substr(f_acct_hier2_fnc(fgbopal_coas_code,fgbopal_acct_code,3,ftvfsyr_end_date),1,35),
substr(f_acct_hier3_fnc(fgbopal_coas_code,fgbopal_acct_code,3,ftvfsyr_end_date),1,1),
substr(f_acct_hier1_fnc(fgbopal_coas_code,fgbopal_acct_code,4,ftvfsyr_end_date),1,6),
substr(f_acct_hier2_fnc(fgbopal_coas_code,fgbopal_acct_code,4,ftvfsyr_end_date),1,35),
substr(f_acct_hier3_fnc(fgbopal_coas_code,fgbopal_acct_code,4,ftvfsyr_end_date),1,1),
substr(f_atyp_hier1_fnc(fgbopal_coas_code,e.ftvacct_atyp_code,1,ftvfsyr_end_date),1,6),
substr(f_atyp_hier2_fnc(fgbopal_coas_code,e.ftvacct_atyp_code,1,ftvfsyr_end_date),1,35),
substr(f_atyp_hier3_fnc(fgbopal_coas_code,e.ftvacct_atyp_code,1,ftvfsyr_end_date),1,1),
substr(f_atyp_hier1_fnc(fgbopal_coas_code,e.ftvacct_atyp_code,2,ftvfsyr_end_date),1,6),
substr(f_atyp_hier2_fnc(fgbopal_coas_code,e.ftvacct_atyp_code,2,ftvfsyr_end_date),1,35),
substr(f_atyp_hier3_fnc(fgbopal_coas_code,e.ftvacct_atyp_code,2,ftvfsyr_end_date),1,1),
substr(f_orgn_hier1_fnc(fgbopal_coas_code,fgbopal_orgn_code,1,ftvfsyr_end_date),1,6),
substr(f_orgn_hier2_fnc(fgbopal_coas_code,fgbopal_orgn_code,1,ftvfsyr_end_date),1,35),
substr(f_orgn_hier3_fnc(fgbopal_coas_code,fgbopal_orgn_code,1,ftvfsyr_end_date),1,1),
substr(f_orgn_hier1_fnc(fgbopal_coas_code,fgbopal_orgn_code,2,ftvfsyr_end_date),1,6),
substr(f_orgn_hier2_fnc(fgbopal_coas_code,fgbopal_orgn_code,2,ftvfsyr_end_date),1,35),
substr(f_orgn_hier3_fnc(fgbopal_coas_code,fgbopal_orgn_code,2,ftvfsyr_end_date),1,1),
substr(f_orgn_hier1_fnc(fgbopal_coas_code,fgbopal_orgn_code,3,ftvfsyr_end_date),1,6),
substr(f_orgn_hier2_fnc(fgbopal_coas_code,fgbopal_orgn_code,3,ftvfsyr_end_date),1,35),
substr(f_orgn_hier3_fnc(fgbopal_coas_code,fgbopal_orgn_code,3,ftvfsyr_end_date),1,1),
substr(f_orgn_hier1_fnc(fgbopal_coas_code,fgbopal_orgn_code,4,ftvfsyr_end_date),1,6),
substr(f_orgn_hier2_fnc(fgbopal_coas_code,fgbopal_orgn_code,4,ftvfsyr_end_date),1,35),
substr(f_orgn_hier3_fnc(fgbopal_coas_code,fgbopal_orgn_code,4,ftvfsyr_end_date),
1,1),
substr(f_orgn_hier1_fnc(fgbopal_coas_code,fgbopal_orgn_code,5,ftvfsyr_end_date),1,6),
substr(f_orgn_hier2_fnc(fgbopal_coas_code,fgbopal_orgn_code,5,ftvfsyr_end_date),1,35),
substr(f_orgn_hier3_fnc(fgbopal_coas_code,fgbopal_orgn_code,5,ftvfsyr_end_date),1,1),
substr(f_orgn_hier1_fnc(fgbopal_coas_code,fgbopal_orgn_code,6,ftvfsyr_end_date),1,6),
substr(f_orgn_hier2_fnc(fgbopal_coas_code,fgbopal_orgn_code,6,ftvfsyr_end_date),1,35),
substr(f_orgn_hier3_fnc(fgbopal_coas_code,fgbopal_orgn_code,6,ftvfsyr_end_date),1,1),
substr(f_orgn_hier1_fnc(fgbopal_coas_code,fgbopal_orgn_code,7,ftvfsyr_end_date),1,6),
substr(f_orgn_hier2_fnc(fgbopal_coas_code,fgbopal_orgn_code,7,ftvfsyr_end_date),1,35),
substr(f_orgn_hier3_fnc(fgbopal_coas_code,fgbopal_orgn_code,7,ftvfsyr_end_date),1,1),
substr(f_orgn_hier1_fnc(fgbopal_coas_code,fgbopal_orgn_code,8,ftvfsyr_end_date),1,6),
substr(f_orgn_hier2_fnc(fgbopal_coas_code,fgbopal_orgn_code,8,ftvfsyr_end_date),1,35),
substr(f_orgn_hier3_fnc(fgbopal_coas_code,fgbopal_orgn_code,8,ftvfsyr_end_date),1,1),
substr(f_prog_hier1_fnc(fgbopal_coas_code,fgbopal_prog_code,1,ftvfsyr_end_date),1,6),
substr(f_prog_hier2_fnc(fgbopal_coas_code,fgbopal_prog_code,1,ftvfsyr_end_date),1,35),
substr(f_prog_hier3_fnc(fgbopal_coas_code,fgbopal_prog_code,1,ftvfsyr_end_date),1,1),
substr(f_prog_hier1_fnc(fgbopal_coas_code,fgbopal_prog_code,2,ftvfsyr_end_date),1,6),
substr(f_prog_hier2_fnc(fgbopal_coas_code,fgbopal_prog_code,2,ftvfsyr_end_date),1,35),
substr(f_prog_hier3_fnc(fgbopal_coas_code,fgbopal_prog_code,2,ftvfsyr_end_date),1,1),
substr(f_prog_hier1_fnc(fgbopal_coas_code,fgbopal_prog_code,3,ftvfsyr_end_date),1,6),
substr(f_prog_hier2_fnc(fgbopal_coas_code,fgbopal_prog_code,3,ftvfsyr_end_date),1,35),
substr(f_prog_hier3_fnc(fgbopal_coas_code,fgbopal_prog_code,3,ftvfsyr_end_date),1,1),
substr(f_prog_hier1_fnc(fgbopal_coas_code,fgbopal_prog_code,4,ftvfsyr_end_date),1,6),
substr(f_prog_hier2_fnc(fgbopal_coas_code,fgbopal_prog_code,4,ftvfsyr_end_date),1,35),
substr(f_prog_hier3_fnc(fgbopal_coas_code,fgbopal_prog_code,4,ftvfsyr_end_date),1,1),
substr(f_prog_hier1_fnc(fgbopal_coas_code,fgbopal_prog_code,5,ftvfsyr_end_date),1,6),
substr(f_prog_hier2_fnc(fgbopal_coas_code,fgbopal_prog_code,5,ftvfsyr_end_date),1,35),
substr(f_prog_hier3_fnc(fgbopal_coas_code,fgbopal_prog_code,5,ftvfsyr_end_date),1,1),
substr(f_locn_hier1_fnc(fgbopal_coas_code,fgbopal_locn_code,1,ftvfsyr_end_date),1,6),
substr(f_locn_hier2_fnc(fgbopal_coas_code,fgbopal_locn_code,1,ftvfsyr_end_date),1,35),
substr(f_locn_hier3_fnc(fgbopal_coas_code,fgbopal_locn_code,1,ftvfsyr_end_date),1,1),
substr(f_locn_hier1_fnc(fgbopal_coas_code,fgbopal_locn_code,2,ftvfsyr_end_date),1,6),
substr(f_locn_hier2_fnc(fgbopal_coas_code,fgbopal_locn_code,2,ftvfsyr_end_date),1,35),
substr(f_locn_hier3_fnc(fgbopal_coas_code,fgbopal_locn_code,2,ftvfsyr_end_date),1,1),
substr(f_locn_hier1_fnc(fgbopal_coas_code,fgbopal_locn_code,3,ftvfsyr_end_date),1,6),
substr(f_locn_hier2_fnc(fgbopal_coas_code,fgbopal_locn_code,3,ftvfsyr_end_date),1,35),
substr(f_locn_hier3_fnc(fgbopal_coas_code,fgbopal_locn_code,3,ftvfsyr_end_date),1,1),
substr(f_locn_hier1_fnc(fgbopal_coas_code,fgbopal_locn_code,4,ftvfsyr_end_date),1,6),
substr(f_locn_hier2_fnc(fgbopal_coas_code,fgbopal_locn_code,4,ftvfsyr_end_date),1,35),
substr(f_locn_hier3_fnc(fgbopal_coas_code,fgbopal_locn_code,4,ftvfsyr_end_date),1,1),
substr(f_locn_hier1_fnc(fgbopal_coas_code,fgbopal_locn_code,5,ftvfsyr_end_date),1,6),
substr(f_locn_hier2_fnc(fgbopal_coas_code,fgbopal_locn_code,5,ftvfsyr_end_date),1,35),
substr(f_locn_hier3_fnc(fgbopal_coas_code,fgbopal_locn_code,5,ftvfsyr_end_date),1,1),
y.ftvfund_grnt_code,
substr(frkiden.f_get_frbgrnt_title(ftvfund_grnt_code),1,35),
substr(frkiden.f_get_frbgrnt_status_code(ftvfund_grnt_code),1,2),
fgbopal_14_adopt_bud,fgbopal_14_bud_adjt,fgbopal_14_ytd_actv,
fgbopal_14_encumb,fgbopal_14_bud_rsrv,fgbopal_14_acctd_bud,
fgbopal_14_temp_bud,(fgbopal_14_adopt_bud+fgbopal_14_bud_adjt)-
(fgbopal_14_ytd_actv+fgbopal_14_encumb+fgbopal_14_bud_rsrv),
ftvorgn_fmgr_code_pidm,
substr(frkiden.f_get_spriden_id(ftvorgn_fmgr_code_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(ftvorgn_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(ftvorgn_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(ftvorgn_fmgr_code_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(ftvorgn_fmgr_code_pidm),1,15),
ftvfund_fmgr_code_pidm,
substr(frkiden.f_get_spriden_id(ftvfund_fmgr_code_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(ftvfund_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(ftvfund_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(ftvfund_fmgr_code_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(ftvfund_fmgr_code_pidm),1,15)
from ftvcoas,fgbopal,ftvfund y,ftvacct e,
fobsysc,ftvorgn,
ftvfsyr
where fgbopal_coas_code = ftvfsyr_coas_code
  and fgbopal_fsyr_code = ftvfsyr_fsyr_code
  and ((ftvcoas_eff_date <= ftvfsyr_end_date) or ftvcoas_eff_date is null)
  and ((ftvcoas_nchg_date > ftvfsyr_end_date) or ftvcoas_nchg_date is null)
  and fgbopal_coas_code=ftvcoas_coas_code(+)
  and fgbopal_coas_code=y.ftvfund_coas_code(+)
  and fgbopal_fund_code=y.ftvfund_fund_code(+)
  and ((y.ftvfund_eff_date <= ftvfsyr_end_date) or ftvfund_eff_date is null)
  and ((y.ftvfund_nchg_date > ftvfsyr_end_date) or ftvfund_nchg_date is null)
  and fgbopal_coas_code=e.ftvacct_coas_code(+)
  and e.ftvacct_acct_code(+)=fgbopal_acct_code
  and ((e.ftvacct_eff_date <= ftvfsyr_end_date) or ftvacct_eff_date is null)
  and ((e.ftvacct_nchg_date > ftvfsyr_end_date) or ftvacct_nchg_date is null)
 and decode(fobsysc_fund_org_security_ind,'Y',
f_fund_org_security_fnc(fgbopal_coas_code,fgbopal_fund_code,fgbopal_orgn_code),'Y')='Y'
 and FOBSYSC_EFF_DATE <= ftvfsyr_end_date
 and  (FOBSYSC_NCHG_DATE IS NULL
        OR  FOBSYSC_NCHG_DATE > ftvfsyr_end_date)
 and FOBSYSC_STATUS_IND = 'A'
  and fgbopal_coas_code=ftvorgn_coas_code(+)
  and fgbopal_orgn_code=ftvorgn_orgn_code(+)
  and ((ftvorgn_eff_date <= ftvfsyr_end_date) or ftvorgn_eff_date is null)
  and ((ftvorgn_nchg_date > ftvfsyr_end_date) or ftvorgn_nchg_date is null)"
"BANINST1","AF_YEARLY_BALANCE_SHEET","This view retrieves yearly balance sheet account information and pertinent validation tables.","select substr(to_char(to_date(fgbgenl_fsyr_code,'RR'),'YYYY'),1,4),
fgbgenl_coas_code,ftvcoas_title,ftvcoas_status_ind,
fgbgenl_fund_code,
y.ftvfund_title,
y.ftvfund_status_ind,
fgbgenl_acct_code,
substr(f_acct_title(fgbgenl_coas_code,fgbgenl_acct_code,ftvfsyr_end_date),1,35),
e.ftvacct_status_ind,
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,1,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,1,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,1,ftvfsyr_end_date),1,1),
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,2,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,2,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,2,ftvfsyr_end_date),1,1),
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,3,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,3,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,3,ftvfsyr_end_date),1,1),
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,4,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,4,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,4,ftvfsyr_end_date),1,1),
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,5,ftvfsyr_end_date),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,5,ftvfsyr_end_date),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,5,ftvfsyr_end_date),1,1),
substr(f_ftyp_hier1_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,1,ftvfsyr_end_date),1,6),
substr(f_ftyp_hier2_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,1,ftvfsyr_end_date),1,35),
substr(f_ftyp_hier3_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,1,ftvfsyr_end_date),1,1),
substr(f_ftyp_hier1_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,2,ftvfsyr_end_date),1,6),
substr(f_ftyp_hier2_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,2,ftvfsyr_end_date),1,35),
substr(f_ftyp_hier3_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,2,ftvfsyr_end_date),1,1),
substr(f_acct_hier1_fnc(fgbgenl_coas_code,fgbgenl_acct_code,1,ftvfsyr_end_date),1,6),
substr(f_acct_hier2_fnc(fgbgenl_coas_code,fgbgenl_acct_code,1,ftvfsyr_end_date),1,35),
substr(f_acct_hier3_fnc(fgbgenl_coas_code,fgbgenl_acct_code,1,ftvfsyr_end_date),1,1),
substr(f_acct_hier1_fnc(fgbgenl_coas_code,fgbgenl_acct_code,2,ftvfsyr_end_date),1,6),
substr(f_acct_hier2_fnc(fgbgenl_coas_code,fgbgenl_acct_code,2,ftvfsyr_end_date),1,35),
substr(f_acct_hier3_fnc(fgbgenl_coas_code,fgbgenl_acct_code,2,ftvfsyr_end_date),1,1),
substr(f_acct_hier1_fnc(fgbgenl_coas_code,fgbgenl_acct_code,3,ftvfsyr_end_date),1,6),
substr(f_acct_hier2_fnc(fgbgenl_coas_code,fgbgenl_acct_code,3,ftvfsyr_end_date),1,35),
substr(f_acct_hier3_fnc(fgbgenl_coas_code,fgbgenl_acct_code,3,ftvfsyr_end_date),1,1),
substr(f_acct_hier1_fnc(fgbgenl_coas_code,fgbgenl_acct_code,4,ftvfsyr_end_date),1,6),
substr(f_acct_hier2_fnc(fgbgenl_coas_code,fgbgenl_acct_code,4,ftvfsyr_end_date),1,35),
substr(f_acct_hier3_fnc(fgbgenl_coas_code,fgbgenl_acct_code,4,ftvfsyr_end_date),1,1),
substr(f_atyp_hier1_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,1,ftvfsyr_end_date),1,6),
substr(f_atyp_hier2_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,1,ftvfsyr_end_date),1,35),
substr(f_atyp_hier3_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,1,ftvfsyr_end_date),1,1),
substr(f_atyp_hier1_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,2,ftvfsyr_end_date),1,6),
substr(f_atyp_hier2_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,2,ftvfsyr_end_date),1,35),
substr(f_atyp_hier3_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,2,ftvfsyr_end_date),1,1),
y.ftvfund_grnt_code,
substr(frkiden.f_get_frbgrnt_title(y.ftvfund_grnt_code),1,35),
substr(frkiden.f_get_frbgrnt_status_code(y.ftvfund_grnt_code),1,2),
sum(fgbgenl_sum_periodic_dr),sum(fgbgenl_sum_periodic_cr),
f_f2_begin_fnc(fgbgenl_coas_code,fgbgenl_fsyr_code,fgbgenl_fund_code,fgbgenl_acct_code),
sum(fgbgenl_sum_periodic_dr)-sum(fgbgenl_sum_periodic_cr),
decode(sign(f_f2_begin_fnc(fgbgenl_coas_code,fgbgenl_fsyr_code,fgbgenl_fund_code,fgbgenl_acct_code)),-1,'C',1,'D',0,'0'),
decode(sign(sum(fgbgenl_sum_periodic_dr)-sum(fgbgenl_sum_periodic_cr)),-1,'C',1,'D',0,'0'),
e.ftvacct_normal_bal
from ftvcoas,fgbgenl,ftvfund y,ftvacct e,
fobsysc,ftvfsyr
where fgbgenl_coas_code = ftvfsyr_coas_code
  and fgbgenl_fsyr_code = ftvfsyr_fsyr_code
  and ((ftvcoas_eff_date <= ftvfsyr_end_date) or ftvcoas_eff_date is null)
  and ((ftvcoas_nchg_date > ftvfsyr_end_date) or ftvcoas_nchg_date is null)
  and fgbgenl_coas_code=ftvcoas_coas_code(+)
  and fgbgenl_coas_code=y.ftvfund_coas_code(+)
  and fgbgenl_fund_code=y.ftvfund_fund_code(+)
  and ((y.ftvfund_eff_date <= ftvfsyr_end_date) or ftvfund_eff_date is null)
  and ((y.ftvfund_nchg_date > ftvfsyr_end_date) or ftvfund_nchg_date is null)
  and fgbgenl_coas_code=e.ftvacct_coas_code(+)
  and e.ftvacct_acct_code(+)=fgbgenl_acct_code
  and ((e.ftvacct_eff_date <= ftvfsyr_end_date) or ftvacct_eff_date is null)
  and ((e.ftvacct_nchg_date > ftvfsyr_end_date) or ftvacct_nchg_date is null)
 and decode(fobsysc_fund_org_security_ind,'Y',
f_fund_org_security_fnc(fgbgenl_coas_code,fgbgenl_fund_code,null),'Y')='Y'
 and FOBSYSC_EFF_DATE <= ftvfsyr_end_date
 and  (FOBSYSC_NCHG_DATE IS NULL
        OR  FOBSYSC_NCHG_DATE > ftvfsyr_end_date)
 and FOBSYSC_STATUS_IND = 'A'
group by fgbgenl_coas_code,
fgbgenl_fsyr_code,
ftvcoas_title,ftvcoas_status_ind,
fgbgenl_fund_code,fgbgenl_acct_code,e.ftvacct_status_ind,y.ftvfund_title,
y.ftvfund_status_ind, y.ftvfund_fund_code,y.ftvfund_ftyp_code,
e.ftvacct_atyp_code, y.ftvfund_grnt_code,
substr(frkiden.f_get_frbgrnt_title(y.ftvfund_grnt_code),1,35),
substr(frkiden.f_get_frbgrnt_status_code(y.ftvfund_grnt_code),1,2),
e.ftvacct_normal_bal, ftvfsyr_end_date
 "
"BANINST1","AF_VENDOR_VOLUME","This view retrieves vendor volume information from the invoice tables and joins in pertinent validation tables.","select fabinvh_vend_pidm,fabinvh_code,fabinvh_submission_number,farinvc_item,
substr(frkiden.f_get_spriden_id(fabinvh_vend_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(fabinvh_vend_pidm),1,60),
substr(frkiden.f_get_spriden_entity_ind(fabinvh_vend_pidm),1,1),
spraddr_house_number,
spraddr_street_line1,
spraddr_street_line2,
spraddr_street_line3,
spraddr_street_line4,
spraddr_city,
spraddr_stat_code,
spraddr_zip,spraddr_cnty_code,stvcnty_desc,spraddr_natn_code,
stvnatn_nation,
ftvvend_ctry_code_phone,
ftvvend_phone_number,
ftvvend_phone_area,
ftvvend_phone_ext,
ftvvend_contact,ftvvent_vtyp_code,ftvvtyp_desc,
fabinvh_pohd_code,decode(fabinvh_multiple_inv_ind,'Y',farvinv_vend_inv_code,
fabinvh_vend_inv_code),
fabinvh_invoice_date,fabinvh_pmt_due_date,fabinvh_trans_date,
fabinvh_cancel_date,
substr(to_char(to_date((substr(f_get_fsyr_code(fabinvh_code),1,2)),'RR'),'YYYY'),1,4),
substr(f_get_fspd_code(fabinvh_code),1,2),
substr(frkiden.f_get_spriden_id(fabinvh_vend_check_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(fabinvh_vend_check_pidm),1,60),
fabinvh_vend_check_pidm,fabinvh_open_paid_ind,
fabinvh_appr_ind,fabinvh_cr_memo_ind,fabinvh_1099_ind,fabinvh_1099_id,
fabinvh_hold_ind,fabinvh_invoice_type_ind,
farinvc_comm_code,
substr(decode(farinvc_comm_code,null,farinvc_comm_desc,
              f_comm_desc(farinvc_comm_code)),1,50),
farinvc_hold_ind,farinvc_uoms_code,
ftvuoms_desc,farinvc_appr_qty,farinvc_appr_unit_price,farinvc_addl_chrg_amt,
farinvc_tax_amt,farinvc_disc_amt,
decode(fabinvh_cr_memo_ind,'Y',(((farinvc_appr_qty * farinvc_appr_unit_price)
+nvl(farinvc_addl_chrg_amt,0)+nvl(farinvc_tax_amt,0)-nvl(farinvc_disc_amt,0)) * -1),
((farinvc_appr_qty * farinvc_appr_unit_price)
+nvl(farinvc_addl_chrg_amt,0)+nvl(farinvc_tax_amt,0)-nvl(farinvc_disc_amt,0))),
fabinvh_curr_code,farinvc_convert_unit_price,farinvc_convert_disc_amt,
farinvc_convert_tax_amt,farinvc_convert_addl_chrg_amt,farinvc_tgrp_code,
substr(f_comm_tax_1_fnc(fabinvh_code,farinvc_item,1),1,4),
f_comm_tax_2_fnc(fabinvh_code,farinvc_item,1),
f_comm_tax_3_fnc(fabinvh_code,farinvc_item,1),
substr(f_comm_tax_1_fnc(fabinvh_code,farinvc_item,2),1,4),
f_comm_tax_2_fnc(fabinvh_code,farinvc_item,2),
f_comm_tax_3_fnc(fabinvh_code,farinvc_item,2),
substr(f_comm_tax_1_fnc(fabinvh_code,farinvc_item,3),1,4),
f_comm_tax_2_fnc(fabinvh_code,farinvc_item,3),
f_comm_tax_3_fnc(fabinvh_code,farinvc_item,3),
substr(f_comm_tax_1_fnc(fabinvh_code,farinvc_item,4),1,4),
f_comm_tax_2_fnc(fabinvh_code,farinvc_item,4),
f_comm_tax_3_fnc(fabinvh_code,farinvc_item,4),
substr(f_comm_tax_1_fnc(fabinvh_code,farinvc_item,5),1,4),
f_comm_tax_2_fnc(fabinvh_code,farinvc_item,5),
f_comm_tax_3_fnc(fabinvh_code,farinvc_item,5),
substr(f_comm_tax_1_fnc(fabinvh_code,farinvc_item,6),1,4),
f_comm_tax_2_fnc(fabinvh_code,farinvc_item,6),
f_comm_tax_3_fnc(fabinvh_code,farinvc_item,6),
substr(f_comm_tax_1_fnc(fabinvh_code,farinvc_item,7),1,4),
f_comm_tax_2_fnc(fabinvh_code,farinvc_item,7),
f_comm_tax_3_fnc(fabinvh_code,farinvc_item,7),
substr(f_comm_tax_1_fnc(fabinvh_code,farinvc_item,8),1,4),
f_comm_tax_2_fnc(fabinvh_code,farinvc_item,8),
f_comm_tax_3_fnc(fabinvh_code,farinvc_item,8)
from fabinvh,farinvc,
ftvuoms,spraddr,stvcnty,stvnatn,ftvvend,
ftvvtyp,ftvvent,farvinv
where fabinvh_code=farinvc_invh_code(+)
and farinvc_vend_inv_code = farvinv_vend_inv_code(+)
and farinvc_invh_code = farvinv_invh_code(+)
and ftvuoms_code(+)=farinvc_uoms_code
and ((ftvuoms_eff_date <= sysdate) or ftvuoms_eff_date is null)
and spraddr_atyp_code(+)=ftvvend_atyp_code
and spraddr_seqno(+)=ftvvend_addr_seqno
and stvcnty_code(+)=spraddr_cnty_code
and stvnatn_code(+)=spraddr_natn_code
and spraddr_pidm(+)=ftvvend_pidm
and ftvvend_pidm(+)=fabinvh_vend_pidm
and ftvvtyp_code(+)=ftvvent_vtyp_code
and ftvvent_pidm(+)=fabinvh_vend_pidm"
"BANINST1","AF_VENDOR_PERFORMANCE","This view retrieves vendor performance information and other data on pertinent validation tables.","select fpbrchd_code,fprrcdt_pohd_code,fprrcdt_packing_slip,fprrcdt_item,
fprrtrn_code,fprrtrn_seq_num,
fpbpohd_po_date,fpbpohd_po_printed_date,fpbpohd_reqd_date,
fprrcdt_rcvd_date,(fprrcdt_rcvd_date-fpbpohd_reqd_date),fpbrchd_rcmt_code,
ftvrcmt_desc,fprrcdt_comm_code,
substr(decode(fprrcdt_comm_code,null,fprrcdt_comm_desc,
              f_comm_desc(fprrcdt_comm_code)),1,50),
substr(frkiden.f_get_spriden_id(fpbrchd_carr_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(fpbrchd_carr_pidm),1,60),
fpbrchd_carr_pidm,fprrcdt_qty_rcvd,
fprrcdt_qty_rejd,
fprrtrn_qty,fprrtrn_uoms_code,ftvuoms_desc,fprrtrn_rrsn_code,ftvrrsn_desc,
substr(frkiden.f_get_spriden_id(fpbpohd_vend_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(fpbpohd_vend_pidm),1,60),
substr(frkiden.f_get_spriden_entity_ind(fpbpohd_vend_pidm),1,1),
fpbpohd_vend_pidm,
spraddr_house_number,
spraddr_street_line1,
spraddr_street_line2,
spraddr_street_line3,
spraddr_street_line4,
spraddr_city,
spraddr_stat_code,
spraddr_zip,
spraddr_cnty_code,
substr(frkiden.f_get_stvcnty_desc (spraddr_cnty_code),1,30),
spraddr_natn_code,
substr(frkiden.f_get_stvnatn_desc (spraddr_natn_code),1,30),
ftvvend_ctry_code_phone,
ftvvend_phone_number,
ftvvend_phone_area,
ftvvend_phone_ext,
ftvvend_contact,ftvvent_vtyp_code,ftvvtyp_desc
from fpbrchd,fprrcdt,fprrtrn,fpbpohd,
ftvrcmt,ftvuoms,
ftvrrsn,spraddr,ftvvend,
ftvvtyp,ftvvent
where FPBRCHD_CODE=FPRRCDT_RCHD_CODE(+)
and FPRRCDT_POHD_CODE=FPRRTRN_POHD_CODE(+)
and FPRRCDT_ITEM=FPRRTRN_ITEM(+)
and fpbpohd_code(+)=fprrcdt_pohd_code
and fpbpohd_change_seq_num is null
and ftvrcmt_code(+)=fpbrchd_rcmt_code
and ((ftvrcmt_eff_date <= sysdate) or ftvrcmt_eff_date is null)
and ((ftvrcmt_nchg_date > sysdate) or ftvrcmt_nchg_date is null)
and ftvuoms_code(+)=fprrtrn_uoms_code
and ((ftvuoms_eff_date <= sysdate) or ftvuoms_eff_date is null)
and ftvrrsn_code(+)=fprrtrn_rrsn_code
and ((ftvrrsn_eff_date <= sysdate) or ftvrrsn_eff_date is null)
and spraddr_atyp_code(+)=ftvvend_atyp_code
and spraddr_seqno(+)=ftvvend_addr_seqno
and spraddr_pidm(+)=ftvvend_pidm
and ftvvend_pidm(+)=fpbpohd_vend_pidm
and ftvvtyp_code(+)=ftvvent_vtyp_code
and ftvvent_pidm(+)=fpbpohd_vend_pidm"
"BANINST1","AF_TRANSACTION_DETAIL","This view retrieves transaction detail information and joins in pertinent validation tables.","select
 FGBTRNH_DOC_SEQ_CODE, FGBTRNH_DOC_CODE,
 FGBTRNH_SUBMISSION_NUMBER, FGBTRNH_ITEM_NUM, FGBTRNH_SEQ_NUM,
 FGBTRNH_SERIAL_NUM, FGBTRNH_REVERSAL_IND, FGBTRND_LEDGER_IND,
 decode(fgbtrnd_ledger_ind, 'E',
 decode(FGBTRND_FIELD_CODE,'01','OEN','02','AEN','03','LIQ'), 'G',
 decode(FGBTRND_FIELD_CODE,'01','GDR','02','GCR'), 'O',
 decode(FGBTRND_FIELD_CODE,'01','OBD','02','ABD','03','YTD','04','ENC',
                              '05','RSV','06','ACB','07','TMP')),
 FGBTRND_RULP_CODE,
 FGBTRNH_RUCL_CODE, FGBTRNH_USER_ID, FGBTRNH_DOC_REF_NUM, FGBTRNH_TRANS_DATE,
 FGBTRNH_TRANS_DESC, FGBTRNH_BANK_CODE, FGBTRNH_DEP_NUM,
 FGBTRNH_ENCD_ACTION_IND, FGBTRNH_PRJD_CODE, FGBTRNH_AUTO_JRNL_ID,
 FGBTRNH_DIST_PCT, FGBTRNH_BUD_DISPN, FGBTRNH_ENCB_TYPE,
 substr(frkiden.f_get_spriden_id(fgbtrnh_vendor_pidm),1,9),
 substr(frkiden.f_get_spriden_last_name(fgbtrnh_vendor_pidm),1,60),
 substr(frkiden.f_get_spriden_entity_ind(fgbtrnh_vendor_pidm),1,1),
 fgbtrnh_vendor_pidm, fgbtrnh_budget_period, fgbtrnh_accrual_ind,
 FGBTRNH_ABAL_OVERRIDE, FGBTRNH_CURR_CODE, FGBTRNH_CONVERT_AMT,
 FGBTRNH_EXCHANGE_AMT, FGBTRNH_EXCHANGE_DIFF, FGBTRNH_SUM_POST_DOC_CODE,
 FGBTRNH_COAS_CODE_POOL, FGBTRNH_FUND_CODE_POOL, FGBTRND_RUCL_CODE,
 FGBTRND_DOC_SEQ_CODE, FGBTRND_DOC_CODE, FGBTRND_SUBMISSION_NUMBER,
 FGBTRND_ITEM_NUM, FGBTRND_SEQ_NUM,
 FGBTRND_POSTING_PERIOD, FGBTRND_ACTIVITY_DATE,
 FGBTRND_USER_ID, FGBTRND_PROC_CODE,
 FGBTRND_COAS_CODE,
 substr(f_get_finance_desc('FTVCOAS',FGBTRND_COAS_CODE,null,30),1,30),
 substr(f_get_finance_status('FTVCOAS',FGBTRND_COAS_CODE,null),1,1),
 substr(to_char(to_date(FGBTRND_FSYR_CODE,'RR'),'YYYY'),1,4),
 FGBTRND_ACCI_CODE,
 substr(f_get_finance_desc
       ('FTVACCI',fgbtrnd_coas_code, FGBTRND_ACCI_CODE,30),1,30),
 substr(f_get_finance_status
       ('FTVACCI',fgbtrnd_coas_code, FGBTRND_ACCI_CODE),1,30),
 FGBTRND_FUND_CODE,
 substr(f_get_finance_desc
       ('FTVFUND',FGBTRND_COAS_CODE, FGBTRND_FUND_CODE,30),1,30),
 substr(f_get_finance_status
       ('FTVFUND',FGBTRND_COAS_CODE, FGBTRND_FUND_CODE),1,30),
 FGBTRND_ORGN_CODE,
 substr(f_get_finance_desc
       ('FTVORGN',FGBTRND_coas_code, FGBTRND_orgn_CODE,30),1,30),
 substr(f_get_finance_status
       ('FTVORGN',FGBTRND_coas_code, FGBTRND_orgn_CODE),1,30),
 FGBTRND_ACCT_CODE,
 substr(f_get_finance_desc
       ('FTVACCT',fgbtrnd_coas_code, FGBTRND_acct_CODE,30),1,30),
 substr(f_get_finance_status
       ('FTVACCT',fgbtrnd_coas_code, FGBTRND_acct_CODE),1,30),
 FGBTRND_PROG_CODE,
 substr(f_get_finance_desc
       ('FTVPROG',FGBTRND_COAS_CODE, FGBTRND_prog_CODE,30),1,30),
 substr(f_get_finance_status
       ('FTVPROG',FGBTRND_COAS_CODE, FGBTRND_prog_CODE),1,30),
 FGBTRND_ACTV_CODE,
 substr(f_get_finance_desc
       ('FTVACTV',fgbtrnd_coas_code, FGBTRND_actv_CODE,30),1,30),
 substr(f_get_finance_status
       ('FTVACTV',fgbtrnd_coas_code, FGBTRND_actv_CODE),1,30),
 FGBTRND_LOCN_CODE,
 substr(f_get_finance_desc
       ('FTVLOCN',FGBTRND_COAS_CODE, fgbtrnd_locn_code,30),1,30),
 substr(f_get_finance_status
       ('FTVLOCN',fgbtrnd_coas_code, fgbtrnd_locn_code),1,30),
 FGBTRND_BUD_ID,
 FGBTRND_BUDGET_PERIOD, FGBTRND_ENCD_NUM, FGBTRND_ENCD_ITEM_NUM,
 FGBTRND_ENCD_SEQ_NUM, FGBTRND_TRANS_AMT, FGBTRND_DR_CR_IND, FGBTRND_OTHER_DATA,
 FGBTRND_RECON_IND, FGBTRND_REVERSAL_IND, FGBTRND_SERIAL_NUM,
 FGBTRND_AMT_IND, FGBTRND_PRJD_CODE, FGBTRND_SUM_POST_DOC_CODE,
 FGBTRND_CMT_TYPE, FGBTRND_CMT_PCT,FGBTRND_FIELD_CODE
from  fgbtrnh, fgbtrnd
where FGBTRNH_DOC_SEQ_CODE=FGBTRND_DOC_SEQ_CODE
 and FGBTRNH_DOC_CODE=FGBTRND_DOC_CODE
 and FGBTRNH_SUBMISSION_NUMBER=FGBTRND_SUBMISSION_NUMBER
 and FGBTRNH_ITEM_NUM=FGBTRND_ITEM_NUM
 and FGBTRNH_SEQ_NUM=FGBTRND_SEQ_NUM
 and FGBTRNH_SERIAL_NUM=FGBTRND_SERIAL_NUM
 and FGBTRNH_REVERSAL_IND=FGBTRND_REVERSAL_IND"
"BANINST1","AF_RECONCILIATION","This view contains the AR Reconciliation information for BANNER reporting","select
 substr(to_char(to_date(fovrec1_fiscal_year_key,'RR'),'YYYY'),1,4),
 fovrec1_coas_code_key,
 substr(f_get_finance_desc('FTVCOAS',fovrec1_coas_code_key,null,
        30),1,30),
 fovrec1_fund_code_key,
 substr(f_get_finance_desc('FTVFUND',fovrec1_coas_code_key,
            fovrec1_fund_code_key,30),1,30),
 fovrec1_acct_code_key,
 substr(f_get_finance_desc('FTVACCT',fovrec1_coas_code_key,
            fovrec1_acct_code_key,30),1,30),
 fovrec1_dcat_code,
 substr(f_get_ar_desc('TTVDCAT',fovrec1_dcat_code,30),1,30),
 fovrec1_type_ind,
 fovrec1_accd_bal,
 fovrec1_appl_not_fed_bal,
 (fovrec1_accd_bal + fovrec1_appl_not_fed_bal),
 fovrec1_gl_bal,
 ((fovrec1_accd_bal + fovrec1_appl_not_fed_bal) - fovrec1_gl_bal)
from fovrec1"
"BANINST1","AF_PROPOSAL_VIEW","This views retrieve proposal information","select frbprop_code,
frbprop_long_title,
frbprop_title,
frbprop_pi_pidm,
substr(frkiden.f_get_spriden_id(frbprop_pi_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(frbprop_pi_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(frbprop_pi_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(frbprop_pi_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(frbprop_pi_pidm),1,15),
substr(f_get_cfda_no(frbprop_cfda_internal_id_no),1,12),
frbprop_sponsor_id,
frbprop_agency_pidm,
substr(frkiden.f_get_spriden_id(frbprop_agency_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(frbprop_agency_pidm),1,60),
frbprop_requested_amt,
frbprop_coas_code,
frbprop_orgn_code_resp_office,
substr(f_orgn_title(frbprop_coas_code,frbprop_orgn_code_resp_office),1,35),
frbprop_status_code,
frbprop_status_date,
frbprop_proposal_type,
frbprop_category,
frbprop_sub_category,
frrploc_locn_code,
substr(f_locn_title(frbprop_coas_code,frrploc_locn_code),1,35),
frrploc_locn_research_ind,
substr(f_agcy_hier(frbprop_agency_pidm,1),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbprop_agency_pidm,1)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbprop_agency_pidm,1)),1,60),
substr(f_agcy_hier(frbprop_agency_pidm,2),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbprop_agency_pidm,2)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbprop_agency_pidm,2)),1,60),
substr(f_agcy_hier(frbprop_agency_pidm,3),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbprop_agency_pidm,3)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbprop_agency_pidm,3)),1,60),
substr(f_agcy_hier(frbprop_agency_pidm,4),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbprop_agency_pidm,4)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbprop_agency_pidm,4)),1,60),
substr(f_orgn_hier1_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,1),1,6),
substr(f_orgn_hier2_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,1),1,35),
substr(f_orgn_hier1_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,2),1,6),
substr(f_orgn_hier2_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,2),1,35),
substr(f_orgn_hier1_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,3),1,6),
substr(f_orgn_hier2_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,3),1,35),
substr(f_orgn_hier1_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,4),1,6),
substr(f_orgn_hier2_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,4),1,35),
substr(f_orgn_hier1_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,5),1,6),
substr(f_orgn_hier2_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,5),1,35),
substr(f_orgn_hier1_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,6),1,6),
substr(f_orgn_hier2_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,6),1,35),
substr(f_orgn_hier1_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,7),1,6),
substr(f_orgn_hier2_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,7),1,35),
substr(f_orgn_hier1_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,8),1,6),
substr(f_orgn_hier2_fnc(frbprop_coas_code,frbprop_orgn_code_resp_office,8),1,35),
--1-LHH8I
nvl(f_get_status_date('N',frbprop_code,frbprop_coas_code),frbprop_orig_prep_date),
nvl(f_get_status_info('N','FY',frbprop_code,frbprop_coas_code),f_get_fiscal_year(frbprop_coas_code,to_char(frbprop_orig_prep_date,'DD-MON-YYYY'))),
nvl(f_get_status_info('N','FP',frbprop_code,frbprop_coas_code),f_get_fiscal_period(f_get_fiscal_year(frbprop_coas_code,to_char(frbprop_orig_prep_date,'DD-MON-YYYY')),frbprop_coas_code,to_char(frbprop_orig_prep_date,'DD-MON-YYYY'))),
nvl(f_get_status_date('S',frbprop_code,frbprop_coas_code),frbprop_submitted_date),
nvl(f_get_status_info('S','FY',frbprop_code,frbprop_coas_code),f_get_fiscal_year(frbprop_coas_code,to_char(frbprop_submitted_date,'DD-MON-YYYY'))),
nvl(f_get_status_info('S','FP',frbprop_code,frbprop_coas_code),f_get_fiscal_period(f_get_fiscal_year(frbprop_coas_code,to_char(frbprop_submitted_date,'DD-MON-YYYY')),frbprop_coas_code,to_char(frbprop_submitted_date,'DD-MON-YYYY'))),
--
f_get_status_date('A',frbprop_code,frbprop_coas_code),
f_get_status_info('A','FY',frbprop_code,frbprop_coas_code),
f_get_status_info('A','FP',frbprop_code,frbprop_coas_code),
f_get_status_date('D',frbprop_code,frbprop_coas_code),
f_get_status_info('D','FY',frbprop_code,frbprop_coas_code),
f_get_status_info('D','FP',frbprop_code,frbprop_coas_code),
frbprop_grnt_code,
frbgrnt_title,
frbgrnt_current_funding_amt
from  frbgrnt, frrploc, frbprop
where frbprop_code = frrploc_prop_code(+)
and   frbprop_code = frbgrnt_prop_code(+)
and f_chk_fobsysc(frbprop_coas_code,'',frbprop_orgn_code_resp_office) = 'Y'"
"BANINST1","AF_PROG_ATTRIBUTES_PROFILE","This view retrieves all the attributes (sets, types, values) associated with a PROG code.","SELECT
  ftrprga_coas_code,
  ftvcoas_title,
  'PROG',
  ftrprga_prog_Code,
  ftvprog_title,
  NVL(ftrprga_atts_code,'NONE'),
  ftvatts_desc,
  ftrprga_attt_code,
  ftvattt_desc,
  decode(ftvattt_status_ind,'A','Active','Inactive'),
  ftrprga_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts, ftvprog,ftrprga, ftvcoas
where ftvattt_coas_code = ftrprga_coas_code
and   ftvattt_code = ftrprga_attt_code
and   ftrattv_coas_Code(+) = ftrprga_coas_code
and   ftrattv_attt_code(+) = ftrprga_attt_code
and   ftrattv_code(+) = ftrprga_attv_code
and   ftvatts_coas_code(+) = ftrprga_coas_code
and   ftvatts_code(+)      = ftrprga_atts_code
and   ftvcoas_coas_code = ftrprga_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvprog_coas_code = ftrprga_coas_code
and   ftvprog_prog_Code = ftrprga_prog_code
and   ftvprog_eff_date <= sysdate
and   ftvprog_nchg_date > sysdate"
"BANINST1","AF_PERIOD_OPERATING_STATEMENT","This view retrieves accounting distribution analysis information and other data on pertinent validation tables.","select substr(TO_CHAR(TO_DATE(fgvopal2_fsyr_code,'RR'),'YYYY'),1,4),fgvopal2_period,
substr(f_get_fspd_status(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period),1,1),
fgvopal2_coas_code,ftvcoas_title,ftvcoas_status_ind,
fgvopal2_fund_code,
ftvfund_title,
ftvfund_status_ind,
fgvopal2_orgn_code,
ftvorgn_title,
ftvorgn_status_ind,
fgvopal2_acct_code,
ftvacct_title,
ftvacct_status_ind,
fgvopal2_prog_code,
substr(f_prog_title(fgvopal2_coas_code,fgvopal2_prog_code,sysdate),1,35),
substr(f_prog_status_ind(fgvopal2_coas_code,fgvopal2_prog_code,sysdate),1,35),
fgvopal2_actv_code,
substr(f_actv_title(fgvopal2_coas_code,fgvopal2_actv_code,sysdate),1,35),
substr(f_actv_status_ind(fgvopal2_coas_code,fgvopal2_actv_code,sysdate),1,35),
nvl(fgvopal2_locn_code,' '),
substr(f_locn_title(fgvopal2_coas_code,fgvopal2_locn_code,sysdate),1,35),
substr(f_locn_status_ind(fgvopal2_coas_code,fgvopal2_locn_code,sysdate),1,35),
fgvopal2_cmt_type,
substr(f_fund_hier1_fnc(fgvopal2_coas_code,fgvopal2_fund_code,1),1,6),
substr(f_fund_hier2_fnc(fgvopal2_coas_code,fgvopal2_fund_code,1,sysdate),1,35),
substr(f_fund_hier3_fnc(fgvopal2_coas_code,fgvopal2_fund_code,1,sysdate),1,1),
substr(f_fund_hier1_fnc(fgvopal2_coas_code,fgvopal2_fund_code,2,sysdate),1,6),
substr(f_fund_hier2_fnc(fgvopal2_coas_code,fgvopal2_fund_code,2,sysdate),1,35),
substr(f_fund_hier3_fnc(fgvopal2_coas_code,fgvopal2_fund_code,2,sysdate),1,1),
substr(f_fund_hier1_fnc(fgvopal2_coas_code,fgvopal2_fund_code,3,sysdate),1,6),
substr(f_fund_hier2_fnc(fgvopal2_coas_code,fgvopal2_fund_code,3,sysdate),1,35),
substr(f_fund_hier3_fnc(fgvopal2_coas_code,fgvopal2_fund_code,3,sysdate),1,1),
substr(f_fund_hier1_fnc(fgvopal2_coas_code,fgvopal2_fund_code,4,sysdate),1,6),
substr(f_fund_hier2_fnc(fgvopal2_coas_code,fgvopal2_fund_code,4,sysdate),1,35),
substr(f_fund_hier3_fnc(fgvopal2_coas_code,fgvopal2_fund_code,4,sysdate),1,1),
substr(f_fund_hier1_fnc(fgvopal2_coas_code,fgvopal2_fund_code,5,sysdate),1,6),
substr(f_fund_hier2_fnc(fgvopal2_coas_code,fgvopal2_fund_code,5,sysdate),1,35),
substr(f_fund_hier3_fnc(fgvopal2_coas_code,fgvopal2_fund_code,5,sysdate),1,1),
substr(f_ftyp_hier1_fnc(fgvopal2_coas_code,y.ftvfund_ftyp_code,1,sysdate),1,6),
substr(f_ftyp_hier2_fnc(fgvopal2_coas_code,y.ftvfund_ftyp_code,1,sysdate),1,35),
substr(f_ftyp_hier3_fnc(fgvopal2_coas_code,y.ftvfund_ftyp_code,1,sysdate),1,1),
substr(f_ftyp_hier1_fnc(fgvopal2_coas_code,y.ftvfund_ftyp_code,2,sysdate),1,6),
substr(f_ftyp_hier2_fnc(fgvopal2_coas_code,y.ftvfund_ftyp_code,2,sysdate),1,35),
substr(f_ftyp_hier3_fnc(fgvopal2_coas_code,y.ftvfund_ftyp_code,2,sysdate),1,1),
substr(f_acct_hier1_fnc(fgvopal2_coas_code,fgvopal2_acct_code,1,sysdate),1,6),
substr(f_acct_hier2_fnc(fgvopal2_coas_code,fgvopal2_acct_code,1,sysdate),1,35),
substr(f_acct_hier3_fnc(fgvopal2_coas_code,fgvopal2_acct_code,1,sysdate),1,1),
substr(f_acct_hier1_fnc(fgvopal2_coas_code,fgvopal2_acct_code,2,sysdate),1,6),
substr(f_acct_hier2_fnc(fgvopal2_coas_code,fgvopal2_acct_code,2,sysdate),1,35),
substr(f_acct_hier3_fnc(fgvopal2_coas_code,fgvopal2_acct_code,2,sysdate),1,1),
substr(f_acct_hier1_fnc(fgvopal2_coas_code,fgvopal2_acct_code,3,sysdate),1,6),
substr(f_acct_hier2_fnc(fgvopal2_coas_code,fgvopal2_acct_code,3,sysdate),1,35),
substr(f_acct_hier3_fnc(fgvopal2_coas_code,fgvopal2_acct_code,3,sysdate),1,1),
substr(f_acct_hier1_fnc(fgvopal2_coas_code,fgvopal2_acct_code,4,sysdate),1,6),
substr(f_acct_hier2_fnc(fgvopal2_coas_code,fgvopal2_acct_code,4,sysdate),1,35),
substr(f_acct_hier3_fnc(fgvopal2_coas_code,fgvopal2_acct_code,4,sysdate),1,1),
substr(f_atyp_hier1_fnc(fgvopal2_coas_code,e.ftvacct_atyp_code,1,sysdate),1,6),
substr(f_atyp_hier2_fnc(fgvopal2_coas_code,e.ftvacct_atyp_code,1,sysdate),1,35),
substr(f_atyp_hier3_fnc(fgvopal2_coas_code,e.ftvacct_atyp_code,1,sysdate),1,1),
substr(f_atyp_hier1_fnc(fgvopal2_coas_code,e.ftvacct_atyp_code,2,sysdate),1,6),
substr(f_atyp_hier2_fnc(fgvopal2_coas_code,e.ftvacct_atyp_code,2,sysdate),1,35),
substr(f_atyp_hier3_fnc(fgvopal2_coas_code,e.ftvacct_atyp_code,2,sysdate),1,1),
substr(f_orgn_hier1_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,1,sysdate),1,6),
substr(f_orgn_hier2_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,1,sysdate),1,35),
substr(f_orgn_hier3_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,1,sysdate),1,1),
substr(f_orgn_hier1_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,2,sysdate),1,6),
substr(f_orgn_hier2_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,2,sysdate),1,35),
substr(f_orgn_hier3_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,2,sysdate),1,1),
substr(f_orgn_hier1_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,3,sysdate),1,6),
substr(f_orgn_hier2_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,3,sysdate),1,35),
substr(f_orgn_hier3_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,3,sysdate),1,1),
substr(f_orgn_hier1_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,4,sysdate),1,6),
substr(f_orgn_hier2_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,4,sysdate),1,35),
substr(f_orgn_hier3_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,4,sysdate),1,1),
substr(f_orgn_hier1_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,5,sysdate),1,6),
substr(f_orgn_hier2_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,5,sysdate),1,35),
substr(f_orgn_hier3_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,5,sysdate),1,1),
substr(f_orgn_hier1_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,6,sysdate),1,6),
substr(f_orgn_hier2_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,6,sysdate),1,35),
substr(f_orgn_hier3_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,6,sysdate),1,1),
substr(f_orgn_hier1_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,7,sysdate),1,6),
substr(f_orgn_hier2_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,7,sysdate),1,35),
substr(f_orgn_hier3_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,7,sysdate),1,1),
substr(f_orgn_hier1_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,8,sysdate),1,6),
substr(f_orgn_hier2_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,8,sysdate),1,35),
substr(f_orgn_hier3_fnc(fgvopal2_coas_code,fgvopal2_orgn_code,8,sysdate),1,1),
substr(f_prog_hier1_fnc(fgvopal2_coas_code,fgvopal2_prog_code,1,sysdate),1,6),
substr(f_prog_hier2_fnc(fgvopal2_coas_code,fgvopal2_prog_code,1,sysdate),1,35),
substr(f_prog_hier3_fnc(fgvopal2_coas_code,fgvopal2_prog_code,1,sysdate),1,1),
substr(f_prog_hier1_fnc(fgvopal2_coas_code,fgvopal2_prog_code,2,sysdate),1,6),
substr(f_prog_hier2_fnc(fgvopal2_coas_code,fgvopal2_prog_code,2,sysdate),1,35),
substr(f_prog_hier3_fnc(fgvopal2_coas_code,fgvopal2_prog_code,2,sysdate),1,1),
substr(f_prog_hier1_fnc(fgvopal2_coas_code,fgvopal2_prog_code,3,sysdate),1,6),
substr(f_prog_hier2_fnc(fgvopal2_coas_code,fgvopal2_prog_code,3,sysdate),1,35),
substr(f_prog_hier3_fnc(fgvopal2_coas_code,fgvopal2_prog_code,3,sysdate),1,1),
substr(f_prog_hier1_fnc(fgvopal2_coas_code,fgvopal2_prog_code,4,sysdate),1,6),
substr(f_prog_hier2_fnc(fgvopal2_coas_code,fgvopal2_prog_code,4,sysdate),1,35),
substr(f_prog_hier3_fnc(fgvopal2_coas_code,fgvopal2_prog_code,4,sysdate),1,1),
substr(f_prog_hier1_fnc(fgvopal2_coas_code,fgvopal2_prog_code,5,sysdate),1,6),
substr(f_prog_hier2_fnc(fgvopal2_coas_code,fgvopal2_prog_code,5,sysdate),1,35),
substr(f_prog_hier3_fnc(fgvopal2_coas_code,fgvopal2_prog_code,5,sysdate),1,1),
substr(f_locn_hier1_fnc(fgvopal2_coas_code,fgvopal2_locn_code,1,sysdate),1,6),
substr(f_locn_hier2_fnc(fgvopal2_coas_code,fgvopal2_locn_code,1,sysdate),1,35),
substr(f_locn_hier3_fnc(fgvopal2_coas_code,fgvopal2_locn_code,1,sysdate),1,1),
substr(f_locn_hier1_fnc(fgvopal2_coas_code,fgvopal2_locn_code,2,sysdate),1,6),
substr(f_locn_hier2_fnc(fgvopal2_coas_code,fgvopal2_locn_code,2,sysdate),1,35),
substr(f_locn_hier3_fnc(fgvopal2_coas_code,fgvopal2_locn_code,2,sysdate),1,1),
substr(f_locn_hier1_fnc(fgvopal2_coas_code,fgvopal2_locn_code,3,sysdate),1,6),
substr(f_locn_hier2_fnc(fgvopal2_coas_code,fgvopal2_locn_code,3,sysdate),1,35),
substr(f_locn_hier3_fnc(fgvopal2_coas_code,fgvopal2_locn_code,3,sysdate),1,1),
substr(f_locn_hier1_fnc(fgvopal2_coas_code,fgvopal2_locn_code,4,sysdate),1,6),
substr(f_locn_hier2_fnc(fgvopal2_coas_code,fgvopal2_locn_code,4,sysdate),1,35),
substr(f_locn_hier3_fnc(fgvopal2_coas_code,fgvopal2_locn_code,4,sysdate),1,1),
substr(f_locn_hier1_fnc(fgvopal2_coas_code,fgvopal2_locn_code,5,sysdate),1,6),
substr(f_locn_hier2_fnc(fgvopal2_coas_code,fgvopal2_locn_code,5,sysdate),1,35),
substr(f_locn_hier3_fnc(fgvopal2_coas_code,fgvopal2_locn_code,5,sysdate),1,1),
y.ftvfund_grnt_code,
substr(frkiden.f_get_frbgrnt_title(y.ftvfund_grnt_code),1,35),
substr(frkiden.f_get_frbgrnt_status_code(y.ftvfund_grnt_code),1,2),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'ADOPTED'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'ADJUSTMENT'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'YTD'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'ENCUMB'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'RESERVATION'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'ACCOUNTED'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'TEMPORARY'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'REMAINING'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'CADOPTED'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'CADJUSTMENT'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'CYTD'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'CENCUMB'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'CRESERVATION'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'CACCOUNTED'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'CTEMPORARY'),
f_op_amts_fnc(fgvopal2_coas_code,fgvopal2_fsyr_code,fgvopal2_period,
fgvopal2_fund_code,fgvopal2_acct_code,fgvopal2_orgn_code,fgvopal2_prog_code,
fgvopal2_actv_code,fgvopal2_locn_code,fgvopal2_cmt_type,'CREMAINING'),
ftvorgn_fmgr_code_pidm,
substr(frkiden.f_get_spriden_id(ftvorgn_fmgr_code_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(ftvorgn_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(ftvorgn_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(ftvorgn_fmgr_code_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(ftvorgn_fmgr_code_pidm),1,15),
ftvfund_fmgr_code_pidm,
substr(frkiden.f_get_spriden_id(ftvfund_fmgr_code_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(ftvfund_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(ftvfund_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(ftvfund_fmgr_code_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(ftvfund_fmgr_code_pidm),1,15)
from ftvcoas,ftvfund y,ftvacct e,
fobsysc,
ftvorgn, fgvopal2
where ((ftvcoas_eff_date <= sysdate) or ftvcoas_eff_date is null)
  and ((ftvcoas_nchg_date > sysdate) or ftvcoas_nchg_date is null)
  and fgvopal2_coas_code=ftvcoas_coas_code(+)
  and fgvopal2_coas_code=y.ftvfund_coas_code(+)
  and fgvopal2_fund_code=y.ftvfund_fund_code(+)
  and ((y.ftvfund_eff_date <= sysdate) or ftvfund_eff_date is null)
  and ((y.ftvfund_nchg_date > sysdate) or ftvfund_nchg_date is null)
  and fgvopal2_coas_code=e.ftvacct_coas_code(+)
  and e.ftvacct_acct_code(+)=fgvopal2_acct_code
  and ((e.ftvacct_eff_date <= sysdate) or ftvacct_eff_date is null)
  and ((e.ftvacct_nchg_date > sysdate) or ftvacct_nchg_date is null)
 and decode(fobsysc_fund_org_security_ind,'Y',
f_fund_org_security_fnc(fgvopal2_coas_code,fgvopal2_fund_code,fgvopal2_orgn_code),'Y')='Y'
 and FOBSYSC_EFF_DATE <= SYSDATE
 and  (FOBSYSC_NCHG_DATE IS NULL
        OR  FOBSYSC_NCHG_DATE > SYSDATE)
 and FOBSYSC_STATUS_IND = 'A'
  and fgvopal2_coas_code=ftvorgn_coas_code(+)
  and fgvopal2_orgn_code=ftvorgn_orgn_code(+)
  and ((ftvorgn_eff_date <= sysdate) or ftvorgn_eff_date is null)
  and ((ftvorgn_nchg_date > sysdate) or ftvorgn_nchg_date is null)"
"BANINST1","AF_PERIODIC_BALANCE_SHEET","This view retrieves a periodic balance sheet account information and joins in pertinent validation tables. Beginning and ending balances are calculated for each period.","select substr(to_char(to_date(fgbgenl_fsyr_code,'RR'),'YYYY'),1,4), fgbgenl_period,
substr(f_get_fspd_status(fgbgenl_coas_code,fgbgenl_fsyr_code,fgbgenl_period),
1,1),
fgbgenl_coas_code,ftvcoas_title,ftvcoas_status_ind,
fgbgenl_fund_code, y.ftvfund_title, y.ftvfund_status_ind,
fgbgenl_acct_code, e.ftvacct_title, e.ftvacct_status_ind,
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,1 ),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,1 ),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,1 ),1,1),
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,2 ),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,2 ),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,2 ),1,1),
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,3 ),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,3 ),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,3 ),1,1),
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,4 ),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,4 ),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,4 ),1,1),
substr(f_fund_hier1_fnc(fgbgenl_coas_code,fgbgenl_fund_code,5 ),1,6),
substr(f_fund_hier2_fnc(fgbgenl_coas_code,fgbgenl_fund_code,5 ),1,35),
substr(f_fund_hier3_fnc(fgbgenl_coas_code,fgbgenl_fund_code,5 ),1,1),
substr(f_ftyp_hier1_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,1 ),1,6),
substr(f_ftyp_hier2_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,1 ),1,35),
substr(f_ftyp_hier3_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,1 ),1,1),
substr(f_ftyp_hier1_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,2 ),1,6),
substr(f_ftyp_hier2_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,2 ),1,35),
substr(f_ftyp_hier3_fnc(fgbgenl_coas_code,y.ftvfund_ftyp_code,2 ),1,1),
substr(f_acct_hier1_fnc(fgbgenl_coas_code,fgbgenl_acct_code,1 ),1,6),
substr(f_acct_hier2_fnc(fgbgenl_coas_code,fgbgenl_acct_code,1 ),1,35),
substr(f_acct_hier3_fnc(fgbgenl_coas_code,fgbgenl_acct_code,1 ),1,1),
substr(f_acct_hier1_fnc(fgbgenl_coas_code,fgbgenl_acct_code,2 ),1,6),
substr(f_acct_hier2_fnc(fgbgenl_coas_code,fgbgenl_acct_code,2 ),1,35),
substr(f_acct_hier3_fnc(fgbgenl_coas_code,fgbgenl_acct_code,2 ),1,1),
substr(f_acct_hier1_fnc(fgbgenl_coas_code,fgbgenl_acct_code,3 ),1,6),
substr(f_acct_hier2_fnc(fgbgenl_coas_code,fgbgenl_acct_code,3 ),1,35),
substr(f_acct_hier3_fnc(fgbgenl_coas_code,fgbgenl_acct_code,3 ),1,1),
substr(f_acct_hier1_fnc(fgbgenl_coas_code,fgbgenl_acct_code,4 ),1,6),
substr(f_acct_hier2_fnc(fgbgenl_coas_code,fgbgenl_acct_code,4 ),1,35),
substr(f_acct_hier3_fnc(fgbgenl_coas_code,fgbgenl_acct_code,4 ),1,1),
substr(f_atyp_hier1_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,1 ),1,6),
substr(f_atyp_hier2_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,1 ),1,35),
substr(f_atyp_hier3_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,1 ),1,1),
substr(f_atyp_hier1_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,2 ),1,6),
substr(f_atyp_hier2_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,2 ),1,35),
substr(f_atyp_hier3_fnc(fgbgenl_coas_code,e.ftvacct_atyp_code,2 ),1,1),
y.ftvfund_grnt_code,
substr(frkiden.f_get_frbgrnt_title(ftvfund_grnt_code),1,35),
substr(frkiden.f_get_frbgrnt_status_code(ftvfund_grnt_code),1,1),
fgbgenl_sum_periodic_dr,fgbgenl_sum_periodic_cr,
f_f1_begin_fnc(fgbgenl_coas_code,fgbgenl_fsyr_code,fgbgenl_period,
fgbgenl_fund_code,fgbgenl_acct_code),
f_f1_end_fnc(fgbgenl_coas_code,fgbgenl_fsyr_code,fgbgenl_period,
fgbgenl_fund_code,fgbgenl_acct_code),
decode(sign(f_f1_begin_fnc(fgbgenl_coas_code,fgbgenl_fsyr_code,fgbgenl_period,
fgbgenl_fund_code,fgbgenl_acct_code)),-1,'C',1,'D',0,'0'),
decode(sign(f_f1_end_fnc(fgbgenl_coas_code,fgbgenl_fsyr_code,fgbgenl_period,
fgbgenl_fund_code,fgbgenl_acct_code)),-1,'C',1,'D',0,'0'),e.ftvacct_normal_bal
from fobsysc, ftvcoas, ftvfund y, ftvacct e, fgbgenl
where ((ftvcoas_eff_date <= sysdate) or ftvcoas_eff_date is null)
  and ((ftvcoas_nchg_date > sysdate) or ftvcoas_nchg_date is null)
  and fgbgenl_coas_code=ftvcoas_coas_code(+)
  and fgbgenl_coas_code=y.ftvfund_coas_code(+)
  and fgbgenl_fund_code=y.ftvfund_fund_code(+)
  and ((y.ftvfund_eff_date <= sysdate) or ftvfund_eff_date is null)
  and ((y.ftvfund_nchg_date > sysdate) or ftvfund_nchg_date is null)
  and fgbgenl_coas_code=e.ftvacct_coas_code(+)
  and e.ftvacct_acct_code(+)=fgbgenl_acct_code
  and ((e.ftvacct_eff_date <= sysdate) or ftvacct_eff_date is null)
  and ((e.ftvacct_nchg_date > sysdate) or ftvacct_nchg_date is null)
 and decode(fobsysc_fund_org_security_ind,'Y',
f_fund_org_security_fnc(fgbgenl_coas_code,fgbgenl_fund_code,null),'Y')='Y'
 and FOBSYSC_EFF_DATE <= sysdate
 and  (FOBSYSC_NCHG_DATE IS NULL
        OR  FOBSYSC_NCHG_DATE > sysdate)
 and FOBSYSC_STATUS_IND = 'A'
 "
"BANINST1","AF_ORGN_ATTRIBUTES_PROFILE","This view retrieves all the attributes (sets, types, values) associated with an ORGN code.","SELECT
  ftrorga_coas_code,
  ftvcoas_title,
   'ORGN',
  ftrorga_orgn_Code,
  ftvorgn_title,
  NVL(ftrorga_atts_code,'NONE'),
  ftvatts_desc,
  ftrorga_attt_code,
  ftvattt_desc,
  decode(ftvattt_status_ind,'A','Active','Inactive'),
  ftrorga_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts, ftvorgn,ftrorga, ftvcoas
where ftvattt_coas_code = ftrorga_coas_code
and   ftvattt_code = ftrorga_attt_code
and   ftrattv_coas_Code(+) = ftrorga_coas_code
and   ftrattv_attt_code(+) = ftrorga_attt_code
and   ftrattv_code(+) = ftrorga_attv_code
and   ftvatts_coas_code(+) = ftrorga_coas_code
and   ftvatts_code(+)      = ftrorga_atts_code
and   ftvcoas_coas_code = ftrorga_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvorgn_coas_code = ftrorga_coas_code
and   ftvorgn_orgn_Code = ftrorga_orgn_code
and   ftvorgn_eff_date <= sysdate
and   ftvorgn_nchg_date > sysdate"
"BANINST1","AF_LOCN_ATTRIBUTES_PROFILE","This view retrieves all the attributes (sets, types, values) associated with a LOCN code.","SELECT
  ftrlcna_coas_code,
  ftvcoas_title,
  'LOCN',
  ftrlcna_locn_Code,
  ftvlocn_title,
  NVL(ftrlcna_atts_code,'NONE'),
  ftvatts_desc,
  ftrlcna_attt_code,
  ftvattt_desc,
  decode(ftvattt_status_ind,'A','Active','Inactive'),
  ftrlcna_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts,ftvlocn,ftrlcna, ftvcoas
where ftvattt_coas_code = ftrlcna_coas_code
and   ftvattt_code = ftrlcna_attt_code
and   ftrattv_coas_Code(+) = ftrlcna_coas_code
and   ftrattv_attt_code(+) = ftrlcna_attt_code
and   ftrattv_code(+) = ftrlcna_attv_code
and   ftvatts_coas_code(+) = ftrlcna_coas_code
and   ftvatts_code(+)      = ftrlcna_atts_code
and   ftvcoas_coas_code = ftrlcna_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvlocn_coas_code = ftrlcna_coas_code
and   ftvlocn_locn_Code = ftrlcna_locn_code
and   ftvlocn_eff_date <= sysdate
and   ftvlocn_nchg_date > sysdate"
"BANINST1","AF_GRANT_VIEW","This view retrieves grant information.","select frbgrnt_code,
frbgrnt_long_title,
frbgrnt_title,
frbgrnt_pi_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_pi_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(frbgrnt_pi_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(frbgrnt_pi_pidm),1,15),
f_get_cfda_no(frbgrnt_cfda_internal_id_no),
frbgrnt_sponsor_id,
frbgrnt_agency_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_agency_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(frbgrnt_agency_pidm),1,60),
frbgrnt_max_funding_amt,
frbgrnt_current_funding_amt,
frbgrnt_cum_funding_amt,
frbgrnt_coas_code,
frbgrnt_orgn_code_resp_office,
substr(f_orgn_title(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office),1,35),
frbgrnt_grant_type,
frbgrnt_category,
frbgrnt_sub_category,
substr(f_get_locn_no(frbgrnt_code),1,15),
substr(f_get_pms_code(frbgrnt_code),1,16),
frrgloc_locn_code,
substr(f_locn_title(frbgrnt_coas_code,frrgloc_locn_code),1,35),
decode(frbgrnt_status_code,'A',frbgrnt_status_date,null),
decode(frbgrnt_status_code,'A',f_get_fiscal_year(frbgrnt_coas_code,to_char(frbgrnt_status_date,'DD-MON-YYYY')),null),
decode(frbgrnt_status_code,'A',f_get_fiscal_period(f_get_fiscal_year(frbgrnt_coas_code,to_char(frbgrnt_status_date,'DD-MON-YYYY')),frbgrnt_coas_code,to_char(frbgrnt_status_date,'DD-MON-YYYY'))),
frbgrnt_project_start_date,
frbgrnt_project_end_date,
frbgrnt_expend_end_date,
frrgloc_locn_research_ind,
substr(f_agcy_hier(frbgrnt_agency_pidm,1),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,1)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,1)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,2),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,2)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,2)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,3),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,3)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,3)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,4),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,4)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,4)),1,60),
substr(f_orgn_hier1_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,1),1,6),
substr(f_orgn_hier2_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,1),1,35),
substr(f_orgn_hier1_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,2),1,6),
substr(f_orgn_hier2_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,2),1,35),
substr(f_orgn_hier1_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,3),1,6),
substr(f_orgn_hier2_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,3),1,35),
substr(f_orgn_hier1_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,4),1,6),
substr(f_orgn_hier2_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,4),1,35),
substr(f_orgn_hier1_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,5),1,6),
substr(f_orgn_hier2_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,5),1,35),
substr(f_orgn_hier1_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,6),1,6),
substr(f_orgn_hier2_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,6),1,35),
substr(f_orgn_hier1_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,7),1,6),
substr(f_orgn_hier2_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,7),1,35),
substr(f_orgn_hier1_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,8),1,6),
substr(f_orgn_hier2_fnc(frbgrnt_coas_code,frbgrnt_orgn_code_resp_office,8),1,35),
frbgrnt_prop_code,
frbgrnt_status_code
from  frrgloc, frbgrnt
where frbgrnt_code = frrgloc_grnt_code(+)
and f_chk_fobsysc(frbgrnt_coas_code,'',frbgrnt_orgn_code_resp_office) = 'Y'"
"BANINST1","AF_GRANT_COSTS","This view retrieves information about the grant by FOAPAL by the grant year and relative grant period based on account class code (transaction type)","select
frvcsum_coas_code,
frbgrnt_code,frbgrnt_long_title,frbgrnt_title,
frbgrnt_pi_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_pi_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(frbgrnt_pi_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(frbgrnt_pi_pidm),1,15),
frbgrnt_cfda_internal_id_no,
frbgrnt_sponsor_id,
frbgrnt_agency_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_agency_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(frbgrnt_agency_pidm),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,1),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,1)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,1)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,2),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,2)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,2)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,3),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,3)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,3)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,4),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,4)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,4)),1,60),
frvcsum_acct_class_code,
frvcsum_adj_bud_amt,
frvcsum_cmt_amt,
frvcsum_ytd_actv_amt,
frvcsum_avail_balance
from frvcsum, frbgrnt
where frbgrnt_code = frvcsum_grnt_code"
"BANINST1","AF_GRANT_BUDGET_TRANSACTION","This view retrieves informationabout the grant by FOAPAL","select
substr(to_char(to_date(frrgrnl_grnt_yr,'RR'),'YYYY'),1,4),
ftvcoas_coas_code,
ftvcoas_title,
frrgrnl_grnt_code,
frbgrnt_long_title,
frbgrnt_title,
frbgrnt_pi_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_pi_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(frbgrnt_pi_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(frbgrnt_pi_pidm),1,15),
frbgrnt_cfda_internal_id_no,
frbgrnt_sponsor_id,
frbgrnt_agency_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_agency_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(frbgrnt_agency_pidm),1,60),
frrgrnl_fund_code,
substr(f_fund_title(frrgrnl_coas_code,frrgrnl_fund_code),1,35),
frrgrnl_orgn_code,
substr(f_orgn_title(frrgrnl_coas_code,frrgrnl_orgn_code),1,35),
frrgrnl_acct_code,
substr(f_acct_title(frrgrnl_coas_code,frrgrnl_acct_code),1,35),
substr(f_get_sponsor_acct('GRNT',frrgrnl_grnt_code,frrgrnl_coas_code,
                          frrgrnl_acct_code,''),1,6),
substr(f_get_sponsor_acct_desc(frbgrnt_agency_pidm,
       f_get_sponsor_acct('GRNT',frrgrnl_grnt_code,frrgrnl_coas_code,
                          frrgrnl_acct_code,'')),1,35),
frrgrnl_prog_code,
substr(f_prog_title(frrgrnl_coas_code,frrgrnl_prog_code),1,35),
frrgrnl_actv_code,
substr(f_actv_title(frrgrnl_coas_code,frrgrnl_actv_code),1,35),
frrgrnl_locn_code,
substr(f_locn_title(frrgrnl_coas_code,frrgrnl_locn_code),1,35),
substr(f_agcy_hier(frbgrnt_agency_pidm,1),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,1)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,1)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,2),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,2)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,2)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,3),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,3)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,3)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,4),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,4)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,4)),1,60),
frrgrnl_00_adopt_bud,
frrgrnl_00_bud_adjt,
frrgrnl_00_ytd_actv,
frrgrnl_00_encumb,
frrgrnl_00_bud_rsrv,
frrgrnl_00_acctd_bud,
frrgrnl_00_temp_bud,
frrgrnl_01_adopt_bud,
frrgrnl_01_bud_adjt,
frrgrnl_01_ytd_actv,
frrgrnl_01_encumb,
frrgrnl_01_bud_rsrv,
frrgrnl_01_acctd_bud,
frrgrnl_01_temp_bud,
frrgrnl_02_adopt_bud,
frrgrnl_02_bud_adjt,
frrgrnl_02_ytd_actv,
frrgrnl_02_encumb,
frrgrnl_02_bud_rsrv,
frrgrnl_02_acctd_bud,
frrgrnl_02_temp_bud,
frrgrnl_03_adopt_bud,
frrgrnl_03_bud_adjt,
frrgrnl_03_ytd_actv,
frrgrnl_03_encumb,
frrgrnl_03_bud_rsrv,
frrgrnl_03_acctd_bud,
frrgrnl_03_temp_bud,
frrgrnl_04_adopt_bud,
frrgrnl_04_bud_adjt,
frrgrnl_04_ytd_actv,
frrgrnl_04_encumb,
frrgrnl_04_bud_rsrv,
frrgrnl_04_acctd_bud,
frrgrnl_04_temp_bud,
frrgrnl_05_adopt_bud,
frrgrnl_05_bud_adjt,
frrgrnl_05_ytd_actv,
frrgrnl_05_encumb,
frrgrnl_05_bud_rsrv,
frrgrnl_05_acctd_bud,
frrgrnl_05_temp_bud,
frrgrnl_06_adopt_bud,
frrgrnl_06_bud_adjt,
frrgrnl_06_ytd_actv,
frrgrnl_06_encumb,
frrgrnl_06_bud_rsrv,
frrgrnl_06_acctd_bud,
frrgrnl_06_temp_bud,
frrgrnl_07_adopt_bud,
frrgrnl_07_bud_adjt,
frrgrnl_07_ytd_actv,
frrgrnl_07_encumb,
frrgrnl_07_bud_rsrv,
frrgrnl_07_acctd_bud,
frrgrnl_07_temp_bud,
frrgrnl_08_adopt_bud,
frrgrnl_08_bud_adjt,
frrgrnl_08_ytd_actv,
frrgrnl_08_encumb,
frrgrnl_08_bud_rsrv,
frrgrnl_08_acctd_bud,
frrgrnl_08_temp_bud,
frrgrnl_09_adopt_bud,
frrgrnl_09_bud_adjt,
frrgrnl_09_ytd_actv,
frrgrnl_09_encumb,
frrgrnl_09_bud_rsrv,
frrgrnl_09_acctd_bud,
frrgrnl_09_temp_bud,
frrgrnl_10_adopt_bud,
frrgrnl_10_bud_adjt,
frrgrnl_10_ytd_actv,
frrgrnl_10_encumb,
frrgrnl_10_bud_rsrv,
frrgrnl_10_acctd_bud,
frrgrnl_10_temp_bud,
frrgrnl_11_adopt_bud,
frrgrnl_11_bud_adjt,
frrgrnl_11_ytd_actv,
frrgrnl_11_encumb,
frrgrnl_11_bud_rsrv,
frrgrnl_11_acctd_bud,
frrgrnl_11_temp_bud,
frrgrnl_12_adopt_bud,
frrgrnl_12_bud_adjt,
frrgrnl_12_ytd_actv,
frrgrnl_12_encumb,
frrgrnl_12_bud_rsrv,
frrgrnl_12_acctd_bud,
frrgrnl_12_temp_bud,
frrgrnl_13_adopt_bud,
frrgrnl_13_bud_adjt,
frrgrnl_13_ytd_actv,
frrgrnl_13_encumb,
frrgrnl_13_bud_rsrv,
frrgrnl_13_acctd_bud,
frrgrnl_13_temp_bud,
frrgrnl_14_adopt_bud,
frrgrnl_14_bud_adjt,
frrgrnl_14_ytd_actv,
frrgrnl_14_encumb,
frrgrnl_14_bud_rsrv,
frrgrnl_14_acctd_bud,
frrgrnl_14_temp_bud,
substr(f_fund_hier1_fnc(frrgrnl_coas_code,frrgrnl_fund_code,1),1,6),
substr(f_fund_hier2_fnc(frrgrnl_coas_code,frrgrnl_fund_code,1),1,35),
substr(f_fund_hier1_fnc(frrgrnl_coas_code,frrgrnl_fund_code,2),1,6),
substr(f_fund_hier2_fnc(frrgrnl_coas_code,frrgrnl_fund_code,2),1,35),
substr(f_fund_hier1_fnc(frrgrnl_coas_code,frrgrnl_fund_code,3),1,6),
substr(f_fund_hier2_fnc(frrgrnl_coas_code,frrgrnl_fund_code,3),1,35),
substr(f_fund_hier1_fnc(frrgrnl_coas_code,frrgrnl_fund_code,4),1,6),
substr(f_fund_hier2_fnc(frrgrnl_coas_code,frrgrnl_fund_code,4),1,35),
substr(f_fund_hier1_fnc(frrgrnl_coas_code,frrgrnl_fund_code,5),1,6),
substr(f_fund_hier2_fnc(frrgrnl_coas_code,frrgrnl_fund_code,5),1,35),
substr(f_ftyp_hier1_fnc(frrgrnl_coas_code,
       f_get_ftyp_code(frrgrnl_coas_code,frrgrnl_fund_code),1),1,6),
substr(f_ftyp_hier2_fnc(frrgrnl_coas_code,
       f_get_ftyp_code(frrgrnl_coas_code,frrgrnl_fund_code),1),1,35),
substr(f_ftyp_hier1_fnc(frrgrnl_coas_code,
       f_get_ftyp_code(frrgrnl_coas_code,frrgrnl_fund_code),2),1,6),
substr(f_ftyp_hier2_fnc(frrgrnl_coas_code,
       f_get_ftyp_code(frrgrnl_coas_code,frrgrnl_fund_code),2),1,35),
substr(f_acct_hier1_fnc(frrgrnl_coas_code,frrgrnl_acct_code,1),1,6),
substr(f_acct_hier2_fnc(frrgrnl_coas_code,frrgrnl_acct_code,1),1,35),
substr(f_acct_hier1_fnc(frrgrnl_coas_code,frrgrnl_acct_code,2),1,6),
substr(f_acct_hier2_fnc(frrgrnl_coas_code,frrgrnl_acct_code,2),1,35),
substr(f_acct_hier1_fnc(frrgrnl_coas_code,frrgrnl_acct_code,3),1,6),
substr(f_acct_hier2_fnc(frrgrnl_coas_code,frrgrnl_acct_code,3),1,35),
substr(f_acct_hier1_fnc(frrgrnl_coas_code,frrgrnl_acct_code,4),1,6),
substr(f_acct_hier2_fnc(frrgrnl_coas_code,frrgrnl_acct_code,4),1,35),
substr(f_atyp_hier1_fnc(frrgrnl_coas_code,
       f_get_atyp_code(frrgrnl_coas_code,frrgrnl_acct_code),1),1,6),
substr(f_atyp_hier2_fnc(frrgrnl_coas_code,
       f_get_atyp_code(frrgrnl_coas_code,frrgrnl_acct_code),1),1,35),
substr(f_atyp_hier1_fnc(frrgrnl_coas_code,
       f_get_atyp_code(frrgrnl_coas_code,frrgrnl_acct_code),2),1,6),
substr(f_atyp_hier2_fnc(frrgrnl_coas_code,
       f_get_atyp_code(frrgrnl_coas_code,frrgrnl_acct_code),2),1,35),
substr(f_orgn_hier1_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,1),1,6),
substr(f_orgn_hier2_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,1),1,35),
substr(f_orgn_hier1_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,2),1,6),
substr(f_orgn_hier2_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,2),1,35),
substr(f_orgn_hier1_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,3),1,6),
substr(f_orgn_hier2_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,3),1,35),
substr(f_orgn_hier1_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,4),1,6),
substr(f_orgn_hier2_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,4),1,35),
substr(f_orgn_hier1_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,5),1,6),
substr(f_orgn_hier2_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,5),1,35),
substr(f_orgn_hier1_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,6),1,6),
substr(f_orgn_hier2_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,6),1,35),
substr(f_orgn_hier1_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,7),1,6),
substr(f_orgn_hier2_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,7),1,35),
substr(f_orgn_hier1_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,8),1,6),
substr(f_orgn_hier2_fnc(frrgrnl_coas_code,frrgrnl_orgn_code,8),1,35),
substr(f_prog_hier1_fnc(frrgrnl_coas_code,frrgrnl_prog_code,1),1,6),
substr(f_prog_hier2_fnc(frrgrnl_coas_code,frrgrnl_prog_code,1),1,35),
substr(f_prog_hier1_fnc(frrgrnl_coas_code,frrgrnl_prog_code,2),1,6),
substr(f_prog_hier2_fnc(frrgrnl_coas_code,frrgrnl_prog_code,2),1,35),
substr(f_prog_hier1_fnc(frrgrnl_coas_code,frrgrnl_prog_code,3),1,6),
substr(f_prog_hier2_fnc(frrgrnl_coas_code,frrgrnl_prog_code,3),1,35),
substr(f_prog_hier1_fnc(frrgrnl_coas_code,frrgrnl_prog_code,4),1,6),
substr(f_prog_hier2_fnc(frrgrnl_coas_code,frrgrnl_prog_code,4),1,35),
substr(f_prog_hier1_fnc(frrgrnl_coas_code,frrgrnl_prog_code,5),1,6),
substr(f_prog_hier2_fnc(frrgrnl_coas_code,frrgrnl_prog_code,5),1,35),
substr(f_locn_hier1_fnc(frrgrnl_coas_code,frrgrnl_locn_code,1),1,6),
substr(f_locn_hier2_fnc(frrgrnl_coas_code,frrgrnl_locn_code,1),1,35),
substr(f_locn_hier1_fnc(frrgrnl_coas_code,frrgrnl_locn_code,2),1,6),
substr(f_locn_hier2_fnc(frrgrnl_coas_code,frrgrnl_locn_code,2),1,35),
substr(f_locn_hier1_fnc(frrgrnl_coas_code,frrgrnl_locn_code,3),1,6),
substr(f_locn_hier2_fnc(frrgrnl_coas_code,frrgrnl_locn_code,3),1,35),
substr(f_locn_hier1_fnc(frrgrnl_coas_code,frrgrnl_locn_code,4),1,6),
substr(f_locn_hier2_fnc(frrgrnl_coas_code,frrgrnl_locn_code,4),1,35),
substr(f_locn_hier1_fnc(frrgrnl_coas_code,frrgrnl_locn_code,5),1,6),
substr(f_locn_hier2_fnc(frrgrnl_coas_code,frrgrnl_locn_code,5),1,35)
from ftvcoas,frrgrnl,frbgrnt
where frrgrnl_coas_code = ftvcoas_coas_code
and   frrgrnl_grnt_code = frbgrnt_code
and   ftvcoas_eff_date <= sysdate
and   (ftvcoas_nchg_date > sysdate
       or ftvcoas_nchg_date is null)
and f_chk_fobsysc(frrgrnl_coas_code,frrgrnl_fund_code,frrgrnl_orgn_code) = 'Y'"
"BANINST1","AF_GRANT_BUDGET_STATUS","This view retrieves information about the grant by FOAPAL by the grant year and relative grant period.","select
frvgsum_coas_code,
frbgrnt_code,frbgrnt_long_title,frbgrnt_title,
frbgrnt_pi_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_pi_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(frbgrnt_pi_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(frbgrnt_pi_pidm),1,15),
frbgrnt_cfda_internal_id_no,
frbgrnt_sponsor_id,
frbgrnt_agency_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_agency_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(frbgrnt_agency_pidm),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,1),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,1)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,1)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,2),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,2)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,2)),
                                         1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,3),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,3)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,3)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,4),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,4)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,4)),1,60),
frvgsum_adj_bud_amt,
frvgsum_cmt_amt,
frvgsum_ytd_actv_amt,
frvgsum_avail_balance
from frbgrnt, frvgsum
where frvgsum_grnt_code = frbgrnt_code"
"BANINST1","AF_GRANT_BUDGET_DETAIL_TRANS","","select
substr(frkiden.f_get_ftvdtyp_code(fgbtrnh_doc_seq_code),1,3),
substr(frkiden.f_get_ftvdtyp_desc(fgbtrnh_doc_seq_code),1,35),
fgbtrnd_doc_code,
fgbtrnd_submission_number,
fgbtrnd_item_num,
fgbtrnd_seq_num,
fgbtrnd_reversal_ind,
fgbtrnd_ledger_ind,
fgbtrnd_field_code,
decode(fgbtrnd_field_code,
      '01','OBD','02','ABD','03','YTD','04','ENC','05','RSV','07','TMP'),
fgbtrnd_rucl_code,
fgbtrnd_rulp_code,
fgbtrnd_user_id,
fgbtrnh_doc_ref_num,
fgbtrnh_trans_date,
fgbtrnh_activity_date,
fgbtrnh_trans_desc,
frbgrnt_code,
frbgrnt_project_start_date,
frbgrnt_project_end_date,
frbgrnt_long_title,
frbgrnt_title,
frbgrnt_pi_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_pi_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(frbgrnt_pi_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(frbgrnt_pi_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(frbgrnt_pi_pidm),1,15),
frbgrnt_cfda_internal_id_no,
frbgrnt_agency_pidm,
substr(frkiden.f_get_spriden_id(frbgrnt_agency_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(frbgrnt_agency_pidm),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,1),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,1)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,1)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,2),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,2)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,2)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,3),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,3)),1,9),
substr(frkiden.f_get_spriden_last_name(f_agcy_hier(frbgrnt_agency_pidm,3)),1,60),
substr(f_agcy_hier(frbgrnt_agency_pidm,4),1,8),
substr(frkiden.f_get_spriden_id(f_agcy_hier(frbgrnt_agency_pidm,4)),1,9),
substr(frkiden.f_get_spriden_last_name((f_agcy_hier(frbgrnt_agency_pidm,4))),1,60),
fgbtrnd_coas_code,
substr(f_get_finance_desc('FTVCOAS',FGBTRND_COAS_CODE,null,30),1,30),
fgbtrnd_fund_code,
ftvfund_title,
ftvfund_term_date,
ftvfund_expend_end_date,
fgbtrnd_orgn_code,
substr(f_orgn_title(fgbtrnd_coas_code,fgbtrnd_orgn_code),1,35),
fgbtrnd_acct_code,
substr(f_acct_title(fgbtrnd_coas_code,fgbtrnd_acct_code),1,35),
fgbtrnd_prog_code,
substr(f_prog_title(fgbtrnd_coas_code,fgbtrnd_prog_code),1,35),
fgbtrnd_actv_code,
substr(f_actv_title(fgbtrnd_coas_code,fgbtrnd_actv_code),1,35),
fgbtrnd_locn_code,
substr(f_locn_title(fgbtrnd_coas_code,fgbtrnd_locn_code),1,35),
fgbtrnh_bank_code,
fgbtrnh_dep_num,
fgbtrnd_trans_amt,
fgbtrnd_dr_cr_ind,
f_get_cost_acct(fgbtrnd_coas_code,fgbtrnd_acct_code,sysdate),
fgbtrnd_ic_rate_percent,
round(fgbtrnd_trans_amt*fgbtrnd_ic_rate_percent,2),
fgbtrnd_ic_memo_rate_percent,
round(fgbtrnd_trans_amt*fgbtrnd_ic_memo_rate_percent,2),
fgbtrnd_cs_rate_percent,
round(fgbtrnd_trans_amt*fgbtrnd_cs_rate_percent),
fgbtrnh_vendor_pidm,
substr(frkiden.f_get_spriden_id(fgbtrnh_vendor_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(fgbtrnh_vendor_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(fgbtrnh_vendor_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(fgbtrnh_vendor_pidm),1,15),
fgbtrnh_abal_override,
to_char(to_date(f_trn_grnt_yr_prd(frbgrnt_code,
           f_get_sdax('FRVGRBS','DATE_FROM'),'YEAR'), 'RR'), 'YYYY'),
to_char(to_date(f_trn_grnt_yr_prd(frbgrnt_code,
           f_get_sdax('FRVGRBS','DATE_TO'),'YEAR'), 'RR'), 'YYYY'),
to_char(to_date(f_trn_grnt_yr_prd(frbgrnt_code,
           f_get_sdax('FRVGRBS','DATE_FROM'),'PERIOD'), 'RR'), 'YYYY'),
to_char(to_date(f_trn_grnt_yr_prd(frbgrnt_code,
           f_get_sdax('FRVGRBS','DATE_TO'),'PERIOD'), 'RR'), 'YYYY'),
fgbtrnd_sum_post_doc_code,
fgbtrnd_encd_num,
fgbtrnd_encd_item_num,
fgbtrnd_encd_seq_num
from fgbtrnd,
     fgbtrnh,
     ftvfund,
     frbgrnt
 where fgbtrnd_doc_code = fgbtrnh_doc_code
   and fgbtrnd_doc_seq_code = fgbtrnh_doc_seq_code
   and fgbtrnd_submission_number = fgbtrnh_submission_number
   and fgbtrnd_reversal_ind = fgbtrnh_reversal_ind
   and fgbtrnd_item_num = fgbtrnh_item_num
   and fgbtrnd_seq_num = fgbtrnh_seq_num
   and fgbtrnd_serial_num = fgbtrnh_serial_num
   and fgbtrnd_ledger_ind = 'O'
   and fgbtrnd_field_code <> '06'
   and trunc(fgbtrnh_trans_date) between
       to_date(f_trn_grnt_yr_prd(frbgrnt_code,
               f_get_sdax('FRVGRBS','DATE_FROM'),'DATE'),'DD-MON-YYYY') and
       to_date(f_trn_grnt_yr_prd(frbgrnt_code,
               f_get_sdax('FRVGRBS','DATE_TO'),'DATE'),'DD-MON-YYYY')
   and ftvfund_coas_code = fgbtrnd_coas_code
   and ftvfund_fund_code = fgbtrnd_fund_code
   and ftvfund_eff_date <= sysdate
   and ftvfund_nchg_date > sysdate
   and frbgrnt_code = ftvfund_grnt_code
   and f_get_internal_atyp(fgbtrnd_coas_code,fgbtrnd_acct_code,sysdate) in
                          ('50','60','70','80')
  and f_chk_fobsysc(fgbtrnd_coas_code,fgbtrnd_fund_code,fgbtrnd_orgn_code) = 'Y'"
"BANINST1","AF_FUND_ATTRIBUTES_PROFILE","This view retrieves all the attributes (sets, types, values) associated with a fund code.","SELECT
  ftrfnda_coas_code,
  ftvcoas_title,
  'FUND',
  ftrfnda_fund_Code,
  ftvfund_title,
  NVL(ftrfnda_atts_code,'NONE'),
  ftvatts_desc,
  ftrfnda_attt_code,
  ftvattt_desc,
  decode(ftvattt_status_ind,'A','Active','Inactive'),
  ftrfnda_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts, ftvfund,ftrfnda, ftvcoas
where ftvattt_coas_code = ftrfnda_coas_code
and   ftvattt_code = ftrfnda_attt_code
and   ftrattv_coas_Code(+) = ftrfnda_coas_code
and   ftrattv_attt_code(+) = ftrfnda_attt_code
and   ftrattv_code(+) = ftrfnda_attv_code
and   ftvatts_coas_code(+) = ftrfnda_coas_code
and   ftvatts_code(+)     = ftrfnda_atts_code
and   ftvcoas_coas_code = ftrfnda_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvfund_coas_code = ftrfnda_coas_code
and   ftvfund_fund_Code = ftrfnda_fund_code
and   ftvfund_eff_date <= sysdate
and   ftvfund_nchg_date > sysdate"
"BANINST1","AF_FTYP_ATTRIBUTES_PROFILE","This view retrieves all the attributes (sets,types,values) associated with a FTYP code.","SELECT
  ftrftya_coas_code,
  ftvcoas_title,
  'FTYP',
  ftrftya_FTYP_Code,
  ftvFTYP_title,
  NVL(ftrftya_atts_code,'NONE'),
  ftvatts_desc,
  ftrftya_attt_code,
  ftvattt_desc,
  decode(ftvattt_status_ind,'A','Active','Inactive'),
  ftrftya_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts, ftvFTYP,ftrftya, ftvcoas
where ftvattt_coas_code = ftrftya_coas_code
and   ftvattt_code = ftrftya_attt_code
and   ftrattv_coas_Code(+) = ftrftya_coas_code
and   ftrattv_attt_code(+) = ftrftya_attt_code
and   ftrattv_code(+) = ftrftya_attv_code
and   ftvatts_coas_code(+) = ftrftya_coas_code
and   ftvatts_code(+)     = ftrftya_atts_code
and   ftvcoas_coas_code = ftrftya_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvFTYP_coas_code = ftrftya_coas_code
and   ftvFTYP_FTYP_Code = ftrftya_FTYP_code
and   ftvFTYP_eff_date <= sysdate
and   ftvFTYP_nchg_date > sysdate"
"BANINST1","AF_FOAPAL_NO_ATTRIBUTES","This view retrieves all the foapal elements that have no attributes associated with them. ","select
 ftvfund_coas_Code,
 ftvcoas_title,
'FUND',
ftvfund_fund_Code,
ftvfund_title
from  ftvfund a, ftvcoas
where ftvfund_coas_code = ftvcoas_coas_code
and   ftvfund_eff_date <= sysdate
and   ftvfund_nchg_date > sysdate
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and  not exists  (select 'Y' from ftrfnda
                  where ftrfnda_coas_code = a.ftvfund_coas_code
                  and   ftrfnda_fund_code = a.ftvfund_fund_code)
UNION ALL
select
 ftvorgn_coas_Code,
 ftvcoas_title,
'ORGN',
ftvorgn_orgn_Code,
ftvorgn_title
from  ftvorgn a, ftvcoas
where ftvorgn_coas_code = ftvcoas_coas_code
and   ftvorgn_eff_date <= sysdate
and   ftvorgn_nchg_date > sysdate
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and  not exists  (select 'Y' from ftrorga
                  where ftrorga_coas_code = a.ftvorgn_coas_code
                  and   ftrorga_orgn_code = a.ftvorgn_orgn_code)
UNION ALL
select
 ftvACCT_coas_Code,
 ftvcoas_title,
'ACCT',
ftvACCT_ACCT_Code,
ftvACCT_title
from  ftvACCT a, ftvcoas
where ftvACCT_coas_code = ftvcoas_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   not exists
  (select 'Y' from ftracta
                  where ftracta_coas_code = a.ftvACCT_coas_code
                  and   ftracta_ACCT_code = a.ftvACCT_ACCT_code)
and   ftvACCT_eff_date <= sysdate
and   ftvACCT_nchg_date > sysdate
UNION ALL
select
 ftvPROG_coas_Code,
 ftvcoas_title,
'PROG',
ftvPROG_PROG_Code,
ftvPROG_title
from  ftvPROG a, ftvcoas
where ftvPROG_coas_code = ftvcoas_coas_code
and   ftvPROG_eff_date <= sysdate
and   ftvPROG_nchg_date > sysdate
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and  not exists  (select 'Y' from ftrprga
                  where ftrprga_coas_code = a.ftvPROG_coas_code
                  and   ftrprga_PROG_code = a.ftvPROG_PROG_code)
UNION ALL
select
 ftvactv_coas_Code,
 ftvcoas_title,
'ACTV',
ftvactv_actv_Code,
ftvactv_title
from  ftvactv a, ftvcoas
where ftvactv_coas_code = ftvcoas_coas_code
and   ftvactv_eff_date <= sysdate
and   ftvactv_nchg_date > sysdate
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and  not exists  (select 'Y' from ftracva
                  where ftracva_coas_code = a.ftvactv_coas_code
                  and   ftracva_actv_code = a.ftvactv_actv_code)
UNION ALL
select
 ftvLOCN_coas_Code,
 ftvcoas_title,
'LOCN',
ftvLOCN_LOCN_Code,
ftvLOCN_title
from  ftvLOCN a, ftvcoas
where ftvLOCN_coas_code = ftvcoas_coas_code
and   ftvLOCN_eff_date <= sysdate
and   ftvLOCN_nchg_date > sysdate
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and  not exists  (select 'Y' from ftrlcna
                  where ftrlcna_coas_code = a.ftvLOCN_coas_code
                  and   ftrlcna_LOCN_code = a.ftvLOCN_LOCN_code)
UNION ALL
select
 ftvatyp_coas_Code,
 ftvcoas_title,
'ATYP',
ftvatyp_atyp_Code,
ftvatyp_title
from  ftvatyp a, ftvcoas
where ftvatyp_coas_code = ftvcoas_coas_code
and   ftvatyp_eff_date <= sysdate
and   ftvatyp_nchg_date > sysdate
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and  not exists  (select 'Y' from ftratya
                  where ftratya_coas_code = a.ftvatyp_coas_code
                  and   ftratya_atyp_code = a.ftvatyp_atyp_code)
UNION ALL
select
 ftvftyp_coas_Code,
 ftvcoas_title,
'FTYP',
ftvftyp_ftyp_Code,
ftvftyp_title
from  ftvftyp a, ftvcoas
where ftvftyp_coas_code = ftvcoas_coas_code
and   ftvftyp_eff_date <= sysdate
and   ftvftyp_nchg_date > sysdate
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and  not exists  (select 'Y' from ftrftya
                  where ftrftya_coas_code = a.ftvftyp_coas_code
                  and   ftrftya_ftyp_code = a.ftvftyp_ftyp_code)"
"BANINST1","AF_ENDOWMENT_FUNDS_PROFILE","This view retrieves detail unitization data for endowment funds.","SELECT
    FNVENDW_COAS_CODE,
    FNVENDW_POOL_CODE,
    FNVPOOL_POOL_TITLE,
    FNVENDW_FUND_CODE,
    F.FTVFUND_TITLE,
    FNVENDW_COAS_SPEND_CODE,
    FNVENDW_FUND_SPEND_CODE,
    B.FTVFUND_TITLE,
    B.FTVFUND_REST_IND,
    SPRIDEN_ID,
    substr(F_FORMAT_NAME(B.FTVFUND_FMGR_CODE_PIDM,'LFMI'),1,92),
    F.FTVFUND_REST_IND,
    FNVENDW_ENDW_TYPE,
    FNVENDW_INCL_CODE,
    FTVINCL_INC_CLASS_DESC,
    FNVENDW_EST_DATE,
    FNVENDW_LONG_FUND_TITLE,
    FNVENDW_INC_DIST_SPEC_INST,
    FNVENDW_ALPHA_TITLE,
    FNBUNTH_GIFT_NUM,
    FNBUNTH_TRANS_AMT,
    substr(F_FORMAT_NAME(FNBUNTH_DONOR_PIDM,'LFMI'),1,92),
    FNBUNTH_GIFT_DATE,
    FNBUNTH_UNTZ_END_DATE,
    FNBUNTH_NUM_UNITS,
    FNBUNTH_UNIT_MKT_VALUE,
    FNBUNTH_TRANS_DATE,
    FNVENDW_REST_TYPE
 FROM FTVFUND F,FTVFUND B,FNVENDW,FNVPOOL ,FTVINCL,SPRIDEN, FNBUNTH
  WHERE (F.FTVFUND_COAS_CODE = FNVENDW_COAS_CODE
  AND F.FTVFUND_FUND_CODE = FNVENDW_FUND_CODE
  AND TO_CHAR( F.FTVFUND_NCHG_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND TO_CHAR(F.FTVFUND_EFF_DATE,'YYYYMMDDHH24MISS') <=
       TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND (TO_CHAR(F.FTVFUND_TERM_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
   OR F.FTVFUND_TERM_DATE IS NULL)
   AND TO_CHAR( fnvendw_NCHG_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND TO_CHAR(fnvendw_EFF_DATE,'YYYYMMDDHH24MISS') <=
       TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND (TO_CHAR(fnvendw_TERM_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
   OR fnvendw_TERM_DATE IS NULL) )
  AND B.FTVFUND_COAS_CODE = FNVENDW_COAS_SPEND_CODE
  AND B.FTVFUND_FUND_CODE = FNVENDW_FUND_SPEND_CODE
  AND TO_CHAR( B.ftvfund_NCHG_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND TO_CHAR(B.ftvfund_EFF_DATE,'YYYYMMDDHH24MISS') <=
       TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND (TO_CHAR(B.ftvfund_TERM_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
   OR B.ftvfund_TERM_DATE IS NULL)
  AND FNVPOOL_COAS_CODE = FNVENDW_COAS_CODE
  AND FNVENDW_POOL_CODE = FNVPOOL_POOL_CODE
  AND TO_CHAR( FNVPOOL_NCHG_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND TO_CHAR(FNVPOOL_EFF_DATE,'YYYYMMDDHH24MISS') <=
       TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND (TO_CHAR(FNVPOOL_TERM_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
   OR FNVPOOL_TERM_DATE IS NULL)
  AND FNVENDW_INCL_CODE = FTVINCL_CODE (+)
  AND SPRIDEN_CHANGE_IND IS NULL
  AND SPRIDEN_PIDM (+) = B.FTVFUND_FMGR_CODE_PIDM
  AND FNVENDW_COAS_SPEND_CODE = FNBUNTH_COAS_CODE (+)
  AND FNVENDW_FUND_CODE = FNBUNTH_FUND_CODE (+) 
 "
"BANINST1","AF_ENDOWMENT_DISTR_PROFILE","This view returns history of the distribution of spendable income to spendable funds associated with endowment funds.","SELECT
    FNVENDW_COAS_CODE,
    FNVENDW_POOL_CODE,
    FNVPOOL_POOL_TITLE,
    FNVENDW_FUND_CODE,
    F.FTVFUND_TITLE,
    FNVENDW_COAS_SPEND_CODE,
    FNVENDW_FUND_SPEND_CODE,
    B.FTVFUND_TITLE,
    B.FTVFUND_REST_IND,
    B.FTVFUND_FTYP_CODE,
    FTVFTYP_TITLE,
    FNBDSTH_SPND_INC_AMT,
    FNBDSTH_SPND_INC_END_DATE,
    FNBDSTH_SPND_RATE,
    FGBTRNH_TRANS_DATE
FROM FTVFUND F,FTVFUND B,FNVENDW,FNVPOOL ,FNBDSTH,FTVFTYP ,FGBTRNH
  WHERE (F.FTVFUND_COAS_CODE = FNVENDW_COAS_CODE
  AND F.FTVFUND_FUND_CODE = FNVENDW_FUND_CODE
  AND TO_CHAR( F.FTVFUND_NCHG_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND TO_CHAR(F.FTVFUND_EFF_DATE,'YYYYMMDDHH24MISS') <=
       TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND (TO_CHAR(F.FTVFUND_TERM_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
   OR F.FTVFUND_TERM_DATE IS NULL)
   AND TO_CHAR( fnvendw_NCHG_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND TO_CHAR(fnvendw_EFF_DATE,'YYYYMMDDHH24MISS') <=
       TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND (TO_CHAR(fnvendw_TERM_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
   OR fnvendw_TERM_DATE IS NULL) )
  AND B.FTVFUND_COAS_CODE = FNVENDW_COAS_SPEND_CODE
  AND B.FTVFUND_FUND_CODE = FNVENDW_FUND_SPEND_CODE
  AND TO_CHAR( B.ftvfund_NCHG_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND TO_CHAR(B.ftvfund_EFF_DATE,'YYYYMMDDHH24MISS') <=
       TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND (TO_CHAR(B.ftvfund_TERM_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
   OR B.ftvfund_TERM_DATE IS NULL)
  AND FNVPOOL_COAS_CODE = FNVENDW_COAS_CODE
  AND FNVENDW_POOL_CODE = FNVPOOL_POOL_CODE
  AND TO_CHAR( FNVPOOL_NCHG_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND TO_CHAR(FNVPOOL_EFF_DATE,'YYYYMMDDHH24MISS') <=
       TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND (TO_CHAR(FNVPOOL_TERM_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
   OR FNVPOOL_TERM_DATE IS NULL)
  AND (FNBDSTH_SPND_RATE IS NOT NULL
  AND  FNBDSTH_COAS_CODE = FNVENDW_COAS_CODE
  AND  FNBDSTH_POOL_CODE = FNVENDW_POOL_CODE
  AND  FNBDSTH_FUND_CODE = FNVENDW_FUND_CODE)
  AND (FTVFTYP_COAS_CODE = B.FTVFUND_COAS_CODE
  AND  FTVFTYP_FTYP_CODE = B.FTVFUND_FTYP_CODE
  AND  TO_CHAR( FTVFTYP_NCHG_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND TO_CHAR(FTVFTYP_EFF_DATE,'YYYYMMDDHH24MISS') <=
       TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
  AND (TO_CHAR(FTVFTYP_TERM_DATE,'YYYYMMDDHH24MISS') >
      TO_CHAR( SYSDATE,'YYYYMMDDHH24MISS')
   OR FTVFTYP_TERM_DATE IS NULL)  )
  AND (FGBTRNH_DOC_CODE = FNBDSTH_DOC_NUM
  AND  FGBTRNH_ITEM_NUM = 0
  AND  FGBTRNH_SEQ_NUM = 1
  AND  FGBTRNH_DOC_SEQ_CODE = 20
  AND  FGBTRNH_SUBMISSION_NUMBER = 0) 
 "
"BANINST1","AF_DISBURSEMENT_ANALYSIS","This view retrieves disbursement analysis information from the invoice and check tables and joins in pertinent validation tables.","SELECT fabinvh_vend_pidm                                                                 PIDM_KEY,
fabinvh_code                                                                             INVOICE_CODE_KEY,
fabinvh_submission_number                                                                SUBMISSION_NUMBER_KEY,
fabinck_check_num                                                                        CHECK_NUMBER_KEY,
fabinck_bank_code                                                                        BANK_CODE_KEY,
substr(frkiden.f_get_spriden_id(fabinvh_vend_pidm),1,9)                                  VENDOR_ID,
substr(frkiden.f_get_spriden_last_name(fabinvh_vend_pidm),1,60)                          VENDOR_NAME,
substr(frkiden.f_get_spriden_entity_ind(fabinvh_vend_pidm),1,1)                          ENTITY_IND,
fabinvh_vend_inv_code                                                                    VENDOR_INVOICE_NUMBER,
fabinvh_invoice_date                                                                     INVOICE_DATE,
fabinvh_trans_date                                                                       TRANSACTION_DATE,
substr(to_char(to_date((substr(f_get_fsyr_code(fabinvh_code),1,2)),'RR'),'YYYY'),1,4)    FSYR_CODE,
substr(f_get_fspd_code(fabinvh_code),1,2)                                                FSPD_CODE,
substr(frkiden.f_get_spriden_id(fabinvh_vend_check_pidm),1,9)                            THIRD_PARTY_VENDOR_ID,
substr(frkiden.f_get_spriden_last_name(fabinvh_vend_check_pidm),1,60)                    THIRD_PARTY_VENDOR_NAME,
fabinvh_vend_check_pidm                                                                  THIRD_PARTY_PIDM,
fabinvh_cr_memo_ind                                                                      CREDIT_MEMO_IND,
fabinvh_1099_ind                                                                         INVOICE_1099_IND,
fabinvh_1099_id                                                                          INVOICE_1099_ID,
substr(frkiden.f_get_spriden_last_name(gxvbank_bank_code_pidm),1,60)                     BANK_NAME,
gxvbank_acct_name                                                                        BANK_ACCOUNT_NAME,
fabinck_check_type_ind                                                                   CHECK_TYPE,
fabinck_check_date                                                                       CHECK_DATE,
fabinck_net_amt                                                                          NET_AMOUNT,
fabinck_cancel_ind                                                                       CANCEL_IND,
fabinck_cancel_date                                                                      CANCEL_DATE,
fabchks_recon_ind                                                                        RECONCILIATION_IND
 FROM fabinvh,fabinck,gxvbank,fabchks
WHERE fabinvh_code(+) = fabinck_invh_code
  AND gxvbank_bank_code(+)=fabinck_bank_code
  AND ((gxvbank_eff_date <= sysdate) or gxvbank_eff_date is null)
  AND ((gxvbank_nchg_date > sysdate) or gxvbank_nchg_date is null)
  AND fabchks_bank_code = fabinck_bank_code
  AND fabchks_check_num = fabinck_check_num"
"BANINST1","AF_CHART_ATTRIBUTES_PROFILE","This view retrieves all the attribute types for a chart and the values associated with them.","SELECT
ftvattt_coas_code,
ftvcoas_title,
ftvattt_code,
ftvattt_desc,
decode(ftvattt_status_ind,'A','Active','Inactive'),
ftrattv_code,
ftrattv_desc,
ftrattv_begin_date,
ftrattv_end_date
from ftvcoas,ftrattv,ftvattt
where ftvcoas_coas_code = ftvattt_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvattt_coas_code = ftrattv_coas_code(+)
and   ftvattt_code = ftrattv_attt_code(+)
 "
"BANINST1","AF_BUDGET_DEVELOPMENT","This view retrieves budget development and operating statement information and joins in pertinent validation tables.","select
 fbvbldl_obud_code,
 ftvobud_budg_title,
 fbvbldl_obph_code,
 ftvobph_budg_phase_title,
 ftvobud_budget_year,
 fbvbldl_coas_code,
 ftvcoas_title,
 ftvcoas_status_ind,
 fbvbldl_fund_code,
 ftvfund_title,
 ftvfund_status_ind,
 fbvbldl_orgn_code,
 ftvorgn_title,
 ftvorgn_status_ind,
 fbvbldl_acct_code,
 ftvacct_title,
 ftvacct_status_ind,
 fbvbldl_prog_code,
 substr(f_prog_title(fbvbldl_coas_code,fbvbldl_prog_code,fbvbldl_activation_date),1,35),
 substr(f_prog_status_ind(fbvbldl_coas_code,fbvbldl_prog_code,fbvbldl_activation_date),1,35),
 fbvbldl_actv_code,
 substr(f_actv_title(fbvbldl_coas_code,fbvbldl_actv_code,fbvbldl_activation_date),1,35),
 substr(f_actv_status_ind(fbvbldl_coas_code,fbvbldl_actv_code,fbvbldl_activation_date),1,35),
 fbvbldl_locn_code,
 substr(f_locn_title(fbvbldl_coas_code,fbvbldl_locn_code,fbvbldl_activation_date),1,35),
 substr(f_locn_status_ind(fbvbldl_coas_code,fbvbldl_locn_code,fbvbldl_activation_date),1,35),
 substr(f_fund_hier1_fnc(fbvbldl_coas_code,fbvbldl_fund_code,1,fbvbldl_activation_date),1,6),
 substr(f_fund_hier2_fnc(fbvbldl_coas_code,fbvbldl_fund_code,1,fbvbldl_activation_date),1,35),
 substr(f_fund_hier3_fnc(fbvbldl_coas_code,fbvbldl_fund_code,1,fbvbldl_activation_date),1,1),
 substr(f_fund_hier1_fnc(fbvbldl_coas_code,fbvbldl_fund_code,2,fbvbldl_activation_date),1,6),
 substr(f_fund_hier2_fnc(fbvbldl_coas_code,fbvbldl_fund_code,2,fbvbldl_activation_date),1,35),
 substr(f_fund_hier3_fnc(fbvbldl_coas_code,fbvbldl_fund_code,2,fbvbldl_activation_date),1,1),
 substr(f_fund_hier1_fnc(fbvbldl_coas_code,fbvbldl_fund_code,3,fbvbldl_activation_date),1,6),
 substr(f_fund_hier2_fnc(fbvbldl_coas_code,fbvbldl_fund_code,3,fbvbldl_activation_date),1,35),
 substr(f_fund_hier3_fnc(fbvbldl_coas_code,fbvbldl_fund_code,3,fbvbldl_activation_date),1,1),
 substr(f_fund_hier1_fnc(fbvbldl_coas_code,fbvbldl_fund_code,4,fbvbldl_activation_date),1,6),
 substr(f_fund_hier2_fnc(fbvbldl_coas_code,fbvbldl_fund_code,4,fbvbldl_activation_date),1,35),
 substr(f_fund_hier3_fnc(fbvbldl_coas_code,fbvbldl_fund_code,4,fbvbldl_activation_date),1,1),
 substr(f_fund_hier1_fnc(fbvbldl_coas_code,fbvbldl_fund_code,5,fbvbldl_activation_date),1,6),
 substr(f_fund_hier2_fnc(fbvbldl_coas_code,fbvbldl_fund_code,5,fbvbldl_activation_date),1,35),
 substr(f_fund_hier3_fnc(fbvbldl_coas_code,fbvbldl_fund_code,5,fbvbldl_activation_date),1,1),
 substr(f_ftyp_hier1_fnc(fbvbldl_coas_code,y.ftvfund_ftyp_code,1,fbvbldl_activation_date),1,6),
 substr(f_ftyp_hier2_fnc(fbvbldl_coas_code,y.ftvfund_ftyp_code,1,fbvbldl_activation_date),1,35),
 substr(f_ftyp_hier3_fnc(fbvbldl_coas_code,y.ftvfund_ftyp_code,1,fbvbldl_activation_date),1,1),
 substr(f_ftyp_hier1_fnc(fbvbldl_coas_code,y.ftvfund_ftyp_code,2,fbvbldl_activation_date),1,6),
 substr(f_ftyp_hier2_fnc(fbvbldl_coas_code,y.ftvfund_ftyp_code,2,fbvbldl_activation_date),1,35),
 substr(f_ftyp_hier3_fnc(fbvbldl_coas_code,y.ftvfund_ftyp_code,2,fbvbldl_activation_date),1,1),
 substr(f_acct_hier1_fnc(fbvbldl_coas_code,fbvbldl_acct_code,1,fbvbldl_activation_date),1,6),
 substr(f_acct_hier2_fnc(fbvbldl_coas_code,fbvbldl_acct_code,1,fbvbldl_activation_date),1,35),
 substr(f_acct_hier3_fnc(fbvbldl_coas_code,fbvbldl_acct_code,1,fbvbldl_activation_date),1,1),
 substr(f_acct_hier1_fnc(fbvbldl_coas_code,fbvbldl_acct_code,2,fbvbldl_activation_date),1,6),
 substr(f_acct_hier2_fnc(fbvbldl_coas_code,fbvbldl_acct_code,2,fbvbldl_activation_date),1,35),
 substr(f_acct_hier3_fnc(fbvbldl_coas_code,fbvbldl_acct_code,2,fbvbldl_activation_date),1,1),
 substr(f_acct_hier1_fnc(fbvbldl_coas_code,fbvbldl_acct_code,3,fbvbldl_activation_date),1,6),
 substr(f_acct_hier2_fnc(fbvbldl_coas_code,fbvbldl_acct_code,3,fbvbldl_activation_date),1,35),
 substr(f_acct_hier3_fnc(fbvbldl_coas_code,fbvbldl_acct_code,3,fbvbldl_activation_date),1,1),
 substr(f_acct_hier1_fnc(fbvbldl_coas_code,fbvbldl_acct_code,4,fbvbldl_activation_date),1,6),
 substr(f_acct_hier2_fnc(fbvbldl_coas_code,fbvbldl_acct_code,4,fbvbldl_activation_date),1,35),
 substr(f_acct_hier3_fnc(fbvbldl_coas_code,fbvbldl_acct_code,4,fbvbldl_activation_date),1,1),
 substr(f_atyp_hier1_fnc(fbvbldl_coas_code,e.ftvacct_atyp_code,1,fbvbldl_activation_date),1,6),
 substr(f_atyp_hier2_fnc(fbvbldl_coas_code,e.ftvacct_atyp_code,1,fbvbldl_activation_date),1,35),
 substr(f_atyp_hier3_fnc(fbvbldl_coas_code,e.ftvacct_atyp_code,1,fbvbldl_activation_date),1,1),
 substr(f_atyp_hier1_fnc(fbvbldl_coas_code,e.ftvacct_atyp_code,2,fbvbldl_activation_date),1,6),
 substr(f_atyp_hier2_fnc(fbvbldl_coas_code,e.ftvacct_atyp_code,2,fbvbldl_activation_date),1,35),
 substr(f_atyp_hier3_fnc(fbvbldl_coas_code,e.ftvacct_atyp_code,2,fbvbldl_activation_date),1,1),
 substr(f_orgn_hier1_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,1,fbvbldl_activation_date),1,6),
 substr(f_orgn_hier2_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,1,fbvbldl_activation_date),1,35),
 substr(f_orgn_hier3_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,1,fbvbldl_activation_date),1,1),
 substr(f_orgn_hier1_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,2,fbvbldl_activation_date),1,6),
 substr(f_orgn_hier2_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,2,fbvbldl_activation_date),1,35),
 substr(f_orgn_hier3_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,2,fbvbldl_activation_date),1,1),
 substr(f_orgn_hier1_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,3,fbvbldl_activation_date),1,6),
 substr(f_orgn_hier2_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,3,fbvbldl_activation_date),1,35),
 substr(f_orgn_hier3_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,3,fbvbldl_activation_date),1,1),
 substr(f_orgn_hier1_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,4,fbvbldl_activation_date),1,6),
 substr(f_orgn_hier2_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,4,fbvbldl_activation_date),1,35),
 substr(f_orgn_hier3_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,4,fbvbldl_activation_date),1,1),
 substr(f_orgn_hier1_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,5,fbvbldl_activation_date),1,6),
 substr(f_orgn_hier2_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,5,fbvbldl_activation_date),1,35),
 substr(f_orgn_hier3_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,5,fbvbldl_activation_date),1,1),
 substr(f_orgn_hier1_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,6,fbvbldl_activation_date),1,6),
 substr(f_orgn_hier2_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,6,fbvbldl_activation_date),1,35),
 substr(f_orgn_hier3_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,6,fbvbldl_activation_date),1,1),
 substr(f_orgn_hier1_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,7,fbvbldl_activation_date),1,6),
 substr(f_orgn_hier2_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,7,fbvbldl_activation_date),1,35),
 substr(f_orgn_hier3_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,7,fbvbldl_activation_date),1,1),
 substr(f_orgn_hier1_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,8,fbvbldl_activation_date),1,6),
 substr(f_orgn_hier2_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,8,fbvbldl_activation_date),1,35),
 substr(f_orgn_hier3_fnc(fbvbldl_coas_code,fbvbldl_orgn_code,8,fbvbldl_activation_date),1,1),
 substr(f_prog_hier1_fnc(fbvbldl_coas_code,fbvbldl_prog_code,1,fbvbldl_activation_date),1,6),
 substr(f_prog_hier2_fnc(fbvbldl_coas_code,fbvbldl_prog_code,1,fbvbldl_activation_date),1,35),
 substr(f_prog_hier3_fnc(fbvbldl_coas_code,fbvbldl_prog_code,1,fbvbldl_activation_date),1,1),
 substr(f_prog_hier1_fnc(fbvbldl_coas_code,fbvbldl_prog_code,2,fbvbldl_activation_date),1,6),
 substr(f_prog_hier2_fnc(fbvbldl_coas_code,fbvbldl_prog_code,2,fbvbldl_activation_date),1,35),
 substr(f_prog_hier3_fnc(fbvbldl_coas_code,fbvbldl_prog_code,2,fbvbldl_activation_date),1,1),
 substr(f_prog_hier1_fnc(fbvbldl_coas_code,fbvbldl_prog_code,3,fbvbldl_activation_date),1,6),
 substr(f_prog_hier2_fnc(fbvbldl_coas_code,fbvbldl_prog_code,3,fbvbldl_activation_date),1,35),
 substr(f_prog_hier3_fnc(fbvbldl_coas_code,fbvbldl_prog_code,3,fbvbldl_activation_date),1,1),
 substr(f_prog_hier1_fnc(fbvbldl_coas_code,fbvbldl_prog_code,4,fbvbldl_activation_date),1,6),
 substr(f_prog_hier2_fnc(fbvbldl_coas_code,fbvbldl_prog_code,4,fbvbldl_activation_date),1,35),
 substr(f_prog_hier3_fnc(fbvbldl_coas_code,fbvbldl_prog_code,4,fbvbldl_activation_date),1,1),
 substr(f_prog_hier1_fnc(fbvbldl_coas_code,fbvbldl_prog_code,5,fbvbldl_activation_date),1,6),
 substr(f_prog_hier2_fnc(fbvbldl_coas_code,fbvbldl_prog_code,5,fbvbldl_activation_date),1,35),
 substr(f_prog_hier3_fnc(fbvbldl_coas_code,fbvbldl_prog_code,5,fbvbldl_activation_date),1,1),
 substr(f_locn_hier1_fnc(fbvbldl_coas_code,fbvbldl_locn_code,1,fbvbldl_activation_date),1,6),
 substr(f_locn_hier2_fnc(fbvbldl_coas_code,fbvbldl_locn_code,1,fbvbldl_activation_date),1,35),
 substr(f_locn_hier3_fnc(fbvbldl_coas_code,fbvbldl_locn_code,1,fbvbldl_activation_date),1,1),
 substr(f_locn_hier1_fnc(fbvbldl_coas_code,fbvbldl_locn_code,2,fbvbldl_activation_date),1,6),
 substr(f_locn_hier2_fnc(fbvbldl_coas_code,fbvbldl_locn_code,2,fbvbldl_activation_date),1,35),
 substr(f_locn_hier3_fnc(fbvbldl_coas_code,fbvbldl_locn_code,2,fbvbldl_activation_date),1,1),
 substr(f_locn_hier1_fnc(fbvbldl_coas_code,fbvbldl_locn_code,3,fbvbldl_activation_date),1,6),
 substr(f_locn_hier2_fnc(fbvbldl_coas_code,fbvbldl_locn_code,3,fbvbldl_activation_date),1,35),
 substr(f_locn_hier3_fnc(fbvbldl_coas_code,fbvbldl_locn_code,3,fbvbldl_activation_date),1,1),
 substr(f_locn_hier1_fnc(fbvbldl_coas_code,fbvbldl_locn_code,4,fbvbldl_activation_date),1,6),
 substr(f_locn_hier2_fnc(fbvbldl_coas_code,fbvbldl_locn_code,4,fbvbldl_activation_date),1,35),
 substr(f_locn_hier3_fnc(fbvbldl_coas_code,fbvbldl_locn_code,4,fbvbldl_activation_date),1,1),
 substr(f_locn_hier1_fnc(fbvbldl_coas_code,fbvbldl_locn_code,5,fbvbldl_activation_date),1,6),
 substr(f_locn_hier2_fnc(fbvbldl_coas_code,fbvbldl_locn_code,5,fbvbldl_activation_date),1,35),
 substr(f_locn_hier3_fnc(fbvbldl_coas_code,fbvbldl_locn_code,5,fbvbldl_activation_date),1,1),
 fbvbldl_base_coas_code,fbvbldl_base_fsyr_code,
 fbvbldl_budg_amt,
 nvl(fbvbldl_adjt_amt,0),
 (nvl(fbvbldl_budg_amt,0) + nvl(fbvbldl_adjt_amt,0)),
 nvl(fbvbldl_adopt_bud_amt,0),
 nvl(fbvbldl_adjt_bud_amt,0),
 nvl(fbvbldl_temp_adopt_amt,0),
 nvl(fbvbldl_temp_adjt_amt,0),
 nvl(fbvbldl_base_budg_amt,0),
 f_op_amts_fnc(fbvbldl_coas_code,ftvobud_budget_year,'14',
               fbvbldl_fund_code, fbvbldl_acct_code, fbvbldl_orgn_code,
               fbvbldl_prog_code, fbvbldl_actv_code, fbvbldl_locn_code,'%',
               'BADOPTED'),
 f_op_amts_fnc(fbvbldl_coas_code,ftvobud_budget_year,'14',
               fbvbldl_fund_code,fbvbldl_acct_code,fbvbldl_orgn_code,
               fbvbldl_prog_code, fbvbldl_actv_code,fbvbldl_locn_code,'%',
               'BADJUSTMENT'),
 f_op_amts_fnc(fbvbldl_coas_code,ftvobud_budget_year,'14',
               fbvbldl_fund_code, fbvbldl_acct_code, fbvbldl_orgn_code,
               fbvbldl_prog_code, fbvbldl_actv_code, fbvbldl_locn_code,'%',
               'CALCBUDGET'),
 f_op_amts_fnc(fbvbldl_coas_code,ftvobud_budget_year,'14',
               fbvbldl_fund_code, fbvbldl_acct_code, fbvbldl_orgn_code,
               fbvbldl_prog_code, fbvbldl_actv_code, fbvbldl_locn_code,'%',
               'BYTD'),
 f_op_amts_fnc(fbvbldl_coas_code,substr(to_char(to_number(to_char(to_date(ftvobud_budget_year,'RR'),'YYYY'))-1),3,2),'14',
               fbvbldl_fund_code, fbvbldl_acct_code, fbvbldl_orgn_code,
               fbvbldl_prog_code, fbvbldl_actv_code, fbvbldl_locn_code,'%',
               'PRIORYTD'),
  fbvbldl_deleted_ind,
  fbvbldl_origin_point,
  fbvbldl_budg_dur_code,
  fbvbldl_audit_exists_ind,
  substr(fbkbudg.f_getlockstatus
                (fbvbldl_coas_code,
                 fbvbldl_obud_code,
                 fbvbldl_obph_code,
                 fbvbldl_orgn_code,
                 fbvbldl_activation_date),1,1)
from
 fobsysc,
 ftvorgn,
 ftvacct e,
 ftvobph,
 ftvfund y,
 ftvcoas,
 fbvbldl, ftvobud
where fbvbldl_obud_code = ftvobud_obud_code
  and ((ftvobud_coas_code is null) or
       (fbvbldl_coas_code = ftvobud_coas_code))
  and ftvorgn_coas_code(+)=fbvbldl_coas_code
  and ftvorgn_orgn_code(+)=fbvbldl_orgn_code
  and ((ftvorgn_eff_date <= fbvbldl_activation_date)
                        or ftvorgn_eff_date is null)
  and ((ftvorgn_nchg_date > fbvbldl_activation_date)
                       or ftvorgn_nchg_date is null)
  and ftvcoas_coas_code(+)=fbvbldl_coas_code
  and ((ftvcoas_eff_date <= fbvbldl_activation_date)
                       or ftvcoas_eff_date is null)
  and ((ftvcoas_nchg_date > fbvbldl_activation_date)
                       or ftvcoas_nchg_date is null)
  and y.ftvfund_coas_code(+)=fbvbldl_coas_code
  and y.ftvfund_fund_code(+)=fbvbldl_fund_code
  and ((y.ftvfund_eff_date <= fbvbldl_activation_date)
                       or y.ftvfund_eff_date is null)
  and ((y.ftvfund_nchg_date > fbvbldl_activation_date)
                       or y.ftvfund_nchg_date is null)
  and fbvbldl_coas_code=ftvobph_coas_code(+)
  and fbvbldl_obph_code=ftvobph_obph_code(+)
  and fbvbldl_obud_code=ftvobph_obud_code(+)
  and fbvbldl_coas_code=e.ftvacct_coas_code(+)
  and e.ftvacct_acct_code(+)=fbvbldl_acct_code
  and ((e.ftvacct_eff_date <= fbvbldl_activation_date)
                      or e.ftvacct_eff_date is null)
  and ((e.ftvacct_nchg_date > fbvbldl_activation_date)
                      or e.ftvacct_nchg_date is null)
  and decode(fobsysc_fund_org_security_ind,'Y',
           f_fund_org_security_fnc
           (fbvbldl_coas_code,fbvbldl_fund_code,fbvbldl_orgn_code),'Y')='Y'
  and decode(fobsysc_wbud_ind,'Y',
            fbkbudg.F_WBUD_FUND_ORG_SECURITY
	    (fbvbldl_coas_code,fbvbldl_fund_code,fbvbldl_orgn_code),'Y')='Y'
  and fobsysc_eff_date <= fbvbldl_activation_date
  and  (fobsysc_nchg_date is null
     or  fobsysc_nchg_date > fbvbldl_activation_date)
  and fobsysc_status_ind = 'A'"
"BANINST1","AF_BUDGET_AVAILABILITY","This view retrieves budget availability information and joins in pertinent validation tables.","select substr(to_char(to_date(fgbbavl_fsyr_code,'RR'),'YYYY'),1,4),fgbbavl_period,
fgbbavl_coas_code,ftvcoas_title, ftvcoas_status_ind,
fgbbavl_fund_code,ftvfund_title, ftvfund_status_ind,
fgbbavl_orgn_code,ftvorgn_title, ftvorgn_status_ind,
fgbbavl_acct_code,ftvacct_title, ftvacct_status_ind,
fgbbavl_prog_code,
f_prog_title(fgbbavl_coas_Code,fgbbavl_prog_code),
f_prog_status_ind(fgbbavl_coas_Code,fgbbavl_prog_code),
fgbbavl_cmt_type,
substr(f_fund_hier1_fnc(fgbbavl_coas_code,fgbbavl_fund_code,1),1,6),
substr(f_fund_hier2_fnc(fgbbavl_coas_code,fgbbavl_fund_code,1),1,35),
substr(f_fund_hier3_fnc(fgbbavl_coas_code,fgbbavl_fund_code,1),1,1),
substr(f_fund_hier1_fnc(fgbbavl_coas_code,fgbbavl_fund_code,2),1,6),
substr(f_fund_hier2_fnc(fgbbavl_coas_code,fgbbavl_fund_code,2),1,35),
substr(f_fund_hier3_fnc(fgbbavl_coas_code,fgbbavl_fund_code,2),1,1),
substr(f_fund_hier1_fnc(fgbbavl_coas_code,fgbbavl_fund_code,3),1,6),
substr(f_fund_hier2_fnc(fgbbavl_coas_code,fgbbavl_fund_code,3),1,35),
substr(f_fund_hier3_fnc(fgbbavl_coas_code,fgbbavl_fund_code,3),1,1),
substr(f_fund_hier1_fnc(fgbbavl_coas_code,fgbbavl_fund_code,4),1,6),
substr(f_fund_hier2_fnc(fgbbavl_coas_code,fgbbavl_fund_code,4),1,35),
substr(f_fund_hier3_fnc(fgbbavl_coas_code,fgbbavl_fund_code,4),1,1),
substr(f_fund_hier1_fnc(fgbbavl_coas_code,fgbbavl_fund_code,5),1,6),
substr(f_fund_hier2_fnc(fgbbavl_coas_code,fgbbavl_fund_code,5),1,35),
substr(f_fund_hier3_fnc(fgbbavl_coas_code,fgbbavl_fund_code,5),1,1),
substr(f_ftyp_hier1_fnc(fgbbavl_coas_code,ftvfund_ftyp_code,1),1,6),
substr(f_ftyp_hier2_fnc(fgbbavl_coas_code,ftvfund_ftyp_code,1),1,35),
substr(f_ftyp_hier3_fnc(fgbbavl_coas_code,ftvfund_ftyp_code,1),1,1),
substr(f_ftyp_hier1_fnc(fgbbavl_coas_code,ftvfund_ftyp_code,2),1,6),
substr(f_ftyp_hier2_fnc(fgbbavl_coas_code,ftvfund_ftyp_code,2),1,35),
substr(f_ftyp_hier3_fnc(fgbbavl_coas_code,ftvfund_ftyp_code,2),1,1),
substr(f_acct_hier1_fnc(fgbbavl_coas_code,fgbbavl_acct_code,1),1,6),
substr(f_acct_hier2_fnc(fgbbavl_coas_code,fgbbavl_acct_code,1),1,35),
substr(f_acct_hier3_fnc(fgbbavl_coas_code,fgbbavl_acct_code,1),1,1),
substr(f_acct_hier1_fnc(fgbbavl_coas_code,fgbbavl_acct_code,2),1,6),
substr(f_acct_hier2_fnc(fgbbavl_coas_code,fgbbavl_acct_code,2),1,35),
substr(f_acct_hier3_fnc(fgbbavl_coas_code,fgbbavl_acct_code,2),1,1),
substr(f_acct_hier1_fnc(fgbbavl_coas_code,fgbbavl_acct_code,3),1,6),
substr(f_acct_hier2_fnc(fgbbavl_coas_code,fgbbavl_acct_code,3),1,35),
substr(f_acct_hier3_fnc(fgbbavl_coas_code,fgbbavl_acct_code,3),1,1),
substr(f_acct_hier1_fnc(fgbbavl_coas_code,fgbbavl_acct_code,4),1,6),
substr(f_acct_hier2_fnc(fgbbavl_coas_code,fgbbavl_acct_code,4),1,35),
substr(f_acct_hier3_fnc(fgbbavl_coas_code,fgbbavl_acct_code,4),1,1),
substr(f_atyp_hier1_fnc(fgbbavl_coas_code,ftvacct_atyp_code,1),1,6),
substr(f_atyp_hier2_fnc(fgbbavl_coas_code,ftvacct_atyp_code,1),1,35),
substr(f_atyp_hier3_fnc(fgbbavl_coas_code,ftvacct_atyp_code,1),1,1),
substr(f_atyp_hier1_fnc(fgbbavl_coas_code,ftvacct_atyp_code,2),1,6),
substr(f_atyp_hier2_fnc(fgbbavl_coas_code,ftvacct_atyp_code,2),1,35),
substr(f_atyp_hier3_fnc(fgbbavl_coas_code,ftvacct_atyp_code,2),1,1),
substr(f_orgn_hier1_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,1),1,6),
substr(f_orgn_hier2_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,1),1,35),
substr(f_orgn_hier3_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,1),1,1),
substr(f_orgn_hier1_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,2),1,6),
substr(f_orgn_hier2_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,2),1,35),
substr(f_orgn_hier3_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,2),1,1),
substr(f_orgn_hier1_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,3),1,6),
substr(f_orgn_hier2_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,3),1,35),
substr(f_orgn_hier3_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,3),1,1),
substr(f_orgn_hier1_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,4),1,6),
substr(f_orgn_hier2_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,4),1,35),
substr(f_orgn_hier3_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,4),1,1),
substr(f_orgn_hier1_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,5),1,6),
substr(f_orgn_hier2_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,5),1,35),
substr(f_orgn_hier3_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,5),1,1),
substr(f_orgn_hier1_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,6),1,6),
substr(f_orgn_hier2_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,6),1,35),
substr(f_orgn_hier3_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,6),1,1),
substr(f_orgn_hier1_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,7),1,6),
substr(f_orgn_hier2_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,7),1,35),
substr(f_orgn_hier3_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,7),1,1),
substr(f_orgn_hier1_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,8),1,6),
substr(f_orgn_hier2_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,8),1,35),
substr(f_orgn_hier3_fnc(fgbbavl_coas_code,fgbbavl_orgn_code,8),1,1),
substr(f_prog_hier1_fnc(fgbbavl_coas_code,fgbbavl_prog_code,1),1,6),
substr(f_prog_hier2_fnc(fgbbavl_coas_code,fgbbavl_prog_code,1),1,35),
substr(f_prog_hier3_fnc(fgbbavl_coas_code,fgbbavl_prog_code,1),1,1),
substr(f_prog_hier1_fnc(fgbbavl_coas_code,fgbbavl_prog_code,2),1,6),
substr(f_prog_hier2_fnc(fgbbavl_coas_code,fgbbavl_prog_code,2),1,35),
substr(f_prog_hier3_fnc(fgbbavl_coas_code,fgbbavl_prog_code,2),1,1),
substr(f_prog_hier1_fnc(fgbbavl_coas_code,fgbbavl_prog_code,3),1,6),
substr(f_prog_hier2_fnc(fgbbavl_coas_code,fgbbavl_prog_code,3),1,35),
substr(f_prog_hier3_fnc(fgbbavl_coas_code,fgbbavl_prog_code,3),1,1),
substr(f_prog_hier1_fnc(fgbbavl_coas_code,fgbbavl_prog_code,4),1,6),
substr(f_prog_hier2_fnc(fgbbavl_coas_code,fgbbavl_prog_code,4),1,35),
substr(f_prog_hier3_fnc(fgbbavl_coas_code,fgbbavl_prog_code,4),1,1),
substr(f_prog_hier1_fnc(fgbbavl_coas_code,fgbbavl_prog_code,5),1,6),
substr(f_prog_hier2_fnc(fgbbavl_coas_code,fgbbavl_prog_code,5),1,35),
substr(f_prog_hier3_fnc(fgbbavl_coas_code,fgbbavl_prog_code,5),1,1),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'ADOPTED'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'ADJUSTMENT'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'YTD'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'ENCUMB'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'RESERVATION'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'REMAINING'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'PCTAVAIL'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'CADOPTED'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'CADJUSTMENT'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'CYTD'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'CENCUMB'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'CRESERVATION'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'CREMAINING'),
f_bvl_amts_fnc(fgbbavl_coas_code,fgbbavl_fsyr_code,fgbbavl_period,
fgbbavl_fund_code,fgbbavl_acct_code,fgbbavl_orgn_code,fgbbavl_prog_code,
fgbbavl_cmt_type,'CPCTAVAIL'),
ftvorgn_fmgr_code_pidm,
substr(frkiden.f_get_spriden_id(ftvorgn_fmgr_code_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(ftvorgn_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(ftvorgn_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(ftvorgn_fmgr_code_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(ftvorgn_fmgr_code_pidm),1,15),
ftvfund_fmgr_code_pidm,
substr(frkiden.f_get_spriden_id(ftvfund_fmgr_code_pidm),1,9),
substr(frkiden.f_get_spriden_surname_prefix(ftvfund_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_last_name(ftvfund_fmgr_code_pidm),1,60),
substr(frkiden.f_get_spriden_first_name(ftvfund_fmgr_code_pidm),1,15),
substr(frkiden.f_get_spriden_mi_name(ftvfund_fmgr_code_pidm),1,15)
from ftvcoas, ftvfund ,ftvacct ,ftvorgn,fgbbavl
where ((ftvcoas_eff_date <= sysdate) or ftvcoas_eff_date is null)
  and ((ftvcoas_nchg_date > sysdate) or ftvcoas_nchg_date is null)
  and fgbbavl_coas_code=ftvcoas_coas_code(+)
  and fgbbavl_coas_code=ftvfund_coas_code(+)
  and fgbbavl_fund_code=ftvfund_fund_code(+)
  and ((ftvfund_eff_date <= sysdate) or ftvfund_eff_date is null)
  and ((ftvfund_nchg_date > sysdate) or ftvfund_nchg_date is null)
  and fgbbavl_coas_code=ftvacct_coas_code(+)
  and fgbbavl_acct_code =  ftvacct_acct_code(+)
  and ((ftvacct_eff_date <= sysdate) or ftvacct_eff_date is null)
  and ((ftvacct_nchg_date > sysdate) or ftvacct_nchg_date is null)
  and ((ftvorgn_eff_date <= sysdate) or ftvorgn_eff_date is null)
  and ((ftvorgn_nchg_date > sysdate) or ftvorgn_nchg_date is null)
  and ftvorgn_coas_code(+)=fgbbavl_coas_code
  and ftvorgn_orgn_code(+)=fgbbavl_orgn_code"
"BANINST1","AF_BILLING_DETAIL_VIEW","Research Accounting Transaction Detail view.","SELECT FRBGBIL_PMSC_CODE,
         FRRBDET_GRNT_CODE,
         FRRBDET_DOC_CODE,
         FRRBDET_ITEM_NUM,
         FRRBDET_SEQ_NUM,
         FRRBDET_ACCT_CLASS_CODE,
         FRRBDET_TRANS_AMT,
         FRRBDET_TRANS_DATE,
         FRRBDET_BILLING_PERIOD_DATE,
         FRRBDET_BILL_STATUS,
         FRRBDET_BILL_TRAN_NUMBER,
         FRRBDET_BILL_INV_SEQ_NO,
         FRRBDET_BILL_INV_ADJ_NO,
         FRRBDET_FUND_CODE,
         FRRBDET_COAS_CODE,
         FRRBDET_ORGN_CODE,
         FRRBDET_ACCT_CODE,
         FRRBDET_PROG_CODE,
         FRRBDET_BILL_RUN_DATE,
         FRBEVNG_BFRM_CODE,
         FRBEVNG_PMT_METHOD_TYPE_IND,
         FRBGRNT_AGENCY_PIDM,
         FRBGRNT_TITLE
  FROM FRRBDET X, FRBEVNG Y, FRBGRNT, FRBGBIL
 WHERE EXISTS (SELECT 'x'
                 FROM FRVEVNT
                WHERE Y.FRBEVNG_EVNT_CODE = FRVEVNT_CODE
                  AND FRVEVNT_TYPE_IND = 'B')
   AND FRBEVNG_GRNT_CODE = FRRBDET_GRNT_CODE
   AND FRBGBIL_GRNT_CODE = FRBEVNG_GRNT_CODE
   AND FRBGRNT_CODE = FRBGBIL_GRNT_CODE
 "
"BANINST1","AF_ATYP_ATTRIBUTES_PROFILE","This view retrieves all the attributes (sets,types,values) associated with a ATYP code.","SELECT
  ftratya_coas_code,
  ftvcoas_title,
  'ATYP',
  ftratya_ATYP_CODE,
  ftvATYP_TITLE,
  NVL(ftratya_atts_code,'NONE'),
  ftvatts_desc,
  ftratya_attt_code,
  ftvattt_desc,
  decode(ftvattt_status_ind,'A','Active','Inactive'),
  ftratya_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts, ftvatyp,ftratya, ftvcoas
where ftvattt_coas_code = ftratya_coas_code
and   ftvattt_code = ftratya_attt_code
and   ftrattv_coas_Code(+) = ftratya_coas_code
and   ftrattv_attt_code(+) = ftratya_attt_code
and   ftrattv_code(+) = ftratya_attv_code
and   ftvatts_coas_code(+) = ftratya_coas_code
and   ftvatts_code(+)      = ftratya_atts_code
and   ftvcoas_coas_code = ftratya_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvatyp_coas_code = ftratya_coas_code
and   ftvatyp_ATYP_CODE = ftratya_ATYP_CODE
and   ftvatyp_eff_date <= sysdate
and   ftvatyp_nchg_date > sysdate"
"BANINST1","AF_ATTRIBUTE_SETS_PROFILE","This view retrieves all the sets of attributes and the types and values associated with them.","SELECT
ftvatts_coas_code,
ftvcoas_title,
ftvatts_code,
ftvatts_desc,
ftratts_attt_code,
ftvattt_desc,
decode(ftvattt_status_ind,'A','Active','Inactive'),
ftrattv_code,
ftrattv_desc,
ftrattv_begin_date,
ftrattv_end_date
from ftvcoas,ftrattv,ftvattt,ftratts,ftvatts
where ftvcoas_coas_code = ftvatts_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvatts_coas_code = ftratts_coas_code(+)
and   ftvatts_code      = ftratts_atts_code(+)
and   ftratts_coas_code = ftvattt_coas_code
and   ftratts_attt_code = ftvattt_code
and   ftvattt_coas_code = ftrattv_coas_code(+)
and   ftvattt_code = ftrattv_attt_code(+)
 "
"BANINST1","AF_ACTV_ATTRIBUTES_PROFILE","This view retrieves all the attributes (sets,types,values) associated with a ACTV code.","SELECT
  ftracva_coas_code,
  ftvcoas_title,
  'ACTV',
  ftracva_actv_Code,
  ftvactv_title,
  NVL(ftracva_atts_code,'NONE'),
  ftvatts_desc,
  ftracva_attt_code,
  ftvattt_desc,
  decode(ftvattt_status_ind,'A','Active','Inactive'),
  ftracva_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts, ftvactv,ftracva, ftvcoas
where ftvattt_coas_code = ftracva_coas_code
and   ftvattt_code = ftracva_attt_code
and   ftrattv_coas_Code(+) = ftracva_coas_code
and   ftrattv_attt_code(+) = ftracva_attt_code
and   ftrattv_code(+) = ftracva_attv_code
and   ftvatts_coas_code(+) = ftracva_coas_code
and   ftvatts_code(+)      = ftracva_atts_code
and   ftvcoas_coas_code = ftracva_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvactv_coas_code = ftracva_coas_code
and   ftvactv_actv_Code = ftracva_actv_code
and   ftvactv_eff_date <= sysdate
and   ftvactv_nchg_date > sysdate"
"BANINST1","AF_ACCT_ATTRIBUTES_PROFILE","This view retrieves all the attributes (sets, types, values) associated with a ACCT code.","SELECT
  ftracta_coas_code,
  ftvcoas_title,
  'ACCT',
  ftracta_acct_Code,
  ftvacct_title,
  NVL(ftracta_atts_code,'NONE'),
  ftvatts_desc,
  ftracta_attt_code,
  ftvattt_desc,
  decode(ftvattt_status_ind,'A','Active','Inactive'),
  ftracta_attv_code,
  ftrattv_desc,
  ftrattv_begin_date,
  ftrattv_end_date
from ftvattt, ftrattv, ftvatts, ftvacct,ftracta, ftvcoas
where ftvattt_coas_code = ftracta_coas_code
and   ftvattt_code = ftracta_attt_code
and   ftrattv_coas_Code(+) = ftracta_coas_code
and   ftrattv_attt_code(+) = ftracta_attt_code
and   ftrattv_code(+) = ftracta_attv_code
and   ftvatts_coas_code(+) = ftracta_coas_code
and   ftvatts_code(+)      = ftracta_atts_code
and   ftvcoas_coas_code = ftracta_coas_code
and   ftvcoas_eff_date <= sysdate
and   ftvcoas_nchg_date > sysdate
and   ftvacct_coas_code = ftracta_coas_code
and   ftvacct_acct_Code = ftracta_acct_code
and   ftvacct_eff_date <= sysdate
and   ftvacct_nchg_date > sysdate"
"BANINST1","AF_ACCTG_DISTRIBUTION_ANALYSIS","This view retrieves accounting distribution analysis information from the invoice tables and other data on pertinent validation tables.","select fabinvh_vend_pidm,fabinvh_code, fabinvh_multiple_inv_ind,
fabinvh_submission_number,farinva_item,farinva_seq_num,
substr(frkiden.f_get_spriden_id(fabinvh_vend_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(fabinvh_vend_pidm),1,60),
substr(frkiden.f_get_spriden_entity_ind(fabinvh_vend_pidm),1,1),
fabinvh_pohd_code,
favvic1_vend_inv_code,
fabinvh_invoice_date,fabinvh_pmt_due_date,fabinvh_cancel_date,
fabinvh_trans_date,
substr(to_char(to_date(farinva_fsyr_code,'RR'),'YYYY'),1,4),
farinva_period,
substr(frkiden.f_get_spriden_id(fabinvh_vend_check_pidm),1,9),
substr(frkiden.f_get_spriden_last_name(fabinvh_vend_check_pidm),1,60),
fabinvh_vend_check_pidm,fabinvh_open_paid_ind,
fabinvh_appr_ind,fabinvh_cr_memo_ind,fabinvh_1099_ind,fabinvh_1099_id,
fabinvh_hold_ind,fabinvh_invoice_type_ind,
farinva_coas_code,ftvcoas_title,ftvcoas_status_ind,
farinva_fund_code,
ftvfund_title,
farinva_orgn_code,
substr(f_orgn_title(farinva_coas_code,farinva_orgn_code),1,35),
farinva_acct_code,
ftvacct_title,
farinva_prog_code,
substr(f_prog_title(farinva_coas_code,farinva_prog_code),1,35),
farinva_locn_code,
substr(f_locn_title(farinva_coas_code,farinva_locn_code),1,35),
substr(f_fund_hier1_fnc(farinva_coas_code,farinva_fund_code,1),1,6),
substr(f_fund_hier2_fnc(farinva_coas_code,farinva_fund_code,1),1,35),
substr(f_fund_hier3_fnc(farinva_coas_code,farinva_fund_code,1),1,1),
substr(f_fund_hier1_fnc(farinva_coas_code,farinva_fund_code,2),1,6),
substr(f_fund_hier2_fnc(farinva_coas_code,farinva_fund_code,2),1,35),
substr(f_fund_hier3_fnc(farinva_coas_code,farinva_fund_code,2),1,1),
substr(f_fund_hier1_fnc(farinva_coas_code,farinva_fund_code,3),1,6),
substr(f_fund_hier2_fnc(farinva_coas_code,farinva_fund_code,3),1,35),
substr(f_fund_hier3_fnc(farinva_coas_code,farinva_fund_code,3),1,1),
substr(f_fund_hier1_fnc(farinva_coas_code,farinva_fund_code,4),1,6),
substr(f_fund_hier2_fnc(farinva_coas_code,farinva_fund_code,4),1,35),
substr(f_fund_hier3_fnc(farinva_coas_code,farinva_fund_code,4),1,1),
substr(f_fund_hier1_fnc(farinva_coas_code,farinva_fund_code,5),1,6),
substr(f_fund_hier2_fnc(farinva_coas_code,farinva_fund_code,5),1,35),
substr(f_fund_hier3_fnc(farinva_coas_code,farinva_fund_code,5),1,1),
substr(f_ftyp_hier1_fnc(farinva_coas_code,y.ftvfund_ftyp_code,1),1,6),
substr(f_ftyp_hier2_fnc(farinva_coas_code,y.ftvfund_ftyp_code,1),1,35),
substr(f_ftyp_hier3_fnc(farinva_coas_code,y.ftvfund_ftyp_code,1),1,1),
substr(f_ftyp_hier1_fnc(farinva_coas_code,y.ftvfund_ftyp_code,2),1,6),
substr(f_ftyp_hier2_fnc(farinva_coas_code,y.ftvfund_ftyp_code,2),1,35),
substr(f_ftyp_hier3_fnc(farinva_coas_code,y.ftvfund_ftyp_code,2),1,1),
substr(f_acct_hier1_fnc(farinva_coas_code,farinva_acct_code,1),1,6),
substr(f_acct_hier2_fnc(farinva_coas_code,farinva_acct_code,1),1,35),
substr(f_acct_hier3_fnc(farinva_coas_code,farinva_acct_code,1),1,1),
substr(f_acct_hier1_fnc(farinva_coas_code,farinva_acct_code,2),1,6),
substr(f_acct_hier2_fnc(farinva_coas_code,farinva_acct_code,2),1,35),
substr(f_acct_hier3_fnc(farinva_coas_code,farinva_acct_code,2),1,1),
substr(f_acct_hier1_fnc(farinva_coas_code,farinva_acct_code,3),1,6),
substr(f_acct_hier2_fnc(farinva_coas_code,farinva_acct_code,3),1,35),
substr(f_acct_hier3_fnc(farinva_coas_code,farinva_acct_code,3),1,1),
substr(f_acct_hier1_fnc(farinva_coas_code,farinva_acct_code,4),1,6),
substr(f_acct_hier2_fnc(farinva_coas_code,farinva_acct_code,4),1,35),
substr(f_acct_hier3_fnc(farinva_coas_code,farinva_acct_code,4),1,1),
substr(f_atyp_hier1_fnc(farinva_coas_code,e.ftvacct_atyp_code,1),1,6),
substr(f_atyp_hier2_fnc(farinva_coas_code,e.ftvacct_atyp_code,1),1,35),
substr(f_atyp_hier3_fnc(farinva_coas_code,e.ftvacct_atyp_code,1),1,1),
substr(f_atyp_hier1_fnc(farinva_coas_code,e.ftvacct_atyp_code,2),1,6),
substr(f_atyp_hier2_fnc(farinva_coas_code,e.ftvacct_atyp_code,2),1,35),
substr(f_atyp_hier3_fnc(farinva_coas_code,e.ftvacct_atyp_code,2),1,1),
substr(f_orgn_hier1_fnc(farinva_coas_code,farinva_orgn_code,1),1,6),
substr(f_orgn_hier2_fnc(farinva_coas_code,farinva_orgn_code,1),1,35),
substr(f_orgn_hier3_fnc(farinva_coas_code,farinva_orgn_code,1),1,1),
substr(f_orgn_hier1_fnc(farinva_coas_code,farinva_orgn_code,2),1,6),
substr(f_orgn_hier2_fnc(farinva_coas_code,farinva_orgn_code,2),1,35),
substr(f_orgn_hier3_fnc(farinva_coas_code,farinva_orgn_code,2),1,1),
substr(f_orgn_hier1_fnc(farinva_coas_code,farinva_orgn_code,3),1,6),
substr(f_orgn_hier2_fnc(farinva_coas_code,farinva_orgn_code,3),1,35),
substr(f_orgn_hier3_fnc(farinva_coas_code,farinva_orgn_code,3),1,1),
substr(f_orgn_hier1_fnc(farinva_coas_code,farinva_orgn_code,4),1,6),
substr(f_orgn_hier2_fnc(farinva_coas_code,farinva_orgn_code,4),1,35),
substr(f_orgn_hier3_fnc(farinva_coas_code,farinva_orgn_code,4),1,1),
substr(f_orgn_hier1_fnc(farinva_coas_code,farinva_orgn_code,5),1,6),
substr(f_orgn_hier2_fnc(farinva_coas_code,farinva_orgn_code,5),1,35),
substr(f_orgn_hier3_fnc(farinva_coas_code,farinva_orgn_code,5),1,1),
substr(f_orgn_hier1_fnc(farinva_coas_code,farinva_orgn_code,6),1,6),
substr(f_orgn_hier2_fnc(farinva_coas_code,farinva_orgn_code,6),1,35),
substr(f_orgn_hier3_fnc(farinva_coas_code,farinva_orgn_code,6),1,1),
substr(f_orgn_hier1_fnc(farinva_coas_code,farinva_orgn_code,7),1,6),
substr(f_orgn_hier2_fnc(farinva_coas_code,farinva_orgn_code,7),1,35),
substr(f_orgn_hier3_fnc(farinva_coas_code,farinva_orgn_code,7),1,1),
substr(f_orgn_hier1_fnc(farinva_coas_code,farinva_orgn_code,8),1,6),
substr(f_orgn_hier2_fnc(farinva_coas_code,farinva_orgn_code,8),1,35),
substr(f_orgn_hier3_fnc(farinva_coas_code,farinva_orgn_code,8),1,1),
substr(f_prog_hier1_fnc(farinva_coas_code,farinva_prog_code,1),1,6),
substr(f_prog_hier2_fnc(farinva_coas_code,farinva_prog_code,1),1,35),
substr(f_prog_hier3_fnc(farinva_coas_code,farinva_prog_code,1),1,1),
substr(f_prog_hier1_fnc(farinva_coas_code,farinva_prog_code,2),1,6),
substr(f_prog_hier2_fnc(farinva_coas_code,farinva_prog_code,2),1,35),
substr(f_prog_hier3_fnc(farinva_coas_code,farinva_prog_code,2),1,1),
substr(f_prog_hier1_fnc(farinva_coas_code,farinva_prog_code,3),1,6),
substr(f_prog_hier2_fnc(farinva_coas_code,farinva_prog_code,3),1,35),
substr(f_prog_hier3_fnc(farinva_coas_code,farinva_prog_code,3),1,1),
substr(f_prog_hier1_fnc(farinva_coas_code,farinva_prog_code,4),1,6),
substr(f_prog_hier2_fnc(farinva_coas_code,farinva_prog_code,4),1,35),
substr(f_prog_hier3_fnc(farinva_coas_code,farinva_prog_code,4),1,1),
substr(f_prog_hier1_fnc(farinva_coas_code,farinva_prog_code,5),1,6),
substr(f_prog_hier2_fnc(farinva_coas_code,farinva_prog_code,5),1,35),
substr(f_prog_hier3_fnc(farinva_coas_code,farinva_prog_code,5),1,1),
farinva_actv_code,
substr(f_actv_title(farinva_coas_code,farinva_actv_code),1,35),
substr(f_actv_status_ind(farinva_coas_code,farinva_actv_code),1,1),
substr(f_locn_hier1_fnc(farinva_coas_code,farinva_locn_code,1),1,6),
substr(f_locn_hier2_fnc(farinva_coas_code,farinva_locn_code,1),1,35),
substr(f_locn_hier3_fnc(farinva_coas_code,farinva_locn_code,1),1,1),
substr(f_locn_hier1_fnc(farinva_coas_code,farinva_locn_code,2),1,6),
substr(f_locn_hier2_fnc(farinva_coas_code,farinva_locn_code,2),1,35),
substr(f_locn_hier3_fnc(farinva_coas_code,farinva_locn_code,2),1,1),
substr(f_locn_hier1_fnc(farinva_coas_code,farinva_locn_code,3),1,6),
substr(f_locn_hier2_fnc(farinva_coas_code,farinva_locn_code,3),1,35),
substr(f_locn_hier3_fnc(farinva_coas_code,farinva_locn_code,3),1,1),
substr(f_locn_hier1_fnc(farinva_coas_code,farinva_locn_code,4),1,6),
substr(f_locn_hier2_fnc(farinva_coas_code,farinva_locn_code,4),1,35),
substr(f_locn_hier3_fnc(farinva_coas_code,farinva_locn_code,4),1,1),
substr(f_locn_hier1_fnc(farinva_coas_code,farinva_locn_code,5),1,6),
substr(f_locn_hier2_fnc(farinva_coas_code,farinva_locn_code,5),1,35),
substr(f_locn_hier3_fnc(farinva_coas_code,farinva_locn_code,5),1,1),
ftvfund_grnt_code,
substr(frkiden.f_get_frbgrnt_title(ftvfund_grnt_code),1,35),
substr(frkiden.f_get_frbgrnt_status_code(ftvfund_grnt_code),1,2),
farinva_bank_code,
substr(frkiden.f_get_spriden_last_name(gxvbank_bank_code_pidm),1,60),
gxvbank_acct_name,farinva_appr_amt,
farinva_addl_chrg_amt,farinva_tax_amt,farinva_disc_amt,
decode(fabinvh_cr_memo_ind,'Y',
((nvl(farinva_appr_amt,0)+nvl(farinva_addl_chrg_amt,0)+nvl(farinva_tax_amt,0)
-nvl(farinva_disc_amt,0))* -1),
(nvl(farinva_appr_amt,0)+nvl(farinva_addl_chrg_amt,0)+nvl(farinva_tax_amt,0)
-nvl(farinva_disc_amt,0))),
fabinvh_curr_code,farinva_convert_amt,farinva_convert_disc_amt,
farinva_convert_tax_amt,farinva_convert_addl_chrg_amt
from favvic1,farinva,fabinvh,
ftvcoas,ftvfund y,ftvacct e,
gxvbank
where ((ftvcoas_eff_date <= sysdate) or ftvcoas_eff_date is null)
  and ((ftvcoas_nchg_date > sysdate) or ftvcoas_nchg_date is null)
  and farinva_coas_code=ftvcoas_coas_code(+)
  and farinva_coas_code=y.ftvfund_coas_code(+)
  and farinva_fund_code=y.ftvfund_fund_code(+)
  and farinva_coas_code=e.ftvacct_coas_code(+)
  and e.ftvacct_acct_code(+)=farinva_acct_code
  and ((e.ftvacct_eff_date <= sysdate) or ftvacct_eff_date is null)
  and ((e.ftvacct_nchg_date > sysdate) or ftvacct_nchg_date is null)
  and ((y.ftvfund_eff_date <= sysdate) or ftvfund_eff_date is null)
  and ((y.ftvfund_nchg_date > sysdate) or ftvfund_nchg_date is null)
  and fabinvh_code=farinva_invh_code(+)
  and fabinvh_code = favvic1_invh_code
  and ((gxvbank_eff_date <= sysdate) or gxvbank_eff_date is null)
  and ((gxvbank_nchg_date > sysdate) or gxvbank_nchg_date is null)
  and gxvbank_bank_code(+)=farinva_bank_code"
"BANINST1","AF_ACCOUNT_DETAIL_VIEW","Research Accounting Account Detail Information view.","SELECT FRBGBIL_PMSC_CODE,
         TRRACCD_GRNT_CODE,
         TRRACCD_TRAN_NUMBER,
         TRRACCD_FUND_CODE,
         TRRACCD_DETAIL_CODE,
         TRRACCD_TRANS_DATE,
         TRRACCD_AMOUNT,
         TRRACCD_BALANCE,
         TRRACCD_ACTUAL_COST_AMT,
         TRRACCD_WITHHOLDING_AMT,
         TRRACCD_BILL_DATE,
         TRRACCD_BILL_INV_SEQ_NO,
         TRRACCD_BILL_INV_ADJ_NO,
         TRRACCD_PAID_INV_SEQ_NO,
         TRRACCD_PAID_INV_ADJ_NO,
         TRRACCD_TRAN_NUMBER_PAID,
         FRBEVNG_BFRM_CODE,
         FRBEVNG_PMT_METHOD_TYPE_IND,
         FRBGRNT_AGENCY_PIDM,
         FRBGRNT_TITLE
    FROM TRRACCD X, FRBEVNG Y, FRBGRNT, FRBGBIL
   WHERE EXISTS (SELECT 'x'
                   FROM FRVEVNT
                  WHERE Y.FRBEVNG_EVNT_CODE = FRVEVNT_CODE
                    AND FRVEVNT_TYPE_IND = 'B')
     AND FRBEVNG_GRNT_CODE = TRRACCD_GRNT_CODE
     AND FRBGBIL_GRNT_CODE = FRBEVNG_GRNT_CODE
     AND FRBGRNT_CODE = FRBGBIL_GRNT_CODE
 "
"BANINST1","AFVCTMO","This view will sum non matching gift soft credit by campaign type and
 fiscal year per pidm","(select agvgmem_memo_pidm, afbcamp_cmtp_code, agvgmem_fisc_code,
        sum(agvgmem_credit)
 from agvgmem, afbcamp
 where agvgmem_campaign = afbcamp_campaign
 and not exists
 (select 'x' from agrmgif
  where agrmgif_empr_gift_no = agvgmem_gift_no
  and   agrmgif_empr_pidm    = agvgmem_pidm)
group by agvgmem_memo_pidm, afbcamp_cmtp_code, agvgmem_fisc_code)"
"BANINST1","AFVCTMG","This view will sum matching gift credit for a pidm by campaign type and
 fiscal year","(select agvgmem_memo_pidm, afbcamp_cmtp_code, agvgmem_fisc_code,
        sum(agvgmem_credit)
 from agvgmem, afbcamp
 where agvgmem_campaign = afbcamp_campaign
 and exists
 (select 'x' from agrmgif
  where agrmgif_empr_gift_no = agvgmem_gift_no
  and   agrmgif_empr_pidm    = agvgmem_pidm)
group by agvgmem_memo_pidm, afbcamp_cmtp_code, agvgmem_fisc_code)
 "
"BANINST1","AFVCTFY","This view will sum giving credit for a pidm by campaign type and fiscal year","select aprchis_pidm, afbcamp_cmtp_code, aprchis_fisc_code,
    sum(aprchis_amt_pledged), sum(aprchis_amt_pledged_paid),
    sum(aprchis_amt_gift),sum(aprchis_amt_gift)+sum(aprchis_amt_pledged_paid),
    sum(aprchis_amt_memo),
    sum(aprchis_amt_gift)+sum(aprchis_amt_pledged_paid)+sum(aprchis_amt_memo)
from afbcamp, aprchis
where aprchis_campaign = afbcamp_campaign
group by aprchis_pidm,  afbcamp_cmtp_code, aprchis_fisc_code"
"BANINST1","AFVCMP1","","select
spriden_id,
aprchis_pidm,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
apbcons_nickname,
apbcons_cm_name,
apbcons_maiden_last_name,
apbcons_addr_name,
apbcons_atyp_code_pref,
spriden_entity_ind,
spbpers_dead_ind,
spbpers_dead_date,
apbcons_coll_code_pref,
apbcons_pref_clas,
substr(f_lost_al_ind(aprchis_pidm),1,1),
k.atvdonr_code,
k.atvdonr_alum_ind,
l.atvdonr_code,
l.atvdonr_alum_ind,
m.atvdonr_code,
m.atvdonr_alum_ind,
n.atvdonr_code,
n.atvdonr_alum_ind,
substr(f_check_for_more('DONOR', aprchis_pidm),1,1),
aprchis_fisc_code,
aprchis_campaign,
afbcamp_name,
f_campaign_giving(aprchis_pidm,aprchis_fisc_code,aprchis_campaign),
aprchis_amt_pledged,
aprchis_amt_gift,
aprchis_amt_pledged_paid,
f_campaign_matching_gift(aprchis_pidm,aprchis_fisc_code,aprchis_campaign),
f_campaign_memo_credit(aprchis_pidm,aprchis_fisc_code,aprchis_campaign),
afbcamp_cmtp_code,
a.aprexcl_excl_code,
a.aprexcl_date,
b.aprexcl_excl_code,
b.aprexcl_date,
c.aprexcl_excl_code,
c.aprexcl_date,
substr(f_check_for_more('EXCLUSION', aprchis_pidm), 1, 1),
substr(f_spouse_info(aprchis_pidm), 1, 290),
f_campaign_giving(aprcsps_sps_pidm,aprchis_fisc_code,aprchis_campaign),
substr(f_spouse_camp_giving_info(aprcsps_sps_pidm,aprchis_fisc_code,
                            aprchis_campaign),1,45),
f_campaign_matching_gift(aprcsps_sps_pidm,aprchis_fisc_code,aprchis_campaign),
f_campaign_memo_credit(aprcsps_sps_pidm,aprchis_fisc_code,aprchis_campaign),
d.aprexcl_excl_code,
d.aprexcl_date,
e.aprexcl_excl_code,
e.aprexcl_date,
f.aprexcl_excl_code,
f.aprexcl_date,
substr(f_check_for_more('EXCLUSION', aprcsps_sps_pidm), 1, 1)
from aprexcl a, aprexcl b, aprexcl c,
     aprexcl d, aprexcl e, aprexcl f,
     atvdonr k, atvdonr l, atvdonr m, atvdonr n,
     apbcons, aprcsps, afbcamp,
     spbpers, spriden, aprchis
where apbcons_pidm(+)= aprchis_pidm
  and aprcsps_mars_ind(+) = 'A'
  and aprcsps_pidm(+)= aprchis_pidm
  and afbcamp_campaign = aprchis_campaign
  and spbpers_pidm(+)= aprchis_pidm
  and spriden_change_ind is null
  and spriden_pidm = aprchis_pidm
  and a.rowid(+) = f_camp_exclusion_code_info(aprchis_pidm,1)
  and b.rowid(+) = f_camp_exclusion_code_info(aprchis_pidm,2)
  and c.rowid(+) = f_camp_exclusion_code_info(aprchis_pidm,3)
  and d.rowid(+) = f_camp_exclusion_code_info(aprcsps_sps_pidm,1)
  and e.rowid(+) = f_camp_exclusion_code_info(aprcsps_sps_pidm,2)
  and f.rowid(+) = f_camp_exclusion_code_info(aprcsps_sps_pidm,3)
  and k.rowid(+) = f_donor_categoryes(aprchis_pidm,1)
  and l.rowid(+) = f_donor_categoryes(aprchis_pidm,2)
  and m.rowid(+) = f_donor_categoryes(aprchis_pidm,3)
  and n.rowid(+) = f_donor_categoryes(aprchis_pidm,4)"
"BANINST1","AFVCAMO","View to sum non matching gift credit by campaign by fiscal year by pidm","(select agvgmem_memo_pidm, afbcamp_campaign, agvgmem_fisc_code,
        sum(agvgmem_credit)
 from agvgmem, afbcamp
 where agvgmem_campaign =  afbcamp_campaign
 and not exists
 (select 'x' from agrmgif
  where agrmgif_empr_gift_no = agvgmem_gift_no
  and   agrmgif_empr_pidm    = agvgmem_pidm)
group by agvgmem_memo_pidm, afbcamp_campaign, agvgmem_fisc_code)"
"BANINST1","AFVCAMG","This view will sum matching gift credit for a campaign per fiscal year
 and per pidm","(select agvgmem_memo_pidm, afbcamp_campaign, agvgmem_fisc_code,
        sum(agvgmem_credit)
 from agvgmem, afbcamp
 where agvgmem_campaign = afbcamp_campaign
 and exists
 (select 'x' from agrmgif
  where agrmgif_empr_gift_no = agvgmem_gift_no
  and   agrmgif_empr_pidm    = agvgmem_pidm)
group by agvgmem_memo_pidm, afbcamp_campaign, agvgmem_fisc_code)
 "
"BANINST1","ADVDSG1","","select
spriden_id,
aprdhis_pidm,
spbpers_ssn,
spriden_surname_prefix,
spriden_last_name,
spriden_first_name,
spriden_mi,
substr(spriden_mi,1,1),
spbpers_name_prefix,
spbpers_name_suffix,
apbcons_nickname,
apbcons_cm_name,
apbcons_maiden_last_name,
apbcons_addr_name,
apbcons_atyp_code_pref,
spriden_entity_ind,
spbpers_dead_ind,
spbpers_dead_date,
apbcons_coll_code_pref,
apbcons_pref_clas,
substr(f_lost_al_ind(aprdhis_pidm),1,1),
k.atvdonr_code,
k.atvdonr_alum_ind,
l.atvdonr_code,
l.atvdonr_alum_ind,
m.atvdonr_code,
m.atvdonr_alum_ind,
n.atvdonr_code,
n.atvdonr_alum_ind,
substr(f_check_for_more('DONOR', aprdhis_pidm),1,1),
aprdhis_fisc_code,
aprdhis_desg,
adbdesg_name,
f_designation_giving(aprdhis_pidm,aprdhis_fisc_code,aprdhis_desg),
aprdhis_amt_pledged,
aprdhis_amt_gift,
aprdhis_amt_pledged_paid,
f_designation_matching_gift(aprdhis_pidm,aprdhis_fisc_code,aprdhis_desg),
f_designation_memo_credit(aprdhis_pidm,aprdhis_fisc_code,aprdhis_desg),
adbdesg_coll_code,
adbdesg_cfae_code,
adbdesg_dstp_code,
a.aprexcl_excl_code,
a.aprexcl_date,
b.aprexcl_excl_code,
b.aprexcl_date,
c.aprexcl_excl_code,
c.aprexcl_date,
substr(f_check_for_more('EXCLUSION', aprdhis_pidm), 1, 1),
substr(f_spouse_info(aprdhis_pidm), 1, 230),
f_designation_giving(aprcsps_sps_pidm,aprdhis_fisc_code,aprdhis_desg),
substr(f_spouse_desg_giving_info(aprcsps_sps_pidm,aprdhis_fisc_code,
                            aprdhis_desg),1,45),
f_designation_matching_gift(aprcsps_sps_pidm,aprdhis_fisc_code,aprdhis_desg),
f_designation_memo_credit(aprcsps_sps_pidm,aprdhis_fisc_code,aprdhis_desg),
d.aprexcl_excl_code,
d.aprexcl_date,
e.aprexcl_excl_code,
e.aprexcl_date,
f.aprexcl_excl_code,
f.aprexcl_date,
substr(f_check_for_more('EXCLUSION', aprcsps_sps_pidm), 1, 1)
from aprexcl a, aprexcl b, aprexcl c,
     aprexcl d, aprexcl e, aprexcl f,
     atvdonr k, atvdonr l, atvdonr m, atvdonr n,
     apbcons, aprcsps, adbdesg,
     spbpers, spriden, aprdhis
where apbcons_pidm(+)= aprdhis_pidm
  and aprcsps_mars_ind(+) = 'A'
  and aprcsps_pidm(+)= aprdhis_pidm
  and adbdesg_desg = aprdhis_desg
  and spbpers_pidm(+)= aprdhis_pidm
  and spriden_change_ind is null
  and spriden_pidm = aprdhis_pidm
  and a.rowid(+) = f_desg_exclusion_code_info(aprdhis_pidm,1)
  and b.rowid(+) = f_desg_exclusion_code_info(aprdhis_pidm,2)
  and c.rowid(+) = f_desg_exclusion_code_info(aprdhis_pidm,3)
  and d.rowid(+) = f_desg_exclusion_code_info(aprcsps_sps_pidm,1)
  and e.rowid(+) = f_desg_exclusion_code_info(aprcsps_sps_pidm,2)
  and f.rowid(+) = f_desg_exclusion_code_info(aprcsps_sps_pidm,3)
  and k.rowid(+) = f_donor_categoryes(aprdhis_pidm,1)
  and l.rowid(+) = f_donor_categoryes(aprdhis_pidm,2)
  and m.rowid(+) = f_donor_categoryes(aprdhis_pidm,3)
  and n.rowid(+) = f_donor_categoryes(aprdhis_pidm,4)"
"BANINST1","ADVAWRD","","SELECT RPRATRM_TERM_CODE,
ADRFUND_DESG,
ADBDESG_NAME,
SPRIDEN_ID,
DECODE(SPRIDEN_ENTITY_IND, 'C', '', 'P', DECODE(
SPRIDEN_SURNAME_PREFIX ,'','',SPRIDEN_SURNAME_PREFIX || ' ')) ||
SPRIDEN_LAST_NAME || DECODE(
SPRIDEN_ENTITY_IND, 'C', '', 'P', ', ', '') ||
SPRIDEN_FIRST_NAME || ' ' || SPRIDEN_MI,
RPRATRM_FUND_CODE,
RPRATRM_OFFER_AMT,
RPRATRM_ACCEPT_AMT,
RPRATRM_PAID_AMT,
RPRATRM_PIDM
FROM SPRIDEN, RPRATRM, RPRAWRD, ADBDESG, ADRFUND
WHERE RPRATRM_FUND_CODE = ADRFUND_FA_FUND_CODE
AND ADBDESG_DESG = ADRFUND_DESG
AND RPRATRM_PIDM = SPRIDEN_PIDM
AND SPRIDEN_CHANGE_IND IS NULL
AND rprawrd_pidm      = rpratrm_pidm
AND rprawrd_fund_code = ADRFUND_FA_FUND_CODE
AND rprawrd_aidy_code = RPRATRM_AIDY_CODE
AND rprawrd_fund_code = RPRATRM_FUND_CODE"
"BANINST1","AA_PROSPECT","","select
amvprs1_pidm,
amvprs1_entity_ind,
amvprs1_extern_source_code_1,
substr(decode(amvprs1_extern_source_code_1,null,null,f_get_desc_alumni
   ('ATVEXRS', amvprs1_extern_source_code_1,30)),1,30),
amvprs1_extern_source_score_1,
amvprs1_extern_source_value_1,
amvprs1_extern_source_level_1,
amvprs1_extern_source_code_2,
substr(decode(amvprs1_extern_source_code_2,null,null,f_get_desc_alumni
   ('ATVEXRS', amvprs1_extern_source_code_2,30)),1,30),
amvprs1_extern_source_score_2,
amvprs1_extern_source_value_2,
amvprs1_extern_source_level_2,
amvprs1_extern_source_code_3,
substr(decode(amvprs1_extern_source_code_3,null,null,f_get_desc_alumni
   ('ATVEXRS', amvprs1_extern_source_code_3,30)),1,30),
amvprs1_extern_source_score_3,
amvprs1_extern_source_value_3,
amvprs1_extern_source_level_3,
amvprs1_add_exter_source_flag,
amvprs1_refr_code,
substr(decode(amvprs1_refr_code,null,null,f_get_desc_alumni
   ('ATVREFR', amvprs1_refr_code,30)),1,30),
amvprs1_prst_code,
substr(decode(amvprs1_prst_code,null,null,f_get_desc_alumni
-- Begin Defect 80969
--   ('ATVREFR', amvprs1_prst_code,30)),1,30),
   ('ATVPRST', amvprs1_prst_code,30)),1,30),
-- End Defect 80969
amvprs1_target_ask_amt,
amvprs1_rating_type_1,
substr(decode(amvprs1_rating_type_1,null,null,f_get_desc_alumni
   ('ATVRTGT', amvprs1_rating_type_1,30)),1,30),
amvprs1_rating_code_1,
substr(decode(amvprs1_rating_code_1,null,null,f_get_desc_alumni
   ('ATVRATE', amvprs1_rating_code_1,30)),1,30),
amvprs1_rate_screen_1,
substr(decode(amvprs1_rate_screen_1,null,null,f_get_desc_alumni
   ('ATVRSCR', amvprs1_rate_screen_1,30)),1,30),
amvprs1_rater_1,
amvprs1_rater_desc_1,
amvprs1_rating_type_2,
substr(decode(amvprs1_rating_type_2,null,null,f_get_desc_alumni
   ('ATVRTGT', amvprs1_rating_type_2,30)),1,30),
amvprs1_rating_code_2,
substr(decode(amvprs1_rating_code_2,null,null,f_get_desc_alumni
   ('ATVRATE', amvprs1_rating_code_2,30)),1,30),
amvprs1_rate_screen_2,
substr(decode(amvprs1_rate_screen_2,null,null,f_get_desc_alumni
   ('ATVRSCR', amvprs1_rate_screen_2,30)),1,30),
amvprs1_rater_2,
amvprs1_rater_desc_2,
amvprs1_rating_type_3,
substr(decode(amvprs1_rating_type_3,null,null,f_get_desc_alumni
   ('ATVRTGT', amvprs1_rating_type_3,30)),1,30),
amvprs1_rating_code_3,
substr(decode(amvprs1_rating_code_3,null,null,f_get_desc_alumni
   ('ATVRATE', amvprs1_rating_code_3,30)),1,30),
amvprs1_rate_screen_3,
substr(decode(amvprs1_rate_screen_3,null,null,f_get_desc_alumni
   ('ATVRSCR', amvprs1_rate_screen_3,30)),1,30),
amvprs1_rater_3,
amvprs1_rater_desc_3,
amvprs1_rating_type_4,
substr(decode(amvprs1_rating_type_4,null,null,f_get_desc_alumni
   ('ATVRTGT', amvprs1_rating_type_4,30)),1,30),
amvprs1_rating_code_4,
substr(decode(amvprs1_rating_code_4,null,null,f_get_desc_alumni
   ('ATVRATE', amvprs1_rating_code_4,30)),1,30),
amvprs1_rate_screen_4,
substr(decode(amvprs1_rate_screen_4,null,null,f_get_desc_alumni
   ('ATVRSCR', amvprs1_rate_screen_4,30)),1,30),
amvprs1_rater_4,
amvprs1_rater_desc_4,
amvprs1_rating_type_5,
substr(decode(amvprs1_rating_type_5,null,null,f_get_desc_alumni
   ('ATVRTGT', amvprs1_rating_type_5,30)),1,30),
amvprs1_rating_code_5,
substr(decode(amvprs1_rating_code_5,null,null,f_get_desc_alumni
   ('ATVRATE', amvprs1_rating_code_5,30)),1,30),
amvprs1_rate_screen_5,
substr(decode(amvprs1_rate_screen_5,null,null,f_get_desc_alumni
   ('ATVRSCR', amvprs1_rate_screen_5,30)),1,30),
amvprs1_rater_5,
amvprs1_rater_desc_5,
amvprs1_add_rating_flag,
amvprs1_prim_assign_ind,
amvprs1_prim_staf_assig_type,
substr(decode(amvprs1_prim_staf_assig_type,null,null,f_get_desc_alumni
   ('ATVSTFT', amvprs1_prim_staf_assig_type,30)),1,30),
amvprs1_prim_staf_assig_code,
amvprs1_prim_staf_assig_desc,
amvprs1_oth_staf_assig_type_1,
substr(decode(amvprs1_oth_staf_assig_type_1,null,null,f_get_desc_alumni
   ('ATVSTFT', amvprs1_oth_staf_assig_type_1,30)),1,30),
amvprs1_oth_staf_assig_code_1,
amvprs1_oth_staf_assig_desc_1,
amvprs1_oth_staf_assig_type_2,
substr(decode(amvprs1_oth_staf_assig_type_2,null,null,f_get_desc_alumni
   ('ATVSTFT', amvprs1_oth_staf_assig_type_2,30)),1,30),
amvprs1_oth_staf_assig_code_2,
amvprs1_oth_staf_assig_desc_2,
amvprs1_oth_staf_assig_type_3,
substr(decode(amvprs1_oth_staf_assig_type_3,null,null,f_get_desc_alumni
   ('ATVSTFT', amvprs1_oth_staf_assig_type_3,30)),1,30),
amvprs1_oth_staf_assig_code_3,
amvprs1_oth_staf_assig_desc_3,
amvprs1_oth_staf_assig_type_4,
substr(decode(amvprs1_oth_staf_assig_type_4,null,null,f_get_desc_alumni
   ('ATVSTFT', amvprs1_oth_staf_assig_type_4,30)),1,30),
amvprs1_oth_staf_assig_code_4,
amvprs1_oth_staf_assig_desc_4,
amvprs1_add_staf_assig_flag,
amvprs1_project_code_1,
substr(decode(amvprs1_project_code_1,null,null,f_get_desc_alumni
   ('ATVPROJ', amvprs1_project_code_1,30)),1,30),
amvprs1_giving_vehicle_1,
substr(decode(amvprs1_giving_vehicle_1,null,null,f_get_desc_alumni
   ('ATVGIVH', amvprs1_giving_vehicle_1,30)),1,30),
amvprs1_project_code_2,
substr(decode(amvprs1_project_code_2,null,null,f_get_desc_alumni
   ('ATVPROJ', amvprs1_project_code_2,30)),1,30),
amvprs1_giving_vehicle_2,
substr(decode(amvprs1_giving_vehicle_2,null,null,f_get_desc_alumni
   ('ATVGIVH', amvprs1_giving_vehicle_2,30)),1,30),
amvprs1_project_code_3,
substr(decode(amvprs1_project_code_3,null,null,f_get_desc_alumni
   ('ATVPROJ', amvprs1_project_code_3,30)),1,30),
amvprs1_giving_vehicle_3,
substr(decode(amvprs1_giving_vehicle_3,null,null,f_get_desc_alumni
   ('ATVGIVH', amvprs1_giving_vehicle_3,30)),1,30),
amvprs1_project_code_4,
substr(decode(amvprs1_project_code_4,null,null,f_get_desc_alumni
   ('ATVPROJ', amvprs1_project_code_4,30)),1,30),
amvprs1_giving_vehicle_4,
substr(decode(amvprs1_giving_vehicle_4,null,null,f_get_desc_alumni
   ('ATVGIVH', amvprs1_giving_vehicle_4,30)),1,30),
amvprs1_project_code_5,
substr(decode(amvprs1_project_code_5,null,null,f_get_desc_alumni
   ('ATVPROJ', amvprs1_project_code_5,30)),1,30),
amvprs1_giving_vehicle_5,
substr(decode(amvprs1_giving_vehicle_5,null,null,f_get_desc_alumni
   ('ATVGIVH', amvprs1_giving_vehicle_5,30)),1,30),
amvprs1_add_project_flag,
amvprs1_originator_code_1,
amvprs1_originator_desc_1,
amvprs1_contact_date_1,
amvprs1_contact_text_1,
amvprs1_move_code_1,
amvprs1_asking_amount_1,
amvprs1_next_action_1,
amvprs1_next_action_date_1,
amvprs1_next_action_code_1,
amvprs1_next_action_desc_1,
amvprs1_contact_project_code_1,
substr(decode(amvprs1_contact_project_code_1,null,null,f_get_desc_alumni
   ('ATVPROJ', amvprs1_contact_project_code_1,30)),1,30),
amvprs1_item_refer_number_1,
amvprs1_originator_code_2,
amvprs1_originator_desc_2,
amvprs1_contact_date_2,
amvprs1_contact_text_2,
amvprs1_move_code_2,
amvprs1_asking_amount_2,
amvprs1_next_action_2,
amvprs1_next_action_date_2,
amvprs1_next_action_code_2,
amvprs1_next_action_desc_2,
amvprs1_contact_project_code_2,
substr(decode(amvprs1_contact_project_code_2,null,null,f_get_desc_alumni
   ('ATVPROJ', amvprs1_contact_project_code_2,30)),1,30),
amvprs1_item_refer_number_2,
amvprs1_originator_code_3,
amvprs1_originator_desc_3,
amvprs1_contact_date_3,
amvprs1_contact_text_3,
amvprs1_move_code_3,
amvprs1_asking_amount_3,
amvprs1_next_action_3,
amvprs1_next_action_date_3,
amvprs1_next_action_code_3,
amvprs1_next_action_desc_3,
amvprs1_contact_project_code_3,
substr(decode(amvprs1_contact_project_code_3,null,null,f_get_desc_alumni
   ('ATVPROJ', amvprs1_contact_project_code_3,30)),1,30),
amvprs1_item_refer_number_3,
/* Begin OBUG SCG */
amvprs1_add_contact_flag,
amvprs1_stat_date,
amvprs1_stat_iden_code,
amvprs1_user_id
/* End OBUG SCG */
from amvprs1"
"BANINST1","AA_PLEDGE_DETAIL","","select
agvpld1_pidm,
agvpld1_pledge_no,
agvpld1_campaign,
agvpld1_campaign_name,
agvpld1_designation,
agvpld1_designation_name,
agvpld1_entity_ind,
agvpld1_lost_alumnus_ind,
agvpld1_id,
agvpld1_ssn,
agvpld1_surname_prefix,
agvpld1_last_name,
agvpld1_first_name,
agvpld1_middle_name,
agvpld1_middle_initial,
agvpld1_name_prefix,
agvpld1_name_suffix,
agvpld1_nickname,
agvpld1_combined_mail_name,
agvpld1_birth_maiden_name,
agvpld1_pref_address_name,
agvpld1_pref_address_type,
agvpld1_deceased_ind,
agvpld1_deceased_date,
agvpld1_pref_coll,
agvpld1_pref_class,
agvpld1_pref_donor_cat,
substr(decode(agvpld1_pref_donor_cat,null,null,f_get_desc_alumni
   ('ATVDONR', agvpld1_pref_donor_cat,30)),1,30),
agvpld1_pref_alum_ind,
agvpld1_other_donor_cat_1,
substr(decode(agvpld1_other_donor_cat_1,null,null,f_get_desc_alumni
   ('ATVDONR', agvpld1_other_donor_cat_1,30)),1,30),
agvpld1_other_alum_ind_1,
agvpld1_other_donor_cat_2,
substr(decode(agvpld1_other_donor_cat_2,null,null,f_get_desc_alumni
   ('ATVDONR', agvpld1_other_donor_cat_2,30)),1,30),
agvpld1_other_alum_ind_2,
agvpld1_other_donor_cat_3,
substr(decode(agvpld1_other_donor_cat_3,null,null,f_get_desc_alumni
   ('ATVDONR', agvpld1_other_donor_cat_3,30)),1,30),
agvpld1_other_alum_ind_3,
agvpld1_add_donor_cat_flag,
agvpld1_campaign_type,
substr(decode(agvpld1_campaign_type,null,null,f_get_desc_alumni
   ('ATVCMTP', agvpld1_campaign_type,30)),1,30),
agvpld1_pledge_amt,
agvpld1_pledge_credit_amt,
agvpld1_pledge_amt_paid,
agvpld1_pledge_date,
agvpld1_pledge_year,
agvpld1_pledge_type,
substr(decode(agvpld1_pledge_type,null,null,f_get_desc_alumni
   ('ATVPLDG', agvpld1_pledge_type,30)),1,30),
agvpld1_pledge_class,
substr(decode(agvpld1_pledge_class,null,null,f_get_desc_alumni
   ('ATVPCLS', agvpld1_pledge_class,30)),1,30),
agvpld1_pledge_class_2,
substr(decode(agvpld1_pledge_class_2,null,null,f_get_desc_alumni
   ('ATVPCLS', agvpld1_pledge_class_2,30)),1,30),
agvpld1_pledge_class_3,
substr(decode(agvpld1_pledge_class_3,null,null,f_get_desc_alumni
   ('ATVPCLS', agvpld1_pledge_class_3,30)),1,30),
agvpld1_pledge_status,
substr(decode(agvpld1_pledge_status,null,null,f_get_desc_alumni
   ('ATVPSTA', agvpld1_pledge_status,30)),1,30),
agvpld1_pledge_vehicle,
substr(decode(agvpld1_pledge_vehicle,null,null,f_get_desc_alumni
   ('ATVPGVE', agvpld1_pledge_vehicle,30)),1,30),
agvpld1_fin_db_act_no,
agvpld1_fin_rule_class_code,
agvpld1_pledge_cfae_catg,
agvpld1_designation_type,
substr(decode(agvpld1_designation_type,null,null,f_get_desc_alumni
   ('ATVDSTP', agvpld1_designation_type,30)),1,30),
agvpld1_desg_coll_code,
substr(decode(agvpld1_desg_coll_code,null,null,f_get_desc_alumni
   ('STVCOLL', agvpld1_desg_coll_code,30)),1,30),
agvpld1_education_code,
substr(decode(agvpld1_education_code,null,null,f_get_desc_alumni
   ('ATVCFAE', agvpld1_education_code,30)),1,30),
agvpld1_fin_gener_ledger_no,
agvpld1_chart_act_code,
agvpld1_act_index_code,
agvpld1_fund_code,
agvpld1_orgn_code,
agvpld1_acount_code,
agvpld1_program_code,
agvpld1_activity_code,
agvpld1_location_code,
agvpld1_pledge_sol_type,
substr(decode(agvpld1_pledge_sol_type,null,null,f_get_desc_alumni
   ('ATVSOLC', agvpld1_pledge_sol_type,30)),1,30),
agvpld1_pledge_sol_orgn,
agvpld1_pledge_sol_pidm,
agvpld1_pledge_sol_id,
agvpld1_pledge_sol_sname_prfx,
agvpld1_pledge_sol_last_name,
agvpld1_pledge_sol_first_name,
agvpld1_sol_amt,
agvpld1_more_sol
from agvpld1"
"BANINST1","AA_ORGANIZATION","","select
aovorg1_orgn_pidm,
aovorg1_orgn_donor_ind,
aovorg1_orgn_prospect_ind,
aovorg1_orgn_id_number,
aovorg1_orgn_name,
aovorg1_industry_code,
substr(decode(aovorg1_industry_code,null,null,f_get_desc_alumni
   ('ATVSICC',aovorg1_industry_code,30)),1,30),
aovorg1_addr_type_1,
substr(decode(aovorg1_addr_type_1,null,null,f_get_desc_alumni
   ('STVATYP',aovorg1_addr_type_1,30)),1,30),
aovorg1_house_number_1,
aovorg1_street_line1_1,
aovorg1_street_line2_1,
aovorg1_street_line3_1,
aovorg1_street_line4_1,
aovorg1_city_1,
aovorg1_state_1,
aovorg1_zip_1,
aovorg1_county_1,
substr(decode(aovorg1_county_1,null,null,f_get_desc_alumni
   ('STVCNTY',aovorg1_county_1,30)),1,30),
aovorg1_nation_1,
substr(decode(aovorg1_nation_1,null,null,f_get_desc_alumni
   ('STVNATN',aovorg1_nation_1,30)),1,30),
aovorg1_geogr_region_1,
substr(decode(aovorg1_geogr_region_1,null,null,f_get_desc_alumni
   ('STVGEOR',aovorg1_geogr_region_1,30)),1,30),
aovorg1_deliv_point_1,
aovorg1_correct_digit_1,
aovorg1_carrier_route_1,
aovorg1_addr_start_date_1,
aovorg1_addr_end_date_1,
aovorg1_addr_status_ind_1,
aovorg1_addr_phone_number_1,
aovorg1_addr_phone_area_1,
aovorg1_addr_phone_ext_1,
aovorg1_addr_ctry_code_phone_1,
aovorg1_addr_type_2,
substr(decode(aovorg1_addr_type_2,null,null,f_get_desc_alumni
   ('STVATYP',aovorg1_addr_type_2,30)),1,30),
aovorg1_house_number_2,
aovorg1_street_line1_2,
aovorg1_street_line2_2,
aovorg1_street_line3_2,
aovorg1_street_line4_2,
aovorg1_city_2,
aovorg1_state_2,
aovorg1_zip_2,
aovorg1_county_2,
substr(decode(aovorg1_county_2,null,null,f_get_desc_alumni
   ('STVCNTY',aovorg1_county_2,30)),1,30),
aovorg1_nation_2,
substr(decode(aovorg1_nation_2,null,null,f_get_desc_alumni
   ('STVNATN',aovorg1_nation_2,30)),1,30),
aovorg1_geogr_region_2,
substr(decode(aovorg1_geogr_region_2,null,null,f_get_desc_alumni
   ('STVGEOR',aovorg1_geogr_region_2,30)),1,30),
aovorg1_deliv_point_2,
aovorg1_correct_digit_2,
aovorg1_carrier_route_2,
aovorg1_addr_start_date_2,
aovorg1_addr_end_date_2,
aovorg1_addr_status_ind_2,
aovorg1_addr_phone_number_2,
aovorg1_addr_phone_area_2,
aovorg1_addr_phone_ext_2,
aovorg1_addr_ctry_code_phone_2,
aovorg1_phone_type_code_1,
substr(decode(aovorg1_phone_type_code_1,null,null,f_get_desc_alumni
   ('STVTELE',aovorg1_phone_type_code_1,30)),1,30),
aovorg1_phone_number_1,
aovorg1_phone_area_1,
aovorg1_phone_ext_1,
aovorg1_ctry_code_phone_1,
aovorg1_phone_type_code_2,
substr(decode(aovorg1_phone_type_code_2,null,null,f_get_desc_alumni
   ('STVTELE',aovorg1_phone_type_code_2,30)),1,30),
aovorg1_phone_number_2,
aovorg1_phone_area_2,
aovorg1_phone_ext_2,
aovorg1_ctry_code_phone_2,
aovorg1_phone_type_code_3,
substr(decode(aovorg1_phone_type_code_3,null,null,f_get_desc_alumni
   ('STVTELE',aovorg1_phone_type_code_3,30)),1,30),
aovorg1_phone_number_3,
aovorg1_phone_area_3,
aovorg1_phone_ext_3,
aovorg1_ctry_code_phone_3,
aovorg1_add_phone_flag,
aovorg1_pref_donor_cat,
substr(decode(aovorg1_pref_donor_cat,null,null,f_get_desc_alumni
   ('ATVDONR',aovorg1_pref_donor_cat,30)),1,30),
aovorg1_other_donor_cat_1,
substr(decode(aovorg1_other_donor_cat_1,null,null,f_get_desc_alumni
   ('ATVDONR',aovorg1_other_donor_cat_1,30)),1,30),
aovorg1_other_donor_cat_2,
substr(decode(aovorg1_other_donor_cat_2,null,null,f_get_desc_alumni
   ('ATVDONR',aovorg1_other_donor_cat_2,30)),1,30),
aovorg1_other_donor_cat_3,
substr(decode(aovorg1_other_donor_cat_3,null,null,f_get_desc_alumni
   ('ATVDONR',aovorg1_other_donor_cat_3,30)),1,30),
aovorg1_add_donor_cat_flag,
aovorg1_prm_con_surname_prfx,
aovorg1_prm_con_last_name,
aovorg1_prm_con_first_name,
aovorg1_prm_con_middle_name,
aovorg1_prm_con_prefix_name,
aovorg1_prm_con_addr_type,
substr(decode(aovorg1_prm_con_addr_type,null,null,f_get_desc_alumni
   ('STVATYP',aovorg1_prm_con_addr_type,30)),1,30),
aovorg1_prm_con_house_number,
aovorg1_prm_con_street_line1,
aovorg1_prm_con_street_line2,
aovorg1_prm_con_street_line3,
aovorg1_prm_con_street_line4,
aovorg1_prm_con_city,
aovorg1_prm_con_state,
aovorg1_prm_con_zip,
aovorg1_prm_con_county,
substr(decode(aovorg1_prm_con_county,null,null,f_get_desc_alumni
   ('STVCNTY',aovorg1_prm_con_county,30)),1,30),
aovorg1_prm_con_nation,
substr(decode(aovorg1_prm_con_nation,null,null,f_get_desc_alumni
   ('STVNATN',aovorg1_prm_con_nation,30)),1,30),
aovorg1_prm_con_phone_number,
aovorg1_prm_con_phone_area,
aovorg1_prm_con_phone_ext,
aovorg1_prm_con_ctry_code,
aovorg1_sec_con_ocon_code_1,
substr(decode(aovorg1_sec_con_ocon_code_1,null,null,f_get_desc_alumni
   ('ATVOCON',aovorg1_sec_con_ocon_code_1,30)),1,30),
aovorg1_sec_con_pidm_1,
aovorg1_sec_con_surname_prfx_1,
aovorg1_sec_con_last_name_1,
aovorg1_sec_con_first_name_1,
aovorg1_sec_con_middle_name_1,
aovorg1_sec_con_prefix_name_1,
aovorg1_sec_con_addr_type_1,
substr(decode(aovorg1_sec_con_addr_type_1,null,null,f_get_desc_alumni
   ('STVATYP',aovorg1_sec_con_addr_type_1,30)),1,30),
aovorg1_sec_con_house_number_1,
aovorg1_sec_con_street_line1_1,
aovorg1_sec_con_street_line2_1,
aovorg1_sec_con_street_line3_1,
aovorg1_sec_con_street_line4_1,
aovorg1_sec_con_city_1,
aovorg1_sec_con_state_1,
aovorg1_sec_con_zip_1,
aovorg1_sec_con_county_1,
substr(decode(aovorg1_sec_con_county_1,null,null,f_get_desc_alumni
   ('STVCNTY',aovorg1_sec_con_county_1,30)),1,30),
aovorg1_sec_con_nation_1,
substr(decode(aovorg1_sec_con_nation_1,null,null,f_get_desc_alumni
   ('STVNATN',aovorg1_sec_con_nation_1,30)),1,30),
aovorg1_sec_con_phone_number_1,
aovorg1_sec_con_phone_area_1,
aovorg1_sec_con_phone_ext_1,
aovorg1_sec_con_ctry_code_1,
aovorg1_sec_con_ocon_code_2,
substr(decode(aovorg1_sec_con_ocon_code_2,null,null,f_get_desc_alumni
   ('ATVOCON',aovorg1_sec_con_ocon_code_2,30)),1,30),
aovorg1_sec_con_pidm_2,
aovorg1_sec_con_surname_prfx_2,
aovorg1_sec_con_last_name_2,
aovorg1_sec_con_first_name_2,
aovorg1_sec_con_middle_name_2,
aovorg1_sec_con_prefix_name_2,
aovorg1_sec_con_addr_type_2,
substr(decode(aovorg1_sec_con_addr_type_2,null,null,f_get_desc_alumni
   ('STVATYP',aovorg1_sec_con_addr_type_2,30)),1,30),
aovorg1_sec_con_house_number_2,
aovorg1_sec_con_street_line1_2,
aovorg1_sec_con_street_line2_2,
aovorg1_sec_con_street_line3_2,
aovorg1_sec_con_street_line4_2,
aovorg1_sec_con_city_2,
aovorg1_sec_con_state_2,
aovorg1_sec_con_zip_2,
aovorg1_sec_con_county_2,
substr(decode(aovorg1_sec_con_county_2,null,null,f_get_desc_alumni
   ('STVCNTY',aovorg1_sec_con_county_2,30)),1,30),
aovorg1_sec_con_nation_2,
substr(decode(aovorg1_sec_con_nation_2,null,null,f_get_desc_alumni
   ('STVNATN',aovorg1_sec_con_nation_2,30)),1,30),
aovorg1_sec_con_phone_number_2,
aovorg1_sec_con_phone_area_2,
aovorg1_sec_con_phone_ext_2,
aovorg1_sec_con_ctry_code_2,
aovorg1_fund_interest_1,
substr(decode(aovorg1_fund_interest_1,null,null,f_get_desc_alumni
   ('ATVFUND',aovorg1_fund_interest_1,30)),1,30),
aovorg1_fund_interest_2,
substr(decode(aovorg1_fund_interest_2,null,null,f_get_desc_alumni
   ('ATVFUND',aovorg1_fund_interest_2,30)),1,30),
aovorg1_fund_interest_3,
substr(decode(aovorg1_fund_interest_3,null,null,f_get_desc_alumni
   ('ATVFUND',aovorg1_fund_interest_3,30)),1,30),
aovorg1_add_fund_interest_flag,
aovorg1_match_gift_comp_pidm,
aovorg1_match_gift_comp_id,
aovorg1_match_gift_comp_name,
aovorg1_orgn_match_gift_pct,
aovorg1_multiple_ratios,
aovorg1_min_gift_amt_match,
aovorg1_max_match_gift_emp_yr
from aovorg1"
"BANINST1","AA_GIVING","","select
agvgiv1_pidm,
agvgiv1_entity_ind,
agvgiv1_id,
agvgiv1_ssn,
agvgiv1_surname_prefix,
agvgiv1_last_name,
agvgiv1_first_name,
agvgiv1_middle_name,
agvgiv1_middle_initial,
agvgiv1_name_prefix,
agvgiv1_name_suffix,
agvgiv1_nickname,
agvgiv1_combined_mail_name,
agvgiv1_birth_maiden_name,
agvgiv1_pref_address_name,
agvgiv1_pref_address_type,
agvgiv1_deceased_ind,
agvgiv1_deceased_date,
agvgiv1_pref_coll,
agvgiv1_pref_class,
agvgiv1_pref_donor_cat,
substr(decode(agvgiv1_pref_donor_cat,null,null,f_get_desc_alumni
   ('ATVDONR', agvgiv1_pref_donor_cat,30)),1,30),
agvgiv1_pref_alum_ind,
agvgiv1_other_donor_cat_1,
substr(decode(agvgiv1_other_donor_cat_1,null,null,f_get_desc_alumni
   ('ATVDONR', agvgiv1_other_donor_cat_1,30)),1,30),
agvgiv1_other_alum_ind_1,
agvgiv1_other_donor_cat_2,
substr(decode(agvgiv1_other_donor_cat_2,null,null,f_get_desc_alumni
   ('ATVDONR', agvgiv1_other_donor_cat_2,30)),1,30),
agvgiv1_other_alum_ind_2,
agvgiv1_other_donor_cat_3,
substr(decode(agvgiv1_other_donor_cat_3,null,null,f_get_desc_alumni
   ('ATVDONR', agvgiv1_other_donor_cat_3,30)),1,30),
agvgiv1_other_alum_ind_3,
agvgiv1_add_donor_cat_flag,
to_number(substr(f_split_fields(agvgiv1_spouse_info, 1),1,8)),
substr(f_split_fields(agvgiv1_spouse_info, 17),1,60),
substr(f_split_fields(agvgiv1_spouse_info, 2),1,60),
substr(f_split_fields(agvgiv1_spouse_info, 3),1,60),
substr(f_split_fields(agvgiv1_spouse_info, 4),1,60),
substr(f_split_fields(agvgiv1_spouse_info, 5),1,20),
substr(f_split_fields(agvgiv1_spouse_info, 6),1,20),
substr(f_split_fields(agvgiv1_spouse_info, 7),1,1),
substr(f_split_fields(agvgiv1_spouse_info, 8),1,1),
to_date(substr(f_split_fields(agvgiv1_spouse_info, 9),1,11),
                         'DD-MON-YYYY'),
substr(f_split_fields(agvgiv1_spouse_info, 10),1,2),
substr(f_split_fields(agvgiv1_spouse_info, 11),1,4),
substr(f_split_fields(agvgiv1_spouse_info, 12),1,1),
substr(f_split_fields(agvgiv1_spouse_info, 13),1,4),
substr(decode(substr(
   f_split_fields(agvgiv1_spouse_info, 13),1,4),null,null,
   f_get_desc_alumni('ATVDONR',substr(f_split_fields
   (agvgiv1_spouse_info, 13),1,4),30)),1,30),
substr(f_split_fields(agvgiv1_spouse_info, 14),1,9),
agvgiv1_fisc_code_1,
nvl(agvgiv1_number_gift_year_1,0),
nvl(agvgiv1_tot_giving_year_1,0),
nvl(agvgiv1_high_gift_year_1,0),
agvgiv1_date_high_gift_year_1,
nvl(agvgiv1_tot_ant_mat_gift_pay_1,0),
nvl(agvgiv1_tot_rlz_mat_gift_pay_1,0),
nvl(agvgiv1_tot_ant_mat_gift_one_1,0),
nvl(agvgiv1_tot_rlz_mat_gift_one_1,0),
nvl(agvgiv1_non_mat_gift_memo_1,0),
nvl(agvgiv1_number_pledge_year_1,0),
nvl(agvgiv1_tot_pledge_amt_year_1,0),
nvl(agvgiv1_high_pledge_amt_year_1,0),
nvl(agvgiv1_tot_pledge_pay_year_1,0),
agvgiv1_fisc_code_2,
nvl(agvgiv1_number_gift_year_2,0),
nvl(agvgiv1_tot_giving_year_2,0),
nvl(agvgiv1_high_gift_year_2,0),
agvgiv1_date_high_gift_year_2,
nvl(agvgiv1_tot_ant_mat_gift_pay_2,0),
nvl(agvgiv1_tot_rlz_mat_gift_pay_2,0),
nvl(agvgiv1_tot_ant_mat_gift_one_2,0),
nvl(agvgiv1_tot_rlz_mat_gift_one_2,0),
nvl(agvgiv1_non_mat_gift_memo_2,0),
nvl(agvgiv1_number_pledge_year_2,0),
nvl(agvgiv1_tot_pledge_amt_year_2,0),
nvl(agvgiv1_high_pledge_amt_year_2,0),
nvl(agvgiv1_tot_pledge_pay_year_2,0),
agvgiv1_fisc_code_3,
nvl(agvgiv1_number_gift_year_3,0),
nvl(agvgiv1_tot_giving_year_3,0),
nvl(agvgiv1_high_gift_year_3,0),
agvgiv1_date_high_gift_year_3,
nvl(agvgiv1_tot_ant_mat_gift_pay_3,0),
nvl(agvgiv1_tot_rlz_mat_gift_pay_3,0),
nvl(agvgiv1_tot_ant_mat_gift_one_3,0),
nvl(agvgiv1_tot_rlz_mat_gift_one_3,0),
nvl(agvgiv1_non_mat_gift_memo_3,0),
nvl(agvgiv1_number_pledge_year_3,0),
nvl(agvgiv1_tot_pledge_amt_year_3,0),
nvl(agvgiv1_high_pledge_amt_year_3,0),
nvl(agvgiv1_tot_pledge_pay_year_3,0),
agvgiv1_fisc_code_4,
nvl(agvgiv1_number_gift_year_4,0),
nvl(agvgiv1_tot_giving_year_4,0),
nvl(agvgiv1_high_gift_year_4,0),
agvgiv1_date_high_gift_year_4,
nvl(agvgiv1_tot_ant_mat_gift_pay_4,0),
nvl(agvgiv1_tot_rlz_mat_gift_pay_4,0),
nvl(agvgiv1_tot_ant_mat_gift_one_4,0),
nvl(agvgiv1_tot_rlz_mat_gift_one_4,0),
nvl(agvgiv1_non_mat_gift_memo_4,0),
nvl(agvgiv1_number_pledge_year_4,0),
nvl(agvgiv1_tot_pledge_amt_year_4,0),
nvl(agvgiv1_high_pledge_amt_year_4,0),
nvl(agvgiv1_tot_pledge_pay_year_4,0),
agvgiv1_fisc_code_5,
nvl(agvgiv1_number_gift_year_5,0),
nvl(agvgiv1_tot_giving_year_5,0),
nvl(agvgiv1_high_gift_year_5,0),
agvgiv1_date_high_gift_year_5,
nvl(agvgiv1_tot_ant_mat_gift_pay_5,0),
nvl(agvgiv1_tot_rlz_mat_gift_pay_5,0),
nvl(agvgiv1_tot_ant_mat_gift_one_5,0),
nvl(agvgiv1_tot_rlz_mat_gift_one_5,0),
nvl(agvgiv1_non_mat_gift_memo_5,0),
nvl(agvgiv1_number_pledge_year_5,0),
nvl(agvgiv1_tot_pledge_amt_year_5,0),
nvl(agvgiv1_high_pledge_amt_year_5,0),
nvl(agvgiv1_tot_pledge_pay_year_5,0),
agvgiv1_fisc_code_6,
nvl(agvgiv1_number_gift_year_6,0),
nvl(agvgiv1_tot_giving_year_6,0),
nvl(agvgiv1_high_gift_year_6,0),
agvgiv1_date_high_gift_year_6,
nvl(agvgiv1_tot_ant_mat_gift_pay_6,0),
nvl(agvgiv1_tot_rlz_mat_gift_pay_6,0),
nvl(agvgiv1_tot_ant_mat_gift_one_6,0),
nvl(agvgiv1_tot_rlz_mat_gift_one_6,0),
nvl(agvgiv1__non_mat_gift_memo_6,0),
nvl(agvgiv1_number_pledge_year_6,0),
nvl(agvgiv1_tot_pledge_amt_year_6,0),
nvl(agvgiv1_high_pledge_amt_year_6,0),
nvl(agvgiv1_tot_pledge_pay_year_6,0),
agvgiv1_gift_society_type_1_1,
substr(decode(agvgiv1_gift_society_type_1_1,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_1_1,30)),1,30),
agvgiv1_gift_society_1_1,
substr(decode(agvgiv1_gift_society_1_1,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_1_1,30)),1,30),
agvgiv1_gift_society_type_2_1,
substr(decode(agvgiv1_gift_society_type_2_1,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_2_1,30)),1,30),
agvgiv1_gift_society_2_1,
substr(decode(agvgiv1_gift_society_2_1,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_2_1,30)),1,30),
agvgiv1_gift_society_type_1_2,
substr(decode(agvgiv1_gift_society_type_1_2,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_1_2,30)),1,30),
agvgiv1_gift_society_1_2,
substr(decode(agvgiv1_gift_society_1_2,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_1_2,30)),1,30),
agvgiv1_gift_society_type_2_2,
substr(decode(agvgiv1_gift_society_type_2_2,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_2_2,30)),1,30),
agvgiv1_gift_society_2_2,
substr(decode(agvgiv1_gift_society_2_2,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_2_2,30)),1,30),
agvgiv1_gift_society_type_1_3,
substr(decode(agvgiv1_gift_society_type_1_3,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_1_3,30)),1,30),
agvgiv1_gift_society_1_3,
substr(decode(agvgiv1_gift_society_1_3,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_1_3,30)),1,30),
agvgiv1_gift_society_type_2_3,
substr(decode(agvgiv1_gift_society_type_2_3,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_2_3,30)),1,30),
agvgiv1_gift_society_2_3,
substr(decode(agvgiv1_gift_society_2_3,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_2_3,30)),1,30),
agvgiv1_gift_society_type_1_4,
substr(decode(agvgiv1_gift_society_type_1_4,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_1_4,30)),1,30),
agvgiv1_gift_society_1_4,
substr(decode(agvgiv1_gift_society_1_4,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_1_4,30)),1,30),
agvgiv1_gift_society_type_2_4,
substr(decode(agvgiv1_gift_society_type_2_4,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_2_4,30)),1,30),
agvgiv1_gift_society_2_4,
substr(decode(agvgiv1_gift_society_2_4,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_2_4,30)),1,30),
agvgiv1_gift_society_type_1_5,
substr(decode(agvgiv1_gift_society_type_1_5,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_1_5,30)),1,30),
agvgiv1_gift_society_1_5,
substr(decode(agvgiv1_gift_society_1_5,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_1_5,30)),1,30),
agvgiv1_gift_society_type_2_5,
substr(decode(agvgiv1_gift_society_type_2_5,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_2_5,30)),1,30),
agvgiv1_gift_society_2_5,
substr(decode(agvgiv1_gift_society_2_5,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_2_5,30)),1,30),
agvgiv1_gift_society_type_1_6,
substr(decode(agvgiv1_gift_society_type_1_6,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_1_6,30)),1,30),
agvgiv1_gift_society_1_6,
substr(decode(agvgiv1_gift_society_1_6,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_1_6,30)),1,30),
agvgiv1_gift_society_type_2_6,
substr(decode(agvgiv1_gift_society_type_2_6,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_gift_society_type_2_6,30)),1,30),
agvgiv1_gift_society_2_6,
substr(decode(agvgiv1_gift_society_2_6,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_gift_society_2_6,30)),1,30),
nvl(agvgiv1_life_tot_giving,0),
agvgiv1_most_rec_gift_date,
nvl(agvgiv1_most_rec_gift_amt,0),
nvl(agvgiv1_life_tot_pledge_amt,0),
agvgiv1_most_rec_pledge_date,
nvl(agvgiv1_most_rec_pledge_amt,0),
nvl(agvgiv1_life_tot_pledge_pay,0),
agvgiv1_life_gift_society_type,
substr(decode(agvgiv1_life_gift_society_type,null,null,f_get_desc_alumni
   ('ATVDCST',agvgiv1_life_gift_society_type,30)),1,30),
agvgiv1_life_gift_society,
substr(decode(agvgiv1_life_gift_society_type,null,null,f_get_desc_alumni
   ('ATVDCNP',agvgiv1_life_gift_society,30)),1,30),
nvl(agvgiv1_life_tot_commitment,0)
from agvgiv1"
"BANINST1","AA_GIFT_MEMO_DETAIL","","select
agvgmd1_pidm,
agvgmd1_memo_pidm,
agvgmd1_gift_no,
agvgmd1_pledge_no,
agvgmd1_campaign,
agvgmd1_campaign_name,
agvgmd1_designation,
agvgmd1_design_name,
agvgmd1_entity_ind,
agvgmd1_lost_alumnus_ind,
agvgmd1_id,
agvgmd1_ssn,
agvgmd1_surname_prefix,
agvgmd1_last_name,
agvgmd1_first_name,
agvgmd1_middle_name,
agvgmd1_middle_initial,
agvgmd1_name_prefix,
agvgmd1_name_suffix,
agvgmd1_nickname,
agvgmd1_combined_mail_name,
agvgmd1_birth_maiden_name,
agvgmd1_pref_address_name,
agvgmd1_pref_address_type,
agvgmd1_deceased_ind,
agvgmd1_deceased_date,
agvgmd1_pref_coll,
agvgmd1_pref_class,
agvgmd1_pref_donor_cat,
substr(decode(agvgmd1_pref_donor_cat,null,null,f_get_desc_alumni
   ('ATVDONR', agvgmd1_pref_donor_cat,30)),1,30),
agvgmd1_pref_alum_ind,
agvgmd1_other_donor_cat_1,
substr(decode(agvgmd1_other_donor_cat_1,null,null,f_get_desc_alumni
   ('ATVDONR', agvgmd1_other_donor_cat_1,30)),1,30),
agvgmd1_other_alum_ind_1,
agvgmd1_other_donor_cat_2,
substr(decode(agvgmd1_other_donor_cat_2,null,null,f_get_desc_alumni
   ('ATVDONR', agvgmd1_other_donor_cat_2,30)),1,30),
agvgmd1_other_alum_ind_2,
agvgmd1_other_donor_cat_3,
substr(decode(agvgmd1_other_donor_cat_3,null,null,f_get_desc_alumni
   ('ATVDONR', agvgmd1_other_donor_cat_3,30)),1,30),
agvgmd1_other_alum_ind_3,
agvgmd1_add_donor_cat_flag,
agvgmd1_memo_id_entity_ind,
agvgmd1_memo_id_lost_al_ind,
agvgmd1_memo_id_id,
agvgmd1_memo_id_giv_sname_prfx,
agvgmd1_memo_id_giv_last_name,
agvgmd1_memo_id_giv_first_name,
agvgmd1_memo_id_giv_mi_name,
agvgmd1_memo_id_deceased_ind,
agvgmd1_memo_id_deceased_date,
agvgmd1_memo_id_pref_coll,
agvgmd1_memo_id_pref_class,
agvgmd1_memo_id_pref_donor_cat,
substr(decode(agvgmd1_memo_id_pref_donor_cat,null,null,f_get_desc_alumni
   ('ATVDONR', agvgmd1_memo_id_pref_donor_cat,30)),1,30),
agvgmd1_memo_id_alum_ind,
agvgmd1_campaign_type,
substr(decode(agvgmd1_campaign_type,null,null,f_get_desc_alumni
   ('ATVCMTP', agvgmd1_campaign_type,30)),1,30),
agvgmd1_gift_design_amt,
agvgmd1_gift_design_credit_amt,
agvgmd1_gift_date,
agvgmd1_fiscal_year,
agvgmd1_gift_type,
substr(decode(agvgmd1_gift_type,null,null,f_get_desc_alumni
   ('ATVGIFT', agvgmd1_gift_type,30)),1,30),
agvgmd1_gift_class,
substr(decode(agvgmd1_gift_class,null,null,f_get_desc_alumni
   ('ATVGCLS', agvgmd1_gift_class,30)),1,30),
agvgmd1_gift_vehicle,
substr(decode(agvgmd1_gift_vehicle,null,null,f_get_desc_alumni
   ('ATVPGVE', agvgmd1_gift_vehicle,30)),1,30),
agvgmd1_matching_gift_ind,
agvgmd1_design_type,
substr(decode(agvgmd1_design_type,null,null,f_get_desc_alumni
   ('ATVDSTP', agvgmd1_design_type,30)),1,30),
agvgmd1_design_coll_code,
substr(decode(agvgmd1_design_coll_code,null,null,f_get_desc_alumni
   ('STVCOLL', agvgmd1_design_coll_code,30)),1,30),
agvgmd1_council_aid_educ_code,
substr(decode(agvgmd1_council_aid_educ_code,null,null,f_get_desc_alumni
   ('ATVCFAE', agvgmd1_council_aid_educ_code,30)),1,30)
from agvgmd1"
"BANINST1","AA_GIFT_DETAIL","","select
agvgfd1_pidm,
agvgfd1_gift_no,
agvgfd1_pledge_no,
agvgfd1_campaign,
agvgfd1_campaign_name,
agvgfd1_designation,
agvgfd1_designation_name,
agvgfd1_entity_ind,
agvgfd1_lost_alumnus_ind,
agvgfd1_id,
agvgfd1_ssn,
agvgfd1_surname_prefix,
agvgfd1_last_name,
agvgfd1_first_name,
agvgfd1_middle_name,
agvgfd1_middle_initial,
agvgfd1_name_prefix,
agvgfd1_name_suffix,
agvgfd1_nickname,
agvgfd1_combined_mail_name,
agvgfd1_birth_maiden_name,
agvgfd1_pref_address_name,
agvgfd1_pref_address_type,
agvgfd1_deceased_ind,
agvgfd1_deceased_date,
agvgfd1_pref_coll,
agvgfd1_pref_class,
agvgfd1_pref_donor_cat,
substr(decode(agvgfd1_pref_donor_cat,null,null,f_get_desc_alumni
   ('ATVDONR', agvgfd1_pref_donor_cat,30)),1,30),
agvgfd1_pref_alum_ind,
agvgfd1_other_donor_cat_1,
substr(decode(agvgfd1_other_donor_cat_1,null,null,f_get_desc_alumni
   ('ATVDONR', agvgfd1_other_donor_cat_1,30)),1,30),
agvgfd1_other_alum_ind_1,
agvgfd1_other_donor_cat_2,
substr(decode(agvgfd1_other_donor_cat_2,null,null,f_get_desc_alumni
   ('ATVDONR', agvgfd1_other_donor_cat_2,30)),1,30),
agvgfd1_other_alum_ind_2,
agvgfd1_other_donor_cat_3,
substr(decode(agvgfd1_other_donor_cat_3,null,null,f_get_desc_alumni
   ('ATVDONR', agvgfd1_other_donor_cat_3,30)),1,30),
agvgfd1_other_alum_ind_3,
agvgfd1_add_donor_cat_flag,
agvgfd1_campaign_type,
substr(decode(agvgfd1_campaign_type,null,null,f_get_desc_alumni
   ('ATVCMTP', agvgfd1_campaign_type,30)),1,30),
agvgfd1_gift_amt,
agvgfd1_gift_credit_amt,
agvgfd1_gift_date,
agvgfd1_gift_year,
agvgfd1_gift_type,
agvgfd1_gift_desc,
agvgfd1_gift_class,
substr(decode(agvgfd1_gift_class,null,null,f_get_desc_alumni
   ('ATVGCLS', agvgfd1_gift_class,30)),1,30),
agvgfd1_gift_class_2,
substr(decode(agvgfd1_gift_class_2,null,null,f_get_desc_alumni
   ('ATVGCLS', agvgfd1_gift_class_2,30)),1,30),
agvgfd1_gift_class_3,
substr(decode(agvgfd1_gift_class_3,null,null,f_get_desc_alumni
   ('ATVGCLS', agvgfd1_gift_class_3,30)),1,30),
agvgfd1_gift_vehicle,
substr(decode(agvgfd1_gift_vehicle,null,null,f_get_desc_alumni
   ('ATVPGVE', agvgfd1_gift_vehicle,30)),1,30),
agvgfd1_matching_gift,
agvgfd1_match_received,
agvgfd1_gift_feed_date,
agvgfd1_gift_batch_id,
agvgfd1_gift_entry_user,
agvgfd1_gift_entry_date,
agvgfd1_fin_db_act_no,
agvgfd1_fin_rule_class_code,
agvgfd1_gift_cfae_catg,
agvgfd1_designation_type,
substr(decode(agvgfd1_designation_type,null,null,f_get_desc_alumni
   ('ATVDSTP', agvgfd1_designation_type,30)),1,30),
agvgfd1_desg_coll_code,
substr(decode(agvgfd1_desg_coll_code,null,null,f_get_desc_alumni
   ('STVCOLL', agvgfd1_desg_coll_code,30)),1,30),
agvgfd1_education_code,
substr(decode(agvgfd1_education_code,null,null,f_get_desc_alumni
   ('ATVCFAE', agvgfd1_education_code,30)),1,30),
agvgfd1_fin_gener_ledger_no,
agvgfd1_chart_act_code,
agvgfd1_act_index_code,
agvgfd1_fund_code,
agvgfd1_orgn_code,
agvgfd1_acount_code,
agvgfd1_program_code,
agvgfd1_activity_code,
agvgfd1_location_code,
agvgfd1_gift_sol_type,
substr(decode(agvgfd1_gift_sol_type,null,null,f_get_desc_alumni
   ('ATVSOLC', agvgfd1_gift_sol_type,30)),1,30),
agvgfd1_gift_sol_orgn,
agvgfd1_gift_sol_pidm,
agvgfd1_gift_sol_id,
agvgfd1_gift_sol_sname_prfx,
agvgfd1_gift_sol_last_name,
agvgfd1_gift_sol_first_name,
agvgfd1_sol_amt,
agvgfd1_more_sol
from agvgfd1"
"BANINST1","AA_DESIGNATION_GIVING_BY_ID","","select
advdsg1_pidm,
advdsg1_desg_fiscal_year,
advdsg1_designation,
advdsg1_designation_desc,
advdsg1_entity_ind,
advdsg1_lost_alumnus_ind,
advdsg1_id,
advdsg1_ssn,
advdsg1_surname_prefix,
advdsg1_last_name,
advdsg1_first_name,
advdsg1_middle_name,
advdsg1_middle_initial,
advdsg1_name_prefix,
advdsg1_name_suffix,
advdsg1_nickname,
advdsg1_combined_mail_name,
advdsg1_birth_maiden_name,
advdsg1_pref_address_name,
advdsg1_pref_address_type,
advdsg1_deceased_ind,
advdsg1_deceased_date,
advdsg1_pref_coll,
advdsg1_pref_class,
advdsg1_pref_donor_cat,
substr(decode(advdsg1_pref_donor_cat,null,null,f_get_desc_alumni
   ('ATVDONR', advdsg1_pref_donor_cat,30)),1,30),
advdsg1_pref_alum_ind,
advdsg1_other_donor_cat_1,
substr(decode(advdsg1_other_donor_cat_1,null,null,f_get_desc_alumni
   ('ATVDONR', advdsg1_other_donor_cat_1,30)),1,30),
advdsg1_other_alum_ind_1,
advdsg1_other_donor_cat_2,
substr(decode(advdsg1_other_donor_cat_2,null,null,f_get_desc_alumni
   ('ATVDONR', advdsg1_other_donor_cat_2,30)),1,30),
advdsg1_other_alum_ind_2,
advdsg1_other_donor_cat_3,
substr(decode(advdsg1_other_donor_cat_3,null,null,f_get_desc_alumni
   ('ATVDONR', advdsg1_other_donor_cat_3,30)),1,30),
advdsg1_other_alum_ind_3,
advdsg1_add_donor_cat_flag,
nvl(advdsg1_desg_giving,0),
nvl(advdsg1_desg_pledged,0),
nvl(advdsg1_desg_gift,0),
nvl(advdsg1_desg_payment,0),
nvl(advdsg1_desg_match_gift,0),
nvl(advdsg1_desg_memo_credit,0),
advdsg1_desg_coll_code,
substr(decode(advdsg1_desg_coll_code,null,null,f_get_desc_alumni
   ('STVCOLL', advdsg1_desg_coll_code,30)),1,30),
advdsg1_desg_educ_code,
substr(decode(advdsg1_desg_educ_code,null,null,f_get_desc_alumni
   ('ATVCFAE', advdsg1_desg_coll_code,30)),1,30),
advdsg1_desg_type_code,
substr(decode(advdsg1_desg_type_code,null,null,f_get_desc_alumni
   ('ATVDSTP', advdsg1_desg_type_code,30)),1,30),
advdsg1_alumnus_excl_code_1,
substr(decode(advdsg1_alumnus_excl_code_1,null,null,f_get_desc_alumni
   ('ATVEXCL', advdsg1_alumnus_excl_code_1,30)),1,30),
advdsg1_alumnus_excl_date_1,
advdsg1_alumnus_excl_code_2,
substr(decode(advdsg1_alumnus_excl_code_2,null,null,f_get_desc_alumni
   ('ATVEXCL', advdsg1_alumnus_excl_code_2,30)),1,30),
advdsg1_alumnus_excl_date_2,
advdsg1_alumnus_excl_code_3,
substr(decode(advdsg1_alumnus_excl_code_3,null,null,f_get_desc_alumni
   ('ATVEXCL', advdsg1_alumnus_excl_code_3,30)),1,30),
advdsg1_alumnus_excl_date_3,
advdsg1_add_alumnus_excl_flag,
to_number(substr(f_split_fields(advdsg1_spouse_info, 1),1,8)),
substr(f_split_fields(advdsg1_spouse_info, 17),1,60),
substr(f_split_fields(advdsg1_spouse_info, 2),1,60),
substr(f_split_fields(advdsg1_spouse_info, 3),1,60),
substr(f_split_fields(advdsg1_spouse_info, 4),1,60),
substr(f_split_fields(advdsg1_spouse_info, 5),1,20),
substr(f_split_fields(advdsg1_spouse_info, 6),1,20),
substr(f_split_fields(advdsg1_spouse_info, 7),1,1),
substr(f_split_fields(advdsg1_spouse_info, 8),1,1),
to_date(substr(f_split_fields(advdsg1_spouse_info, 9),1,11),
                  'DD-MON-YYYY'),
substr(f_split_fields(advdsg1_spouse_info, 10),1,2),
substr(f_split_fields(advdsg1_spouse_info, 11),1,4),
substr(f_split_fields(advdsg1_spouse_info, 12),1,1),
substr(f_split_fields(advdsg1_spouse_info, 13),1,4),
substr(decode(substr(
   f_split_fields(advdsg1_spouse_info, 13),1,4),null,null,
   f_get_desc_alumni('ATVDONR',substr(f_split_fields
   (advdsg1_spouse_info, 13),1,4),30)),1,30),
substr(f_split_fields(advdsg1_spouse_info, 14),1,9),
nvl(advdsg1_spouse_desg_giving,0),
nvl(to_number(substr(f_split_fields(advdsg1_spouse_giving_info, 1),
    1,14)),0),
nvl(to_number(substr(f_split_fields(advdsg1_spouse_giving_info, 2),
    1,14)),0),
nvl(to_number(substr(f_split_fields(advdsg1_spouse_giving_info, 3),
    1,14)),0),
nvl(advdsg1_spouse_desg_match_gift,0),
nvl(advdsg1_spouse_desg_memo_cred,0),
advdsg1_spouse_excl_code_1,
substr(decode(advdsg1_spouse_excl_code_1,null,null,f_get_desc_alumni
   ('ATVEXCL', advdsg1_spouse_excl_code_1,30)),1,30),
advdsg1_spouse_excl_date_1,
advdsg1_spouse_excl_code_2,
substr(decode(advdsg1_spouse_excl_code_2,null,null,f_get_desc_alumni
   ('ATVEXCL', advdsg1_spouse_excl_code_2,30)),1,30),
advdsg1_spouse_excl_date_2,
advdsg1_spouse_excl_code_3,
substr(decode(advdsg1_spouse_excl_code_3,null,null,f_get_desc_alumni
   ('ATVEXCL', advdsg1_spouse_excl_code_3,30)),1,30),
advdsg1_spouse_excl_date_3,
advdsg1_add_spouse_excl_flag
from advdsg1"
"BANINST1","AA_CONSTITUENT_ORGANIZ_SHARED","","select
apvshr1_pidm,
apvshr1_entity_ind,
apvshr1_special_purp_type_1,
substr(decode(apvshr1_special_purp_type_1,null,null,f_get_desc_alumni
   ('ATVPRTP', apvshr1_special_purp_type_1,30)),1,30),
apvshr1_special_purp_code_1,
substr(decode(apvshr1_special_purp_code_1,null,null,f_get_desc_alumni
   ('ATVPRCD', apvshr1_special_purp_code_1,30)),1,30),
apvshr1_special_purp_type_2,
substr(decode(apvshr1_special_purp_type_2,null,null,f_get_desc_alumni
   ('ATVPRTP', apvshr1_special_purp_type_2,30)),1,30),
apvshr1_special_purp_code_2,
substr(decode(apvshr1_special_purp_code_2,null,null,f_get_desc_alumni
   ('ATVPRCD', apvshr1_special_purp_code_2,30)),1,30),
apvshr1_special_purp_type_3,
substr(decode(apvshr1_special_purp_type_3,null,null,f_get_desc_alumni
   ('ATVPRTP', apvshr1_special_purp_type_3,30)),1,30),
apvshr1_special_purp_code_3,
substr(decode(apvshr1_special_purp_code_3,null,null,f_get_desc_alumni
   ('ATVPRCD', apvshr1_special_purp_code_3,30)),1,30),
apvshr1_special_purp_type_4,
substr(decode(apvshr1_special_purp_type_4,null,null,f_get_desc_alumni
   ('ATVPRTP', apvshr1_special_purp_type_4,30)),1,30),
apvshr1_special_purp_code_4,
substr(decode(apvshr1_special_purp_code_4,null,null,f_get_desc_alumni
   ('ATVPRCD', apvshr1_special_purp_code_4,30)),1,30),
apvshr1_special_purp_type_5,
substr(decode(apvshr1_special_purp_type_5,null,null,f_get_desc_alumni
   ('ATVPRTP', apvshr1_special_purp_type_5,30)),1,30),
apvshr1_special_purp_code_5,
substr(decode(apvshr1_special_purp_code_5,null,null,f_get_desc_alumni
   ('ATVPRCD', apvshr1_special_purp_code_5,30)),1,30),
apvshr1_add_special_flag,
apvshr1_variable_purp_code_1,
substr(decode(apvshr1_variable_purp_code_1,null,null,f_get_desc_alumni
   ('ATVVIPC', apvshr1_variable_purp_code_1,30)),1,30),
apvshr1_variable_purp_code_2,
substr(decode(apvshr1_variable_purp_code_2,null,null,f_get_desc_alumni
   ('ATVVIPC', apvshr1_variable_purp_code_2,30)),1,30),
apvshr1_variable_purp_code_3,
substr(decode(apvshr1_variable_purp_code_3,null,null,f_get_desc_alumni
   ('ATVVIPC', apvshr1_variable_purp_code_3,30)),1,30),
apvshr1_add_variable_flag,
apvshr1_mail_code_1,
substr(decode(apvshr1_mail_code_1,null,null,f_get_desc_alumni
   ('GTVMAIL', apvshr1_mail_code_1,30)),1,30),
apvshr1_mail_date_1,
apvshr1_address_type_1,
apvshr1_mail_code_2,
substr(decode(apvshr1_mail_code_2,null,null,f_get_desc_alumni
   ('GTVMAIL', apvshr1_mail_code_2,30)),1,30),
apvshr1_mail_date_2,
apvshr1_address_type_2,
apvshr1_mail_code_3,
substr(decode(apvshr1_mail_code_3,null,null,f_get_desc_alumni
   ('GTVMAIL', apvshr1_mail_code_3,30)),1,30),
apvshr1_mail_date_3,
apvshr1_address_type_3,
apvshr1_mail_code_4,
substr(decode(apvshr1_mail_code_4,null,null,f_get_desc_alumni
   ('GTVMAIL', apvshr1_mail_code_4,30)),1,30),
apvshr1_mail_date_4,
apvshr1_address_type_4,
apvshr1_add_mail_flag,
apvshr1_exclusion_code_1,
substr(decode(apvshr1_exclusion_code_1,null,null,f_get_desc_alumni
   ('ATVEXCL', apvshr1_exclusion_code_1,30)),1,30),
apvshr1_exclusion_date_1,
apvshr1_exclusion_code_2,
substr(decode(apvshr1_exclusion_code_2,null,null,f_get_desc_alumni
   ('ATVEXCL', apvshr1_exclusion_code_2,30)),1,30),
apvshr1_exclusion_date_2,
apvshr1_exclusion_code_3,
substr(decode(apvshr1_exclusion_code_3,null,null,f_get_desc_alumni
   ('ATVEXCL', apvshr1_exclusion_code_3,30)),1,30),
apvshr1_exclusion_date_3,
apvshr1_add_exclusion_flag,
substr(f_split_fields(apvshr1_activity_info,1),1,5),
substr(decode(substr(
  f_split_fields(apvshr1_activity_info,1),1,5),
  null, null, f_get_desc_alumni('STVACCG',substr(
  f_split_fields(apvshr1_activity_info,1),1,5),30)),1,30),
substr(f_split_fields(apvshr1_activity_info,2),1,5),
substr(decode(substr(
  f_split_fields(apvshr1_activity_info,2),1,5),
  null, null, f_get_desc_alumni('STVACTP',substr(
  f_split_fields(apvshr1_activity_info,2),1,5),30)),1,30),
substr(f_split_fields(apvshr1_activity_info,3),1,8),
substr(decode(substr(
  f_split_fields(apvshr1_activity_info,3),1,8),
  null, null, f_get_desc_alumni('STVACTC',substr(
  f_split_fields(apvshr1_activity_info,3),1,8),30)),1,30),
to_number(substr(f_split_fields(apvshr1_activity_info,4),1,4)),
to_number(substr(f_split_fields(apvshr1_activity_info,5),1,3)),
substr(f_split_fields(apvshr1_activity_info,6),1,5),
substr(decode(substr(
  f_split_fields(apvshr1_activity_info,6),1,5),
  null, null, f_get_desc_alumni('STVACCG',substr(
  f_split_fields(apvshr1_activity_info,6),1,5),30)),1,30),
substr(f_split_fields(apvshr1_activity_info,7),1,5),
substr(decode(substr(
  f_split_fields(apvshr1_activity_info,7),1,5),
  null, null, f_get_desc_alumni('STVACTP',substr(
  f_split_fields(apvshr1_activity_info,7),1,5),30)),1,30),
substr(f_split_fields(apvshr1_activity_info,8),1,8),
substr(decode(substr(
  f_split_fields(apvshr1_activity_info,8),1,8),
  null, null, f_get_desc_alumni('STVACTC',substr(
  f_split_fields(apvshr1_activity_info,8),1,8),30)),1,30),
to_number(substr(f_split_fields(apvshr1_activity_info,9),1,4)),
to_number(substr(f_split_fields(apvshr1_activity_info,10),1,3)),
substr(f_split_fields(apvshr1_activity_info,11),1,5),
substr(decode(substr(
  f_split_fields(apvshr1_activity_info,11),1,5),
  null, null, f_get_desc_alumni('STVACCG',substr(
  f_split_fields(apvshr1_activity_info,11),1,5),30)),1,30),
substr(f_split_fields(apvshr1_activity_info,12),1,5),
substr(decode(substr(
  f_split_fields(apvshr1_activity_info,12),1,5),
  null, null, f_get_desc_alumni('STVACTP',substr(
  f_split_fields(apvshr1_activity_info,12),1,5),30)),1,30),
substr(f_split_fields(apvshr1_activity_info,13),1,8),
substr(decode(substr(
  f_split_fields(apvshr1_activity_info,13),1,8),
  null, null, f_get_desc_alumni('STVACTC',substr(
  f_split_fields(apvshr1_activity_info,13),1,8),30)),1,30),
to_number(substr(f_split_fields(apvshr1_activity_info,14),1,4)),
to_number(substr(f_split_fields(apvshr1_activity_info,15),1,3)),
nvl(substr(f_split_fields(apvshr1_activity_info,16),1,1),'N'),
apvshr1_cros_ref_code_1,
substr(decode(apvshr1_cros_ref_code_1,null,null,f_get_desc_alumni
   ('ATVXREF', apvshr1_cros_ref_code_1,30)),1,30),
apvshr1_cros_ref_pidm_1,
apvshr1_cros_ref_sname_prfx_1,
apvshr1_cros_ref_last_name_1,
apvshr1_cros_ref_first_name_1,
apvshr1_cros_ref_mi_name_1,
apvshr1_cros_ref_id_1,
apvshr1_cros_ref_code_2,
substr(decode(apvshr1_cros_ref_code_2,null,null,f_get_desc_alumni
   ('ATVXREF', apvshr1_cros_ref_code_2,30)),1,30),
apvshr1_cros_ref_pidm_2,
apvshr1_cros_ref_sname_prfx_2,
apvshr1_cros_ref_last_name_2,
apvshr1_cros_ref_first_name_2,
apvshr1_cros_ref_mi_name_2,
apvshr1_cros_ref_id_2,
apvshr1_cros_ref_code_3,
substr(decode(apvshr1_cros_ref_code_3,null,null,f_get_desc_alumni
   ('ATVXREF', apvshr1_cros_ref_code_3,30)),1,30),
apvshr1_cros_ref_pidm_3,
apvshr1_cros_ref_sname_prfx_3,
apvshr1_cros_ref_last_name_3,
apvshr1_cros_ref_first_name_3,
apvshr1_cros_ref_mi_name_3,
apvshr1_cros_ref_id_3,
apvshr1_cros_ref_code_4,
substr(decode(apvshr1_cros_ref_code_4,null,null,f_get_desc_alumni
   ('ATVXREF', apvshr1_cros_ref_code_4,30)),1,30),
apvshr1_cros_ref_pidm_4,
apvshr1_cros_ref_sname_prfx_4,
apvshr1_cros_ref_last_name_4,
apvshr1_cros_ref_first_name_4,
apvshr1_cros_ref_mi_name_4,
apvshr1_cros_ref_id_4,
apvshr1_cros_ref_code_5,
substr(decode(apvshr1_cros_ref_code_5,null,null,f_get_desc_alumni
   ('ATVXREF', apvshr1_cros_ref_code_5,30)),1,30),
apvshr1_cros_ref_pidm_5,
apvshr1_cros_ref_sname_prfx_5,
apvshr1_cros_ref_last_name_5,
apvshr1_cros_ref_first_name_5,
apvshr1_cros_ref_mi_name_5,
apvshr1_cros_ref_id_5,
apvshr1_add_cros_ref_flag,
apvshr1_extern_source_code_1,
substr(decode(apvshr1_extern_source_code_1,null,null,f_get_desc_alumni
   ('ATVEXRS', apvshr1_extern_source_code_1,30)),1,30),
apvshr1_extern_source_score_1,
apvshr1_extern_source_value_1,
apvshr1_extern_source_level_1,
apvshr1_extern_source_code_2,
substr(decode(apvshr1_extern_source_code_2,null,null,f_get_desc_alumni
   ('ATVEXRS', apvshr1_extern_source_code_2,30)),1,30),
apvshr1_extern_source_score_2,
apvshr1_extern_source_value_2,
apvshr1_extern_source_level_2,
apvshr1_extern_source_code_3,
substr(decode(apvshr1_extern_source_code_3,null,null,f_get_desc_alumni
   ('ATVEXRS', apvshr1_extern_source_code_3,30)),1,30),
apvshr1_extern_source_score_3,
apvshr1_extern_source_value_3,
apvshr1_extern_source_level_3,
apvshr1_add_extern_source_flag
from apvshr1"
"BANINST1","AA_CONSTITUENT_IDENTIFICATION","","select
apvcni1_pidm,
apvcni1_donor_ind,
apvcni1_prospect_ind,
apvcni1_lost_alumnus_ind,
apvcni1_id_number,
apvcni1_ssn,
-- Begin 8.2 Expose New Person Fields (I18N Project)
apvcni1_surname_prefix,
-- End 8.2 Expose New Person Fields (I18N Project)
apvcni1_last_name,
apvcni1_first_name,
apvcni1_middle_name,
apvcni1_middle_initial,
apvcni1_name_prefix,
apvcni1_name_suffix,
-- Begin 8.4.1 RPE#1-FHTOQZ
apvcni1_pref_first_name,
-- End 8.4.1 RPE#1-FHTOQZ
apvcni1_nick_name,
apvcni1_combined_mail_name,
apvcni1_birth_maiden_name,
apvcni1_pref_address_name,
apvcni1_pref_address_type,
apvcni1_birth_date,
apvcni1_age,
apvcni1_gender,
apvcni1_marital_status,
substr(decode(apvcni1_marital_status, null, null, f_get_desc_alumni
      ('STVMRTL', apvcni1_marital_status, 30)), 1, 30),
apvcni1_citizenship_code,
substr(decode(apvcni1_citizenship_code, null, null, f_get_desc_alumni
      ('STVCITZ', apvcni1_citizenship_code, 30)), 1, 30),
apvcni1_legacy_code,
substr(decode(apvcni1_legacy_code, null, null, f_get_desc_alumni
      ('STVLGCY', apvcni1_legacy_code, 30)), 1, 30),
apvcni1_deceased_ind,
apvcni1_deceased_date,
apvcni1_confidentiality_flag,
apvcni1_pref_coll,
apvcni1_pref_class,
apvcni1_income_code,
substr(decode(apvcni1_income_code, null, null, f_get_desc_alumni
      ('ATVINCM', apvcni1_income_code, 30)), 1, 30),
apvcni1_pref_donor_cat,
substr(decode(apvcni1_pref_donor_cat,null,null,f_get_desc_alumni
   ('ATVDONR', apvcni1_pref_donor_cat,30)),1,30),
apvcni1_pref_alum_ind,
apvcni1_other_donor_cat_1,
substr(decode(apvcni1_other_donor_cat_1,null,null,f_get_desc_alumni
   ('ATVDONR', apvcni1_other_donor_cat_1,30)),1,30),
apvcni1_other_alum_ind_1,
apvcni1_other_donor_cat_2,
substr(decode(apvcni1_other_donor_cat_2,null,null,f_get_desc_alumni
   ('ATVDONR', apvcni1_other_donor_cat_2,30)),1,30),
apvcni1_other_alum_ind_2,
apvcni1_other_donor_cat_3,
substr(decode(apvcni1_other_donor_cat_3,null,null,f_get_desc_alumni
   ('ATVDONR', apvcni1_other_donor_cat_3,30)),1,30),
apvcni1_other_alum_ind_3,
apvcni1_add_donor_cat_flag,
apvcni1_pref_addr_type,
substr(decode(apvcni1_pref_addr_type, null, null, f_get_desc_alumni
      ('STVATYP', apvcni1_pref_addr_type, 30)), 1, 30),
-- Begin 8.2 Expose New Person Fields (I18N Project)
apvcni1_pref_house_number,
-- End 8.2 Expose New Person Fields (I18N Project)
apvcni1_pref_street_line1,
apvcni1_pref_street_line2,
apvcni1_pref_street_line3,
-- Begin 8.2 Expose New Person Fields (I18N Project)
apvcni1_pref_street_line4,
-- End 8.2 Expose New Person Fields (I18N Project)
apvcni1_pref_city,
apvcni1_pref_state,
apvcni1_pref_zip,
apvcni1_pref_county,
substr(decode(apvcni1_pref_county, null, null, f_get_desc_alumni
      ('STVCNTY', apvcni1_pref_county, 30)), 1, 30),
apvcni1_pref_nation,
substr(decode(apvcni1_pref_nation, null, null, f_get_desc_alumni
      ('STVNATN', apvcni1_pref_nation, 30)), 1, 30),
apvcni1_pref_geogr_region,
substr(decode(apvcni1_pref_geogr_region, null, null, f_get_desc_alumni
      ('STVGEOR', apvcni1_pref_geogr_region, 30)), 1, 30),
apvcni1_pref_deliv_point,
apvcni1_pref_correct_digit,
apvcni1_pref_carrier_route,
apvcni1_pref_addr_start_date,
apvcni1_pref_addr_end_date,
apvcni1_pref_addr_status_ind,
-- Begin 8.4.1 defect#1-E64TSJ
-- Begin 8.2 Expose New Person Fields (I18N Project)
decode(apvcni1_status_ind,'I',NULL,apvcni1_pref_ctry_code_phone),
-- End 8.2 Expose New Person Fields (I18N Project)
decode(apvcni1_status_ind,'I',NULL,apvcni1_pref_phone_number),
decode(apvcni1_status_ind,'I',NULL,apvcni1_pref_phone_area),
decode(apvcni1_status_ind,'I',NULL,apvcni1_pref_phone_ext),
-- End 8.4.1 defect#1-E64TSJ
apvcni1_other_addr_type,
substr(decode(apvcni1_other_addr_type, null, null, f_get_desc_alumni
      ('STVATYP', apvcni1_other_addr_type, 30)), 1, 30),
-- Begin 8.2 Expose New Person Fields (I18N Project)
apvcni1_other_house_number,
-- End 8.2 Expose New Person Fields (I18N Project)
apvcni1_other_street_line1,
apvcni1_other_street_line2,
apvcni1_other_street_line3,
-- Begin 8.2 Expose New Person Fields (I18N Project)
apvcni1_other_street_line4,
-- End 8.2 Expose New Person Fields (I18N Project)
apvcni1_other_city,
apvcni1_other_state,
apvcni1_other_zip,
apvcni1_other_county,
substr(decode(apvcni1_other_county, null, null, f_get_desc_alumni
      ('STVCNTY', apvcni1_other_county, 30)), 1, 30),
apvcni1_other_nation,
substr(decode(apvcni1_other_nation, null, null, f_get_desc_alumni
      ('STVNATN', apvcni1_other_nation, 30)), 1, 30),
apvcni1_other_geogr_region,
substr(decode(apvcni1_other_geogr_region, null, null, f_get_desc_alumni
      ('STVGEOR', apvcni1_other_geogr_region, 30)), 1, 30),
apvcni1_other_deliv_point,
apvcni1_other_correct_digit,
apvcni1_other_carrier_route,
apvcni1_other_addr_start_date,
apvcni1_other_addr_end_date,
apvcni1_other_addr_status_ind,
-- Begin 8.2 Expose New Person Fields (I18N Project)
apvcni1_other_ctry_code_phone,
-- End 8.2 Expose New Person Fields (I18N Project)
apvcni1_other_phone_number,
apvcni1_other_phone_area,
apvcni1_other_phone_ext,
apvcni1_phone_type_code_1,
substr(decode(apvcni1_phone_type_code_1, null, null, f_get_desc_alumni
      ('STVTELE', apvcni1_phone_type_code_1, 30)), 1, 30),
-- Begin 8.2 Expose New Person Fields (I18N Project)
apvcni1_phone_ctry_code_1,
-- End 8.2 Expose New Person Fields (I18N Project)
apvcni1_phone_number_1,
apvcni1_phone_area_1,
apvcni1_phone_ext_1,
apvcni1_phone_type_code_2,
substr(decode(apvcni1_phone_type_code_2, null, null, f_get_desc_alumni
      ('STVTELE', apvcni1_phone_type_code_2, 30)), 1, 30),
-- Begin 8.2 Expose New Person Fields (I18N Project)
apvcni1_phone_ctry_code_2,
-- End 8.2 Expose New Person Fields (I18N Project)
apvcni1_phone_number_2,
apvcni1_phone_area_2,
apvcni1_phone_ext_2,
apvcni1_phone_type_code_3,
substr(decode(apvcni1_phone_type_code_3, null, null, f_get_desc_alumni
      ('STVTELE', apvcni1_phone_type_code_3, 30)), 1, 30),
-- Begin 8.2 Expose New Person Fields (I18N Project)
apvcni1_phone_ctry_code_3,
-- End 8.2 Expose New Person Fields (I18N Project)
apvcni1_phone_number_3,
apvcni1_phone_area_3,
apvcni1_phone_ext_3,
apvcni1_add_phone_flag,
to_number(substr(f_split_fields(apvcni1_spouse_info, 1),1,8)),
substr(f_split_fields(apvcni1_spouse_info, 2),1,60),
-- Begin 8.2 Expose New Person Fields (I18N Project)
substr(f_split_fields(apvcni1_spouse_info, 3),1,60),
-- End 8.2 Expose New Person Fields (I18N Project)
substr(f_split_fields(apvcni1_spouse_info, 4),1,60),
substr(f_split_fields(apvcni1_spouse_info, 5),1,20),
substr(f_split_fields(apvcni1_spouse_info, 6),1,20),
substr(f_split_fields(apvcni1_spouse_info, 7),1,1),
substr(f_split_fields(apvcni1_spouse_info, 8),1,1),
to_date(substr(f_split_fields(apvcni1_spouse_info, 9),1,11),
       'DD-MON-YYYY'),
substr(f_split_fields(apvcni1_spouse_info, 10),1,2),
substr(f_split_fields(apvcni1_spouse_info, 11),1,4),
substr(f_split_fields(apvcni1_spouse_info, 12),1,1),
substr(f_split_fields(apvcni1_spouse_info, 13),1,4),
substr(decode(substr(
   f_split_fields(apvcni1_spouse_info, 13),1,4),null,null,
   f_get_desc_alumni('ATVDONR',substr(f_split_fields
   (apvcni1_spouse_info, 13),1,4),30)),1,30),
-- Begin 8.2 Expose New Person Fields (I18N Project)
substr(f_split_fields(apvcni1_spouse_info, 14),1,9),
substr(f_split_fields(apvcni1_spouse_info, 17),1,60)
-- End 8.2 Expose New Person Fields (I18N Project)
from apvcni1"
"BANINST1","AA_CONSTITUENT_ADDITIONAL_INFO","","select
apvcna1_pidm,
substr(f_split_fields(apvcna1_inst_degr_info,1),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,1),1,6),null,null,
  f_get_desc_alumni('STVDEGC',substr(f_split_fields
  (apvcna1_inst_degr_info,1),1,6),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,2),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,2),1,2),null,null,
  f_get_desc_alumni('STVCOLL',substr(f_split_fields
  (apvcna1_inst_degr_info,2),1,2),30)),1,30),
to_date(substr(f_split_fields(apvcna1_inst_degr_info,3),1,11),
        'DD-MON-YYYY'),
substr(f_split_fields(apvcna1_inst_degr_info,4),1,4),
substr(f_split_fields(apvcna1_inst_degr_info,5),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,5),1,2),null,null,
  f_get_desc_alumni('STVDLEV',substr(f_split_fields
  (apvcna1_inst_degr_info,5),1,2),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,6),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,6),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_inst_degr_info,6),1,4),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,7),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,7),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_inst_degr_info,7),1,4),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,8),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,8),1,6),null,null,
  f_get_desc_alumni('STVHONR',substr(f_split_fields
  (apvcna1_inst_degr_info,8),1,6),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,9),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,9),1,6),null,null,
  f_get_desc_alumni('STVDEGC',substr(f_split_fields
  (apvcna1_inst_degr_info,9),1,6),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,10),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,10),1,2),null,null,
  f_get_desc_alumni('STVCOLL',substr(f_split_fields
  (apvcna1_inst_degr_info,10),1,2),30)),1,30),
to_date(substr(f_split_fields(apvcna1_inst_degr_info,11),1,11),
        'DD-MON-YYYY'),
substr(f_split_fields(apvcna1_inst_degr_info,12),1,4),
substr(f_split_fields(apvcna1_inst_degr_info,13),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,13),1,2),null,null,
  f_get_desc_alumni('STVDLEV',substr(f_split_fields
  (apvcna1_inst_degr_info,13),1,2),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,14),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,14),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_inst_degr_info,14),1,4),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,15),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,15),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_inst_degr_info,15),1,4),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,16),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,16),1,6),null,null,
  f_get_desc_alumni('STVHONR',substr(f_split_fields
  (apvcna1_inst_degr_info,16),1,6),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,17),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,17),1,6),null,null,
  f_get_desc_alumni('STVDEGC',substr(f_split_fields
  (apvcna1_inst_degr_info,17),1,6),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,18),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,18),1,2),null,null,
  f_get_desc_alumni('STVCOLL',substr(f_split_fields
  (apvcna1_inst_degr_info,18),1,2),30)),1,30),
to_date(substr(f_split_fields(apvcna1_inst_degr_info,19),1,11),
        'DD-MON-YYYY'),
substr(f_split_fields(apvcna1_inst_degr_info,20),1,4),
substr(f_split_fields(apvcna1_inst_degr_info,21),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,21),1,2),null,null,
  f_get_desc_alumni('STVDLEV',substr(f_split_fields
  (apvcna1_inst_degr_info,21),1,2),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,22),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,22),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_inst_degr_info,22),1,4),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,23),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,23),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_inst_degr_info,23),1,4),30)),1,30),
substr(f_split_fields(apvcna1_inst_degr_info,24),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_inst_degr_info,24),1,6),null,null,
  f_get_desc_alumni('STVHONR',substr(f_split_fields
  (apvcna1_inst_degr_info,24),1,6),30)),1,30),
apvcna1_add_inst_degr_flag,
substr(f_split_fields(apvcna1_other_degr_info,1),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,1),1,6),null,null,
  f_get_desc_alumni('STVDEGC',substr(f_split_fields
  (apvcna1_other_degr_info,1),1,6),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,2),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,2),1,2),null,null,
  f_get_desc_alumni('STVCOLL',substr(f_split_fields
  (apvcna1_other_degr_info,2),1,2),30)),1,30),
to_date(substr(f_split_fields(apvcna1_other_degr_info,3),1,11),
        'DD-MON-YYYY'),
substr(f_split_fields(apvcna1_other_degr_info,4),1,4),
substr(f_split_fields(apvcna1_other_degr_info,5),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,5),1,2),null,null,
  f_get_desc_alumni('STVDLEV',substr(f_split_fields
  (apvcna1_other_degr_info,5),1,2),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,6),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,6),1,6),null,null,
  f_get_desc_alumni('STVSBGI',substr(f_split_fields
  (apvcna1_other_degr_info,6),1,6),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,7),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,7),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_other_degr_info,7),1,4),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,8),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,8),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_other_degr_info,8),1,4),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,9),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,9),1,4),null,null,
  f_get_desc_alumni('STVHONR',substr(f_split_fields
  (apvcna1_other_degr_info,9),1,4),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,10),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,10),1,6),null,null,
  f_get_desc_alumni('STVDEGC',substr(f_split_fields
  (apvcna1_other_degr_info,10),1,6),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,11),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,11),1,2),null,null,
  f_get_desc_alumni('STVCOLL',substr(f_split_fields
  (apvcna1_other_degr_info,11),1,2),30)),1,30),
to_date(substr(f_split_fields(apvcna1_other_degr_info,12),1,11),
        'DD-MON-YYYY'),
substr(f_split_fields(apvcna1_other_degr_info,13),1,4),
substr(f_split_fields(apvcna1_other_degr_info,14),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,14),1,2),null,null,
  f_get_desc_alumni('STVDLEV',substr(f_split_fields
  (apvcna1_other_degr_info,14),1,2),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,15),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,15),1,6),null,null,
  f_get_desc_alumni('STVSBGI',substr(f_split_fields
  (apvcna1_other_degr_info,15),1,6),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,16),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,16),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_other_degr_info,16),1,4),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,17),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,17),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_other_degr_info,17),1,4),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,18),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,18),1,4),null,null,
  f_get_desc_alumni('STVHONR',substr(f_split_fields
  (apvcna1_other_degr_info,18),1,4),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,19),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,19),1,6),null,null,
  f_get_desc_alumni('STVDEGC',substr(f_split_fields
  (apvcna1_other_degr_info,19),1,6),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,20),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,20),1,2),null,null,
  f_get_desc_alumni('STVCOLL',substr(f_split_fields
  (apvcna1_other_degr_info,20),1,2),30)),1,30),
to_date(substr(f_split_fields(apvcna1_other_degr_info,21),1,11),
        'DD-MON-YYYY'),
substr(f_split_fields(apvcna1_other_degr_info,22),1,4),
substr(f_split_fields(apvcna1_other_degr_info,23),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,23),1,2),null,null,
  f_get_desc_alumni('STVDLEV',substr(f_split_fields
  (apvcna1_other_degr_info,23),1,2),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,24),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,24),1,6),null,null,
  f_get_desc_alumni('STVSBGI',substr(f_split_fields
  (apvcna1_other_degr_info,24),1,6),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,25),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,25),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_other_degr_info,25),1,4),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,26),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,26),1,4),null,null,
  f_get_desc_alumni('STVMAJR',substr(f_split_fields
  (apvcna1_other_degr_info,26),1,4),30)),1,30),
substr(f_split_fields(apvcna1_other_degr_info,27),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_other_degr_info,27),1,4),null,null,
  f_get_desc_alumni('STVHONR',substr(f_split_fields
  (apvcna1_other_degr_info,27),1,4),30)),1,30),
apvcna1_add_other_degr_flag,
substr(f_split_fields(apvcna1_job_info,1),1,60),
substr(f_split_fields(apvcna1_job_info,2),1,9),
to_number(substr(f_split_fields(apvcna1_job_info,3),1,8)),
substr(f_split_fields(apvcna1_job_info,4),1,60),
substr(f_split_fields(apvcna1_job_info,5),1,1),
substr(decode(substr(
  f_split_fields(apvcna1_job_info,5),1,1),null,null,
  f_get_desc_alumni('ATVEMPS',substr(f_split_fields
  (apvcna1_job_info,5),1,1),30)),1,30),
to_date(substr(f_split_fields(apvcna1_job_info,6),1,11),
        'DD-MON-YYYY'),
to_date(substr(f_split_fields(apvcna1_job_info,7),1,11),
        'DD-MON-YYYY'),
substr(f_split_fields(apvcna1_job_info,8),1,3),
substr(decode(substr(
  f_split_fields(apvcna1_job_info,8),1,3),null,null,
  f_get_desc_alumni('ATVJOBC',substr(f_split_fields
  (apvcna1_job_info,8),1,3),30)),1,30),
substr(f_split_fields(apvcna1_job_info,9),1,1),
substr(f_split_fields(apvcna1_job_info,10),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_job_info,10),1,4),null,null,
  f_get_desc_alumni('ATVDOTT',substr(f_split_fields
  (apvcna1_job_info,10),1,4),30)),1,30),
substr(f_split_fields(apvcna1_job_info,11),1,4),
substr(decode(substr(
  f_split_fields(apvcna1_job_info,11),1,4),null,null,
  f_get_desc_alumni('ATVSICC',substr(f_split_fields
  (apvcna1_job_info,11),1,4),30)),1,30),
substr(f_split_fields(apvcna1_job_info,12),1,1),
nvl(to_number(substr(f_split_fields(apvcna1_job_info,13),1,3)),0),
substr(f_split_fields(apvcna1_job_info,14),1,1),
to_number(substr(f_split_fields(apvcna1_children_info,1),1,8)),
substr(f_split_fields(apvcna1_children_info,37),1,60),
substr(f_split_fields(apvcna1_children_info,2),1,60),
substr(f_split_fields(apvcna1_children_info,3),1,60),
substr(f_split_fields(apvcna1_children_info,4),1,60),
substr(f_split_fields(apvcna1_children_info,5),1,9),
to_date(substr(f_split_fields(apvcna1_children_info,6),1,11),
        'DD-MON-YYYY'),
to_number(substr(f_split_fields(apvcna1_children_info,7),1,3)),
substr(f_split_fields(apvcna1_children_info,8),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_children_info,8),1,6),null,null,
  f_get_desc_alumni('STVSBGI',substr(f_split_fields
  (apvcna1_children_info,8),1,6),30)),1,30),
substr(f_split_fields(apvcna1_children_info,9),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_children_info,9),1,2),null,null,
  f_get_desc_alumni('STVCOLL',substr(f_split_fields
  (apvcna1_children_info,9),1,2),30)),1,30),
substr(f_split_fields(apvcna1_children_info,10),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_children_info,10),1,2),null,null,
  f_get_desc_alumni('STVCLAS',substr(f_split_fields
  (apvcna1_children_info,10),1,2),30)),1,30),
substr(f_split_fields(apvcna1_children_info,11),1,1),
substr(f_split_fields(apvcna1_children_info,12),1,1),
to_number(substr(f_split_fields(apvcna1_children_info,13),1,8)),
substr(f_split_fields(apvcna1_children_info,38),1,60),
substr(f_split_fields(apvcna1_children_info,14),1,60),
substr(f_split_fields(apvcna1_children_info,15),1,60),
substr(f_split_fields(apvcna1_children_info,16),1,60),
substr(f_split_fields(apvcna1_children_info,17),1,9),
to_date(substr(f_split_fields(apvcna1_children_info,18),1,11),
        'DD-MON-YYYY'),
to_number(substr(f_split_fields(apvcna1_children_info,19),1,3)),
substr(f_split_fields(apvcna1_children_info,20),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_children_info,20),1,6),null,null,
  f_get_desc_alumni('STVSBGI',substr(f_split_fields
  (apvcna1_children_info,20),1,6),30)),1,30),
substr(f_split_fields(apvcna1_children_info,21),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_children_info,21),1,2),null,null,
  f_get_desc_alumni('STVCOLL',substr(f_split_fields
  (apvcna1_children_info,21),1,2),30)),1,30),
substr(f_split_fields(apvcna1_children_info,22),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_children_info,22),1,2),null,null,
  f_get_desc_alumni('STVCLAS',substr(f_split_fields
  (apvcna1_children_info,22),1,2),30)),1,30),
substr(f_split_fields(apvcna1_children_info,23),1,1),
substr(f_split_fields(apvcna1_children_info,24),1,1),
to_number(substr(f_split_fields(apvcna1_children_info,25),1,8)),
substr(f_split_fields(apvcna1_children_info,39),1,60),
substr(f_split_fields(apvcna1_children_info,26),1,60),
substr(f_split_fields(apvcna1_children_info,27),1,60),
substr(f_split_fields(apvcna1_children_info,28),1,60),
substr(f_split_fields(apvcna1_children_info,29),1,9),
to_date(substr(f_split_fields(apvcna1_children_info,30),1,11),
        'DD-MON-YYYY'),
to_number(substr(f_split_fields(apvcna1_children_info,31),1,3)),
substr(f_split_fields(apvcna1_children_info,32),1,6),
substr(decode(substr(
  f_split_fields(apvcna1_children_info,32),1,6),null,null,
  f_get_desc_alumni('STVSBGI',substr(f_split_fields
  (apvcna1_children_info,32),1,6),30)),1,30),
substr(f_split_fields(apvcna1_children_info,33),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_children_info,33),1,2),null,null,
  f_get_desc_alumni('STVCOLL',substr(f_split_fields
  (apvcna1_children_info,33),1,2),30)),1,30),
substr(f_split_fields(apvcna1_children_info,34),1,2),
substr(decode(substr(
  f_split_fields(apvcna1_children_info,34),1,2),null,null,
  f_get_desc_alumni('STVCLAS',substr(f_split_fields
  (apvcna1_children_info,34),1,2),30)),1,30),
substr(f_split_fields(apvcna1_children_info,35),1,1),
substr(f_split_fields(apvcna1_children_info,36),1,1),
apvcna1_add_children_flag
from apvcna1"
"BANINST1","AA_CAMPAIGN_GIVING_BY_ID","","select
afvcmp1_pidm,
afvcmp1_campaign_fiscal_year,
afvcmp1_campaign,
afvcmp1_campaign_desc,
afvcmp1_entity_ind,
afvcmp1_lost_alumnus_ind,
afvcmp1_id,
afvcmp1_ssn,
afvcmp1_surname_prefix,
afvcmp1_last_name,
afvcmp1_first_name,
afvcmp1_middle_name,
afvcmp1_middle_initial,
afvcmp1_name_prefix,
afvcmp1_name_suffix,
afvcmp1_nickname,
afvcmp1_combined_mail_name,
afvcmp1_birth_maiden_name,
afvcmp1_pref_address_name,
afvcmp1_pref_address_type,
afvcmp1_deceased_ind,
afvcmp1_deceased_date,
afvcmp1_pref_coll,
afvcmp1_pref_class,
afvcmp1_pref_donor_cat,
substr(decode(afvcmp1_pref_donor_cat,null,null,f_get_desc_alumni
   ('ATVDONR', afvcmp1_pref_donor_cat,30)),1,30),
afvcmp1_pref_alum_ind,
afvcmp1_other_donor_cat_1,
substr(decode(afvcmp1_other_donor_cat_1,null,null,f_get_desc_alumni
   ('ATVDONR', afvcmp1_other_donor_cat_1,30)),1,30),
afvcmp1_other_alum_ind_1,
afvcmp1_other_donor_cat_2,
substr(decode(afvcmp1_other_donor_cat_2,null,null,f_get_desc_alumni
   ('ATVDONR', afvcmp1_other_donor_cat_2,30)),1,30),
afvcmp1_other_alum_ind_2,
afvcmp1_other_donor_cat_3,
substr(decode(afvcmp1_other_donor_cat_3,null,null,f_get_desc_alumni
   ('ATVDONR', afvcmp1_other_donor_cat_3,30)),1,30),
afvcmp1_other_alum_ind_3,
afvcmp1_add_donor_cat_flag,
nvl(afvcmp1_campaign_giving,0),
nvl(afvcmp1_campaign_pledged,0),
nvl(afvcmp1_campaign_gift,0),
nvl(afvcmp1_campaign_payment,0),
nvl(afvcmp1_campaign_match_gift,0),
nvl(afvcmp1_campaign_memo_credit,0),
afvcmp1_campaign_type_code,
substr(decode(afvcmp1_campaign_type_code,null,null,f_get_desc_alumni
   ('ATVCMTP', afvcmp1_campaign_type_code,30)),1,30),
afvcmp1_alumnus_excl_code_1,
substr(decode(afvcmp1_alumnus_excl_code_1,null,null,f_get_desc_alumni
   ('ATVEXCL', afvcmp1_alumnus_excl_code_1,30)),1,30),
afvcmp1_alumnus_excl_date_1,
afvcmp1_alumnus_excl_code_2,
substr(decode(afvcmp1_alumnus_excl_code_2,null,null,f_get_desc_alumni
   ('ATVEXCL', afvcmp1_alumnus_excl_code_2,30)),1,30),
afvcmp1_alumnus_excl_date_2,
afvcmp1_alumnus_excl_code_3,
substr(decode(afvcmp1_alumnus_excl_code_3,null,null,f_get_desc_alumni
   ('ATVEXCL', afvcmp1_alumnus_excl_code_3,30)),1,30),
afvcmp1_alumnus_excl_date_3,
afvcmp1_add_alumnus_excl_flag,
to_number(substr(f_split_fields(afvcmp1_spouse_info, 1),1,8)),
substr(f_split_fields(afvcmp1_spouse_info, 2),1,60),
substr(f_split_fields(afvcmp1_spouse_info, 3),1,60),
substr(f_split_fields(afvcmp1_spouse_info, 4),1,60),
substr(f_split_fields(afvcmp1_spouse_info, 5),1,20),
substr(f_split_fields(afvcmp1_spouse_info, 6),1,20),
substr(f_split_fields(afvcmp1_spouse_info, 7),1,1),
substr(f_split_fields(afvcmp1_spouse_info, 8),1,1),
to_date(substr(f_split_fields(afvcmp1_spouse_info, 9),1,11),
                         'DD-MON-YYYY'),
substr(f_split_fields(afvcmp1_spouse_info, 10),1,2),
substr(f_split_fields(afvcmp1_spouse_info, 11),1,4),
substr(f_split_fields(afvcmp1_spouse_info, 12),1,1),
substr(f_split_fields(afvcmp1_spouse_info, 13),1,4),
substr(decode(substr(
   f_split_fields(afvcmp1_spouse_info, 13),1,4),null,null,
   f_get_desc_alumni('ATVDONR',substr(f_split_fields
   (afvcmp1_spouse_info, 13),1,4),30)),1,30),
substr(f_split_fields(afvcmp1_spouse_info, 14),1,9),
substr(f_split_fields(afvcmp1_spouse_info, 17),1,60),
nvl(afvcmp1_spouse_camp_giving,0),
nvl(to_number(substr(f_split_fields(afvcmp1_spouse_giving_info, 1),
   1,14)),0),
nvl(to_number(substr(f_split_fields(afvcmp1_spouse_giving_info, 2),
   1,14)),0),
nvl(to_number(substr(f_split_fields(afvcmp1_spouse_giving_info, 3),
   1,14)),0),
nvl(afvcmp1_spouse_camp_match_gift,0),
nvl(afvcmp1_spouse_camp_memo_cred,0),
afvcmp1_spouse_excl_code_1,
substr(decode(afvcmp1_spouse_excl_code_1,null,null,f_get_desc_alumni
   ('ATVEXCL', afvcmp1_spouse_excl_code_1,30)),1,30),
afvcmp1_spouse_excl_date_1,
afvcmp1_spouse_excl_code_2,
substr(decode(afvcmp1_spouse_excl_code_2,null,null,f_get_desc_alumni
   ('ATVEXCL', afvcmp1_spouse_excl_code_2,30)),1,30),
afvcmp1_spouse_excl_date_2,
afvcmp1_spouse_excl_code_3,
substr(decode(afvcmp1_spouse_excl_code_3,null,null,f_get_desc_alumni
   ('ATVEXCL', afvcmp1_spouse_excl_code_3,30)),1,30),
afvcmp1_spouse_excl_date_3,
afvcmp1_add_spouse_excl_flag
from afvcmp1"
"BANINST1","AAVDUES","","SELECT AARDUES_PIDM,
           AABDUES_PAYOR_PIDM,
           AABDUES_TRANS_NO,
           AABDUES_MEMBERSHIP,
           AARDUES_MEMB_NO,
           AABDUES_AMOUNT_TOT,
           AARDUES_AMOUNT,
           AARDUES_AMCT_CODE,
           AABDUES_GIFT_CODE,
           AABDUES_DUES_DATE,
           AABDUES_FISC_CODE,
           AARDUES_AMPM_CODE,
           AABDUES_FINAL_IND,
           AABDUES_ADJ_IND,
           AABDUES_ACKN_IND,
           AABDUES_RECPT_IND,
           AABDUES_FEED_IND,
           AARMINT_INTEREST,
           AARMINT_AMOUNT
FROM AARDUES, AABDUES, AARMINT
WHERE AARDUES_PIDM        = AARMINT_PIDM
AND   AARDUES_PAYOR_PIDM  = AABDUES_PAYOR_PIDM
AND   AARDUES_TRANS_NO    = AABDUES_TRANS_NO
AND   AARDUES_TRANS_NO    = AARMINT_TRANS_NO
AND   AARDUES_MEMB_NO     = AARMINT_MEMB_NO
 "
